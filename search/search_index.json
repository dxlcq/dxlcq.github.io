{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u2708\ufe0f","text":"dxlcq@stu.cqu.edu.cn  30187416@alu.cqu.edu.cn   chatgpt  /  gemini  /  grok   kimi  /  copilot  /  ragflow  dxlcq@outlook.com \u79c1\u6709\u4e91\u76d8 \u91d1\u5c71\u6587\u6863 \u963f\u91cc\u4e91\u76d8 iCloud Google Drive OneDrive Apple Google Microsoft Speed Test unicom CN UN Tcping Router Switch Gateway \u8d5b\u535a\u5927\u5584\u4eba Azure \u534e\u4e3a\u4e91 \u963f\u91cc\u4e91 \u65f6\u4ee3\u5468\u520a \u4eba\u6c11\u65e5\u62a5 \u8def\u900f\u793e \u81ea\u7136 Spotify YouTube Instagram X Telegram \u567c\u91cc\u556a\u5566 \ud83c\udf60 TikTok PayPal \u6dd8\u5b9d \u4eac\u4e1c \u95f2\u9c7c"},{"location":"src/ai/ai/","title":"AI","text":""},{"location":"src/ai/ai/#_1","title":"\u53c2\u8003","text":"<ul> <li> <p>Chatbot Arena</p> </li> <li> <p>huggingface</p> </li> <li> <p>\u795e\u7ecf\u7f51\u7edc15\u5206\u949f\u5165\u95e8\uff01\u8db3\u591f\u901a\u4fd7\u6613\u61c2\u4e86\u5427</p> </li> </ul> <p></p>"},{"location":"src/ai/ai/#gpu","title":"GPU","text":"<ul> <li> <p>CPU \u652f\u6301\u590d\u6742\u6307\u4ee4\u96c6\uff0c\u800c GPU \u53ea\u80fd\u6267\u884c\u7b80\u5355\u6307\u4ee4\u96c6\u3002\u7b80\u5355\u7684\u7ed3\u6784\u4f7f\u5f97 GPU \u53ef\u4ee5\u5728\u540c\u4e00\u65f6\u95f4\u5185\u5904\u7406\u66f4\u591a\u7684\u6307\u4ee4</p> </li> <li> <p>GPU \u901a\u8fc7 SIMD\uff08\u5355\u6307\u4ee4\u591a\u6570\u636e\uff09\u6765\u5b9e\u73b0\u5e76\u884c\u5904\u7406\uff0c\u5728\u540c\u4e00\u65f6\u95f4\u5185\u5bf9\u591a\u4e2a\u6570\u636e\u8fdb\u884c\u76f8\u540c\u7684\u64cd\u4f5c\uff0c\u8fd9\u4f7f\u5f97\u5b83\u5728\u5904\u7406\u5927\u89c4\u6a21\u6570\u636e\u65f6\u5177\u6709\u66f4\u9ad8\u7684\u6548\u7387</p> </li> </ul>"},{"location":"src/ai/ai/#cuda","title":"CUDA","text":"<ul> <li> <p>NVIDIA \u63a8\u51fa\u7684\u5e76\u884c\u8ba1\u7b97\u67b6\u6784\uff0c\u672c\u8d28\u5c31\u662f\u4e00\u4e2a C \u5e93\uff0c\u8c03\u7528 GPU \u53c2\u4e0e\u8ba1\u7b97</p> </li> <li> <p>\u53ef\u4ee5\u901a\u8fc7\u7f16\u5199 CPU / GPU \u4ee3\u7801\u8fdb\u884c\u77e9\u9635\u8fd0\u7b97\u67e5\u770b\u6548\u679c</p> <p> CPU \u4ee3\u7801 C++<pre><code>#include &lt;iostream&gt;\n#include &lt;thread&gt;\n#include &lt;vector&gt;\n\nconst int N = 3e3 + 10;\n\nstd::vector&lt;std::thread&gt; threads;\nint A[N][N], B[N][N], C[N][N];\nint n = N - 10;\n\nvoid cpu_matrix_multiply(int i) {  // \u7ebf\u7a0b\u51fd\u6570\uff0c\u7528\u4e8e\u8ba1\u7b97\u77e9\u9635\u4e58\u6cd5\u7684\u4e00\u884c\n    for (int j = 1; j &lt;= n; ++j) {\n        for (int k = 1; k &lt;= n; ++k) {\n            C[i][j] += A[i][k] * B[k][j];\n        }\n    }\n}\n\nint main() {\n    // g++ main.cpp &amp;&amp; ./a.out\n    for (int i = 1; i &lt;= n; ++i) {\n        for (int j = 1; j &lt;= n; ++j) {\n            A[i][j] = i + j;\n            B[i][j] = i - j;\n        }\n    }  // \u521d\u59cb\u5316\u77e9\u9635 A, B\n\n    auto start = std::chrono::high_resolution_clock::now();  // \u8bb0\u5f55\u5f00\u59cb\u65f6\u95f4\n\n    for (int i = 1; i &lt;= n; ++i)\n        threads.emplace_back(cpu_matrix_multiply, i);\n    for (auto&amp; t : threads)\n        t.join();\n\n    auto end = std::chrono::high_resolution_clock::now();  // \u8bb0\u5f55\u7ed3\u675f\u65f6\u95f4\n    std::chrono::duration&lt;double&gt; duration = end - start;\n    std::cout &lt;&lt; \"Time taken: \" &lt;&lt; duration.count() &lt;&lt; \" seconds\" &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre> </p> <p> GPU \u4ee3\u7801 C++<pre><code>#include &lt;cuda_runtime.h&gt;\n#include &lt;chrono&gt;\n#include &lt;iostream&gt;\n\nconst int N = 3e3 + 10;\nint A[N][N], B[N][N], C[N][N];\nint n = N - 10;\n\n__global__ void cuda_matrix_multiply(int* A, int* B, int* C, int n) {\n    int row = blockIdx.y * blockDim.y + threadIdx.y + 1;\n    int col = blockIdx.x * blockDim.x + threadIdx.x + 1;\n\n    if (row &lt;= n &amp;&amp; col &lt;= n) {\n        int sum = 0;\n        for (int k = 1; k &lt;= n; ++k) {\n            sum += A[row * N + k] * B[k * N + col];\n        }\n        C[row * N + col] = sum;\n    }\n}\n\nint main() {\n    // nvcc main.cu &amp;&amp; ./a.out\n    for (int i = 1; i &lt;= n; ++i) {\n        for (int j = 1; j &lt;= n; ++j) {\n            A[i][j] = i + j;\n            B[i][j] = i - j;\n        }\n    }  // \u521d\u59cb\u5316\u77e9\u9635 A, B\n\n    // \u5206\u914d GPU \u5185\u5b58\n    int *d_A, *d_B, *d_C;\n    cudaMalloc(&amp;d_A, N * N * sizeof(int));\n    cudaMalloc(&amp;d_B, N * N * sizeof(int));\n    cudaMalloc(&amp;d_C, N * N * sizeof(int));\n\n    // \u590d\u5236\u6570\u636e\u5230 GPU\n    cudaMemcpy(d_A, A, N * N * sizeof(int), cudaMemcpyHostToDevice);\n    cudaMemcpy(d_B, B, N * N * sizeof(int), cudaMemcpyHostToDevice);\n    cudaMemcpy(d_C, C, N * N * sizeof(int), cudaMemcpyHostToDevice);\n\n    auto start = std::chrono::high_resolution_clock::now();\n\n    dim3 blockSize(16, 16);\n    dim3 gridSize((n + blockSize.x - 1) / blockSize.x, \n                  (n + blockSize.y - 1) / blockSize.y);\n\n    cuda_matrix_multiply&lt;&lt;&lt;gridSize, blockSize&gt;&gt;&gt;(d_A, d_B, d_C, n);\n\n    cudaDeviceSynchronize();\n\n    auto end = std::chrono::high_resolution_clock::now();\n    std::chrono::duration&lt;double&gt; duration = end - start;\n    std::cout &lt;&lt; \"Time taken: \" &lt;&lt; duration.count() &lt;&lt; \" seconds\" &lt;&lt; std::endl;\n\n    // \u6e05\u7406\u5185\u5b58\n    cudaFree(d_A);\n    cudaFree(d_B);\n    cudaFree(d_C);\n\n    return 0;\n}\n</code></pre> </p> </li> </ul> CPU GPU AMD 7900x NVIDIA 4070 7s 0.03s"},{"location":"src/ai/ai/#pytorch","title":"PyTorch","text":"<ul> <li>PyTorch \u662f\u5bf9 CUDA \u7684\u5c01\u88c5\uff0c\u63d0\u4f9b\u4e86\u66f4\u9ad8\u5c42\u6b21\u7684 API \u6765\u7b80\u5316 GPU \u7f16\u7a0b</li> </ul>"},{"location":"src/ai/ai/#_2","title":"\u673a\u5668\u5b66\u4e60","text":"<p>\u201c\u8ba1\u7b97\u673a\u7a0b\u5e8f\u53ef\u4ee5\u5728\u7ed9\u5b9a\u67d0\u79cd\u7c7b\u522b\u7684\u4efb\u52a1 T \u548c\u6027\u80fd\u5ea6\u91cf P \u4e0b\u5b66\u4e60\u7ecf\u9a8c E\uff08\u6570\u636e\uff09 \uff0c\u5982\u679c\u5176\u5728\u4efb\u52a1 T \u4e2d\u7684\u6027\u80fd\u6070\u597d\u53ef\u4ee5\u7528 P \u5ea6\u91cf\uff0c\u5219\u968f\u7740\u7ecf\u9a8c E\uff08\u6570\u636e\uff09 \u800c\u63d0\u9ad8\u3002\u201d -- Tom Mitchell</p> <ul> <li>f(x) = y     \u673a\u5668\u5b66\u4e60\u7684\u76ee\u6807\u662f\u901a\u8fc7\u6570\u636e\u6765\u521b\u9020\u51fd\u6570 f\uff0c\u4f7f\u5f97\u8f93\u5165 x \u80fd\u591f\u6620\u5c04\u5230\u8f93\u51fa y</li> </ul>"},{"location":"src/ai/ai/#_3","title":"\u56de\u5f52\u95ee\u9898","text":"<ul> <li> <p>\u6709\u8fd9\u4e48\u4e00\u4e2a\u6570\u636e\u96c6\uff0c\u5305\u542b\u623f\u5c4b\u7684\u9762\u79ef\u3001\u697c\u5c42\u3001\u623f\u9f84\u548c\u623f\u4ef7\uff0c\u6211\u4eec\u60f3\u8981\u9884\u6d4b\u65b0\u623f\u5c4b\u7684\u4ef7\u683c</p> Python<pre><code>data = {\n    '\u9762\u79ef': [80, 100, 120, 90, 110],\n    '\u697c\u5c42': [5, 10, 15, 8, 12], \n    '\u623f\u9f84': [5, 10, 2, 8, 3],\n    '\u623f\u4ef7': [45, 60, 75, 50, 68]\n}\n\nnew_house = [[95, 7, 5]]  # 95\u5e73\u7c73\uff0c7\u697c\uff0c5\u5e74\u623f\u9f84\n</code></pre> <p>\u901a\u8fc7\u591a\u5143\u7ebf\u6027\u56de\u5f52\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u51fd\u6570\u6765\u9884\u6d4b\u623f\u4ef7\uff1a</p> <p>\u623f\u4ef7 = w1 * \u9762\u79ef + w2 * \u697c\u5c42 + w3 * \u623f\u9f84 + b</p> </li> <li> <p>\u56de\u5f52\u95ee\u9898\u7684\u672c\u8d28\u662f\u901a\u8fc7\u5386\u53f2\u6570\u636e\u5b66\u4e60\u8f93\u5165\u7279\u5f81\u4e0e\u8fde\u7eed\u8f93\u51fa\u503c\u4e4b\u95f4\u7684\u51fd\u6570\u5173\u7cfb\uff0c\u7136\u540e\u7528\u8fd9\u4e2a\u51fd\u6570\u5bf9\u65b0\u6570\u636e\u8fdb\u884c\u6570\u503c\u9884\u6d4b</p> </li> </ul>"},{"location":"src/ai/ai/#_4","title":"\u795e\u7ecf\u7f51\u7edc","text":"<ul> <li> <p>\u201c\u795e\u7ecf\u7f51\u7edc\u7684\u4f20\u64ad\u90fd\u662f\u5f62\u5982Y=WX+b\u7684\u77e9\u9635\u8fd0\u7b97\uff1b\u4e3a\u4e86\u7ed9\u77e9\u9635\u8fd0\u7b97\u52a0\u5165\u975e\u7ebf\u6027\uff0c\u9700\u8981\u5728\u9690\u85cf\u5c42\u4e2d\u52a0\u5165\u6fc0\u6d3b\u5c42\uff1b\u8f93\u51fa\u5c42\u7ed3\u679c\u9700\u8981\u7ecf\u8fc7Softmax\u5c42\u5904\u7406\u4e3a\u6982\u7387\u503c\uff0c\u5e76\u901a\u8fc7\u4ea4\u53c9\u71b5\u635f\u5931\u6765\u91cf\u5316\u5f53\u524d\u7f51\u7edc\u7684\u4f18\u52a3\u201d</p> </li> <li> <p>\u795e\u7ecf\u7f51\u7edc\u7684\u6838\u5fc3\u662f\u901a\u8fc7\u591a\u5c42\u7684\u7ebf\u6027\u53d8\u6362\u548c\u975e\u7ebf\u6027\u6fc0\u6d3b\u51fd\u6570\u6765\u5b66\u4e60\u590d\u6742\u7684\u51fd\u6570\u5173\u7cfb</p> </li> <li> <p>\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3\u8fc7\u7a0b\u662f\u901a\u8fc7\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u6765\u8c03\u6574\u6743\u91cd\u548c\u504f\u7f6e\uff0c\u4f7f\u5f97\u9884\u6d4b\u7ed3\u679c\u66f4\u63a5\u8fd1\u771f\u5b9e\u503c</p> </li> </ul>"},{"location":"src/ai/ai/#_5","title":"\u6df1\u5ea6\u5b66\u4e60","text":"<ul> <li>\u6df1\u5ea6\u5b66\u4e60\u662f\u795e\u7ecf\u7f51\u7edc\u7684\u4e00\u79cd\u7279\u6b8a\u5f62\u5f0f\uff0c\u901a\u5e38\u6307\u7684\u662f\u5177\u6709\u591a\u5c42\u9690\u85cf\u5c42\u7684\u795e\u7ecf\u7f51\u7edc</li> </ul>"},{"location":"src/ai/ai/#_6","title":"\u5927\u6a21\u578b","text":"<ul> <li>\u5927\u6a21\u578b\u901a\u5e38\u6307\u7684\u662f\u5177\u6709\u6570\u5341\u4ebf\u751a\u81f3\u6570\u4e07\u4ebf\u53c2\u6570\u7684\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\uff0c\u8fd9\u4e9b\u6a21\u578b\u53ef\u4ee5\u901a\u8fc7\u5927\u89c4\u6a21\u7684\u6570\u636e\u96c6\u8fdb\u884c\u8bad\u7ec3\uff0c\u4ece\u800c\u5b66\u4e60\u5230\u66f4\u590d\u6742\u7684\u7279\u5f81\u548c\u6a21\u5f0f</li> </ul>"},{"location":"src/ai/ollama/","title":"Ollama","text":""},{"location":"src/ai/ollama/#_1","title":"\u53c2\u8003","text":""},{"location":"src/ai/ollama/#_2","title":"\u4e00\u952e\u542f\u52a8","text":"Bash<pre><code>sudo docker run --rm -d --gpus all -p 11434:11434 -v /home/jiao/.ollama:/root/.ollama ollama/ollama\n</code></pre>"},{"location":"src/ai/ollama/#rest-api","title":"REST API","text":"Bash<pre><code>curl http://localhost:11434/api/generate -d '{\n  \"model\": \"qwen3:4b\",\n  \"prompt\":\"\u4f60\u662fgg\u8fd8\u662fmm\"\n}'\n</code></pre>"},{"location":"src/algorithm/pre/","title":"Pre","text":"<p>\u6bd4\u8d5b\uff1a</p> <ul> <li> <p> nowcoder </p> </li> <li> <p> codeforces </p> </li> </ul> <p>\u4e13\u9898\uff1a</p> <ul> <li> <p> ybt  \u4e00\u672c\u901a\uff0c\u9002\u5408\u5165\u95e8</p> </li> <li> <p> Luogu  \u5728\u4e00\u672c\u901a\u57fa\u7840\u4e0a\u8fdb\u9636</p> </li> <li> <p> yxc  \u4ed8\u8d39\uff0c\u57fa\u7840\u8bfe\u7269\u8d85\u6240\u503c</p> </li> <li> <p> TEMP  \u6d1b\u8c37\u793e\u533a\u6574\u7406\u7684\u6a21\u7248\u9898</p> </li> <li> <p> lyd  \u7b97\u6cd5\u7ade\u8d5b\u8fdb\u9636\u6307\u5357</p> </li> <li> <p> Kb  kuangbin\u4e13\u9898\uff0c\u8fdb\u9636\u4e00\u70b9</p> </li> </ul> <p>\u771f\u9898\uff1a</p> <ul> <li> <p> CIE-C  \u68af\u5ea6\u5c0f</p> </li> <li> <p> CSP  OI\u7237</p> </li> <li> <p> USACO  cow</p> </li> <li> <p> PTA-XCPC  \u6253\u94c1</p> </li> </ul> <p>\u5de5\u5177\uff1a</p> <ul> <li> <p> \u753b\u56fe-\u56fe\u8bba</p> </li> <li> <p> \u753b\u56fe-\u5750\u6807\u7cfb </p> </li> <li> <p> \u8ba1\u7b97-MS </p> </li> <li> <p> \u8ba1\u7b97-DF </p> </li> </ul> <p></p>"},{"location":"src/algorithm/pre/#_1","title":"\u8fd9\u662f\u77e5\u8bc6\u70b9\u7532","text":"<p>\u6a21\u677f | \u9898</p> <ul> <li> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u5faa\u73af</p> </li> <li> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u6570\u7ec4</p> </li> </ul> C++<pre><code>// \u4ee3\u7801\u98ce\u683c\u4e3a Google\n// \u6a21\u7248\u4f7f\u7528\u65b9\u6cd5\u53c2\u8003\u4f8b\u9898\n</code></pre> <p>\u539f\u7406 \uff5c \u53c2\u8003</p> <p>\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u89e3\u51b3\u67d0\u67d0\u95ee\u9898</p> <ul> <li> <p>\u95ee\u9898 A</p> </li> <li> <p>\u95ee\u9898 B</p> </li> </ul> <p>\u6240\u6709\u6d89\u53ca\u5230\u4ee3\u7801\u6216\u6570\u7ec4\u7684\u5730\u65b9\uff0c\u7528 \\(\\LaTeX\\) \u5199</p> <p>\u9664\u975e\u662f\u9898\u76ee\u8981\u6c42</p> <p></p>"},{"location":"src/algorithm/pre/#a","title":"\u9898\u76ee A","text":"<p>Luogu P9748 [CSP-J 2023] \u5c0f\u82f9\u679c | \u89c6\u9891\u89e3\u6790 | \u63a8\u8350\u9605\u8bfb</p> <p>\u9898\u76ee\u5927\u610f</p> <ol> <li> <p>\u8f93\u5165 \\(n\\) \u4e2a\u6570 \\(a_i\\)\uff0c\u8f93\u51fa \\(n\\) \u4e2a\u6570\u7684\u548c</p> </li> <li> <p>\u8f93\u51fa <code>Hello World</code></p> </li> </ol> <p>\u89e3\u9898\u601d\u8def</p> <ol> <li> <p>\u5982\u679c\u6709\u6734\u7d20\u89e3\u6cd5\uff0c\u5148\u5199\u6734\u7d20\u89e3\u6cd5</p> </li> <li> <p>\u518d\u5199\uff0c\u5982\u4f55\u4ece\u6734\u7d20\u89e3\u6cd5\u53bb\u4f18\u5316</p> </li> </ol> \u6734\u7d20\u89e3\u6cd5 C++<pre><code>#include &lt;iostream&gt;\n\nconst int N = 2e5 + 10;\n\nint main() {\n  std::cout &lt;&lt; \"Hello World\";\n  return 0;\n}\n</code></pre> \u4f18\u5316\u89e3\u6cd5 C++<pre><code>#include &lt;iostream&gt;\n\nconst int N = 2e5 + 10;\n\nint main() {\n  std::cout &lt;&lt; \"Hello World\";\n  return 0;\n}\n</code></pre> <p></p>"},{"location":"src/algorithm/pre/#b","title":"\u9898\u76ee B","text":"<p>Luogu P9748 [CSP-J 2023] \u5c0f\u82f9\u679c | \u89c6\u9891\u89e3\u6790 | \u63a8\u8350\u9605\u8bfb</p> <p>\u9898\u76ee\u5927\u610f</p> <ol> <li> <p>\u8f93\u5165 \\(n\\) \u4e2a\u6570 \\(a_i\\)\uff0c\u8f93\u51fa \\(n\\) \u4e2a\u6570\u7684\u548c</p> </li> <li> <p>\u8f93\u51fa <code>Hello World</code></p> </li> </ol> <p>\u89e3\u9898\u601d\u8def</p> <ol> <li> <p>\u5982\u679c\u6709\u6734\u7d20\u89e3\u6cd5\uff0c\u5148\u5199\u6734\u7d20\u89e3\u6cd5</p> </li> <li> <p>\u518d\u5199\uff0c\u5982\u4f55\u4ece\u6734\u7d20\u89e3\u6cd5\u53bb\u4f18\u5316</p> </li> </ol> \u6734\u7d20\u89e3\u6cd5 C++<pre><code>#include &lt;iostream&gt;\n\nconst int N = 2e5 + 10;\n\nint main() {\n  std::cout &lt;&lt; \"Hello World\";\n  return 0;\n}\n</code></pre> \u4f18\u5316\u89e3\u6cd5 C++<pre><code>#include &lt;iostream&gt;\n\nconst int N = 2e5 + 10;\n\nint main() {\n  std::cout &lt;&lt; \"Hello World\";\n  return 0;\n}\n</code></pre> <p></p>"},{"location":"src/algorithm/pre/#_2","title":"\u8fd9\u662f\u77e5\u8bc6\u70b9\u4e59","text":""},{"location":"src/algorithm/raft/","title":"raft","text":""},{"location":"src/algorithm/raft/#_1","title":"\u53c2\u8003","text":"<ul> <li> <p>In Search of an Understandable Consensus Algorithm</p> </li> <li> <p>In Search of an Understandable Consensus Algorithm \u8bd1\u6587</p> </li> </ul> <p></p>"},{"location":"src/algorithm/raft/#_2","title":"\u5f15\u5b50","text":"<p>\u5355\u53f0\u670d\u52a1\u5668\u7684\u6027\u80fd\u662f\u6709\u9650\u7684\uff0c\u800c\u591a\u53f0\u670d\u52a1\u5668\u7684\u6027\u80fd\u4e0e\u94b1\u5305\u5448\u6b63\u76f8\u5173\u6027\u3002</p> <p>\u5e7f\u4e3a\u4eba\u77e5\u4e14\u7ecf\u5178\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u662f <code>DNS</code>\u3002</p> <ul> <li> <p><code>ip</code></p> <p>\u5728\u4e92\u8054\u7f51\u65e9\u671f\uff0c\u76f4\u63a5\u901a\u8fc7 <code>ip</code> \u8fdb\u884c\u901a\u4fe1\uff0c\u5f53 <code>ip</code> \u6570\u91cf\u589e\u591a\u65f6\uff0c\u8c01\u8fd8\u80fd\u8bb0\u5f97\u8fd9\u4e2a <code>IP</code> \u540e\u9762\u662f\u6f02\u4eae\u59b9\u59b9\u8fd8\u662f\u7f8e\u4e3d\u59d0\u59d0\uff1f</p> <p>\u4e8e\u662f\u4e4e\uff0c\u6709\u4e86\u50cf\u7535\u8bdd\u7c3f\u4e00\u6837\u7684 <code>hosts</code> \u6587\u4ef6\uff1a</p> </li> <li> <p><code>hosts</code> \u6587\u4ef6</p> Text Only<pre><code>1.1.1.1     Desktop_Dragon\n</code></pre> <p>\u5f53 <code>Desktop_Dragon</code> \u7684 <code>ip</code> \u53d1\u751f\u53d8\u5316\u65f6\uff0c\u4fee\u6539\u4e00\u4e0b <code>hosts</code> \u6587\u4ef6\u5373\u53ef\u3002</p> <p>\u5f53\u8054\u7cfb\u4eba\u8fc7\u591a\uff0c\u4e8b\u60c5\u5c31\u53d8\u5f97\u590d\u6742\u4e86\u3002</p> </li> <li> <p><code>DNS</code></p> <p>\u9996\u5148\u5206\u6790 <code>hosts</code> \u6587\u4ef6\u7684\u95ee\u9898\uff1a</p> <ol> <li> <p>\u547d\u540d\u51b2\u7a81\uff1a\u4e16\u754c\u4e0a\u53ef\u80fd\u5b58\u5728\u591a\u4e2a <code>Desktop_Dragon</code>\uff1b</p> </li> <li> <p>\u96be\u4ee5\u7ef4\u62a4\uff1a<code>Desktop_Dragon</code> \u7684 <code>ip</code> \u53d1\u751f\u53d8\u5316\u65f6\uff0c\u9700\u8981\u544a\u77e5\u6240\u6709\u7535\u8111\uff0c\u8fd9\u662f\u4e0d\u73b0\u5b9e\u7684\u3002</p> </li> </ol> <p>\u5982\u4f55\u89e3\u51b3\uff1f</p> <ol> <li> <p>\u5f15\u5165\u57df\u540d + \u5145\u503c\uff0c<code>Desktop_Dragon</code> \u53d8\u6210 <code>wwww.Desktop_Dragon.com</code>\u3002</p> </li> <li> <p>\u5206\u5c42\u8bbe\u8ba1\uff1a</p> <ul> <li> <p>\u6743\u5a01\u670d\u52a1\u5668\uff1a\u4e3b\u8981\u8d1f\u8d23\u7ef4\u62a4\u57df\u540d\u4e0e <code>ip</code> \u7684\u6620\u5c04\u5173\u7cfb\u3002</p> </li> <li> <p>\u9012\u5f52\u670d\u52a1\u5668\uff1a\u8d1f\u8d23\u67e5\u8be2\u6743\u5a01\u670d\u52a1\u5668\uff0c\u7f13\u5b58\u57df\u540d\u4e0e <code>ip</code> \u7684\u6620\u5c04\u5173\u7cfb\uff0c\u5982\u679c\u8d85\u8fc7 <code>TTL</code>\uff0c\u5219\u91cd\u65b0\u67e5\u8be2\u6743\u5a01\u670d\u52a1\u5668\u3002</p> </li> </ul> </li> </ol> </li> </ul> <p>\u503c\u5f97\u4e00\u63d0\uff0c\u4ee5 <code>8.8.8.8</code> \u4e3a\u4f8b\uff0c<code>8.8.8.8</code> \u672c\u8eab\u5982\u4f55\u505a\u5230\u9ad8\u53ef\u7528\uff1fAnycast</p> <p></p>"},{"location":"src/algorithm/raft/#cap","title":"CAP","text":"<p>\u4e00\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf\u6700\u591a\u53ea\u80fd\u540c\u65f6\u6ee1\u8db3\u4e00\u81f4\u6027\uff08Consistency\uff09\u3001\u53ef\u7528\u6027\uff08Availability\uff09\u548c\u5206\u533a\u5bb9\u9519\u6027\uff08Partition tolerance\uff09\u8fd9\u4e09\u9879\u4e2d\u7684\u4e24\u9879\u3002</p> <ul> <li> <p>\u5bb9\u9519\u6027\uff1a\u4e00\u53f0\u673a\u5668\u6302\u4e86\uff0c\u4e0d\u5f71\u54cd\u6574\u4e2a\u7cfb\u7edf\u3002\u56e0\u6b64\u6570\u636e\u9700\u8981\u591a\u53f0\u673a\u5668\u5b58\u50a8\u3002</p> </li> <li> <p>\u4e00\u81f4\u6027\uff1a\u591a\u53f0\u673a\u5668\u5b58\u50a8\u6570\u636e\uff0c\u5982\u4f55\u4fdd\u8bc1\u6570\u636e\u4e00\u81f4\u6027\uff1f</p> </li> <li> <p>\u53ef\u7528\u6027\uff1a\u901a\u8fc7\u806a\u660e\u7684\u64cd\u4f5c\uff0c\u4fdd\u8bc1\u6570\u636e\u4e00\u81f4\u6027\uff0c\u4f46\u5982\u4f55\u4fdd\u8bc1\u6027\u80fd\uff1f</p> </li> </ul>"},{"location":"src/algorithm/base/binary-answer/","title":"\u4e8c\u5206","text":""},{"location":"src/algorithm/base/binary-answer/#_1","title":"\u4e8c\u5206\u6a21\u677f","text":"<p>\u7b54\u6848\u8981\u6c42\u5c3d\u53ef\u80fd<code>\u5c0f</code>\uff0c<code>\u53f3\u534a\u8fb9</code>\u5408\u6cd5\uff0c\\(\\geq\\) \u76ee\u6807\u503c\u4e2d\uff0c\u6700\u5c0f\u7684\u4e00\u4e2a\uff0c\u5373<code>\u7b2c\u4e00\u4e2a</code>\u3002</p> C++<pre><code>while(l&lt;r){\n    int mid = l+r &gt;&gt; 1;\n    if(a[mid] &gt;= x) r=mid;  // \u53f3\u8fb9\u662f\u5408\u6cd5\u7684, r\u5411\u4e2d\u95f4\u9760\n    else l=mid+1;\n}\n</code></pre> <p>\u7b54\u6848\u8981\u6c42\u5c3d\u53ef\u80fd<code>\u5927</code>\uff0c<code>\u5de6\u534a\u8fb9</code>\u5408\u6cd5\uff0c\\(\\leq\\) \u76ee\u6807\u503c\u4e2d\uff0c\u6700\u5927\u7684\u4e00\u4e2a\uff0c\u5373<code>\u6700\u540e\u4e00\u4e2a</code>\u3002</p> C++<pre><code>while(l&lt;r){\n    int mid = l+r+1 &gt;&gt; 1;\n    if(a[mid] &lt;= x) l=mid;  // \u5de6\u8fb9\u662f\u5408\u6cd5\u7684, l\u5411\u4e2d\u95f4\u9760\n    else r=mid-1;\n}\n</code></pre>"},{"location":"src/algorithm/base/binary-answer/#_2","title":"\u4e8c\u5206\u67e5\u627e","text":"<p>&lt;1details&gt;Luogu P2249 \u3010\u6df1\u57fa13.\u4f8b1\u3011\u67e5\u627e code </p> <p></p> <p>\u5927\u610f</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u4e25\u683c\u5355\u8c03\u4e0a\u5347\u7684\u6570\u7ec4\uff0c\u627e\u5230 \\(q\\)\u3002</p> <p>\u601d\u8def</p> <ol> <li> <p>\u663e\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u3002</p> </li> <li> <p>\u6bcf\u6b21\u627e\u5230\u4e2d\u95f4\u7684\u4e00\u4e2a\u6570 \\(x\\)\uff0c\u7136\u540e\u4e0e \\(p\\) \u6bd4\u5927\u5c0f\uff1a</p> <ul> <li>\u5982\u679c \\(p &lt; x\\)\uff0c\u8bf4\u660e\u7b54\u6848\u5728 \\(p\\) \u7684\u53f3\u8fb9\uff1a     Text Only<pre><code>L......p..x...R\n       L..x...R\n\n\u66f4\u65b0 L = p\n</code></pre></li> <li>\u5982\u679c \\(x &lt; p\\)\uff0c\u8bf4\u660e\u7b54\u6848\u5728 \\(p\\) \u7684\u53f3\u8fb9\uff1a     Text Only<pre><code>L..x...p......R\nL..x...R \n\n\u66f4\u65b0 R = p\n</code></pre></li> <li>\u5982\u679c \\(x = p\\)\uff0c\u627e\u5230\u3002 C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1e6+10;\n\nint a[N];\nint n, m;\n\nint low_b(int _a[], int l, int r, int x){\n    while(l&lt;r){\n        int mid=l+r&gt;&gt;1;\n        if(_a[mid] &gt;= x) r=mid;\n        else l=mid+1;\n    }\n    return a[l] == x ? l : -1;\n}\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", a+i);\n    while(m--){\n        int x; cin&gt;&gt;x;\n        cout&lt;&lt;low_b(a, 1, n, x)&lt;&lt;\" \";\n    }\n    return 0;\n}\n</code></pre></li> </ul> </li> </ol>"},{"location":"src/algorithm/base/binary-answer/#_3","title":"\u4e8c\u5206\u7b54\u6848","text":"<p>\u5982\u679c\u9898\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u7b54\u6848\u89e3\u51b3, \u610f\u5473\u7740\u4e00\u5b9a\u662f\u53ef\u4ee5\u679a\u4e3e\u7b54\u6848\u89e3\u51b3\u7684 ( \u5927\u6982\u7387TLE ) \u9898\u76ee\u4e00\u822c\u4f1a\u8981\u6c42\u6211\u4eec\u627e\u5230\u4e00\u4e2a\u7b54\u6848, \u8fd9\u4e2a\u7b54\u6848\u662f\u6700\u4f18\u7684 ( \u4e00\u822c\u6765\u8bb2, \u8981\u4e48\u6700\u5c0f, \u8981\u4e48\u6700\u5927 ) \u53ea\u6709\u5f53\u7b54\u6848\u5177\u6709<code>\u5355\u8c03\u6027</code>\u7684\u65f6\u5019, \u624d\u80fd\u4e8c\u5206\u7b54\u6848, \u4e5f\u5c31\u662f\u5de6\u534a\u8fb9 ( \u6216\u8005\u53f3\u534a\u8fb9 ) \u7684\u503c\u90fd\u5408\u6cd5 ( \u5408\u6cd5\u5e76\u4e0d\u662f\u6307\u6700\u4f18 )</p> Luogu P1873 [COCI 2011/2012 #5] EKO / \u780d\u6811 code   &gt; \u6211\u4eec\u5e0c\u671b\u9ad8\u5ea6\u5c3d\u53ef\u80fd\u9ad8, \u90a3\u4e48\u5c31\u662f\u7b54\u6848\u5c3d\u53ef\u80fd\u5927  C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N=1e6+10;\n\nint a[N];\nint n, m;\n\nbool ck(int h){ // \u68c0\u67e5h\u9ad8\u5ea6\u7684\u548c\u80fd\u4e0d\u80fd\u8fbe\u5230m\n    LL allh=0;\n    for(int i=1; i&lt;=n; i++)\n        allh += max(0, a[i]-h);\n    return allh&gt;=m;\n}\n\nint main(){\n    int l=0x3f3f3f3f, r=-0x3f3f3f3f;\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=n; i++) \n        scanf(\"%d\", a+i), l=min(l, a[i]), r=max(r, a[i]);\n\n    while(l&lt;r){\n        int mid = l+r+1&gt;&gt;1;\n        if(ck(mid)) l=mid;\n        else r=mid-1;\n    }\n\n    cout&lt;&lt;l;\n\n    return 0;\n}\n</code></pre> Luogu P2440 \u6728\u6750\u52a0\u5de5 code   &gt; \u6211\u4eec\u5e0c\u671b\u6bcf\u6839\u6728\u5934\u7684\u957f\u5ea6\u5c3d\u53ef\u80fd\u5927, \u90a3\u4e48\u5c31\u662f\u7b54\u6848\u5c3d\u53ef\u80fd\u5927  C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1e5+10;\n\nint a[N];   // \u6bcf\u6839\u6728\u5934\u7684\u957f\u5ea6\nint n, k;\nint l=1, r=1e8;\n\nbool ck(int len){   // \u53ef\u4e0d\u53ef\u4ee5\u5207k\u6839len\u51fa\u6765\n    int cnt=0;\n    for(int i=1; i&lt;=n; i++)\n        cnt+=a[i]/len;\n    return cnt&gt;=k;\n}\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;k;\n    for(int i=1; i&lt;=n; i++)\n        scanf(\"%d\", a+i);\n\n    while(l&lt;r){\n        int mid = l+r+1&gt;&gt;1;        \n        if(ck(mid)) l=mid;\n        else r=mid-1;\n    }\n\n    if(ck(l)) cout&lt;&lt;l;\n    else cout&lt;&lt;\"0\";\n\n    return 0;\n}\n</code></pre> Luogu P2678 [NOIP2015 \u63d0\u9ad8\u7ec4] \u8df3\u77f3\u5934 code   &gt; \u7ecf\u5178\u9898, \u7740\u91cd\u8003\u5bdf check \u51fd\u6570\u7684\u5b9e\u73b0 &gt; \u6700\u77ed\u8df3\u8dc3\u8ddd\u79bb\u7684\u6700\u5927\u503c, \u7b54\u6848\u5c3d\u53ef\u80fd\u5927  C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=5e4+10;\n\nint L, m, n;\nint a[N];\n\nbool ck(int x){\n    int k=m;\n    int last=0; // \u4e0a\u4e00\u4e2a\u5730\u513f\n    for(int i=1; i&lt;=n; i++){\n        if(a[i]-a[last] &lt; x){\n            k--;\n            if(k&lt;0) return 0;\n            continue;\n        }\n        last=i;\n    }\n    return 1;\n}\n\nint main(){\n    cin&gt;&gt;L&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", a+i);\n    a[++n]=L;\n\n    int l=0, r=1e9;\n    while(l&lt;r){\n        int mid=l+r+1&gt;&gt;1;\n        if(ck(mid)) l=mid;\n        else r=mid-1;\n    }\n\n    cout&lt;&lt;l;\n\n    return 0;\n}\n</code></pre> Luogu P3853 [TJOI2007]\u8def\u6807\u8bbe\u7f6e code   &gt; \u66f4\u590d\u6742\u7684check\u51fd\u6570, \u6b64\u9898\u6c42\u6700\u5c0f\u7684\u7a7a\u65f7\u6307\u6570, \u7b54\u6848\u5c3d\u53ef\u80fd\u5c0f  C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1e5+10;\nint a[N];\nint L, n, K;\n\nint cnt(int x, int len){    // \u5c06len\u5206\u4e3ax\u957f, \u5206\u51e0\u8282\n    //if(x==0) return len-1;\n    if(len%x==0) return len/x-1;\n    else return len/x;\n}\n\nbool ck(int x){ // \u68c0\u67e5x\u7684\u8ddd\u79bb, \u662f\u4e0d\u662f\u6700\u5927\u8ddd\u79bb\n    int k=K;\n    for(int i=1; i&lt;=n; i++){\n        int len = a[i] - a[i-1];\n        if(len &gt; x) // \u5927\u4e86, \u5206\u5c31\u5b8c\u4e8b\u513f\n            k -= cnt(x, len);\n        if(k&lt;0) return 0;\n    }\n    return 1;\n}\n\nint main(){\n    cin&gt;&gt;L&gt;&gt;n&gt;&gt;K;\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", a+i);\n    a[++n] = L;\n\n    int l=1, r=L;\n    while(l&lt;r){ // \u627e &gt;=x \u7684\n        int mid = l+r&gt;&gt;1;\n        if(ck(mid)) r=mid;\n        else l=mid+1;\n    }\n    cout&lt;&lt;l;\n    return 0;\n}\n</code></pre> Luogu P1182 \u6570\u5217\u5206\u6bb5 Section II code   &gt; \u6bcf\u6bb5\u548c\u7684\u6700\u5927\u503c\u6700\u5c0f, \u5373\u7b54\u6848\u5c3d\u53ef\u80fd\u5c0f  C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1e5+10;\n\nlong long a[N];\nint n, m;\n\nbool ck(long long x){ // \u68c0\u67e5x\u6ee1\u8db3\u6761\u4ef6\u5417(\u533a\u95f4\u4e0d\u5141\u8bb8\u8d85\u8fc7x)\n    int last=0; // \u4e0a\u6b21\u7ed3\u5c3e\u7684\u70b9\n    int k=m-1;\n    for(int i=1; i&lt;=n; i++){\n        if(a[i]-a[i-1] &gt; x) return 0;\n        if(a[i]-a[last] &gt; x){\n            k--;\n            last=i-1;\n        }\n        if(k&lt;0) return 0;\n    }\n    return 1;\n}\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", a+i), a[i]+=a[i-1];\n\n    int l=1, r=1e9;\n    while(l&lt;r){\n        int mid=l+r&gt;&gt;1;\n        if(ck(mid)) r=mid;\n        else l=mid+1;\n    }\n\n    cout&lt;&lt;l;\n\n    return 0;\n}\n</code></pre>"},{"location":"src/algorithm/base/binary-answer/#_4","title":"\u5b9e\u6570\u4e8c\u5206","text":"Luogu P3743 kotori\u7684\u8bbe\u5907 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cmath&gt;\nusing namespace std;\n\nconst int N = 1e5 + 10;\n\nint n, p;\nint a[N], b[N];\n\nbool ck(double sb) { // \u7528sb\u7684\u65f6\u95f4\n    double pp = p * sb; // \u4e00\u5171\u53ef\u4ee5\u51b2\u8fd9\u4e48\u591a\u7535\n    for (int i = 1; i &lt;= n; i++) {\n        pp -= max(0.0, a[i] * sb - b[i]);    // \u8981\u6d88\u8017\u7684\u7535 - \u672c\u6765\u7684\u7535 = \u9700\u8981\u51b2\u7684\u7535\n        if (pp &lt; 0) return 0;\n    }\n    return 1;\n}\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; p;\n    for (int i = 1; i &lt;= n; i++) scanf(\"%d%d\", a + i, b + i);\n\n    double l = 0, r = 1e12;\n\n    while ( (r-l)&gt;1e-6 ) {\n        double mid = (l + r) / 2;\n        if (ck(mid)) l = mid;\n        else r = mid;\n    }\n\n    if ( fabs(1e12-l) &lt;= 1e-6) cout &lt;&lt; -1;\n    else cout &lt;&lt; l;\n\n    return 0;\n}\n</code></pre>"},{"location":"src/algorithm/base/binary-answer/#stl","title":"STL","text":""},{"location":"src/algorithm/base/binary-answer/#lower_bound","title":"lower_bound()","text":"<p>\u67e5\u627e <code>&gt;=</code>\u76ee\u6807\u503c \u7684<code>\u7b2c\u4e00\u4e2a</code>\u5143\u7d20</p> C++<pre><code>int* b = lower_bound(a, a + 10, 3); // \u8fd4\u56de \u7b2c\u4e00\u4e2a 3 \u7684\u5730\u5740\ncout &lt;&lt; b-a;    // a[b-a] == *b == *(a+(b-a))\n</code></pre>"},{"location":"src/algorithm/base/binary-answer/#upper_bound","title":"upper_bound()","text":"<p>\u67e5\u627e <code>&gt;</code> \u76ee\u6807\u503c \u7684<code>\u7b2c\u4e00\u4e2a</code>\u5143\u7d20</p> C++<pre><code>vector&lt;int&gt;::iterator i = upper_bound(a.begin(), a.end(), 2);   // \u8fd4\u56de\u8fed\u4ee3\u5668\ncout &lt;&lt; i - a.begin();\n</code></pre>"},{"location":"src/algorithm/data-struct/linked-list/","title":"\u94fe\u8868","text":""},{"location":"src/algorithm/data-struct/linked-list/#_1","title":"\u5e26\u5934\u5355\u94fe\u8868","text":""},{"location":"src/algorithm/data-struct/linked-list/#_2","title":"\u589e","text":"\u901a\u8fc7\u5e8f\u5217\u751f\u6210\u94fe\u8868 \u601d\u8def <ol> <li> \u521b\u5efa\u4e00\u4e2a\u5934\uff0c\u5373\u94fe\u8868 </li> <li> \u5411\u94fe\u8868\u7684\u5c3e\u90e8\u63d2\u5165\u65b0\u7684\u8282\u70b9</li> </ol> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nconst int N = 2e5+10;\n\nstruct node{\n    int     val;\n    node*   ne;\n};\n\nint a[N], n;\n\nint main(){\n    scanf(\"%d\", &amp;n);\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", a+i);\n\n    // \u65b0\u5efa\u4e00\u4e2a\u8282\u70b9, \u5934\u8282\u70b9, \u4e5f\u6307\u6b64\u94fe\u8868\n    node* head = (node*)malloc(sizeof(node));\n    head-&gt;val = 0;              // head \u7684 val \u5b58\u653e\u8282\u70b9\u6570\u91cf\n    head-&gt;ne = NULL;            // head \u7684 ne \u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\n\n    // \u65b0\u5efa\u4e00\u4e2a\u6307\u9488, \u5f53\u524d\u64cd\u4f5c\u4f4d\u7f6e\n    node* pos = head;\n\n    for(int i=1; i&lt;=n; i++){\n        // \u65b0\u5efa\u4e00\u4e2a\u8282\u70b9, \u65b0\u7684\u8282\u70b9\n        node* newNode = (node*)malloc(sizeof(node));\n        newNode-&gt;val = a[i];\n        newNode-&gt;ne = NULL;\n\n        pos-&gt;ne = newNode;      // \u5f53\u524d\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a = \u65b0\u8282\u70b9\n        pos = newNode;          // \u5f53\u524d\u8282\u70b9 = \u65b0\u8282\u70b9\n\n        head-&gt;val ++;\n    }\n\n    pos = head-&gt;ne;\n    while(pos != NULL){\n        printf(\"%d \", pos-&gt;val);\n        pos = pos-&gt;ne;\n    }\n\n    return 0;\n}\n</code></pre> LC 2. \u4e24\u6570\u76f8\u52a0 \u601d\u8def <ol> <li> \u5c06\u6570\u5168\u90e8\u52a0\u5230\u5176\u4e2d\u4e00\u4e2a\u94fe\u8868\u4e2d\u53bb\uff0c\u524d\u671f\u65e0\u6cd5\u5224\u65ad\u54ea\u4e2a\u94fe\u8868\u957f\uff0c\u56e0\u6b64\u90fd\u52a0 </li> </ol> C++<pre><code>class Solution {\npublic:\nListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n    bool flg = true;    // l1\n    bool add = false;   // \u662f\u5426\u5b58\u5728\u8fdb\u4f4d\n    ListNode* p1 = l1;\n    ListNode* p2 = l2;\n    ListNode* t = l1;   // \u6700\u540e\u4e00\u4f4d\n\n    while(p1 &amp;&amp; p2){\n        int v = p1-&gt;val + p2-&gt;val + add;\n        p1-&gt;val = v%10;\n        p2-&gt;val = v%10;\n\n        add = v/10;\n\n        t = p1;\n\n        p1 = p1-&gt;next;\n        p2 = p2-&gt;next;\n    }\n\n    while(p1){\n        flg = true;\n        int v = p1-&gt;val + add;\n\n        p1-&gt;val = v%10;\n        add = v/10;\n\n        t=p1;\n        p1 = p1-&gt;next;\n    }\n\n    while(p2){\n        flg = false;\n        int v = p2-&gt;val + add;\n\n        p2-&gt;val = v%10;\n        add = v/10;\n\n        t=p2;\n        p2 = p2-&gt;next;\n    }\n\n    if(add){\n        t-&gt;next = new ListNode(1);\n    }\n\n    return flg ? l1 : l2;\n}\n};\n</code></pre>  LC 21. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868  \u601d\u8def <ol> <li>\u9012\u5f52</li> </ol> C++<pre><code>class Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {\n        if(list1 == nullptr)\n            return list2;\n        else if(list2 == nullptr)\n            return list1;\n        else if(list1-&gt;val &lt; list2-&gt;val){\n            list1-&gt;next = mergeTwoLists(list1-&gt;next, list2);\n            return list1;\n        } else {\n            list2-&gt;next = mergeTwoLists(list1, list2-&gt;next);\n            return list2;\n        }\n    }\n};\n</code></pre>  LC 23. \u5408\u5e76 K \u4e2a\u5347\u5e8f\u94fe\u8868  \u601d\u8def <ol> <li> \u641e\u4e00\u4e2a\u65b0\u7684\u94fe\u8868 h </li> <li> \u6bcf\u6b21\u904d\u5386\u786e\u5b9a\u4e00\u4e2a\u6700\u5c0f\u7684 </li> <li> \u5c06\u8fd9\u4e2a\u6700\u5c0f\u7684\u5f80 h \u4e0a\u51d1 </li> </ol> C++<pre><code>class Solution {\npublic:\n    ListNode* mergeKLists(vector&lt;ListNode*&gt;&amp; lists) {\n        if(lists.size() == 0) return nullptr;\n\n        ListNode* h = new ListNode(-1); // \u641e\u4e2a\u5934\n        ListNode* pos = h;              // \u5f53\u524d\u64cd\u4f5c\u4f4d\n\n        bool flg = true;\n        while(flg){\n            flg = false;\n            int mmin = 0x3f3f3f3f;\n            int j = 0;\n\n            for(int i=0; i&lt;lists.size(); i++){\n                if(lists[i] &amp;&amp; lists[i]-&gt;val &lt; mmin){\n                    j = i;\n                    mmin = lists[i]-&gt;val;\n                }\n            }\n\n            if(mmin != 0x3f3f3f3f){\n                flg = true;\n                pos-&gt;next = lists[j];\n                pos = pos-&gt;next;            // \u540e\u79fb\n                lists[j] = lists[j]-&gt;next;  // \u540e\u79fb\n            }\n        }\n\n        return h-&gt;next;\n    }   \n};\n</code></pre>"},{"location":"src/algorithm/data-struct/linked-list/#_3","title":"\u5220","text":"LC 19. \u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2c N \u4e2a\u7ed3\u70b9 \u601d\u8def <ol> <li> \u5f04\u4e00\u4e2a\u5934\u8282\u70b9\u51fa\u6765 </li> <li> \u8ba1\u7b97\u5220\u9664\u7684\u4f4d\u7f6e\uff0c\u76f4\u63a5\u5220\u9664\u5373\u53ef </li> </ol> C++<pre><code>class Solution {\npublic:\n    ListNode* removeNthFromEnd(ListNode* head, int n) {\n        // \u641e\u4e2a\u5934\n        ListNode* h = new ListNode(0);\n        h-&gt;next = head;\n        // \u7b97\u4e2a\u957f\u5ea6\n        ListNode* pos = head;\n        int sz = 0;\n        while(pos){\n            sz ++;\n            pos = pos-&gt;next;\n        }\n        n = sz - n;\n        // \u5220\u9664 n \u8282\u70b9\u4e4b\u540e\u7684\u8282\u70b9\n        pos = h;\n        while(n--) pos = pos-&gt;next;\n        pos-&gt;next = pos-&gt;next-&gt;next;\n        return h-&gt;next;\n    }\n};\n</code></pre>"},{"location":"src/algorithm/data-struct/linked-list/#_4","title":"\u6539","text":"LC 24. \u4e24\u4e24\u4ea4\u6362\u94fe\u8868\u4e2d\u7684\u8282\u70b9  \u601d\u8def <ol> <li> \u5f04\u4e00\u4e2a\u5934\u8282\u70b9\u51fa\u6765 </li> <li> \u6bcf\u6b21\u83b7\u53d6\u540e\u9762\u4fe9\u8282\u70b9\uff0c\u80fd\u6362\u5219\u6362 </li> </ol> C++<pre><code>class Solution {\npublic:\n    ListNode* swapPairs(ListNode* head) {\n        ListNode* h = new ListNode(-1, head);// \u641e\u4e00\u4e2a\u5934\n        ListNode* pos = h;          // \u64cd\u4f5c\u4f4d\n\n        ListNode* a = nullptr, *b = nullptr;\n        while(pos-&gt;next){\n            a = pos-&gt;next;\n            if(a-&gt;next){            // \u5982\u679c b \u5b58\u5728\u5219\u6362\n                b = a-&gt;next;\n                ListNode* c = b-&gt;next;\n\n                pos-&gt;next = b;\n                pos-&gt;next-&gt;next = a;\n                pos-&gt;next-&gt;next-&gt;next = c;\n\n                pos = pos-&gt;next;    // \u4e00\u6b21\u540e\u79fb\n            }\n            pos = pos-&gt;next;        // \u4e00\u6b21\u540e\u79fb\n\n            a = b = nullptr;\n        }\n\n        return h-&gt;next;\n    }\n};\n</code></pre>"},{"location":"src/algorithm/data-struct/linked-list/#_5","title":"\u67e5","text":""},{"location":"src/algorithm/data-struct/linked-list/#_6","title":"\u53cc\u5411\u94fe\u8868","text":""},{"location":"src/algorithm/data-struct/linked-list/#_7","title":"\u5faa\u73af\u94fe\u8868","text":""},{"location":"src/algorithm/data-struct/segment-tree/","title":"\u7ebf\u6bb5\u6811","text":""},{"location":"src/algorithm/data-struct/segment-tree/#template","title":"Template","text":"<p>\u64cd\u4f5c \u52a0 \u4e0e \u4e58\uff0c\u7ef4\u62a4 \u6781\u5927\u6781\u5c0f\u503c \u4e0e \u548c</p> C<pre><code>typedef long long int LL;\n\n#define N 200010\n#define max(a, b) ((a) &gt; (b) ? (a) : (b))\n#define min(a, b) ((a) &lt; (b) ? (a) : (b))\n\ntypedef struct {\n    int l, r;\n    LL mul;     // lazytag\n    LL add;     // lazytag\n    LL sum;     // \u7ef4\u62a4\u7684\u7ed3\u679c\u4eec\n    LL mmax;    \n    LL mmin;\n} node;\n\nnode tr[4*N];\nLL a[N];\nLL MOD = 1e15;\n\nvoid pushup(int u) {\n    tr[u].sum = (tr[u&lt;&lt;1].sum + tr[u&lt;&lt;1|1].sum) % MOD;\n    tr[u].mmax = max(tr[u&lt;&lt;1].mmax, tr[u&lt;&lt;1|1].mmax);\n    tr[u].mmin = min(tr[u&lt;&lt;1].mmin, tr[u&lt;&lt;1|1].mmin);\n}   // \u5c06 u \u8282\u70b9\u5de6\u53f3\u5b50\u6811\u7684\u4fe1\u606f\u66f4\u65b0\u5230 u \u8282\u70b9\n\nvoid pushdown(int u) {\n    int l = u &lt;&lt; 1;\n    int r = u &lt;&lt; 1 | 1;\n    // \u5c06 mul * \u513f\u5b50\u7684\u503c + add * \u533a\u95f4\u957f\u5ea6\n    tr[l].sum = (tr[u].mul * tr[l].sum + tr[u].add * (tr[l].r - tr[l].l + 1)) % MOD;\n    tr[r].sum = (tr[u].mul * tr[r].sum + tr[u].add * (tr[r].r - tr[r].l + 1)) % MOD;\n    // \u66f4\u65b0\u6781\u503c\n    tr[l].mmax= (tr[u].mul * tr[l].mmax+ tr[u].add) % MOD;\n    tr[r].mmax= (tr[u].mul * tr[r].mmax+ tr[u].add) % MOD;\n    tr[l].mmin= (tr[u].mul * tr[l].mmin+ tr[u].add) % MOD;\n    tr[r].mmin= (tr[u].mul * tr[r].mmin+ tr[u].add) % MOD;\n    // lazytag \u4e0b\u653e\n    tr[l].mul = tr[l].mul * tr[u].mul % MOD;\n    tr[r].mul = tr[r].mul * tr[u].mul % MOD;\n    tr[l].add = (tr[l].add * tr[u].mul + tr[u].add) % MOD;\n    tr[r].add = (tr[r].add * tr[u].mul + tr[u].add) % MOD;\n    // \u7236\u8282\u70b9 lazytag \u6062\u590d\u521d\u59cb\n    tr[u].mul = 1;\n    tr[u].add = 0;\n}   // \u5c06 u \u8282\u70b9\u7684\u4fe1\u606f\u66f4\u65b0\u5230 u \u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\n\nvoid modify_mul(int u, int l, int r, LL v) {\n    if(l &gt; tr[u].r  || tr[u].l &gt; r) return; // \u6ca1\u6709\u4ea4\u96c6\n    if(l &lt;= tr[u].l &amp;&amp; tr[u].r &lt;= r){       // \u5b8c\u5168\u5305\u542b\n        tr[u].mul = (tr[u].mul * v) % MOD;\n        tr[u].add = (tr[u].add * v) % MOD;\n        tr[u].sum = (tr[u].sum * v) % MOD;\n        tr[u].mmax= (tr[u].mmax* v) % MOD;\n        tr[u].mmin= (tr[u].mmin* v) % MOD;\n        return;\n    }\n    pushdown(u);\n    modify_mul(u&lt;&lt;1,   l, r, v);\n    modify_mul(u&lt;&lt;1|1, l, r, v);\n    pushup(u);\n}\n\nvoid modify_add(int u, int l, int r, LL v) {\n    if(l &gt; tr[u].r  || tr[u].l &gt; r) return;\n    if(l &lt;= tr[u].l &amp;&amp; tr[u].r &lt;= r){\n        tr[u].add = (tr[u].add + v) % MOD;\n        tr[u].sum = (tr[u].sum + v * (tr[u].r - tr[u].l + 1)) % MOD;\n        tr[u].mmax= (tr[u].mmax+ v) % MOD;\n        tr[u].mmin= (tr[u].mmin+ v) % MOD;\n        return;\n    }\n    pushdown(u);\n    modify_add(u&lt;&lt;1,   l, r, v);\n    modify_add(u&lt;&lt;1|1, l, r, v);\n    pushup(u);\n}\n\nnode query(int u, int l, int r) {\n    if(l &gt; tr[u].r || tr[u].l &gt; r){\n        node T = {0, 0, 1, 0, 0, 0, 0};\n        return T;\n    }\n    if(l &lt;= tr[u].l &amp;&amp; tr[u].r &lt;= r) return tr[u];\n    pushdown(u);\n    node ans;   // \u5408\u5e76\u7b54\u6848\n    node left = query(u&lt;&lt;1,   l, r);\n    node right= query(u&lt;&lt;1|1, l, r);\n    ans.sum = (left.sum + right.sum) % MOD;\n    ans.mmax= max(left.mmax, right.mmax);\n    ans.mmin= min(left.mmin, right.mmin);\n    return ans;\n}\n\nvoid build(int u, int l, int r) {\n    tr[u].l = l;\n    tr[u].r = r;\n    tr[u].mul = 1;\n    // \u5176\u4f59\u4e3a 0\n    if(l == r) {\n        tr[u].sum = a[l];\n        tr[u].mmax= a[l];\n        tr[u].mmin= a[l];\n    }else{\n        int mid = (l + r) &gt;&gt; 1;\n        build(u &lt;&lt; 1, l, mid);\n        build(u &lt;&lt; 1 | 1, mid + 1, r);\n        pushup(u);\n    }\n}\n</code></pre> <ul> <li>\u533a\u95f4\u5f00\u6839\u53f7</li> <li>\u533a\u95f4\u4fee\u6539</li> </ul> <p></p>"},{"location":"src/algorithm/dp/number-triangles/","title":"\u6570\u5b57\u4e09\u89d2\u5f62","text":""},{"location":"src/algorithm/dp/number-triangles/#_2","title":"\u4ece\u641c\u7d22\u5230\u89c4\u5212","text":""},{"location":"src/algorithm/dp/number-triangles/#_3","title":"\u6570\u5b57\u4e09\u89d2\u5f62","text":"Luogu P1216 [USACO1.5] [IOI1994]\u6570\u5b57\u4e09\u89d2\u5f62 Number Triangles code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nconst int N=1e3+10;\n\nint n;\nint dp[N][N];\n\nint main(){\n    memset(dp, -0x3f, sizeof dp);\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++)\n        for(int j=1; j&lt;=i; j++)\n            scanf(\"%d\", &amp;dp[i][j]);\n\n    for(int i=2; i&lt;=n; i++)\n        for(int j=1; j&lt;=i; j++)\n            dp[i][j]=max(dp[i-1][j-1], dp[i-1][j])+dp[i][j];\n\n    int ans=-0x3f3f3f3f;\n    for(int i=1; i&lt;=n; i++)\n        ans=max(ans, dp[n][i]);\n    cout&lt;&lt;ans;\n    return 0;\n}\n</code></pre>"},{"location":"src/algorithm/dp/number-triangles/#_4","title":"\u4ece\u5de6\u4e0a\u5230\u53f3\u4e0b","text":""},{"location":"src/algorithm/dp/number-triangles/#_5","title":"\u6734\u7d20","text":"AcWing 1015. \u6458\u82b1\u751f code C++<pre><code>#pragma G++ optimize(\"Ofast\")\n#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nconst int N=110;\n\nint dp[N][N];\nint R, C;\n\nvoid solve(){\n    cin&gt;&gt;R&gt;&gt;C;\n    for(int i=1; i&lt;=R; i++)\n        for(int j=1; j&lt;=C; j++)\n            cin&gt;&gt;dp[i][j];\n\n    for(int i=1; i&lt;=R; i++)\n        for(int j=1; j&lt;=C; j++)\n            dp[i][j]=max(dp[i-1][j], dp[i][j-1])+dp[i][j];\n\n    cout&lt;&lt;dp[R][C]&lt;&lt;\"\\n\";\n}\n\nint main(){\n    ios::sync_with_stdio(0); cin.tie(0), cout.tie(0);\n    int T; cin&gt;&gt;T; while(T--)\n    solve();\n    return 0;\n}\n</code></pre>"},{"location":"src/algorithm/dp/number-triangles/#_6","title":"\u5b58\u5728\u969c\u788d","text":"Luogu P1002 [NOIP2002 \u666e\u53ca\u7ec4] \u8fc7\u6cb3\u5352 code C++<pre><code>#define fst first\n#define sed second\n#include &lt;iostream&gt;\n#include &lt;set&gt; \nusing namespace std;\n\ntypedef pair&lt;int, int&gt; PII;\n\nconst int N = 30;\n\nlong long dp[N][N];   // \u5230\u8fbe\u70b9 i, j \u7684\u6700\u77ed\u8def\u5f84\nset &lt;PII&gt; H;\n\nint main() {\n    PII c, b;   // b\u662f\u9a6c\n    cin &gt;&gt; c.fst &gt;&gt; c.sed &gt;&gt; b.fst &gt;&gt; b.sed;\n    b.fst++, b.sed++, c.fst++, c.sed++;\n\n    H.insert({ b.fst, b.sed });\n    H.insert({ b.fst - 1, b.sed - 2 });\n    H.insert({ b.fst - 2, b.sed - 1 });\n    H.insert({ b.fst - 1, b.sed + 2 });\n    H.insert({ b.fst - 2, b.sed + 1 });\n    H.insert({ b.fst + 1, b.sed - 2 });\n    H.insert({ b.fst + 2, b.sed - 1 });\n    H.insert({ b.fst + 1, b.sed + 2 });\n    H.insert({ b.fst + 2, b.sed + 1 });\n\n    dp[0][1] = 1;\n\n    for (int i = 1; i &lt;= c.fst; i++)\n        for (int j = 1; j &lt;= c.sed; j++)\n            if (H.count({ i, j }))\n                dp[i][j] = 0;\n            else\n                dp[i][j] = dp[i - 1][j] + dp[i][j - 1];\n\n    cout &lt;&lt; dp[c.fst][c.sed];\n\n    return 0;\n}\n</code></pre>"},{"location":"src/algorithm/dp/number-triangles/#_7","title":"\u5b58\u5728\u591a\u79cd\u8d70\u6cd5","text":"Luogu P7074 [CSP-J2020] \u65b9\u683c\u53d6\u6570 code C++<pre><code>#include &lt;cstring&gt;\n#include &lt;iostream&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N=1e3+10;\n\nint g[N][N];\nLL dp[N][N][2];\nint n, m;\n\nint main(){\n    //freopen(\"in.txt\", \"r\", stdin); freopen(\"out.txt\", \"w\", stdout);\n    memset(g, -0x3f, sizeof g);\n    memset(dp, -0x3f, sizeof dp);\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=n; i++)\n        for(int j=1; j&lt;=m; j++)\n            scanf(\"%d\", &amp;g[i][j]);\n\n    dp[1][1][0]=dp[1][1][1]=g[1][1];\n    for(int i=2; i&lt;=n; i++) // \u7528\u624b\u5bfc\u7b2c\u4e00\u5217\n        dp[i][1][0] = dp[i][1][1] = dp[i-1][1][0] + g[i][1];\n    //for(int i=n-1; i&gt;=1; i--)\n    //    dp[i][1][1] = dp[i+1][1][1] + g[i][1];\n    //for(int i=1; i&lt;=n; i++)\n    //    dp[i][1][0] = dp[i][1][1] = max(dp[i][1][0], dp[i][1][1]);\n\n    for(int j=2; j&lt;=m; j++){\n        for(int i=1; i&lt;=n; i++) // \u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u8fb9\u6765\uff0c\u4ece\u4e0a\u9762\u6765\n            dp[i][j][0] = max(dp[i][j-1][0], dp[i-1][j][0]) + g[i][j];\n\n        for(int i=n; i&gt;=1; i--) // \u4ece\u4e0b\u5230\u4e0a\uff0c\u4ece\u5de6\u8fb9\u6765\uff0c\u4ece\u4e0b\u9762\u6765\n            dp[i][j][1] = max(dp[i][j-1][1], dp[i+1][j][1]) + g[i][j];\n\n        for(int i=1; i&lt;=n; i++)\n            dp[i][j][0] = dp[i][j][1] = max(dp[i][j][0], dp[i][j][1]);\n    }\n\n    cout&lt;&lt;dp[n][m][1];\n    return 0;\n}\n</code></pre>"},{"location":"src/algorithm/dp/number-triangles/#_8","title":"\u5141\u8bb8\u91cd\u590d\u8d70","text":"<p>Luogu P1004 [NOIP2000 \u63d0\u9ad8\u7ec4] \u65b9\u683c\u53d6\u6570</p> <p>\u9898\u76ee\u5927\u610f</p> <ol> <li>\u563b\u563b</li> </ol> <p>\u89e3\u9898\u601d\u8def</p> <ol> <li> <p>\u5982\u679c\u5206\u4e24\u6b21\u8d70\uff0c\u4f1a\u56e0\u4e3a\u7b2c\u4e00\u6b21\u53d6\u8d70\u7684\u6570\u800c\u5f71\u54cd\u7b2c\u4e8c\u6b21\u7684\u53d6\u6570\uff0c\u6ca1\u6709\u4fdd\u8bc1\u65e0\u540e\u6548\u6027\uff0c\u56e0\u6b64\u8003\u8651\u4e00\u6b21\u8d70\u5b8c</p> </li> <li> <p>\u663e\u7136\uff0c\u7b2c\u4e8c\u6b21\u8d70\uff0c\u4e5f\u53ef\u4ee5\u770b\u4f5c\u662f\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\uff0c\u56e0\u6b64\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e24\u6b21\u4ece\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\u53d6\u6570</p> </li> <li> <p>\u7528 \\(dp[i][j][x][y]\\) \u8868\u793a\u7b2c\u4e00\u6b21\u8d70\u5230 \\((i, j)\\)\uff0c\u7b2c\u4e8c\u6b21\u8d70\u5230 \\((x, y)\\) \u7684\u6700\u5927\u503c</p> </li> <li> <p>\u5982\u679c \\((i, j) = (x, y)\\)\uff0c\u9700\u8981\u7279\u5224\uff0c\u56e0\u4e3a\u53ea\u80fd\u53d6\u4e00\u6b21</p> </li> </ol> code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 15;\n\nint g[N][N];\nint dp[N][N][N][N];\nint n;\n\nint main() {\n  cin &gt;&gt; n;\n  while (1) {\n    int a, b, c;\n    scanf(\"%d%d%d\", &amp;a, &amp;b, &amp;c);\n    if (a == b &amp;&amp; a == c &amp;&amp; a == 0)\n      break;\n    g[a][b] = c;\n  }\n  for (int i = 1; i &lt;= n; i++)\n    for (int j = 1; j &lt;= n; j++)\n      for (int x = 1; x &lt;= n; x++)\n        for (int y = 1; y &lt;= n; y++) {\n\n          int t = (i == x &amp;&amp; j == y) ? g[i][y] : g[i][j] + g[x][y];\n\n          dp[i][j][x][y] = max(dp[i][j][x][y], dp[i - 1][j][x - 1][y] + t);\n          dp[i][j][x][y] = max(dp[i][j][x][y], dp[i - 1][j][x][y - 1] + t);\n          dp[i][j][x][y] = max(dp[i][j][x][y], dp[i][j - 1][x - 1][y] + t);\n          dp[i][j][x][y] = max(dp[i][j][x][y], dp[i][j - 1][x][y - 1] + t);\n        }\n\n  cout &lt;&lt; dp[n][n][n][n];\n  return 0;\n}\n</code></pre>"},{"location":"src/algorithm/dp/number-triangles/#_9","title":"\u91cd\u590d\u8d70\u7684\u4f18\u5316","text":"Luogu P1006 [NOIP2008 \u63d0\u9ad8\u7ec4] \u4f20\u7eb8\u6761 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int N = 60;\n\nint g[N][N];\nint dp[N*2][N][N];\n// \u7b2c\u4e00\u7ef4\u5b58\u603b\u7684\u6b65\u6570\n// \u7b2c\u4e8c\u7ef4\u5b58\u7b2c\u4e00\u6b21\u8d70\u7684\u7eb5\u5411\u8ddd\u79bb\uff0c\u90a3\u4e48\u6a2a\u5411\u8ddd\u79bb\u5c31\u662fk-x\n// \u7b2c\u4e09\u7ef4\u5b58\u7b2c\u4e8c\u6b21\u7684\uff0c\u540c\u7406\n\nint n,m;\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1;i&lt;=n;i++)\n        for(int j=1;j&lt;=m;j++)\n            scanf(\"%d\", &amp;g[i][j]);\n\n    for(int k=2;k&lt;=n+m;k++)\n        for(int i=1;i&lt;k&amp;&amp;i&lt;=n;i++)\n            for(int j=1;j&lt; k&amp;&amp;j&lt;=n;j++){\n\n                int v      = g[i][k-i];\n                if(i!=j) v+= g[j][k-j];\n\n                dp[k][i][j] = max(dp[k][i][j], v + dp[k-1][i][j]);\n                dp[k][i][j] = max(dp[k][i][j], v + dp[k-1][i][j-1]);\n                dp[k][i][j] = max(dp[k][i][j], v + dp[k-1][i-1][j]);\n                dp[k][i][j] = max(dp[k][i][j], v + dp[k-1][i-1][j-1]);\n            }\n\n    cout&lt;&lt;dp[n+m][n][n]&lt;&lt;endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"src/algorithm/dp/subsequence/","title":"\u5b50\u5e8f\u5217\u6a21\u578b","text":""},{"location":"src/algorithm/dp/subsequence/#lis","title":"LIS \u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217","text":"<p>\u6a21\u7248</p> <ul> <li> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u5faa\u73af</p> </li> <li> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u6570\u7ec4</p> </li> </ul> C++<pre><code>// Longest Increasing Subsequence\n</code></pre> <p></p>"},{"location":"src/algorithm/dp/subsequence/#_1","title":"\u6734\u7d20","text":"<p>Luogu B3637 \u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217</p> <p>\u9898\u76ee\u5927\u610f</p> <ol> <li>\u563b\u563b</li> </ol> <p>\u89e3\u9898\u601d\u8def</p> <ol> <li>\u563b\u563b</li> </ol> code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 5e3 + 10;\n\nint a[N], dp[N];  // dp[i] \u4ee5 a[i] \u4f5c\u4e3a\u7ed3\u5c3e\u7684\u5b50\u5e8f\u5217\u957f\u5ea6\nint n;\n\nint main() {\n  cin &gt;&gt; n;\n  for (int i = 1; i &lt;= n; i++) cin &gt;&gt; a[i];\n  for (int i = 1; i &lt;= n; i++) {\n    dp[i] = 1;\n    for (int j = 1; j &lt; i; j++) {  // a[i] \u4e0e a[j] \u6bd4\u8f83\n      if (a[i] &gt; a[j]) dp[i] = max(dp[i], dp[j] + 1);\n    }\n    dp[0] = max(dp[0], dp[i]);\n  }\n  cout &lt;&lt; dp[0];\n  return 0;\n}\n</code></pre> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nconst int N=1e6+10;\nint a[N];  \nint dp[N]; // \u957f\u5ea6\u4e3a i \u7ed3\u5c3e\u7684\u6700\u957f\u5b50\u5e8f\u5217\uff0c\u7ed3\u5c3e\u662fdp[i]\n\nint main(){\n    int n;\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) \n        scanf(\"%d\", &amp;a[i]);\n\n    dp[1]=a[1]; // \u957f\u5ea6\u4e3a1\u7684\u5b50\u5e8f\u5217\uff0c\u7ed3\u5c3e\u662f\u7b2c\u4e00\u4e2a\u6570\n    int res=1;  // \u5f53\u524d\u6700\u957f\u5b50\u5e8f\u5217\u957f\u5ea6\u4e3a 1\n\n    for(int i=2; i&lt;=n; i++)\n        if(a[i]&gt;dp[res])    // \u5982\u679c \u4e0b\u4e2a\u6570 \u6bd4 \u7ed3\u5c3e\u5927\uff0c\u5b50\u5e8f\u5217\u957f\u5ea6\u589e\u52a0\n            dp[++res]=a[i];\n        else                // \u53cd\u4e4b\uff0c\u8fd9\u4e2a\u6570\u53ef\u4ee5\u66f4\u65b0\u66f4\u77ed\u7684\u5e8f\u5217\u7ed3\u5c3e\n            *lower_bound(dp+1, dp+1+res, a[i])=a[i];\n\n    cout&lt;&lt;res;\n\n    return 0;\n}\n</code></pre> <p></p> Luogu T285024 \u6700\u5927\u4e0a\u5347\u5b50\u5e8f\u5217\u548c code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1e4+10;\n\nint a[N], dp[N];\nint n;\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) cin&gt;&gt;a[i];\n    for(int i=1; i&lt;=n; i++){\n        dp[i]=a[i]; // \u548c\n        for(int j=1; j&lt;i; j++)\n            if( a[i] &gt; a[j] )\n                dp[i] = max(dp[i], dp[j] + a[i]);   // \u548c\n            *dp = max(*dp, dp[i]);\n\n    }\n    cout&lt;&lt;(*dp);\n\n    return 0;\n}\n</code></pre> Luogu U234151 \u602a\u76d7\u57fa\u5fb7\u7684\u6ed1\u7fd4\u7ffc code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nconst int N=1e2+10;\n\nint a[N], dp[N];\nint n;\n\nvoid solve(){\n    memset(a, 0, sizeof a);\n    memset(dp, 0, sizeof dp);\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", a+i);\n\n    for(int i=1; i&lt;=n; i++){\n        dp[i]=1;\n        for(int j=1; j&lt;i; j++)\n            if( a[i] &lt; a[j] )\n                dp[i] = max(dp[i], dp[j]+1);\n        *a = max(*a, dp[i]);\n    }\n\n    memset(dp, 0, sizeof dp);\n    for(int i=n; i&gt;=1; i--){\n        dp[i]=1;\n        for(int j=n; j&gt;i; j--)\n            if( a[i] &lt; a[j] )\n                dp[i] = max(dp[i], dp[j]+1);\n        *a = max(*a, dp[i]);\n    }\n\n    cout&lt;&lt;*a&lt;&lt;\"\\n\";\n\n    return ;\n}\n\nint main(){\n    int T; cin&gt;&gt;T;\n    while(T--) solve();\n    return 0;\n}\n</code></pre> Luogu P1091 [NOIP2004 \u63d0\u9ad8\u7ec4] \u5408\u5531\u961f\u5f62 code C++<pre><code>#include &lt;stdio.h&gt;\n\nconst int N=110;\n\nint a[N], dp[N], dp2[N];\nint n;\n\nint main(){\n    scanf(\"%d\", &amp;n);\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", a+i);\n\n    // \u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\n    for(int i=1; i&lt;=n; i++){\n        dp[i]=1;\n        for(int j=1; j&lt;i; j++)\n            if(a[i]&gt;a[j]) dp[i] = dp[i] &gt; dp[j]+1 ? dp[i] : dp[j]+1;\n    }\n\n    // \u6700\u957f\u4e0b\u964d\u5b50\u5e8f\u5217\n    for(int i=n; i&gt;=1; i--){\n        dp2[i]=1;\n        for(int j=n; j&gt;i; j--)\n            if(a[i]&gt;a[j]) dp2[i] = dp2[i]&gt; dp2[j]+1 ? dp2[i] : dp2[j]+1;\n\n        *dp = *dp &gt; dp[i]+dp2[i]-1 ? *dp : dp[i]+dp2[i]-1;\n    }\n\n    printf(\"%d\", n-*dp);\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"src/algorithm/dp/subsequence/#lcs","title":"LCS \u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217","text":"<p>Longest Common Subsequence</p> LC 1143. \u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217 code C++<pre><code>class Solution {\npublic:\n    int longestCommonSubsequence(string a, string b) {\n        int A = a.size(), B = b.size();\n        a = \" \" + a, b = \" \" + b; \n        int dp[1010][1010]={0};\n        for(int i=1; i&lt;=A; i++)\n            for(int j=1; j&lt;=B; j++){\n                dp[i][j] = max(dp[i-1][j], dp[i][j-1]);\n                if(a[i] == b[j]) \n                    dp[i][j] = max(dp[i][j], dp[i-1][j-1]+1);\n            }\n        return dp[A][B];\n    }\n};\n</code></pre> Luogu P1439 \u3010\u6a21\u677f\u3011\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;map&gt;\nusing namespace std;\n\nconst int N=1e5+10;\n\nint a[N], dp[N], n, res=1;  // \u5f53\u524d\u6700\u957f\u5b50\u5e8f\u5217\u957f\u5ea6\u4e3a 1\nmap&lt;int, int&gt; hs;\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", a+i), hs[ a[i] ] = i;   // \u67d0\u67d0\u6570\u5b57\u5bf9\u5e94\u7b2c\u51e0\u4f4d\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", a+i), a[i] = hs[ a[i] ];// \u7ed9\u6362\u56de\u53bb\n\n    dp[1]=a[1]; // \u957f\u5ea6\u4e3a1\u7684\u5b50\u5e8f\u5217\uff0c\u7ed3\u5c3e\u662f\u7b2c\u4e00\u4e2a\u6570\n    for(int i=2; i&lt;=n; i++)\n        if(a[i]&gt;dp[res])    // \u5982\u679c \u4e0b\u4e2a\u6570 \u6bd4 \u7ed3\u5c3e\u5927\uff0c\u5b50\u5e8f\u5217\u957f\u5ea6\u589e\u52a0\n            dp[++res]=a[i];\n        else                // \u53cd\u4e4b\uff0c\u8fd9\u4e2a\u6570\u53ef\u4ee5\u66f4\u65b0\u66f4\u77ed\u7684\u5e8f\u5217\u7ed3\u5c3e\n            *lower_bound(dp+1, dp+1+res, a[i])=a[i];\n\n    cout&lt;&lt;res;\n    return 0;\n}\n</code></pre> Luogu P2516 [HAOI2010]\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217 code C++<pre><code>\n</code></pre> <p></p>"},{"location":"src/algorithm/dp/subsequence/#lcis","title":"LCIS \u6700\u957f\u516c\u5171\u4e0a\u5347\u5b50\u5e8f\u5217","text":"<p>Longest Common Increasing Subsequence</p> AcWing 272. \u6700\u957f\u516c\u5171\u4e0a\u5347\u5b50\u5e8f\u5217 code C++"},{"location":"src/algorithm/really/csp/","title":"CSP","text":""},{"location":"src/algorithm/really/csp/#2023","title":"2023","text":""},{"location":"src/algorithm/really/csp/#jt1","title":"JT1 \u5c0f\u82f9\u679c","text":"<p>Luogu P9748 [CSP-J 2023] \u5c0f\u82f9\u679c | \u89c6\u9891\u89e3\u6790</p> <p>\u9898\u76ee\u5927\u610f</p> <ol> <li> <p>\u7ed9\u5b9a \\(1,2,3,...,n-1,n\\)\uff0c\u603b\u5171 \\(n\\) \u4e2a\u6570\u3002</p> </li> <li> <p>\u4ece \u7b2c \\(1\\) \u4e2a\u6570 \u5f00\u59cb\uff0c\u6bcf\u9694 \\(2\\) \u4e2a\u6570\u53d6\u8d70\u4e00\u4e2a\uff0c\u5373\u53d6\u8d70 \\(1,4,7...\\)\uff08\u8bb0\u4e3a \\(1\\) \u5929\uff09\u3002</p> </li> <li> <p>\u5269\u4e0b\u7684\u6570\u4e3a \\(2,3,5,6...\\)\uff1b\u91cd\u590d\u4e0a\u8ff0\u64cd\u4f5c\uff0c\u76f4\u5230\u53d6\u8d70 \\(n\\)\u3002</p> </li> <li> <p>\u95ee\uff0c\u7b2c\u51e0\u5929\u4f1a\u53d6\u5b8c \\(n\\)\uff0c\u7b2c\u51e0\u5929\u4f1a\u53d6\u8d70 \\(n\\) \uff1f</p> </li> </ol> <p>\u89e3\u9898\u601d\u8def</p> <ol> <li> <p>\u56e0\u4e3a\u6bcf\u9694 \\(2\\) \u4e2a\u6570\u53d6\u8d70\u4e00\u4e2a\uff0c\u6211\u4eec\u4e0d\u59a8\u5c06\u5176 \\(3\\) \u4e2a\u4e00\u7ec4\u8fdb\u884c\u8003\u8651\u3002</p> <ol> <li> <p><code>1 2 3 | 4 5 6 | 7</code>\uff0c\u5f53 \\(n = 7 (n \\% 3 = 1)\\) \u65f6\uff0c\u5728\u7b2c \\(1\\) \u5929\u53d6\u8d70 \\(n\\)\uff0c\u53d6\u8d70 \\(\\lceil \\frac{n}{3} \\rceil = 3\\) \u4e2a\u6570\uff1b</p> <p><code>2 3 5 | 6</code>\uff0c\u7ee7\u7eed\u53d6\u6570\uff0c\u5728\u7b2c \\(2\\) \u5929\u53d6\u8d70 \\(\\lceil \\frac{n}{3} \\rceil = 2\\) \u4e2a\u6570\uff1b</p> <p><code>3 5</code>\uff0c\u7ee7\u7eed\u53d6\u6570\uff0c\u5728\u7b2c \\(3\\) \u5929\u53d6\u8d70 \\(\\lceil \\frac{n}{3} \\rceil = 2\\) \u4e2a\u6570\uff1b</p> <p><code>5</code>\uff0c\u7ee7\u7eed\u53d6\u6570\uff0c\u5728\u7b2c \\(4\\) \u5929\u53d6\u8d70\u6240\u6709\u7684\u6570\u3002</p> </li> <li> <p><code>1 2 3 | 4 5 6 | 7 8</code>\uff0c\u5f53 \\(n = 8 (n \\% 3 = 2)\\) \u65f6\uff0c\u7b2c \\(1\\) \u5929\u7ed3\u675f\uff0c\u53d6\u8d70 \\(\\lceil \\frac{n}{3} \\rceil = 3\\) \u4e2a\u6570\uff1b</p> <p><code>2 3 5 | 6 8</code>\uff0c\u6b64\u65f6 \\(n = 5 (n \\% 3 = 2)\\)\uff0c\u7b2c \\(2\\) \u5929\u7ed3\u675f\uff0c\u53d6\u8d70 \\(\\lceil \\frac{n}{3} \\rceil = 2\\) \u4e2a\u6570\uff1b</p> <p><code>3 5 8</code>\uff0c\u6b64\u65f6 \\(n = 3 (n \\% 3 = 0)\\)\uff0c\u7b2c \\(3\\) \u5929\u7ed3\u675f\uff0c\u53d6\u8d70 \\(\\lceil \\frac{n}{3} \\rceil = 1\\) \u4e2a\u6570\uff1b</p> <p><code>5 8</code>\uff0c\u6b64\u65f6 \\(n = 2 (n \\% 3 = 2)\\)\uff0c\u7b2c \\(4\\) \u5929\u7ed3\u675f\uff0c\u53d6\u8d70 \\(\\lceil \\frac{n}{3} \\rceil = 1\\) \u4e2a\u6570\uff1b</p> <p><code>8</code>\uff0c\u6b64\u65f6 \\(n = 1 (n \\% 3 = 1)\\)\uff0c\u5728\u7b2c \\(5\\) \u5929\u53d6\u8d70 \\(n\\)\uff0c\u53d6\u8d70\u6240\u6709\u7684\u6570\u3002</p> </li> <li> <p><code>1 2 3 | 4 5 6 | 7 8 9</code>\uff0c\u53ef\u4ee5\u7528\u4e0a\u8ff0\u76f8\u540c\u7684\u65b9\u6cd5\u5206\u6790\u3002</p> </li> </ol> </li> <li> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u91cd\u590d\u53d6\u6570\u7684\u8fc7\u7a0b\uff0c\u5f53\u7b2c\u4e00\u6b21 \\(n \\% 3 = 1\\)\uff0c\u5c31\u662f\u53d6\u8d70 \\(n\\) \u4e4b\u65f6\uff0c\u53d6\u8d70\u6240\u6709\u6570\u7684\u82b1\u8d39\u5c31\u662f\u4e0d\u65ad\u53d6\u8d70 \\(\\lceil \\frac{n}{3} \\rceil\\) \u4e2a\u6570\uff0c\u770b\u591a\u5c11\u6b21\u64cd\u4f5c\u540e \\(n\\) \u4e3a \\(0\\)\uff1b</p> </li> </ol> \u4ee3\u7801 C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint n, ans1, ans2;\n\nint main(){\n    cin &gt;&gt; n;\n    while(n){\n        ans1 ++;\n        if(n%3 == 1 &amp;&amp; !ans2) ans2 = ans1;\n        n -= (n+2)/3;\n    }\n    cout &lt;&lt; ans1 &lt;&lt; \" \" &lt;&lt; ans2;\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"src/algorithm/really/csp/#jt2","title":"JT2 \u516c\u8def","text":"<p>Luogu P9749 [CSP-J 2023] \u516c\u8def | \u89c6\u9891\u89e3\u6790</p> <ul> <li> <p>\u9898\u76ee\u5927\u610f</p> <ol> <li> <p>\u7ed9\u5b9a \\(n\\) \u4e2a\u7ad9\u70b9\uff0c\u7b2c \\(i\\) \u4e2a\u7ad9\u70b9\u5230\u7b2c \\(i+1\\) \u4e2a\u7ad9\u70b9\u95f4\u7684\u8ddd\u79bb\u4e3a \\(v[i]\\)\u3002</p> </li> <li> <p>\u7ad9\u70b9 \\(i\\) \u7684\u6cb9\u4ef7\u4e3a \\(a[i]\\)\uff0c\u521d\u59cb\u65f6\u6cb9\u7bb1\u4e3a\u7a7a\uff0c\u6cb9\u7bb1\u53ef\u4ee5\u88c5\u4efb\u610f\u591a\u7684\u6cb9\uff0c\\(1\\) \u5355\u4f4d\u6cb9\u53ef\u4ee5\u524d\u8fdb \\(d\\)\u3002</p> </li> <li> <p>\u95ee\uff0c\u4ece\u7ad9\u70b9 \\(1\\) \u5230\u7ad9\u70b9 \\(n\\) \u6700\u5c11\u9700\u8981\u82b1\u8d39\u591a\u5c11\u94b1\u52a0\u6cb9\uff1f</p> </li> </ol> </li> <li> <p>\u89e3\u9898\u601d\u8def</p> <ol> <li> <p>\u5bf9\u4e8e \\(i\\) \u7ad9\u70b9\u540e\u9762\u7684 \\(j\\) \u7ad9\u70b9\uff0c\u65e0\u5916\u4e4e\u4e09\u79cd\u60c5\u51b5\uff1a</p> <ol> <li> <p>\u6cb9\u4ef7\u5927\u4e8e \\(a[i]\\)\uff0c\u90a3\u4e48\u4e0d\u5982\u5728 \\(i\\) \u7ad9\u70b9\u52a0\u6cb9\uff1b</p> </li> <li> <p>\u6cb9\u4ef7\u7b49\u4e8e \\(a[i]\\)\uff0c\u90a3\u4e48\u5728\u54ea\u91cc\u52a0\u6cb9\u90fd\u4e00\u6837\uff1b</p> </li> <li> <p>\u6cb9\u4ef7\u5c0f\u4e8e \\(a[i]\\)\uff0c\u90a3\u4e48\u80af\u5b9a\u5728 \\(j\\) \u7ad9\u70b9\u52a0\u6cb9\u3002</p> </li> </ol> </li> <li> <p>\u56e0\u4e3a\u6700\u5f00\u59cb\u6cb9\u7bb1\u4e3a\u7a7a\uff0c\u5fc5\u987b\u5728 \\(1\\) \u7ad9\u70b9\u52a0\u6cb9\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u6761\u6cb9\u4ef7\u7684 \u4e0b\u964d\u5e8f\u5217\u3002</p> </li> <li> <p>\u6b64\u79cd\u8d2a\u5fc3\u65b9\u6cd5\u4e0d\u4f1a\u9677\u5165\u5c40\u90e8\u6700\u4f18\uff0c\u56e0\u4e3a\u4e3a\u4e86\u5230\u8fbe <code>j</code> \u7ad9\u70b9\uff0c\u5fc5\u987b\u5728 <code>i</code> \u7ad9\u70b9\u52a0\u8db3\u91cf\u7684\u6cb9\u3002</p> </li> </ol> </li> </ul> \u4ee3\u7801 C++<pre><code>#define fst first\n#define sed second\n#include &lt;iostream&gt;\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair&lt;LL, LL&gt; PII;\n\nconst int N = 1e5+10;\n\nLL v[N], a[N];\nLL n, d;\nLL ans;\n\nPII p[N];\nLL m;\n\nint main(){\n    cin &gt;&gt; n &gt;&gt; d;\n    for(int i=2; i&lt;=n; i++) cin &gt;&gt; v[i];    // v[i] = \u5230\u4e0a\u4e00\u4e2a\u7ad9\u70b9\u7684\u8ddd\u79bb\n    for(int i=1; i&lt;=n; i++) cin &gt;&gt; a[i];    // \u6cb9\u4ef7\n    a[n] = -1;  // \u6700\u540e\u4e00\u4e2a\u7ad9\u70b9\u80af\u5b9a\u4e0d\u9700\u8981\u52a0\u6cb9\uff0c\u4f46\u662f\u6211\u4eec\u5e0c\u671b\u80fd\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u7ad9\u70b9\n\n    p[++m] = {a[1], v[1]};\n    LL len = 0;\n    for(int i=2; i&lt;=n; i++){\n        len += v[i];\n        if(a[i] &lt; p[m].fst){    // \u51fa\u73b0\u4e86\u66f4\u4f18\u60e0\u7684\u6cb9\u4ef7\n            p[++m] = {a[i], len};\n            len = 0;\n        }\n    }\n\n    /*\n    for(int i=1; i&lt;=m; i++)\n        cout &lt;&lt; p[i].fst &lt;&lt; \" \" &lt;&lt; p[i].sed &lt;&lt; \"\\n\";\n    */\n\n    LL l = 0;   // \u4e0a\u6b21\u52a0\u6cb9\u5269\u4f59\u7684\u8ddd\u79bb\n    for(int i=1; i&lt;m; i++){\n        // \u52a0\u6cb9\u91cf = (\u8ddd\u79bb(p[i+1].sed) - l) / \u6d88\u8017(d)\n        // \u82b1\u8d39 = \u52a0\u6cb9\u91cf * p[i].fst \n        // \u591a\u4f59\u8ddd\u79bb = \u52a0\u6cb9\u91cf * d + l - \u8ddd\u79bb(p[i+1].sed)\n        LL addoil = (p[i+1].sed - l + d-1) / d;\n        ans += addoil * p[i].fst;\n        l = addoil * d + l - p[i+1].sed;\n    }\n\n    cout &lt;&lt; ans;\n\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"src/algorithm/really/csp/#jt3","title":"JT3 \u4e00\u5143\u4e8c\u6b21\u65b9\u7a0b","text":"<p>Luogu P9750 [CSP-J 2023] \u4e00\u5143\u4e8c\u6b21\u65b9\u7a0b | \u89c6\u9891\u89e3\u6790</p> <ul> <li> <p>\u9898\u76ee\u5927\u610f</p> <ol> <li>\u6a21\u62df</li> </ol> </li> <li> <p>\u89e3\u9898\u601d\u8def</p> <ol> <li>\u89c1\u4ee3\u7801</li> </ol> </li> </ul> \u4ee3\u7801 C++<pre><code>#define fst first\n#define sed second\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;cmath&gt;\nusing namespace std;\n\ntypedef pair&lt;int, int&gt; PII;\n\nint a, b, c, d;\n\nPII simple(int p, int q){   // \u7ea6\u5206\n    int pq = __gcd(abs(p), abs(q));\n    return {p/pq, q/pq};\n}\n\nvoid solve(){\n    cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;\n    d = b*b - 4*a*c;    // delta\n\n    if(d &lt; 0){          // 1. \u65e0\u89e3\n        printf(\"NO\\n\");\n    }else if(d == 0){   // 2. \u5355\u89e3 -b / 2a\n        PII res = simple(-b, 2*a);\n        if(a &lt; 0) res = {-res.fst, -res.sed};       // \u8d1f\u6570\u60c5\u51b5\n        if(res.sed == 1) printf(\"%d\\n\", res.fst);   // 2.1 \u5206\u6bcd\u4e3a 1\n        else printf(\"%d/%d\\n\", res.fst, res.sed);   // 2.2 \u5206\u6bcd\u4e0d\u4e3a 1\n    }else{              // 3. \u4e24\u89e3 -b(+-sqrt(d)) / 2a\n        if(int sd = sqrt(d); sd*sd == d){           // 3.1 sqrt(d) \u4e3a\u6574\u6570\n            PII res;\n            if(a&gt;0) res = simple(-b + sd, 2*a);     // \u786e\u5b9a\u8c01\u5728\u524d\u9762\n            else    res = simple(-b - sd, 2*a);\n            if(a &lt; 0) res = {-res.fst, -res.sed};       // \u8d1f\u6570\u60c5\u51b5\n            if(res.sed == 1) printf(\"%d\\n\", res.fst);   // 3.1.1 \u5206\u6bcd\u4e3a 1\n            else printf(\"%d/%d\\n\", res.fst, res.sed);   // 2.1.2 \u5206\u6bcd\u4e0d\u4e3a 1    \n        }else{                                      // 3.2 sqrt(d) \u4e0d\u4e3a\u6574\u6570\n            // \u6709\u7406\u6570\u90e8\u5206\u7ea6\u5206\n            PII res = simple(-b, 2*a);\n            if(a &lt; 0) res = {-res.fst, -res.sed};       // \u8d1f\u6570\u60c5\u51b5\n            // \u5904\u7406\u6709\u7406\u6570\u90e8\u5206 -b / 2a \n            if(res.fst != 0){\n                if(res.sed == 1) printf(\"%d+\", res.fst);\n                else printf(\"%d/%d+\", res.fst, res.sed);\n            }\n            // \u5904\u7406\u65e0\u7406\u6570\u90e8\u5206 sd / 2a\n            res = {1, abs(2*a)};\n            int t = 0;                  // \u5269\u4e0b\u7684\u65e0\u7406\u90e8\u5206\n            for(int r=sd; r&gt;=1; r--)    \n                if(d % (r*r) == 0) {    // \u627e\u5230\u4e00\u4e2a\u5e73\u65b9\u56e0\u5b50\uff0csqrt(27) = 3 sqrt(3)\n                    res.fst *= r;\n                    t = d / (r*r);\n                    break;\n                }\n            // \u7ea6\u5206\n            res = simple(res.fst, res.sed);\n\n            if(res.fst == res.sed) printf(\"sqrt(%d)\\n\", t);\n            else if(res.sed == 1)  printf(\"%d*sqrt(%d)\\n\", res.fst, t);\n            else if(res.fst == 1)  printf(\"sqrt(%d)/%d\\n\", t, res.sed);\n            else printf(\"%d*sqrt(%d)/%d\\n\", res.fst, t, res.sed);\n        }\n    }\n}\n\nint main(){\n    int T, M; cin &gt;&gt; T &gt;&gt; M; while(T--)\n    solve();\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"src/algorithm/really/csp/#jt4","title":"JT4","text":"<p>Luogu P9751 [CSP-J 2023] \u65c5\u6e38\u5df4\u58eb | \u89c6\u9891\u89e3\u6790 | \u63a8\u8350\u9605\u8bfb</p> <ul> <li> <p>\u9898\u76ee\u5927\u610f</p> <ol> <li>\u7ed9\u5b9a</li> </ol> </li> <li> <p>\u89e3\u9898\u601d\u8def</p> <ol> <li>\u5047\u8bbe</li> </ol> </li> </ul> \u4ee3\u7801 C++ <p></p>"},{"location":"src/algorithm/really/csp/#2022","title":"2022","text":""},{"location":"src/algorithm/really/csp/#jt1_1","title":"JT1 \u4e58\u65b9","text":"<p>Luogu P8813 [CSP-J 2022] \u4e58\u65b9 | \u89c6\u9891\u89e3\u6790</p> <ul> <li> <p>\u9898\u76ee\u5927\u610f</p> <ol> <li>\u8ba1\u7b97 \\(a^b\\) \u6b21\u65b9\u7684\u503c\uff0c\u5982\u679c\u7ed3\u679c\u5927\u4e8e \\(1e9\\)\uff0c\u5219\u8f93\u51fa \\(-1\\)\u3002</li> </ol> </li> <li> <p>\u89e3\u9898\u601d\u8def</p> <ol> <li> <p>\\(1\\) \u7684\u4efb\u610f\uff08\\(&gt;1\\)\uff09\u6b21\u65b9\u5747\u4e3a \\(1\\)\u3002</p> </li> <li> <p>\u56e0\u4e3a \\(\\sqrt{a} * \\sqrt{b} = \\sqrt{a * b}\\)\u3002</p> </li> <li> <p>\u53ef\u4ee5\u5728\u7d2f\u4e58\u7684\u65f6\u5019\uff0c\u5224\u65ad \\(\\sqrt{a^{b'}} * \\sqrt{a}\\) \u662f\u5426\u5927\u4e8e \\(\\sqrt{1e9}\\)\u3002</p> </li> </ol> </li> </ul> \u4ee3\u7801 C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cmath&gt;\nusing namespace std;\n\nconst int N = 1e5+10;\n\nint a, b;\n\nint main(){\n    cin &gt;&gt; a &gt;&gt; b;\n    if(a == 1){\n        cout &lt;&lt; 1;\n        return 0;\n    }\n\n    int res = a;\n    for(int _=2; _&lt;=b; _++){\n        // sqrt(a) * sqrt(b) = sqrt(a*b)\n        if(int(sqrt(res) * sqrt(a)) &gt; int(sqrt(1e9))){\n            cout &lt;&lt; \"-1\";\n            return 0;\n        }\n        res *= a;\n    }\n\n    cout &lt;&lt; res;\n\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"src/algorithm/really/csp/#jt2_1","title":"JT2 \u89e3\u5bc6","text":"<p>Luogu P8814 [CSP-J 2022] \u89e3\u5bc6 | \u89c6\u9891\u89e3\u6790</p> <ul> <li> <p>\u9898\u76ee\u5927\u610f</p> <ol> <li> <p>\u7ed9\u5b9a \\(n, e, d\\)\uff0c\u6c42 \\(p, q\\)\uff0c\u6ee1\u8db3\uff1a</p> <ul> <li> <p>\\(n = p * q\\)\uff1b</p> </li> <li> <p>\\(e * d = (p-1)*(q-1) + 1\\)\u3002</p> </li> </ul> </li> </ol> </li> <li> <p>\u89e3\u9898\u601d\u8def</p> <ol> <li> <p>\u5c55\u5f00 \\(e * d = p * q - p - q + 2\\)</p> <p>\u79fb\u9879 \\(p + q = p * q - e * d + 2\\)</p> </li> <li> <p>\u4ee4 \\(p + q = m\\)\uff0c\u56e0\u4e3a \\(p = \\frac{n}{q}\\)</p> <p>\u66ff\u6362 \\(\\frac{n}{q} + q = m\\)</p> <p>\u4ee3\u5165 \\(q^2 - m * q + n = 0\\)</p> </li> <li> <p>\u901a\u8fc7\u6c42\u6839\u516c\u5f0f\u5373\u53ef\u6c42\u51fa \\(q\\)\u3002</p> </li> </ol> </li> </ul> \u4ee3\u7801 C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cmath&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nvoid solve(){\n    LL n, d, e, m, p, q;\n    cin &gt;&gt; n &gt;&gt; d &gt;&gt; e;\n    m = n - e * d + 2;\n    // a = 1, b = -m, c = n\n    if(LL delta = m*m-4*n; delta &lt; 0){\n        puts(\"NO\");\n    } else {\n        // -b +- sqrt(delta) / 2a\n        p = (m - sqrt(delta)) / 2;\n        q = n / p;\n        if(p+q == m &amp;&amp; p*q == n){\n            cout &lt;&lt; p &lt;&lt; \" \" &lt;&lt; q &lt;&lt; endl;\n            return ;\n        }\n        puts(\"NO\");\n    }\n}\n\nint main(){\n    int T; cin &gt;&gt; T; while(T--)\n    solve();\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"src/algorithm/really/csp/#jt4_1","title":"JT4 \u4e0a\u5347\u70b9\u5217","text":"<p>Luogu P8816 [CSP-J 2022] \u4e0a\u5347\u70b9\u5217 | \u89c6\u9891\u89e3\u6790</p> <ul> <li> <p>\u9898\u76ee\u5927\u610f</p> <ol> <li> <p>\u7ed9\u5b9a \\(n\\) \u4e2a\u70b9\uff0c\u8fd8\u53ef\u4ee5\u518d\u6dfb\u52a0 \\(k\\) \u4e2a\u70b9\uff0c\u627e\u5230\u4e00\u4e2a\u70b9\u5217\uff0c\u70b9\u5217\u4e2d\u4efb\u610f\u76f8\u90bb\u4e24\u4e2a\u70b9\u6ee1\u8db3\uff1a</p> <ul> <li> <p>\\(\\{x_i + 1,y_i\\} = \\{x_{i+1},y_{i+1}\\}\\)</p> </li> <li> <p>\u6216 \\(\\{x_i,y_i + 1\\} = \\{x_{i+1},y_{i+1}\\}\\)</p> </li> </ul> </li> </ol> </li> <li> <p>\u89e3\u9898\u601d\u8def</p> <ol> <li> <p>\u56e0\u4e3a \\(n &lt;= 500\\) \u7684\u8303\u56f4\u5f88\u5c0f\uff0c\\(n^3\\) \u7684\u590d\u6742\u5ea6\u4e5f\u53ef\u4ee5\u63a5\u53d7\uff0c\u4e0d\u59a8\u5c1d\u8bd5\u4e00\u4e0b\u66b4\u529b\u505a\u6cd5\u3002</p> </li> <li> <p>\u6211\u4eec\u8ba1\u7b97\u51fa\u6240\u6709\u5408\u6cd5\u70b9\u5bf9\uff0c\u5373 \\(\\{x_i,y_i\\} &lt;= \\{x_j, y_j\\}\\)\uff0c\\(i\\) \u70b9\u5219\u53ef\u4ee5\u5230\u8fbe \\(j\\) \u70b9\uff0c\u8ba1\u7b97\u4e24\u70b9\u95f4\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\uff0c\u5982\u679c\u4e0d\u80fd\u5230\u8fbe\u5219\u8bbe\u7f6e\u4e3a\u6781\u5927\u503c\u3002</p> <ul> <li>\u6ce8\u610f\uff0c\u8ba1\u7b97\u7684\u8ddd\u79bb\u9700\u8981 \\(-1\\)\uff0c\u56e0\u4e3a\u76f8\u90bb\u4e24\u4e2a\u70b9\u65e0\u9700\u52a0\u70b9\u3002</li> </ul> </li> <li> <p>\u518d\u901a\u8fc7 \\(Floyd\\) \u505a\u4e00\u904d\u677e\u5f1b\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5f97\u5230\u5408\u6cd5\u70b9\u5bf9\u7684\u6700\u77ed\u8ddd\u79bb\uff08\u5728\u6ca1\u52a0\u70b9\u7684\u60c5\u51b5\u4e0b\uff09\u3002</p> </li> <li> <p>\u904d\u5386\u6240\u6709\u7684\u70b9\u5bf9\uff1a</p> <ul> <li> <p>\\(i\\) \u5230 \\(j\\) \u9700\u8981\u52a0\u70b9\u7684\u6570\u91cf \\(=\\) \u66fc\u54c8\u987f\u8ddd\u79bb \\(-\\) \u5df2\u6709\u70b9\u7684\u8ddd\u79bb\uff1b</p> </li> <li> <p>\u6700\u957f\u4e0a\u5347\u70b9\u5217 \\(=\\) \u66fc\u54c8\u987f\u8ddd\u79bb \\(+\\) \u8fd8\u672a\u4f7f\u7528\u7684\u52a0\u70b9\u6570\u91cf\u3002</p> </li> </ul> </li> </ol> </li> </ul> \u4ee3\u7801 C++<pre><code>#define fst first\n#define sed second\n#include &lt;iostream&gt;\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair&lt;LL, LL&gt; PII;\n\nconst LL inf = 1e18;\nconst int N = 510;\n\nPII a[N];       // \u6240\u6709\u7684\u70b9\nLL dis[N][N];   // \u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\nLL n, k;\n\nLL manhattan(int i, int j){\n    return abs(a[i].fst - a[j].fst) + abs(a[i].sed - a[j].sed);\n}\n\nint main(){\n    cin &gt;&gt; n &gt;&gt; k;\n    for(int i = 1; i &lt;= n; i++) cin &gt;&gt; a[i].fst &gt;&gt; a[i].sed;\n\n    // \u5efa\u56fe\n    for(int i=1; i&lt;=n; i++)\n        for(int j=1; j&lt;=n; j++)\n            if(i != j &amp;&amp; a[i].fst &lt;= a[j].fst &amp;&amp; a[i].sed &lt;= a[j].sed)\n                dis[i][j] = manhattan(i, j) - 1;// \u5982\u679c i -&gt; j \u662f\u5408\u6cd5\u7684\uff0c\u90a3\u4e48\u5c31\u8ba1\u7b97\u8ddd\u79bb\n            else                                // -1 \u662f\u56e0\u4e3a\u76f8\u90bb\u7684\u60c5\u51b5\u4e0b\u65e0\u9700\u52a0\u70b9\n                dis[i][j] = inf;                // \u5426\u5219\u5c31\u662f\u65e0\u7a77\u5927\n\n    // Floyd \u6c42\u6700\u77ed\u8def\n    for(int k=1; k&lt;=n; k++)\n    for(int i=1; i&lt;=n; i++)\n    for(int j=1; j&lt;=n; j++)\n        dis[i][j] = min(dis[i][j], dis[i][k] + dis[k][j]);\n        // \u677e\u5f1b\u64cd\u4f5c\n\n    // \u8f93\u51fa\u7b54\u6848\n    LL ans = 1;\n    for(int i=1; i&lt;=n; i++)\n        for(int j=1; j&lt;=n; j++)\n            if(dis[i][j] &lt;= k)  // i -&gt; j \u7684\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8e k\uff0c\u53ef\u4ee5\u52a0\u70b9\n                ans = max(ans, manhattan(i, j) - dis[i][j] + k + 1);\n                // \u4e24\u70b9\u4e4b\u95f4\u7684\u66fc\u54c8\u987f\u8ddd\u79bb - \u5df2\u6709\u70b9 + \u53ef\u52a0\u70b9 + 1\n\n    cout &lt;&lt; ans;\n\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"src/algorithm/really/csp/#2021","title":"2021","text":""},{"location":"src/algorithm/really/csp/#jt1_2","title":"JT1 \u5206\u7cd6\u679c","text":"<p>Luogu P7909 [CSP-J 2021] \u5206\u7cd6\u679c | \u89c6\u9891\u89e3\u6790</p> <ul> <li> <p>\u9898\u76ee\u5927\u610f</p> <ol> <li> <p>\\(n\\) \u4e2a\u5c0f\u670b\u53cb\uff0c\u5e73\u5206 \\(L-R\\) \u5757\u7cd6\u679c\uff0c\u5e73\u5206\u540e\u53ef\u80fd\u5b58\u5728\u591a\u4f59\u7684\u7cd6\u679c\u3002</p> </li> <li> <p>\u95ee\uff0c\u591a\u4f59\u7684\u7cd6\u679c\u5728\u7cd6\u679c\u6570\u91cf\u4e3a\u591a\u5c11\u65f6\u8fbe\u5230\u6700\u5927\uff1f</p> </li> </ol> </li> <li> <p>\u89e3\u9898\u601d\u8def</p> <ol> <li> <p>\u5047\u8bbe\u6709 \\(3\\) \u4e2a\u5c0f\u670b\u53cb\uff1a</p> <ul> <li> <p>\u82e5\u6bcf\u4eba\u5206 \\(1\\) \u5757\uff0c\u7cd6\u679c\u4e3a \\(3 - 5\\) \u5757\uff1b</p> </li> <li> <p>\u82e5\u6bcf\u4eba\u5206 \\(2\\) \u5757\uff0c\u7cd6\u679c\u4e3a \\(6 - 8\\) \u5757\uff1b</p> </li> </ul> </li> <li> <p>\u663e\u7136\uff0c\u5728\u4e0a\u8ff0\u7684\u5b8c\u7f8e\u60c5\u51b5\u4e0b \\(L/n == R/n\\)\uff0c\u80fd\u591f\u62ff\u5230\u7684\u6700\u5927\u7cd6\u679c\u6570\u91cf\u662f \\(R/n\\)\u3002</p> </li> <li> <p>\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u5219\u80af\u5b9a\u4e3a \\(n-1\\) \u5757\u3002</p> </li> </ol> </li> </ul> \u4ee3\u7801 C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nLL n, l, r;\n\nint main(){\n    cin &gt;&gt; n &gt;&gt; l &gt;&gt; r;\n\n    if(l/n == r/n) cout &lt;&lt; r%n; // \u5982\u679c\u5728\u540c\u4e00\u4e2a\u533a\u95f4\n    else cout&lt;&lt;n-1;\n\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"src/algorithm/really/csp/#2017","title":"2017","text":""},{"location":"src/algorithm/really/csp/#jt1_3","title":"JT1 \u6210\u7ee9","text":"<p>Luogu P3954 [NOIP2017 \u666e\u53ca\u7ec4] \u6210\u7ee9 | \u89c6\u9891\u89e3\u6790</p> \u4ee3\u7801 C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main(){\n    int a, b, c;\n    cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;\n    cout &lt;&lt; a*0.2 + b*0.3 + c*0.5;\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"src/algorithm/really/csp/#jt2_2","title":"JT2 \u56fe\u4e66\u7ba1\u7406\u5458","text":"<p>Luogu P3955 [NOIP2017 \u666e\u53ca\u7ec4] \u56fe\u4e66\u7ba1\u7406\u5458 | \u89c6\u9891\u89e3\u6790</p> <ul> <li> <p>\u9898\u76ee\u5927\u610f</p> <ol> <li> <p>\u7ed9\u5b9a \\(n\\) \u672c\u4e66\u7684\u7f16\u53f7\uff0c\\(m\\) \u4e2a\u7f16\u53f7\u7684\u540e\u7f00\uff1b</p> </li> <li> <p>\u95ee\uff0c\u6b64\u540e\u7f00\u80fd\u5339\u914d\u7684\u6700\u5c0f\u7f16\u53f7\u662f\u591a\u5c11\uff1f\u65e0\u6cd5\u5339\u914d\u5219\u8f93\u51fa \\(-1\\)\u3002</p> </li> </ol> </li> <li> <p>\u89e3\u9898\u601d\u8def</p> <ol> <li> <p>\u5bf9\u6240\u6709\u4e66\u7684\u7f16\u53f7\u8fdb\u884c\u6392\u5e8f\u3002</p> </li> <li> <p>\u62ff\u5230\u4e00\u4e2a\u540e\u7f00\uff0c\u987a\u5e8f\u5bf9\u6240\u6709\u7f16\u53f7\u7684\u540e\u7f00\u5339\u914d\uff0c\u5339\u914d\u4e0a\u5219\u8f93\u51fa\u5373\u53ef\u3002</p> </li> </ol> </li> </ul> \u4ee3\u7801 C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nconst int N = 1010;\nint a[N];\nint n, m;\n\nint main(){\n    cin &gt;&gt; n &gt;&gt; m;\n    for(int i=1; i&lt;=n; i++) cin &gt;&gt; a[i];\n    sort(a+1, a+1+n);\n\n    while(m--){\n        int l, p;\n        cin &gt;&gt; l &gt;&gt; p;\n\n        bool flg = false;\n        for(int i=1; i&lt;=n; i++){\n            string s = to_string(a[i]);\n            if(s.length() &lt; l) continue;\n            if(s.substr(s.size()-l) == to_string(p)){\n                cout &lt;&lt; a[i] &lt;&lt; \"\\n\";\n                flg = true;\n                break;\n            }\n        }\n\n        if(flg == false)\n            puts(\"-1\");\n    }\n\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"src/algorithm/really/csp/#jt3_1","title":"JT3 \u68cb\u76d8","text":"<p>Luogu P3956 [NOIP2017 \u666e\u53ca\u7ec4] \u68cb\u76d8 | \u89c6\u9891\u89e3\u6790</p> <ul> <li> <p>\u9898\u76ee\u5927\u610f</p> <ol> <li>\u6c42\u6700\u77ed\u8def\u3002</li> </ol> </li> <li> <p>\u89e3\u9898\u601d\u8def</p> <ol> <li> <p>\u6bcf\u6b21\u5408\u6cd5\u8f6c\u79fb\u6709\u4e09\u79cd\u60c5\u51b5\uff1a</p> <ul> <li> <p>\u4e0b\u4e00\u4e2a\u70b9\u4e3a\u6709\u8272\uff0c\u4e24\u70b9\u989c\u8272\u76f8\u540c\uff08\u4e0d\u7ba1\u662f\u53d8\u8272\u76f8\u540c\u8fd8\u662f\u672c\u5c31\u76f8\u540c\uff09\uff1b\\(0\\) \u82b1\u8d39\u8fc7\u53bb\uff1b</p> </li> <li> <p>\u4e0b\u4e00\u4e2a\u70b9\u4e3a\u6709\u8272\uff0c\u4e24\u70b9\u989c\u8272\u4e0d\u540c\uff08\u4e0d\u7ba1\u662f\u53d8\u8272\u76f8\u540c\u8fd8\u662f\u672c\u5c31\u76f8\u540c\uff09\uff1b\\(1\\) \u82b1\u8d39\u8fc7\u53bb\u3002</p> </li> <li> <p>\u4e0b\u4e00\u4e2a\u70b9\u4e3a\u65e0\u8272\uff0c\u5f53\u524d\u70b9\u4e0d\u662f\u53d8\u8272\u800c\u6765\u7684\uff1b\\(2\\) \u82b1\u8d39\u8fc7\u53bb\uff1b</p> </li> </ul> </li> </ol> </li> </ul> \u4ee3\u7801 C++<pre><code>#define fst first\n#define sed second\n#include &lt;iostream&gt;\n#include &lt;queue&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\ntypedef pair&lt;int, int&gt; PII;\n\nconst int N=110;\nconst int dxy[4][2]={ {-1,0},{1,0},{0,-1},{0,1} };\n\nint g[N][N];    // \u5730\u56fe \u7ea2\u82721 \u9ec4\u82722 \u65e0\u82720\nint n, m;\n\nint dis[N][N];  // \u6700\u77ed\u8def\n\nint bfs(PII s, PII e){ \n    memset(dis, 0x3f, sizeof dis);\n\n    queue&lt;pair&lt;PII, PII&gt;&gt; q;    // \u7b2c\u4e8c\u4e2a\u53c2\u6570 { uxy\u53d8\u7684\u989c\u8272(\u6ca1\u53d8\u4e3a0), \u9b54\u6cd5\u7684\u82b1\u9500 }\n    dis[s.fst][s.sed] = 0;  \n    q.push({s, {0, 0}});\n\n    while(q.size()){\n        auto u = q.front();\n        q.pop();\n\n        int ux = u.fst.fst;\n        int uy = u.fst.sed;\n\n        for(int i=0; i&lt;4; i++){ // \u53bb\u56db\u4e2a\u65b9\u5411\n            int nx = ux + dxy[i][0];\n            int ny = uy + dxy[i][1];\n\n            if(nx&lt;1 || ny&lt;1 || nx&gt;n || ny&gt;n) continue;\n\n            // \u4e0b\u4e00\u4e2a\u70b9\u4e3a\u65e0\u8272\uff0c\u4e14\u672c\u70b9\u989c\u8272\u4e0d\u4e3a 0\n            if( g[nx][ny] == 0 &amp;&amp; g[ux][uy] ){\n                if( dis[nx][ny] &gt; u.sed.sed + 2){\n                    dis[nx][ny] = u.sed.sed + 2;\n                    q.push({ {nx,ny}, {g[ux][uy], dis[nx][ny]} }); // \u8fd9\u662f\u4e2a\u53d8\u8272\u73a9\u610f\u513f\n                }\n            }\n            // \u4e0b\u4e00\u4e2a\u70b9\u4e3a\u6709\u8272\uff0c\u4e24\u70b9\u989c\u8272\u76f8\u540c\uff08\u672c\u5c31\u76f8\u540c\uff0c\u6216\u8005\u53d8\u8272\u540e\u76f8\u540c\uff09\n            else if(g[nx][ny] &amp;&amp; (g[nx][ny] == g[ux][uy] || g[nx][ny] == u.sed.fst)){   // \u76f8\u540c, \u53ef\u4ee5\u901a\u8fc7\u53d8\u7684\u53bb\n                if( dis[nx][ny] &gt; u.sed.sed){\n                    dis[nx][ny] = u.sed.sed;\n                    q.push({ {nx,ny}, {0, dis[nx][ny]} });\n                }\n            }\n            // \u4e0b\u4e00\u4e2a\u70b9\u4e3a\u6709\u8272\uff0c\u4e24\u70b9\u989c\u8272\u4e0d\u540c\uff08\u672c\u5c31\u4e0d\u540c\uff0c\u6216\u8005\u53d8\u8272\u540e\u4e0d\u540c\uff09\n            else if(g[nx][ny] &amp;&amp; ((g[ux][uy] &amp;&amp; g[nx][ny] != g[ux][uy]) || (u.sed.fst &amp;&amp; g[nx][ny] != u.sed.fst)))\n                if( dis[nx][ny] &gt; u.sed.sed + 1){\n                    dis[nx][ny] = u.sed.sed + 1;\n                    q.push({ {nx,ny}, {0, dis[nx][ny]} });\n                }\n\n        }    \n    }\n\n    return dis[e.fst][e.sed] != 0x3f3f3f3f ? dis[e.fst][e.sed] : -1;\n}\n\nint main(){\n    cin &gt;&gt; n &gt;&gt; m;\n    for(int i=1; i&lt;=m; i++){\n        int x, y, z; scanf(\"%d%d%d\", &amp;x, &amp;y, &amp;z);\n        g[x][y] = z+1;\n    }\n    cout &lt;&lt; bfs({1,1}, {n,n});\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"src/algorithm/really/csp/#2016","title":"2016","text":""},{"location":"src/algorithm/really/csp/#jt1_4","title":"JT1 \u4e70\u94c5\u7b14","text":"<p>Luogu P1909 [NOIP2016 \u666e\u53ca\u7ec4] \u4e70\u94c5\u7b14 | \u89c6\u9891\u89e3\u6790</p> <ul> <li> <p>\u9898\u76ee\u5927\u610f</p> <ol> <li>\u7ed9\u5b9a</li> </ol> </li> <li> <p>\u89e3\u9898\u601d\u8def</p> <ol> <li>\u5047\u8bbe</li> </ol> </li> </ul> \u4ee3\u7801 C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint n;\n\nint main(){\n    cin&gt;&gt;n;\n    int ans = 0x3f3f3f3f;\n    for(int i=1; i&lt;=3; i++){\n        int a, b; cin&gt;&gt;a&gt;&gt;b;\n        ans = min(ans,  b * ((n+a-1)/a) );\n    }\n    cout&lt;&lt;ans;\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"src/algorithm/really/csp/#jt2_3","title":"JT2 \u56de\u6587\u65e5\u671f","text":"<p>Luogu P2010 [NOIP2016 \u666e\u53ca\u7ec4] \u56de\u6587\u65e5\u671f | \u89c6\u9891\u89e3\u6790</p> <ul> <li> <p>\u9898\u76ee\u5927\u610f</p> <ol> <li> <p>\u7ed9\u5b9a\u4e00\u4e2a\u8d77\u59cb\u65e5\u671f\u548c\u4e00\u4e2a\u7ec8\u6b62\u65e5\u671f\uff0c\u6c42\u8fd9\u4e24\u4e2a\u65e5\u671f\u4e4b\u95f4\u6709\u591a\u5c11\u4e2a\u56de\u6587\u65e5\u671f\uff0c\u5373\u6ee1\u8db3\uff1a</p> <ol> <li> <p><code>YYYYMMDD</code> \u662f\u5408\u6cd5\u7684\u65e5\u671f\uff1b</p> </li> <li> <p><code>YYYYMMDD</code> \u662f\u56de\u6587\u3002</p> </li> </ol> </li> </ol> </li> <li> <p>\u89e3\u9898\u601d\u8def</p> <ol> <li> <p>\u5bf9\u4e8e\u56de\u6587\u7c7b\u578b\u7684\u9898\u76ee\uff0c\u6211\u4eec\u9996\u5148\u8003\u8651\u5217\u4e3e\u51fa\u6240\u6709\u7684\u56de\u6587\uff0c\u7136\u540e\u518d\u5224\u65ad\u662f\u5426\u5408\u6cd5\uff0c\u800c\u4e0d\u662f\u5217\u4e3e\u51fa\u6240\u6709\u7684\u5408\u6cd5\u65e5\u671f\uff0c\u7136\u540e\u518d\u5224\u65ad\u662f\u5426\u56de\u6587\u3002</p> </li> <li> <p>\u901a\u8fc7 <code>YYYY</code> \u76f4\u63a5\u751f\u6210 <code>YYYYMMDD</code> \u7684\u56de\u6587</p> </li> <li> <p>\u5224\u65ad <code>YYYYMMDD</code> \u662f\u5426\u5408\u6cd5</p> </li> </ol> </li> </ul> \u4ee3\u7801 C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint a, b, ans;\n\nint months[13]={0,31,28,31,30,31,30,31,31,30,31,30,31};\nbool ck(int y, int m, int d){\n    if((y*1e4+m*1e2+d)&lt;a || (y*1e4+m*1e2+d)&gt;b) return 0;\n\n    months[2]=28;\n    if(y%400==0 || y%4==0 &amp;&amp; y%100!=0) months[2]=29;\n    if(m&lt;1 || m&gt;12) return 0;\n    if(d&lt;1 || d&gt;months[m]) return 0;\n    return 1;\n}\n\nint main(){\n    cin&gt;&gt;a&gt;&gt;b;\n\n    for(int i=a/10000; i&lt;=b/10000; i++)\n        if( ck(i, (i%10)*10+(i/10%10), (i/100%10)*10+(i/1000)) ) ans++;\n\n    cout&lt;&lt;ans;\n\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"src/algorithm/really/csp/#jt3_2","title":"JT3 \u6d77\u6e2f","text":"<p>Luogu P2058 [NOIP2016 \u666e\u53ca\u7ec4] \u6d77\u6e2f | \u89c6\u9891\u89e3\u6790</p> <ul> <li> <p>\u9898\u76ee\u5927\u610f</p> <ol> <li> <p>\u7ed9\u5b9a \\(n\\) \u6761\u4fe1\u606f\uff0c\u6bcf\u6761\u4fe1\u606f \\(t, k, x_1, x_2, ... , x_k\\)\uff1a </p> <ul> <li>\\(t\\) \u65f6\u95f4\uff0c\\(k\\) \u4e2a\u4eba\uff0c\u7b2c \\(i\\) \u4e2a\u4eba\u7684\u56fd\u7c4d\u4e3a \\(x_i\\)\u3002</li> </ul> </li> <li> <p>\u95ee\uff0c\u5bf9\u4e8e\u6bcf\u6761\u4fe1\u606f\uff0c\u5728 \\((vt, t+86400]\\) \u65f6\u95f4\u5185\uff0c\u6709\u591a\u5c11\u79cd\u56fd\u7c4d\uff1f</p> </li> </ol> </li> <li> <p>\u89e3\u9898\u601d\u8def</p> <ol> <li> <p>\u5c06\u6240\u6709\u7684\u4fe1\u606f\u4fdd\u5b58\u4e0b\u6765\uff0c\u6309\u7167\u65f6\u95f4\u6392\u5e8f\uff08\u4e5f\u5c31\u662f\u9898\u76ee\u7ed9\u7684\u987a\u5e8f\uff09\uff1b</p> </li> <li> <p>\u5bf9\u4e8e\u6bcf\u6761\u4fe1\u606f\uff0c\u8be5\u6761\u8239\u4e0a\u7684\u4eba\u7684\u56fd\u7c4d\u80af\u5b9a\u9700\u8981\u8003\u8651\uff1b</p> </li> <li> <p>\u5bf9\u4e8e\u6bcf\u6761\u4fe1\u606f\uff0c\u56de\u671b\u8fc7\u53bb\uff0c\u662f\u5426\u6709\u8239\u8d85\u8fc7\u4e86\u65f6\u95f4\u8303\u56f4\uff1a</p> <ul> <li> <p>\u6ca1\u6709\u8d85\u8fc7\uff0c\u90a3\u4e48\u5c31\u4e0d\u7528\u8003\u8651\uff1b</p> </li> <li> <p>\u8d85\u8fc7\u4e86\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u5c06\u8fd9\u6761\u8239\u4e0a\u7684\u4eba\u5e72\u6389\u3002</p> </li> </ul> </li> </ol> </li> </ul> \u4ee3\u7801 C++<pre><code>#define pb push_back\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;queue&gt;\n#include &lt;map&gt;\nusing namespace std;\n\nconst int N = 1e5+10;\n\nvector&lt;int&gt; a[N];   // \u6bcf\u6761\u8239\u4e0a\u4eba\u7684\u56fd\u7c4d\nint T[N];           // \u6bcf\u6761\u8239\u5230\u8fbe\u7684\u65f6\u95f4\nint n;\nmap&lt;int, int&gt; ans;\n\nint main(){\n    int n; cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++){\n        int m;\n        cin&gt;&gt;T[i]&gt;&gt;m;\n        for(int j=1; j&lt;=m; j++){\n            int x; cin&gt;&gt;x;\n            a[i].pb(x);\n        }\n    }\n\n    queue&lt;int&gt; q;               // \u6bcf\u6761\u4fe1\u606f\n    for(int i=1; i&lt;=n; i++){    // \u904d\u5386\u6bcf\u6761\u4fe1\u606f\n        q.push(i);              // \u5bf9\u4e8e\u7b2c i \u6761\u8239\uff0c\u80af\u5b9a\u8981\u8003\u8651\n        for(auto &amp;j: a[i]) ans[j]++;    // \u56fd\u7c4d\u6570\u91cf\n\n        // \u5982\u679c\u961f\u5934\u7684\u8239\uff0c\u4e0d\u5728\u65f6\u95f4\u8303\u56f4\u5185\u5185\uff0c\u5e72\u6389\n        while( T[i] - T[q.front()] &gt;= 86400){\n            for(auto &amp;k: a[q.front()]){\n                ans[k]--;\n                if(ans[k] == 0) ans.erase(k);\n            }\n            q.pop();\n        }\n        cout&lt;&lt;ans.size()&lt;&lt;\"\\n\";\n    }\n\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"src/algorithm/search/DFS/","title":"\u6df1\u641c","text":""},{"location":"src/algorithm/search/DFS/#template","title":"Template","text":""},{"location":"src/algorithm/search/DFS/#_1","title":"\u7ec4\u5408","text":"<ul> <li> <p>\u4ece \\(n\\) \u4e2a\u5143\u7d20\u4e2d\u9009\u51fa \\(k\\) \u4e2a\uff0c\u4e0d\u8003\u8651\u987a\u5e8f</p> <p>\\(\\{1, 2\\}\\) \u4e0e \\(\\{2, 1\\}\\) \u89c6\u4e3a \u540c\u4e00\u7ec4\u5408 </p> </li> <li> <p>\u6570\u91cf\uff1a\\(C_{n}^{k} = \\frac{n!}{k! (n-k)!} = C_{n}^{n-k}\\)</p> </li> </ul>  dfs \u6c42\u7ec4\u5408  C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint n, k;  // \u4ece n \u4e2a\u9009 k \u4e2a\nchar a[9];\nbool st[9];\n\nvoid dfs(int u, int m) {  // \u9009\u5230 u \u4e2a\uff0c\u9009\u4e86 m \u4e2a\n    // \u7b54\u6848\n    if (m == k) {\n        for (int i = 1; i &lt;= n; i++)\n            if (st[i] == 1)\n                cout &lt;&lt; a[i] &lt;&lt; \" \";\n        cout &lt;&lt; \"\\n\";\n        return;\n    }\n\n    // \u8fb9\u754c\n    if (u &gt; n) {\n        return;\n    }\n\n    // \u60c5\u51b5 1\uff0c\u9009\u62e9\n    st[u] = 1;\n    dfs(u + 1, m + 1);\n\n    // \u60c5\u51b5 2, \u4e0d\u9009\u62e9\n    st[u] = 0;\n    dfs(u + 1, m);\n}\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; k;\n    for (int i = 1; i &lt;= n; i++)\n        a[i] = 'a' + i - 1;\n    dfs(1, 0);\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"src/algorithm/search/DFS/#_2","title":"\u6392\u5217","text":"<ul> <li> <p>\u4ece \\(n\\) \u4e2a\u5143\u7d20\u4e2d\u9009\u51fa \\(k\\) \u4e2a\uff0c\u5e76\u8003\u8651\u987a\u5e8f</p> <p>\\(\\{1, 2\\}\\) \u4e0e \\(\\{2, 1\\}\\) \u89c6\u4e3a \u4e0d\u540c\u6392\u5e8f</p> </li> <li> <p>\u6570\u91cf\uff1a\\(A_{n}^{k} = \\frac{n!}{(n-k)!}\\)</p> </li> </ul>  dfs \u6c42\u6392\u5217  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nint n, k;  // \u4ece n \u4e2a\u9009 k \u4e2a\u8fdb\u884c\u6392\u5e8f\nchar a[9];\nbool st[9];\n\nvector&lt;char&gt; ans;\n\nvoid dfs() {\n    // \u7b54\u6848\n    if (ans.size() == k) {\n        for (auto i : ans)\n            cout &lt;&lt; i &lt;&lt; \" \";\n        cout &lt;&lt; \"\\n\";\n        return;\n    }\n\n    // \u8fb9\u754c\n    if (ans.size() &gt; k)\n        return;\n\n    // \u60c5\u51b5\n    for (int i = 1; i &lt;= n; i++)\n        if (st[i] == 0) {\n            st[i] = 1;\n            ans.push_back(a[i]);\n            dfs();\n\n            st[i] = 0;\n            ans.pop_back();\n        }\n}\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; k;\n    for (int i = 1; i &lt;= n; i++)\n        a[i] = 'a' + i - 1;\n    dfs();\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"src/algorithm/search/DFS/#_3","title":"\u5168\u6392\u5217","text":"<ul> <li> <p>\u4ece \\(n\\) \u4e2a\u5143\u7d20\u4e2d\u9009\u51fa \\(n\\) \u4e2a\uff0c\u5e76\u8003\u8651\u987a\u5e8f</p> <p>\\(\\{1, 2, 3\\}, \\{1, 3, 2\\}, \\{2, 1, 3\\}, \\{2, 3, 1\\}, \\{3, 1, 2\\}, \\{3, 2, 1\\}\\)</p> </li> <li> <p>\u6570\u91cf\uff1a\\(n!\\)</p> </li> </ul> dfs \u6c42\u5168\u6392\u5217 C++<pre><code>// \u540c\u4e0a\uff0c\u5c06 k \u6539\u4e3a n \u5c31\u53ef\u4ee5\u4e86\n</code></pre> next_permutaion C++<pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\nusing namespace std;\n\nint a[9], n;\n\nint main() {\n    cin &gt;&gt; n;\n    for (int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; a[i];\n    // next_permutaion \u4f1a\u751f\u6210\u4e0b\u4e00\u4e2a\u6392\u5217\n    // \u4e0b\u4e00\u4e2a\u6392\u5217\u662f\u5b57\u5178\u5e8f\u4e2d\u6bd4\u5f53\u524d\u6392\u5217\u5927\u7684\u4e0b\u4e00\u4e2a\u6392\u5217\n    // \u5982\u679c\u5f53\u524d\u6392\u5217\u662f\u6700\u540e\u4e00\u4e2a\u6392\u5217\uff0c\u5219\u8fd4\u56de false\n    do {\n        for (int i = 1; i &lt;= n; i++)\n            cout &lt;&lt; a[i] &lt;&lt; \" \";\n        cout &lt;&lt; endl;\n    } while (next_permutation(a + 1, a + n + 1));\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"src/algorithm/search/DFS/#_4","title":"\u6709\u653e\u56de\u7684\u91cd\u590d\u6392\u5217","text":"<ul> <li> <p>\u4ece \\(n\\) \u4e2a\u5143\u7d20\u4e2d\u9009\u51fa \\(k\\) \u4e2a\uff0c\u5e76\u8003\u8651\u987a\u5e8f\uff0c\u5e76\u5141\u8bb8\u91cd\u590d</p> <p>\\(\\{1, 1\\}, \\{1, 2\\}, \\{2, 1\\}, \\{2, 2\\}\\)</p> </li> <li> <p>\u6570\u91cf\uff1a\\(n^k\\)</p> </li> </ul> dfs \u6c42 k \u91cd\u96c6\u6392\u5217 C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nint n, k;  // \u4ece n \u4e2a\u9009 k \u4e2a\u8fdb\u884c\u53ef\u91cd\u590d\u6392\u5217\nchar a[9];\n\nvector&lt;char&gt; ans;\n\nvoid dfs() {\n    // \u7b54\u6848\n    if (ans.size() == k) {\n        for (auto i : ans)\n            cout &lt;&lt; i &lt;&lt; \" \";\n        cout &lt;&lt; \"\\n\";\n        return;\n    }\n\n    // \u8fb9\u754c\n    if (ans.size() &gt; k)\n        return;\n\n    // \u60c5\u51b5\n    for (int i = 1; i &lt;= n; i++) {\n        ans.push_back(a[i]);\n        dfs();\n        ans.pop_back();\n    }\n}\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; k;\n    for (int i = 1; i &lt;= n; i++)\n        a[i] = 'a' + i - 1;\n    dfs();\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"src/algorithm/search/DFS/#_5","title":"\u5982\u4f55\u8868\u793a\uff0c\u4ece\u4e0a\u4e00\u5c42\u5230\u4e0b\u4e00\u5c42\u7684\u591a\u6761\u8def\u5f84\uff1f","text":"AcWing 3502. \u4e0d\u540c\u8def\u5f84\u6570 code  &gt; `\u6bcf\u6b21\u53ef\u4ee5\u6cbf\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\u524d\u8fdb\u4e00\u6b65`\u610f\u5473\u7740\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9, \u6211\u4eec\u6709\u56db\u79cd\u9009\u62e9 &gt; \u5728\u4ee3\u7801\u4e2d, \u6211\u4eec\u5e94\u8be5\u5982\u4f55\u5b9e\u73b0, \u4ece `{x,y}` -&gt; `{x-1, y}` \u8fd9\u4e2a\u70b9\u7684\u64cd\u4f5c\u5462 &gt; \u559c\u95fb\u4e50\u89c1\u7684\u4e00\u79cd\u65b9\u5f0f\u5c31\u662f\u76f4\u63a5x-1, \u4f46\u5728\u6bd4\u8d5b\u4e2d, \u6211\u4eec\u5e38\u5e38\u901a\u8fc7\u4e00\u4e2a `dx[4], dy[4]` \u6570\u7ec4\u6765\u5b9e\u73b0 &gt; \u53ef\u4ee5\u6a21\u62df\u4e00\u4e0b `dx[4]={-1,0,1,0}, dy[4]={0,-1,0,1}` &gt; `nx = x + dx[0]` &gt; `ny = y + dy[0]`  &gt; \u6b64\u65f6, \u4e0a\u4e0b\u5de6\u53f3\u7684\u8f6c\u79fb\u5c31\u88ab\u6211\u4eec\u5199\u8fdb\u4e86\u5faa\u73af\u4e2d, \u5927\u5927\u51cf\u5c11\u4e86\u91cd\u590d\u4ee3\u7801\u91cf  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;set&gt;\nusing namespace std;\n\nconst int N=10;\n\nint dxy[4][2]={ {-1,0}, {1,0}, {0,-1}, {0,1} };\n\nset&lt;int&gt; cnt; \nint mp[N][N];\nint n, m, k, res;\n\nvoid dfs(int x, int y, int w){\n    if(w &gt; k){\n        cnt.insert(res);\n        return ;\n    }\n\n    for(int i=0; i&lt;4; i++){\n        int nx = x + dxy[i][0];\n        int ny = y + dxy[i][1];\n\n        if(nx&gt;=1 &amp;&amp; ny&gt;=1 &amp;&amp; nx&lt;=n &amp;&amp; ny&lt;=m){\n            res = res*10 + mp[nx][ny];   \n            dfs(nx, ny, w+1);\n            res /= 10;\n        }\n    }\n}\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;\n    for(int i=1; i&lt;=n; i++)\n        for(int j=1; j&lt;=m; j++)\n            scanf(\"%d\", &amp;mp[i][j]);\n\n    for(int i=1; i&lt;=n; i++)\n        for(int j=1; j&lt;=m; j++)\n            dfs(i, j, 0);   // \u4f4d\u7f6e\u4ee5\u53ca\u5f53\u524d\u4f4d\u6570\n\n    cout&lt;&lt;cnt.size();\n\n    return 0;\n}\n</code></pre> AcWing 1114. \u68cb\u76d8\u95ee\u9898 code  &gt; \u6211\u4eec\u9996\u5148\u601d\u8003\u4e00\u4e0b, \u6c42\u65b9\u6848\u6570, \u80af\u5b9a\u662f\u4e0d\u80fd\u91cd\u590d\u7684 &gt; \u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u518d\u56de\u60f3\u4e00\u4e0b, dfs\u7684\u641c\u7d22\u65b9\u6848\u4f1a\u91cd\u590d\u5417? \u6211\u4eec\u4e0a\u4e00\u9053\u4e00\u9898\u7684\u53bb\u91cd\u662f\u4e3a\u4ec0\u4e48? &gt; \u601d\u8003\u5b8c, \u8003\u8651\u4e00\u4e0b\u8fd9\u9053\u9898\u5982\u4f55\u89e3\u51b3(\u81ea\u5df1\u5c1d\u8bd5\u5199\u4e00\u4e2a, \u5148\u628a\u8f93\u5165\u5199\u4e86), \u4ed6\u7684\u5173\u952e\u4e4b\u5904\u5728\u4e8e`\u8981\u6c42\u6446\u653e\u65f6\u4efb\u610f\u7684\u4e24\u4e2a\u68cb\u5b50\u4e0d\u80fd\u653e\u5728\u68cb\u76d8\u4e2d\u7684\u540c\u4e00\u884c\u6216\u8005\u540c\u4e00\u5217` &gt; \u753b\u4e00\u4e2a4*4\u7684\u56fe\u5c31\u597d\u7406\u89e3\u4e86, \u76f4\u63a5\u5e73\u677f\u4e0a\u753b &gt; \u8fd9\u65f6\u5019, \u5c31\u53ef\u4ee5\u5f15\u5165\u53e6\u5916\u4e00\u4e2a\u4e1c\u897f\u4e86`used`\u6570\u7ec4  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nconst int N = 10;\n\nchar a[N][N];\nbool x[N], y[N];  // \u8be5\u884c, \u5217\u6709\u6ca1\u6709\u4f7f\u7528  \nint n, k, ans;\n\nvoid dfs(int i, int w) {\n    if (w == k) {\n        ans++;\n        return;\n    }\n    if (i &gt; n) return;\n    for (int j = 1; j &lt;= n; j++)\n        if (!x[i] &amp;&amp; !y[j] &amp;&amp; a[i][j] == '#') {\n            x[i] = y[j] = 1;\n            dfs(i + 1, w + 1);\n            x[i] = y[j] = 0;\n        }\n    dfs(i + 1, w);\n\n    return;\n}\n\nvoid solve() {\n    while (cin &gt;&gt; n &gt;&gt; k) {\n        if (n == -1 &amp;&amp; k == -1) return;\n        memset(x, 0, sizeof x);\n        memset(y, 0, sizeof y);\n        ans = 0;\n        for (int i = 1; i &lt;= n; i++)\n            for (int j = 1; j &lt;= n; j++)\n                cin &gt;&gt; a[i][j];\n        dfs(1, 0);\n        cout &lt;&lt; ans &lt;&lt; \"\\n\";\n    }\n    return;\n}\n\nint main() {\n    solve();\n    return 0;\n}\n</code></pre> AcWing 116. \u98de\u884c\u5458\u5144\u5f1f code C++<pre><code>#define fst first\n#define sed second\n\n#include &lt;iostream&gt;\nusing namespace std;\n\ntypedef pair&lt;int, int&gt; PII;\n\nint g[5][5]; // \u9700\u8981\u5c06\u6240\u6709\u503c\u53d8\u4e3a 0  \n\nPII step[100], ans[100];\n\nbool check(){\n    for(int i=1; i&lt;=4; i++)\n        for(int j=1; j&lt;=4; j++)\n            if(g[i][j])\n                return 0;\n    return 1;\n}\n\nvoid updata(){\n    if(ans[0].fst &lt; step[0].fst) return ;\n\n    ans[0].fst=step[0].fst;\n    for(int i=1; i&lt;=step[0].fst; i++)\n        ans[i].fst = step[i].fst,\n        ans[i].sed = step[i].sed;\n}\n\n// \u6539\u53d8\u8be5\u70b9\u72b6\u6001\nvoid change(int x, int y){\n    for(int i=1; i&lt;=4; i++)\n        g[x][i]^=1, g[i][y]^=1;\n    g[x][y]^=1;\n}\n\nvoid dfs(int x, int y){\n\n    // \u5230\u8fbe\u8fb9\u754c\n    if(x&gt;4){\n        // \u5982\u679c\u7ed3\u679c\u5408\u6cd5\uff08\u662f\u89e3\uff0c\u4f46\u975e\u6700\u4f18\uff09\n        if ( check() )\n        // \u66f4\u65b0\uff08\u5982\u679c\u662f\u66f4\u4f18\u89e3\uff0c\u5c31\u66f4\u65b0\uff09\n            updata();\n        // \u7ed3\u675f\n        return ;    \n    }\n\n    // \u6539\u53d8\u5f53\u524d\u70b9\u72b6\u6001\n    change(x, y);\n    // \u66f4\u65b0\u7b54\u6848\n    step[0].fst++;\n    step[ step[0].fst ] = {x, y};\n\n    if(y==4)\n        dfs(x+1, 1);\n    else\n        dfs(x, y+1);\n\n    // \u6062\u590d\u73b0\u573a\n    change(x, y);\n    step[0].fst--;\n\n    if(y==4)\n        dfs(x+1, 1);\n    else\n        dfs(x, y+1);\n}\n\nint main(){\n    // \u83b7\u53d6\u5730\u56fe\n    for(int i=1; i&lt;=4; i++){\n    for(int j=1; j&lt;=4; j++){\n        char c;\n        scanf(\"%c\", &amp;c);\n        if(c=='+') g[i][j]=1;\n    }\n    getchar();\n    }\n\n    ans[0].fst=99;\n\n    // \u679a\u4e3e\u6bcf\u4e2a\u70b9\u7684\u72b6\u6001\n    dfs(1,1);\n\n    cout&lt;&lt;ans[0].fst&lt;&lt;endl;\n    for(int i=1; i&lt;=ans[0].fst; i++)\n        cout&lt;&lt;ans[i].fst&lt;&lt;\" \"&lt;&lt;ans[i].sed&lt;&lt;endl;\n\n    return 0;\n}\n</code></pre> Luogu P1219 [USACO1.5]\u516b\u7687\u540e Checker Challenge  code  &gt; \u6b64\u9898\u5728\u4e0a\u4e00\u9898\u7684\u57fa\u7840\u4e0a\u52a0\u5165\u659c\u7ebf  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nconst int N=50;\n\nint cnt=0;  // \u8bb0\u5f55\u89e3\u7684\u4e2a\u6570\nvector&lt;int&gt; ans;\nbool x[N], y[N], r[N], l[N];\nint n;\n\nvoid dfs(int c){    // \u7b2c\u51e0\u5c42\n    if(ans.size() == n){\n        if(++cnt&lt;=3){\n            for(auto i: ans) cout&lt;&lt;i&lt;&lt;\" \";\n            cout&lt;&lt;\"\\n\";\n        }\n        return ;\n    }\n\n    for(int i=1; i&lt;=n; i++)\n        if(!x[c] &amp;&amp; !y[i] &amp;&amp; !r[i-c+10] &amp;&amp; !l[i+c]){\n            x[c] =   y[i] =   r[i-c+10] =   l[i+c] = 1;\n            ans.push_back(i);\n            dfs(c+1);\n            x[c] =   y[i] =   r[i-c+10] =   l[i+c] = 0;\n            ans.pop_back();\n        }\n}\n\nint main(){\n    cin&gt;&gt;n;\n    dfs(1);\n    cout&lt;&lt;cnt;\n    return 0;\n}\n</code></pre> Acwing 1621. N \u7687\u540e\u95ee\u9898 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nconst int N=3000;\n\nint x[N], y[N], r[N], l[N], a[N];\n\nbool add(int i, int j){\n    if(++x[i]!=1) return 0;\n    if(++y[j]!=1) return 0; \n    if(++r[j-i+1000]!=1) return 0;\n    if(++l[i+j]!=1) return 0;\n    return 1;\n}\n\nvoid solve(){\n    int n; cin&gt;&gt;n;\n    memset(x, 0, sizeof x);\n    memset(y, 0, sizeof y);\n    memset(r, 0, sizeof r);\n    memset(l, 0, sizeof l);\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", a+i);\n\n    for(int i=1; i&lt;=n; i++)\n        if( !add(i, a[i]) ){\n            puts(\"NO\");\n            return ;\n        }\n    puts(\"YES\");\n    return ;\n}\n\nint main(){\n    int T; cin&gt;&gt;T;\n    while(T--) solve();\n    return 0;\n}\n</code></pre> Acwing 4218. \u7ffb\u8f6c code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nconst int N=20;\n\nint g[N][N];\nint bk[N][N];\nint m, n;\nstring ans;\nint anscnt=0x3f3f3f3f;\n\nvoid cg(int x, int y){\n    g[x][y] = g[x][y] ? 0: 1;\n    g[x-1][y] = g[x-1][y] ? 0: 1;\n    g[x+1][y] = g[x+1][y] ? 0: 1;\n    g[x][y-1] = g[x][y-1] ? 0: 1;\n    g[x][y+1] = g[x][y+1] ? 0: 1;\n}\n\nbool ck(){\n    for(int j=1; j&lt;=n; j++)\n        if(g[m][j]) return 0;\n    return 1;\n}\n\nvoid dfs(int u, string res, int cnt){\n    if(u&gt;n){\n        memcpy(bk, g, sizeof bk);   // \u5907\u4efd\u4e00\u4e0b\n\n        for(int i=2; i&lt;=m; i++)\n            for(int j=1; j&lt;=n; j++)\n                if(g[i-1][j])\n                    cg(i, j), res += \"1\", cnt++;\n                else\n                    res += \"0\";\n        for(int j=1; j&lt;=n; j++) res += \"0\";\n\n        if(!ck()) {\n            memcpy(g, bk, sizeof g);    // \u6062\u590d\n            return ;\n        }\n        memcpy(g, bk, sizeof g);    // \u6062\u590d\n\n        if(cnt &lt; anscnt || ans==\"\" || res&lt;ans) ans = res, anscnt = cnt; \n        return ;\n    }\n\n    dfs(u+1, res+\"0\", cnt);  // \u4e0d\u6539\u53d8\n\n    cg(1,u);  // \u6539\u53d8\n    dfs(u+1, res+\"1\", cnt+1);\n    cg(1,u);  // \u6062\u590d\u73b0\u573a\n}\n\nint main(){\n    cin&gt;&gt;m&gt;&gt;n;\n\n    for(int i=1; i&lt;=m; i++)\n        for(int j=1; j&lt;=n; j++)\n            scanf(\"%d\", &amp;g[i][j]);\n\n    dfs(1, \"\", 0); \n\n\n    int k=0;\n\n    if(ans==\"\")cout&lt;&lt;\"IMPOSSIBLE\";\n\n    for(int i=1; i&lt;=m; i++, cout&lt;&lt;\"\\n\")\n        for(int j=1; j&lt;=n; j++)\n            cout&lt;&lt;ans[k++]&lt;&lt;\" \";\n\n    return 0;\n}\n</code></pre> AcWing 95. \u8d39\u89e3\u7684\u5f00\u5173 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nconst int N=10;\n\nint dxy[4][2]={ {-1,0}, {1,0}, {0,-1}, {0,1} };\n\n// \u5730\u56fe \u5730\u56fe\u5907\u4efd\nint g[N][N], backup[N][N];\nint ans=0x3f3f3f3f;\n\nbool check(){\n    for(int i=0; i&lt;5; i++)\n        if(!g[4][i]) return 0;\n    return 1;\n}\n\nvoid bf(){\n    for(int i=0; i&lt;5; i++)\n        for(int j=0; j&lt;5; j++)\n            backup[i][j]=g[i][j];\n}\n\nvoid rbf(){\n    for(int i=0; i&lt;5; i++)\n        for(int j=0; j&lt;5; j++)\n            g[i][j]=backup[i][j];\n}\n\nvoid change(int x, int y){\n    for(int i=0; i&lt;4; i++){\n        int nx=x+dxy[i][0];\n        int ny=y+dxy[i][1];\n        if(nx&lt;0 || ny&lt;0) continue;\n        g[nx][ny]^=1;\n    }\n    g[x][y]^=1;\n}\n\n// w\u662f\u5f53\u524d\u5df2\u7ecf\u6539\u53d8\u7684\u6b21\u6570\nvoid dfs(int u, int w){\n\n    if(w &gt; ans) return ;\n\n    // \u5230\u8fbe\u8fb9\u754c\n    if(u&gt;4){\n        // \u4fdd\u5b58\u5f53\u524d\u5730\u56fe\n        bf();\n        // \u76f4\u63a5\u8ba1\u7b97\u4e0b\u97624\u5c42\n        for(int i=1; i&lt;5 &amp;&amp; w&lt;=6; i++)\n            for(int j=0; j&lt;5; j++)\n                if(!g[i-1][j])\n                    change(i, j), w++;\n\n        if(w&lt;=6 &amp;&amp; check()) ans=min(ans, w);\n        // \u6062\u590d\u56de\u53bb\n        rbf();\n        return ;\n    }\n\n    // \u6539\u53d8\n    change(0, u);\n    dfs(u+1, w+1);\n    change(0, u);\n\n    // \u4e0d\u6539\u53d8\n    dfs(u+1, w);\n}\n\n\nint main(){\n    int n;\n    cin&gt;&gt;n;\n\n    while(n--){\n        ans=0x3f3f3f3f;\n\n        for(int i=0; i&lt;5; i++)\n            for(int j=0; j&lt;5; j++){\n                scanf(\"%1d\", &amp;g[i][j]);\n                backup[i][j]=g[i][j];\n            }\n\n        // \u7b2c\u4e00\u6392\u7684\u7b2c\u51e0\u4e2a\u70b9\n        // \u5df2\u7ecf\u6539\u53d8\u4e86\u51e0\u6b21\n        dfs(0, 0);\n\n        if(ans==0x3f3f3f3f)\n            puts(\"-1\");\n        else\n            cout&lt;&lt;ans&lt;&lt;\"\\n\";\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"src/algorithm/search/DFS/#dfs","title":"\u4e00\u822cDFS","text":"Luogu P2392 kkksc03\u8003\u524d\u4e34\u65f6\u62b1\u4f5b\u811a code   kkk \u9700\u8981\u505a $4$ \u79d1\u4e60\u9898\u96c6 $A$ \u79d1\u5171\u6709 $s_1$ \u9053\u9898\u76ee\uff0c\u6bcf\u9053\u9898\u76ee\u7684\u6d88\u8017\u65f6\u95f4\u5206\u522b\u662f $A_1, A_2, A_3, ..., A_{s_1}$ $B$ \u79d1\u5171\u6709 $s_2$ \u9053\u9898\u76ee\uff0c\u6bcf\u9053\u9898\u76ee\u7684\u6d88\u8017\u65f6\u95f4\u5206\u522b\u662f $B_1, B_2, B_3, ..., B_{s_2}$ $C$ \u79d1\u5171\u6709 $s_3$ \u9053\u9898\u76ee\uff0c\u6bcf\u9053\u9898\u76ee\u7684\u6d88\u8017\u65f6\u95f4\u5206\u522b\u662f $C_1, C_2, C_3, ..., C_{s_3}$ $D$ \u79d1\u5171\u6709 $s_4$ \u9053\u9898\u76ee\uff0c\u6bcf\u9053\u9898\u76ee\u7684\u6d88\u8017\u65f6\u95f4\u5206\u522b\u662f $D_1, D_2, D_3, ..., D_{s_4}$  - kkk \u53ef\u4ee5\u540c\u65f6\u8ba1\u7b97\u4e24\u9053\u9898\u76ee\uff0ckkk \u5fc5\u987b\u4e00\u79d1\u4e00\u79d1\u7684\u590d\u4e60  \u56e0\u6b64\u8fd9\u4e2a\u6761\u4ef6\uff0c**\u5b8c\u6210\u590d\u4e60\u7684\u6700\u77ed\u65f6\u95f4 -&gt; \u5b8c\u6210\u6bcf\u79d1\u7684\u6700\u77ed\u65f6\u95f4\u4e4b\u548c**  \u5177\u4f53\u7684\uff0c\u6211\u4eec\u73b0\u5728\u9700\u8981\u89e3\u51b3\uff0c\u5b8c\u6210 $s_i$ \u9053\u9898\u76ee\u82b1\u8d39\u7684\u6700\u77ed\u65f6\u95f4  - \u6700\u77ed\u65f6\u95f4 $&gt;=$  $\\lceil \u6240\u6709\u65f6\u95f4/2 \\rceil$  \u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u59a8\u8003\u8651 **\u505a\u9898\u65f6\u95f4\u7684\u6240\u6709\u6392\u5217**\uff0c\u4f9d\u6b21\u7d2f\u52a0\u5230 $res$  \u5f53 $res &gt;= \\lceil \u6240\u6709\u65f6\u95f4/2 \\rceil$\uff0c$res$ \u5c31\u662f\u5176\u4e2d\u7684\u4e00\u4e2a\u53ef\u884c\u89e3  \u6700\u5c0f\u7684 $res$ \u5c31\u662f\u6700\u77ed\u65f6\u95f4  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nconst int N=30;\n\nint s[N], a[N], ans=0;\n\nint main(){\n    for(int i=1; i&lt;=4; i++) scanf(\"%d\", s+i);\n\n    for(int k=1; k&lt;=4; k++){\n        int all = 0;\n        for(int j=1; j&lt;=s[k]; j++) scanf(\"%d\", a+j), all += a[j];\n        sort(a+1, a+1+s[k]);\n\n        int res = 0x3f3f3f3f;\n        do{\n            int A=0;\n            // \u5728\u8be5\u987a\u5e8f\u4e0b, \u6700\u5c0f\u65f6\u95f4\u82b1\u8d39\n            for(int j=1; j&lt;=s[k]; j++){\n                A+=a[j];\n                if(A&gt;=(all+1)/2 || A&gt;res) break;\n            }\n            res = min(res, A);\n            if(A == (all+1)/2) break;\n        }while(next_permutation(a+1, a+1+s[k]));\n\n        ans += res;\n    }\n\n    cout&lt;&lt;ans;\n    return 0;\n}\n</code></pre> Luogu P1019 [NOIP2000 \u63d0\u9ad8\u7ec4] \u5355\u8bcd\u63a5\u9f99 code  \u7ed9\u5b9a\u4e00\u4e9b\u5355\u8bcd\uff0c\u5c06\u5355\u8bcd\u8fde\u63a5\u8d77\u6765  \u6b64\u65f6\u6709\u4e24\u4e2a\u95ee\u9898  1. \u5bf9\u4e8e\u5355\u8bcd $a$ \u548c $b$\uff0c$b$ \u80fd\u5426\u63a5\u5230 $a$ \u7684\u540e\u9762     \u663e\u7136\uff0c\u6211\u4eec\u53ea\u9700\u8981\u622a\u53d6 $a$ \u7684\u540e\u9762 $i$ \u4f4d\uff0c$b$ \u7684\u524d\u9762 $i$ \u4f4d     \u5982\u679c\u622a\u53d6\u7684\u90e8\u5206\u76f8\u540c\uff0c\u4e14\u4e0d\u7b49\u4e8e $a$ \u548c $b$\uff0c\u90a3\u4e48 $b$ \u5c31\u53ef\u4ee5\u63a5\u5230 $a$ \u540e\u9762  2. \u5bf9\u4e8e\u5355\u8bcd $a$ \u548c $b$\uff0c\u63a5\u9f99\u540e\u662f\u4ec0\u4e48\u6837\u5b50\uff1f     \u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4ed6\u4eec\u76f8\u540c\u7684\u90e8\u5206\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u7528 **$a + b\u5269\u4e0b\u7684\u90e8\u5206$** \u5c31\u662f\u8fde\u63a5\u540e\u7684\u4e32  \u6b64\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4ece\u7b2c\u4e00\u4e2a\u5355\u8bcd\u5f00\u59cb\uff0c\u770b\u6b64\u5355\u8bcd\u80fd\u591f\u4e0e\u90a3\u4e9b\u5355\u8bcd\u8fde\u63a5\u3002\u7136\u540e\u662f\u7b2c\u4e8c\u4e2a\u5355\u8bcd...  C++<pre><code>#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int N = 21;\n\nint n;\nstring word[N];\nint g[N][N];\nint used[N];\nint ans;\n\nvoid dfs(string dragon, int last)\n{\n    ans = max((int)dragon.size(), ans);\n\n    used[last] ++ ;\n\n    for (int i = 0; i &lt; n; i ++ )\n        if (g[last][i] &amp;&amp; used[i] &lt; 2)\n            dfs(dragon + word[i].substr(g[last][i]), i);\n\n    used[last] -- ;\n}\n\nint main()\n{\n    cin &gt;&gt; n;\n    for (int i = 0; i &lt; n; i ++ ) cin &gt;&gt; word[i];\n    char start;\n    cin &gt;&gt; start;\n\n    for (int i = 0; i &lt; n; i ++ )\n        for (int j = 0; j &lt; n; j ++ )\n        {\n            string a = word[i], b = word[j];\n            for (int k = 1; k &lt; min(a.size(), b.size()); k ++ )\n                if (a.substr(a.size() - k, k) == b.substr(0, k))\n                {\n                    g[i][j] = k;\n                    break;\n                }\n        }\n\n    for (int i = 0; i &lt; n; i ++ )\n        if (word[i][0] == start)\n            dfs(word[i], i);\n\n    cout &lt;&lt; ans &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"src/cpp/av/","title":"\u5f15\u5b50","text":"<p>\u5f71\u89c6\u98d3\u98ce\u5c06\u505c\u6b62\u5236\u4f5c25\u5e27\u89c6\u9891\uff08\u5f71\u89c6\u98d3\u98ce\uff09 \u5947\u5999\u7684\u5e27\u7387\u589e\u52a0\u4e86\uff01\uff08\u5f71\u89c6\u98d3\u98ce\uff09 \u201c\u89c6\u9891\u201d\u662f\u600e\u4e48\u6765\u7684\uff1fH.264\u3001\u7801\u7387\u8fd9\u4e9b\u8bcd\u53c8\u662f\u4ec0\u4e48\u610f\u601d\uff1f\uff08\u6781\u5ba2\u6e7e\uff09 \u4e3a\u4ec0\u4e48\u8981\u7f16\u7801</p> <p>\u5b57\u8282\u8df3\u52a8 - \u97f3\u89c6\u9891\u6280\u672f\u539f\u7406\u53ca\u5e94\u7528</p> <p>OpenCV \u5165\u95e8\u6559\u7a0b FFmpeg \u89c6\u9891\u5904\u7406\u5165\u95e8\u6559\u7a0b\uff08\u4f7f\u7528\uff0c\u975e\u5f00\u53d1\uff09 FFMPEG\u5f00\u53d1\u5feb\u901f\u5165\u5751\u2014\u2014\u7eea\u8bba \u96f7\u9704\u9a85\u7684\u5f00\u6e90\u89c6\u97f3\u9891\u9879\u76ee\u6c47\u603b</p> <p>FFmpeg \u5b98\u65b9\u6587\u6863</p> <p>1</p> <p></p>"},{"location":"src/cpp/av/#_2","title":"\u97f3\u54cd","text":""},{"location":"src/cpp/av/#_3","title":"\u663e\u793a\u5668","text":""},{"location":"src/cpp/av/#lcd","title":"LCD \u6db2\u6676\u663e\u793a\u5c4f","text":"<p>LCD \u6700\u5e95\u5c42\u4e3a\u5149\u6e90\uff08\u901a\u5e38\u662f LED \u5149\u5e26\uff09\uff0c\u901a\u8fc7 \u6db2\u6676\u5c42 \u548c\u8272\u5f69\u6ee4\u5149\u7247\u663e\u793a\u51fa\u7ea2\u7eff\u84dd\u4e09\u79cd\u989c\u8272</p> \u6db2\u6676\u5c42\u9762\u677f IPS TN VA \u5bf9\u6bd4\u5ea6 - \u4f4e \u9ad8 \u53ef\u89c6\u89d2 \u5e7f \u7a84 - \u54cd\u5e94\u901f\u5ea6 - \u5feb \u6162 <p>Fast IPS\uff1a\u66f4\u5feb\u7684 IPS \u9762\u677f QLED\uff1a\u80cc\u677f\u5c04\u84dd\u5149\uff0c\u52a0 \u91cf\u5b50\u70b9\u819c\uff0c\u62e5\u6709\u66f4\u597d\u7684\u8272\u5f69 mini-LED\uff1a\u80cc\u5149\u5206\u533a\uff0c\u5bf9\u6bd4\u5ea6\u4e0a\u5347 | \u7f3a\u70b9\uff1a\u80cc\u5149\u62d6\u5c3e</p>"},{"location":"src/cpp/av/#oled","title":"OLED \u6709\u673a\u53d1\u5149\u4e8c\u6781\u7ba1","text":"<p>\u751f\u7269\u6750\u6599\uff0c\u50cf\u7d20\u7ea7\u53d1\u5149 | \u7f3a\u70b9\uff1a\u7ea2\u7eff\u84dd\u5bff\u547d\u4e0d\u7edf\u4e00\uff0c\u6613\u8001\u5316</p> <p>W-OLED RGBW\uff0c\u52a0\u4e86\u767d\u5149\uff0c\u4f7f\u5bff\u547d\u7edf\u4e00 | \u7f3a\u70b9\uff1a\u8272\u5f69\u4e0b\u964d</p> <p>QD-OLED \u4f7f\u7528\u91cf\u5b50\u70b9\u819c\uff0c\u5bff\u547d\u7edf\u4e00 | \u7f3a\u70b9\uff1a\u53d7\u5149\u7ebf\u5f71\u54cd\u5927</p>"},{"location":"src/cpp/av/#micro-led","title":"Micro-LED \u65e0\u673a\u53d1\u5149\u4e8c\u6781\u7ba1","text":"<p>\u725b\u903c\u5c31\u5b8c\u4e86</p>"},{"location":"src/cpp/av/#_4","title":"\u8272\u57df/\u8272\u51c6","text":"<p>sRGB</p> <p>\u6700\u5e38\u89c1\u7684</p> <p>DCI-P3</p> <p>\u7535\u5f71\u5de5\u4f5c\u5ba4\u641e\u5f97\uff0c\u82f9\u679c\u559c\u6b22\u7528</p> <p>AdobeRGB</p> <p>123</p> <p>xxx% \u8272\u57df\u8986\u76d6</p> <p>\u80fd\u591f\u8fbe\u5230\u67d0\u8272\u57df\u4e2d\u5b9a\u4e49\u7684xxx%\u989c\u8272</p> <p>\u0394E</p> <ul> <li> <p>\u5e73\u5747\u0394E</p> </li> <li> <p>\u6700\u5927\u0394E</p> </li> </ul>"},{"location":"src/cpp/av/#hdr","title":"\u4eae\u5ea6/\u5bf9\u6bd4\u5ea6/HDR","text":""},{"location":"src/cpp/av/#_5","title":"\u5206\u8fa8\u7387/\u5237\u65b0\u7387/\u54cd\u5e94\u65f6\u95f4","text":""},{"location":"src/cpp/av/#_6","title":"\u97f3\u9891\u7f16\u7801","text":"<ul> <li> <p>MP3</p> </li> <li> <p>AAC</p> </li> <li> <p>FLAC</p> </li> </ul> <p></p>"},{"location":"src/cpp/av/#_7","title":"\u89c6\u9891\u7f16\u7801","text":"<ul> <li> <p>H.264</p> </li> <li> <p>H.265</p> </li> </ul> <p></p>"},{"location":"src/cpp/av/#_8","title":"\u97f3\u89c6\u9891\u5c01\u88c5","text":"<ul> <li> <p>mp4</p> </li> <li> <p>ts</p> </li> <li> <p>flv</p> </li> <li> <p>mkv</p> </li> </ul> <p></p>"},{"location":"src/cpp/av/#_9","title":"\u97f3\u89c6\u9891\u4f20\u8f93","text":"<ul> <li> <p>RTP</p> </li> <li> <p>RTCP</p> </li> <li> <p>SRT</p> </li> </ul> <p></p>"},{"location":"src/cpp/av/#v4l2","title":"V4L2","text":"<p>v4l2-ctl -d 0 --list-formats-ext</p> <p></p>"},{"location":"src/cpp/av/#opencv","title":"OpenCV","text":""},{"location":"src/cpp/av/#_10","title":"\u5b89\u88c5","text":"<ol> <li> <p>\u5b89\u88c5     Linux</p> <ul> <li><code>sudo apt install libopencv-dev</code></li> </ul> <p>Windows</p> <ol> <li>\u4e0b\u8f7d</li> <li>\u5b89\u88c5</li> </ol> </li> <li> <p>\u6d4b\u8bd5</p> <p>Linux</p> C++<pre><code>#include &lt;opencv2/opencv.hpp&gt;\n#include &lt;iostream&gt;\n\nusing namespace cv;\nusing namespace std;\n\nint main() {\n    // \u8bfb\u53d6\u56fe\u50cf\u6587\u4ef6\n    Mat image = imread(\"example.jpg\", IMREAD_COLOR);\n\n    // \u68c0\u67e5\u56fe\u50cf\u662f\u5426\u6210\u529f\u8bfb\u53d6\n    if(image.empty()) {\n        cout &lt;&lt; \"\u65e0\u6cd5\u8bfb\u53d6\u56fe\u50cf\u6587\u4ef6\" &lt;&lt; endl;\n        return -1;\n    }\n\n    // \u5728\u7a97\u53e3\u4e2d\u663e\u793a\u56fe\u50cf\n    imshow(\"Image\", image);\n    waitKey(0);\n\n    return 0;\n}\n</code></pre> Text Only<pre><code>g++ main.cpp -o main `pkg-config --cflags --libs opencv4`\n</code></pre> </li> </ol>"},{"location":"src/cpp/av/#_11","title":"\u8c03\u7528\u6444\u50cf\u5934","text":"C++<pre><code>#include &lt;opencv2/opencv.hpp&gt;\nusing namespace cv;\nusing namespace std;\n\nint main()\n{\n    VideoCapture capture(0, cv::CAP_V4L2);\n\n    // \u8bbe\u7f6e\u683c\u5f0f\n    capture.set(cv::CAP_PROP_FOURCC, cv::VideoWriter::fourcc('M', 'J', 'P', 'G'));\n    // capture.set(cv::CAP_PROP_FOURCC, cv::VideoWriter::fourcc('H', '2', '6', '4'));\n    // capture.set(cv::CAP_PROP_FOURCC, cv::VideoWriter::fourcc('H', 'E', 'V', 'C'));\n    // capture.set(cv::CAP_PROP_FOURCC, cv::VideoWriter::fourcc('X', 'V', 'I', 'D'));\n\n    // \u8bbe\u7f6e\u6444\u50cf\u5934\u7684\u5206\u8fa8\u7387\n    capture.set(cv::CAP_PROP_FRAME_WIDTH, 1920);\n    capture.set(cv::CAP_PROP_FRAME_HEIGHT, 1080);\n    capture.set(cv::CAP_PROP_FPS, 30);\n\n    // \u67e5\u8be2\u6444\u50cf\u5934\u7684\u53c2\u6570\u4fe1\u606f\n    double fps = capture.get(cv::CAP_PROP_FPS);\n    int width = capture.get(cv::CAP_PROP_FRAME_WIDTH);\n    int height = capture.get(cv::CAP_PROP_FRAME_HEIGHT);\n\n    // \u8f93\u51fa\u53c2\u6570\u4fe1\u606f\n    std::cout &lt;&lt; \"Frame rate: \" &lt;&lt; fps &lt;&lt; \" fps\" &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"Frame size: \" &lt;&lt; width &lt;&lt; \"x\" &lt;&lt; height &lt;&lt; std::endl;\n\n    while (true)\n    {\n        Mat frame;\n        capture &gt;&gt; frame;\n        imshow(\"camera\", frame);\n        waitKey(1);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"src/cpp/av/#ffmpeg","title":"FFmpeg","text":""},{"location":"src/cpp/boost/","title":"\ud83d\udce6 Boost","text":""},{"location":"src/cpp/boost/#_1","title":"\u53c2\u8003","text":"<p>\u5b98\u7f51 | \u4e0b\u8f7d | \u5f00\u53d1\u6587\u6863</p> <p></p>"},{"location":"src/cpp/boost/#setup","title":"setup","text":""},{"location":"src/cpp/boost/#linux","title":"linux","text":"<ul> <li> <p>\u901a\u8fc7 apt</p> Bash<pre><code>sudo apt-get install libboost-all-dev\n</code></pre> </li> <li> <p>\u4e0b\u8f7d <code>wget</code> / \u89e3\u538b <code>tar -zxvf</code> / \u63d0\u6743 <code>chmod +x</code></p> </li> <li> <p>\u914d\u7f6e\u5b89\u88c5\u9009\u9879 <code>./bootstrap.sh --prefix=/.../boost-x.y.z</code></p> </li> <li> <p>\u5b89\u88c5 <code>./b2 -j$(nproc) --prefix=/.../boost-x.y.z install</code></p> </li> <li> <p>\u7f16\u5199\u6d4b\u8bd5\u4ee3\u7801</p> <p>C++<pre><code>#include &lt;boost/version.hpp&gt;\n#include &lt;boost/config.hpp&gt;\n#include &lt;iostream&gt;\nusing namespace std;\n\nint main(){\n    cout &lt;&lt; BOOST_VERSION &lt;&lt; endl;      // Boost \u7248\u672c\u53f7\n    cout &lt;&lt; BOOST_LIB_VERSION &lt;&lt; endl;  // Boost \u7248\u672c\u53f7\n    cout &lt;&lt; BOOST_PLATFORM &lt;&lt; endl;     // \u64cd\u4f5c\u7cfb\u7edf\n    cout &lt;&lt; BOOST_COMPILER &lt;&lt; endl;     // \u7f16\u8bd1\u5668\n    cout &lt;&lt; BOOST_STDLIB &lt;&lt; endl;       // \u6807\u51c6\u5e93\n    return 0;\n}\n</code></pre> 5. \u7f16\u8bd1 Bash<pre><code>g++ test.cpp -I/.../boost-x.y.z/include -L/.../boost-x.y.z/lib\n</code></pre></p> </li> </ul>"},{"location":"src/cpp/boost/#windows","title":"windows","text":"<ol> <li> <p>\u4e0b\u8f7d     Boost</p> </li> <li> <p>\u89e3\u538b</p> </li> <li> <p>\u8fdb\u5165\u89e3\u538b\u540e\u7684\u76ee\u5f55\uff0c\u6267\u884c <code>.\\bootstrap.bat gcc</code></p> <ul> <li>\u7f16\u8bd1\u524d\u7684\u914d\u7f6e\u5de5\u4f5c</li> </ul> </li> <li> <p>\u6267\u884c <code>.\\b2.exe install</code></p> <ul> <li>\u7f16\u8bd1\u5b89\u88c5</li> </ul> </li> <li> <p>\u6d4b\u8bd5     C++<pre><code>#include &lt;boost/version.hpp&gt;//\u5305\u542b Boost \u5934\u6587\u4ef6\n#include &lt;boost/config.hpp&gt; //\u5305\u542b Boost \u5934\u6587\u4ef6\n#include &lt;iostream&gt;\n\nusing namespace std;\nint main(){\n    cout &lt;&lt; BOOST_VERSION &lt;&lt; endl;      // Boost \u7248\u672c\u53f7\n    cout &lt;&lt; BOOST_LIB_VERSION &lt;&lt; endl;  // Boost \u7248\u672c\u53f7\n    cout &lt;&lt; BOOST_PLATFORM &lt;&lt; endl;     // \u64cd\u4f5c\u7cfb\u7edf\n    cout &lt;&lt; BOOST_COMPILER &lt;&lt; endl;     // \u7f16\u8bd1\u5668\n    cout &lt;&lt; BOOST_STDLIB &lt;&lt; endl;       // \u6807\u51c6\u5e93\n    return 0;\n}\n</code></pre></p> <ul> <li>\u7f16\u8bd1     Bash<pre><code>g++ -o test test.cpp -I\"C:\\Boost\\include\\boost-1_84\" -L\"C:\\Boost\\lib\"\n</code></pre></li> <li>\u5982\u679c\u4f7f\u7528\u7f51\u7edc\u5e93\uff0c\u8fd8\u9700\u8981 <code>-lws2_32</code></li> </ul> </li> </ol> <p></p>"},{"location":"src/cpp/boost/#dev","title":"dev","text":""},{"location":"src/cpp/boost/#boostpropertytree","title":"Boost.PropertyTree","text":"<p>\u5c5e\u6027\u6811\uff0c\u6570\u636e\u7ed3\u6784\u4e3a\ud83c\udf32\uff0c\u952e\u503c\u5bf9\u5f62\u5f0f\u5b58\u5728\uff0c\u53ef\u4ee5\u5d4c\u5957\uff0c\u9002\u7528\u4e8e\u914d\u7f6e\u6587\u4ef6\uff0c\u5982 JSON\u3001XML \u7b49</p> C++<pre><code>#include &lt;boost/property_tree/ptree.hpp&gt;\n#include &lt;boost/property_tree/xml_parser.hpp&gt;\n#include &lt;boost/property_tree/json_parser.hpp&gt;\n#include &lt;iostream&gt;\n\nnamespace pt = boost::property_tree;\n\n/*\n    \u5c06\u6570\u636e\u585e\u5230\u6570\u636e\u7ed3\u6784 boost::property_tree::ptree \u4e2d\n    \u8f93\u51fa\u5230\u6587\u4ef6 json / xml\n*/\n\nint main()\n{\n    try\n    {\n        pt::ptree tree_1;   // \u6839\u8282\u70b9\n        pt::ptree tree_2_1; // \u7b2c 1 \u4e2a\u5b50\u8282\u70b9\n        pt::ptree tree_2_2; // \u7b2c 2 \u4e2a\u5b50\u8282\u70b9\n\n        // \u6839\u8282\u70b9\u6dfb\u52a0\u5c5e\u6027\n        tree_1.add(\"tree1\", \"1\");\n        tree_1.add(\"tree2\", \"2\");\n\n        // \u7b2c 1 \u4e2a\u5b50\u8282\u70b9\u6dfb\u52a0\u5c5e\u6027\n        tree_2_1.add(\"tree2_1\", \"2_1\");\n        tree_2_1.add(\"tree2_2\", \"2_x\");\n        tree_2_1.put(\"tree2_2\", \"2_2\"); // put \u6709\u5219\u6539\u4e4b\uff0c\u65e0\u5219\u52a0\u5195\n\n        // \u7b2c 2 \u4e2a\u5b50\u8282\u70b9\u6dfb\u52a0\u5c5e\u6027\n        tree_2_2.add(\"tree3_1\", \"3_1\");\n        tree_2_2.add(\"tree3_2\", \"3_2\");\n\n        // \u6839\u8282\u70b9\u6dfb\u52a0\u5b50\u8282\u70b9\n        tree_1.add_child(\"2_1\", tree_2_1); // \u6dfb\u52a0\u7b2c 1 \u4e2a\u8282\u70b9\n        tree_1.add_child(\"2_2\", tree_2_2); // \u6dfb\u52a0\u7b2c 2 \u4e2a\u8282\u70b9\n\n        // \u4fdd\u5b58\u81f3 json\n        pt::write_json(\"output.json\", tree_1);\n        // \u4fdd\u5b58\u81f3 xml\n        pt::write_xml(\"output.xml\", tree_1);\n    }\n    catch (const std::exception &amp;e)\n    {\n        std::cerr &lt;&lt; \"Error: \" &lt;&lt; e.what() &lt;&lt; std::endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"src/cpp/cmake/","title":"\ud83d\udd29 CMake","text":""},{"location":"src/cpp/cmake/#_1","title":"\u53c2\u8003","text":"<ul> <li> <p>cmake \u5b98\u65b9\u6587\u6863</p> </li> <li> <p>cmake \u6700\u4f73\u5b9e\u8df5</p> </li> </ul> <p></p>"},{"location":"src/cpp/cmake/#_2","title":"\u5b89\u88c5","text":"<ul> <li> <p><code>sudo apt install cmake</code></p> </li> <li> <p>\u4ece\u6e90\u7801\u5b89\u88c5</p> </li> </ul> <p></p>"},{"location":"src/cpp/cmake/#_3","title":"\u57fa\u7840\u7528\u6cd5","text":"Bash<pre><code>rm -rf build/ &amp;&amp; cmake -B build &amp;&amp; cmake --build build/ -j20\n</code></pre> <ul> <li> <p>\u5728\u9876\u5c42 <code>CMakeLists.txt</code> \u76ee\u5f55\u4e2d\u6267\u884c</p> </li> <li> <p><code>cmake -B build</code></p> <ul> <li> <p>\u751f\u6210\u6784\u5efa\u7cfb\u7edf\u6587\u4ef6\uff08\u4f8b\u5982 <code>Makefile</code>\uff09\uff0c\u907f\u514d\u4e2d\u95f4\u6587\u4ef6\u6c61\u67d3\u6e90\u4ee3\u7801\u76ee\u5f55\uff08out-of-source\uff09</p> </li> <li> <p><code>-B</code> \u6307\u5b9a\u8f93\u51fa\u76ee\u5f55\u4e3a <code>build</code></p> </li> </ul> </li> <li> <p><code>cmake --build build/ -j</code></p> <ul> <li> <p>\u4f7f\u7528\u6307\u5b9a\u6784\u5efa\u7cfb\u7edf\u8fdb\u884c\u7f16\u8bd1\uff08\u4f8b\u5982 <code>make</code>\uff09</p> </li> <li> <p><code>--build</code> \u6307\u5b9a\u6784\u5efa\u76ee\u5f55\u4e3a <code>build/</code></p> </li> <li> <p><code>-j</code> \u591a\u7ebf\u7a0b\u7f16\u8bd1</p> </li> </ul> </li> </ul> <p></p>"},{"location":"src/cpp/cmake/#_4","title":"\u8c03\u5305\u4fa0","text":"<p>\u5982\u540c\u4f7f\u7528 <code>g++</code> \u7f16\u8bd1\u9879\u76ee\u4e00\u6837\uff0c\u9700\u8981\uff1a</p> <ul> <li> <p>\u6307\u5b9a\u9700\u8981\u7f16\u8bd1\u7684\u6e90\u6587\u4ef6</p> </li> <li> <p>\u5934\u6587\u4ef6\u76ee\u5f55 <code>target_include_directories</code></p> </li> <li> <p>\u94fe\u63a5\u5e93 <code>target_link_libraries</code>\uff0c\u76f8\u5f53\u4e8e <code>-l</code>\uff0c\u5177\u4f53\u7684\u5e93</p> </li> </ul> <p>\u65f6\u4ee3\u7684\u5de8\u8f6e\u6eda\u6eda\u5411\u524d\uff0c\u7f51\u4e0a\u7684\u6559\u7a0b\u53ef\u4ee5\u8bf4\u662f\u4e94\u82b1\u516b\u95e8\uff0c\u8fd9\u91cc\u901a\u8fc7\u56db\u79cd\u60c5\u51b5\u5206\u6790</p>"},{"location":"src/cpp/cmake/#cmake","title":"\u5b58\u5728 <code>.cmake</code>","text":"<p>\u5982\u679c\u7b2c\u4e09\u65b9\u5e93\u5b58\u5728 <code>.cmake</code> \u6587\u4ef6\uff0c\u4e0d\u8981\u72b9\u8c6b\uff0c\u76f4\u63a5\u4f7f\u7528 <code>find_package</code></p> CMake<pre><code># \u8bbe\u7f6e Qt \u7684 CMake \u6a21\u5757\u76ee\u5f55\uff0c\u5982\u679c\u4e0d\u5728 /usr/lib /usr/local/lib \u7b49\u5e38\u89c1\u76ee\u5f55\u4e0b\nset(Qt6_DIR \".../Qt/x.y.z/gcc_64/lib/cmake/Qt6\")\n\n# \u5bfc\u5165 Qt6 \u6a21\u5757\n# REQUIRED \u5fc5\u987b\u627e\u5230\n# COMPONENTS \u9700\u8981\u7684\u7ec4\u4ef6\nfind_package(Qt6 REQUIRED COMPONENTS\n    Core\n    Xml\n)\n\n# \u94fe\u63a5\ntarget_link_libraries(${PROJECT_NAME} PRIVATE\n    Qt6::Core\n    Qt6::Xml\n)\n</code></pre>"},{"location":"src/cpp/cmake/#pc","title":"\u5b58\u5728 <code>.pc</code>","text":"<p>\u5982\u679c\u7b2c\u4e09\u65b9\u5e93\u5b58\u5728 <code>.pc</code> \u6587\u4ef6\uff0c\u4e0d\u8981\u72b9\u8c6b\uff0c\u4f18\u5148\u4f7f\u7528 <code>pkg_check_modules</code></p> CMake<pre><code># \u5bfc\u5165 pkg-config \u6a21\u5757\nfind_package(PkgConfig REQUIRED)\n\n# pkg_check_modules \u5728\u4ec0\u4e48\u76ee\u5f55\u67e5\u627e\nset(ENV{PKG_CONFIG_PATH} \".../lib/pkgconfig\")\npkg_check_modules(PQ REQUIRED IMPORTED_TARGET\n    libpq\n)\n\n# \u94fe\u63a5\ntarget_link_libraries(${PROJECT_NAME} PRIVATE\n    PkgConfig::PQ\n)\n</code></pre>"},{"location":"src/cpp/cmake/#_5","title":"\u624b\u52a8","text":"<p>\u53ea\u7ed9 <code>include</code> \u548c <code>lib</code> \u76ee\u5f55</p> CMake<pre><code># \u5934\u6587\u4ef6\u76ee\u5f55\ntarget_include_directories(${PROJECT_NAME} PRIVATE\n    ${PROJECT_SOURCE_DIR}/libs/xxx/include\n)\n\n# \u67e5\u627e\u6307\u5b9a\u5e93\nfind_library(LIBQICSTABLE libqicstable.so.3 \n    PATHS /home/jiao/Desktop/qicstable-master/lib\n)\n\n# \u94fe\u63a5\ntarget_link_libraries(${PROJECT_NAME} PRIVATE\n    ${LIBQICSTABLE}\n)\n</code></pre>"},{"location":"src/cpp/cmake/#_6","title":"\u6e90\u7801","text":"<p>\u9879\u76ee\u548c\u6e90\u7801\u4e00\u8d77\u7f16</p> CMake<pre><code># \u7b2c\u4e09\u65b9\u5e93\u76ee\u5f55\nadd_subdirectory(subprocess)\n\n# \u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\nadd_executable(${PROJECT_NAME} \n    ${SOURCES}\n)\n\n# \u5934\u6587\u4ef6\u76ee\u5f55\ntarget_include_directories(${PROJECT_NAME} PRIVATE\n    ${PROJECT_SOURCE_DIR}/subprocess/src/cpp\n)\n\n# \u94fe\u63a5\ntarget_link_libraries(${PROJECT_NAME} PRIVATE\n    subprocess\n)\n</code></pre> <p></p>"},{"location":"src/cpp/cmake/#_7","title":"\u5e38\u89c1\u53d8\u91cf","text":"\u53d8\u91cf\u540d \u8bf4\u660e <code>CMAKE_SOURCE_DIR</code> \u9876\u5c42 <code>CMakeLists.txt</code> \u6240\u5728\u76ee\u5f55 <code>CMAKE_CURRENT_SOURCE_DIR</code> \u5f53\u524d <code>CMakeLists.txt</code> \u6240\u5728\u76ee\u5f55 <code>CMAKE_BINARY_DIR</code> \u9876\u5c42 <code>CMakeLists.txt</code> \u751f\u6210\u7684\u6784\u5efa\u76ee\u5f55 <code>CMAKE_CURRENT_BINARY_DIR</code> \u5f53\u524d <code>CMakeLists.txt</code> \u751f\u6210\u7684\u6784\u5efa\u76ee\u5f55"},{"location":"src/cpp/cmake/#_8","title":"\u5e38\u7528","text":""},{"location":"src/cpp/cmake/#add_library","title":"add_library","text":"CMake<pre><code>add_library(util STATIC util.cpp)       # \u751f\u6210\u9759\u6001\u5e93 libutil.a\nadd_library(util SHARED util.cpp)       # \u751f\u6210\u52a8\u6001\u5e93 libutil.so\n</code></pre>"},{"location":"src/cpp/cmake/#ifelse","title":"ifelse","text":"CMake<pre><code>if (CMAKE_SYSTEM_NAME STREQUAL \"Linux\")\n    set(LIB_PATH \"/usr/local/xyz/lib\")\nelseif (CMAKE_SYSTEM_NAME STREQUAL \"Windows\")\n    set(LIB_PATH \"C:/Path/To/Your/Libraries\")\nendif()\n\nfind_library(LIB_UTIL util \n    PATHS ${LIB_PATH}\n)\n\ntarget_link_libraries(${PROJECT_NAME} PRIVATE\n    ${LIB_UTIL}\n)\n</code></pre>"},{"location":"src/cpp/cpp/","title":"CPP","text":""},{"location":"src/cpp/cpp/#0","title":"0 \u5173\u4e8e\u6b64\u6587","text":"<p>\u76ee\u7684\u662f\u5f62\u6210\u4e00\u5957\u96c6 \u67e5\u8be2 \u4e0e \u516b\u80a1 \u7684\u624b\u518c</p> <ul> <li> <p>Google C++ Style Guide</p> </li> <li> <p>\u683c\u5f0f\u5316 <code>\"C_Cpp.clang_format_fallbackStyle\": \"{BasedOnStyle: Chromium, IndentWidth: 4}\",</code></p> </li> <li> <p>\u4ee5 \u300aC++ Primer Plus\u300b \u4e3a\u4e3b\u7ebf</p> </li> <li> <p>\u4ee5 \u300aEffective C++\u300b \u4e0e \u300aMore Effecitve C++\u300b \u3001\u300aEffective Modern C++\u300b \u4e3a\u89c4\u8303</p> </li> <li> <p>\u4ee5 cppreference.com \u4e0e C++ \u8bed\u8a00\u53c2\u8003\u3001ILE C/C++ \u8bed\u8a00\u53c2\u8003 \u4e3a\u6807\u51c6</p> </li> <li> <p>\u5176\u4ed6\u53c2\u8003 cpp \u9762\u8bd5\u6307\u5317\u3001C++\u8bed\u8a00\u9762\u8bd5\u95ee\u9898\u96c6\u9526\u3001C++ \u8bed\u8a00\u9762\u5411\u5bf9\u8c61\u3001C++ \u8fd0\u7b97\u7b26\u53f7\u91cd\u8f7d</p> </li> </ul> <p></p>"},{"location":"src/cpp/cpp/#1","title":"1 \u9884\u5907\u77e5\u8bc6","text":""},{"location":"src/cpp/cpp/#_1","title":"\u652f\u6301\u7684\u7f16\u7a0b\u8303\u5f0f","text":"<ul> <li>\u8fc7\u7a0b\u5f0f\u7f16\u7a0b</li> <li>\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b</li> <li>\u51fd\u6570\u5f0f\u7f16\u7a0b</li> <li>\u6cdb\u578b\u7f16\u7a0b</li> <li>\u5143\u7f16\u7a0b</li> </ul>"},{"location":"src/cpp/cpp/#_2","title":"\u7a0b\u5e8f\u5982\u4f55\u8fd0\u884c","text":"<p>\u901a\u4fd7\u7684\uff0c\u8ba1\u7b97\u673a\u662f\u5982\u4f55\u770b\u61c2\u6211\u7ed9\u5b83\u4e0b\u8fbe\u7684\u6307\u4ee4\uff1f</p> <p>\u5177\u4f53\u7684\uff0c\u5982\u4f55\u628a <code>.cpp</code>\uff08\u6587\u672c\u6587\u4ef6\uff09 -&gt; <code>.out</code>\uff08\u53ef\u6267\u884c\u6587\u4ef6\uff09\uff1f</p> <p>\u6587\u672c\u6587\u4ef6 <code>.cpp</code> -&gt; \u9884\u5904\u7406 -&gt; \u7f16\u8bd1 -&gt; \u6c47\u7f16 -&gt; \u94fe\u63a5 -&gt; \u53ef\u6267\u884c\u6587\u4ef6 <code>.out</code></p> <p>\u9884\u5904\u7406</p> <ul> <li> <p>\u4e00\u4e2a\u6587\u672c\u66ff\u6362\u5de5\u5177\uff0c\u5b83\u4f1a\u6839\u636e\u6e90\u6587\u4ef6\u4e2d\u7684\u9884\u5904\u7406\u6307\u4ee4\uff0c\u4fee\u6539\u6e90\u6587\u4ef6</p> </li> <li> <p>\u9884\u5904\u7406\u6307\u4ee4\u4ee5 <code>#</code> \u5f00\u5934\uff0c\u5982 <code>#include</code>\u3001<code>#define</code> \u7b49</p> </li> <li> <p><code>#define</code> \uff08\u5b8f\u5b9a\u4e49\uff09\u4f1a\u628a\u6307\u5b9a\u7684\u5185\u5bb9\u66ff\u6362\u5230\u5f53\u524d\u6587\u4ef6\u4e2d</p> C++<pre><code>#define MAX 100\n\nint a[MAX];               // int a[100]; \u5b9a\u4e49\u4e00\u4e2a\u5927\u5c0f\u4e3a 100 \u7684\u6570\u7ec4\nprintf(\"%d\", MAX * MAX);  // printf(\"%d\", 100*100); \u8f93\u51fa 10000\n</code></pre> <p>\u4f46\u5e76\u4e0d\u5efa\u8bae\u4f7f\u7528 <code>#define</code> \u5b9a\u4e49\u5e38\u91cf\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff0c\u5bb9\u6613\u51fa\u9519</p> <p>C \u8bed\u8a00\u81ea\u5e26\u4e00\u4e9b\u5b8f\u5b9a\u4e49\uff1a<code>__TIME__</code>\uff0c<code>__FILE__</code> \u7b49\u7b49\uff0c\u66f4\u591a\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003\uff1aC\u8bed\u8a00\u9884\u5904\u7406\u5668</p> C++<pre><code>printf(\"%s\", __TIME__);  // \u8f93\u51fa\u5f53\u524d\uff08\u9884\u5904\u7406\u5668\u66ff\u6362\u65f6\u5019\u7684\uff09\u65f6\u95f4\nprintf(\"%s\", __FILE__);  // \u8f93\u51fa\u5f53\u524d\u6587\u4ef6\u540d\n</code></pre> </li> <li> <p><code>#include</code> \u4f1a\u628a\u6307\u5b9a\u7684\u6587\u4ef6\u5185\u5bb9\u63d2\u5165\u5230\u5f53\u524d\u6587\u4ef6\u4e2d</p> </li> <li> <p>\u9884\u5904\u7406\u540e\u7684\u6587\u4ef6\uff0c\u4ee5 <code>.i</code> \u4e3a\u540e\u7f00\u540d</p> <ol> <li> <p>\u6e90\u6587\u4ef6 <code>main.c</code></p> C++<pre><code>#include &lt;stdio.h&gt;\n#define MAX 100\n\nint main() {\n  int a[MAX];\n  printf(\"%d\", MAX * MAX);\n}\n</code></pre> </li> <li> <p>\u4f7f\u7528 gcc \u751f\u6210\u9884\u5904\u7406\u540e\u7684\u6587\u4ef6 <code>main.i</code></p> Bash<pre><code>gcc -E main.c -o main.i\n</code></pre> </li> </ol> </li> </ul> <p>\u7f16\u8bd1</p> <ul> <li> <p>\u7f16\u8bd1\u5668\u4f1a\u628a\u9884\u5904\u7406\u540e\u7684\u6587\u4ef6\uff0c\u7ffb\u8bd1\u6210\u6c47\u7f16\u8bed\u8a00</p> <ul> <li> <p>\u6c47\u7f16\u8bed\u8a00\u662f\u4e00\u79cd\u4f4e\u7ea7\u8bed\u8a00\uff0c\u5b83\u4f7f\u7528\u52a9\u8bb0\u7b26\uff08mnemonic\uff09\u4ee3\u66ff\u4e8c\u8fdb\u5236\u6307\u4ee4</p> </li> <li> <p>\u6c47\u7f16\u8bed\u8a00\u662f\u4e0e\u786c\u4ef6\u76f8\u5173\u7684\uff0c\u4e0d\u540c\u7684\u786c\u4ef6\u6709\u4e0d\u540c\u7684\u6c47\u7f16\u8bed\u8a00</p> </li> </ul> </li> <li> <p>\u6c47\u7f16\u8bed\u8a00\u4ee5 <code>.s</code> \u4e3a\u540e\u7f00\u540d\uff0c\u5982 <code>main.s</code></p> <ol> <li> <p>\u4f7f\u7528 gcc \u751f\u6210\u6c47\u7f16\u6587\u4ef6 <code>main.s</code></p> Bash<pre><code>gcc -S main.i -o main.s\n</code></pre> </li> </ol> </li> </ul> <p>\u6c47\u7f16</p> <ul> <li> <p>\u6c47\u7f16\u5668\u4f1a\u628a\u6c47\u7f16\u8bed\u8a00\u7ffb\u8bd1\u6210\u673a\u5668\u8bed\u8a00</p> <ul> <li>\u673a\u5668\u8bed\u8a00\u4f7f\u7528\u4e8c\u8fdb\u5236\u6307\u4ee4</li> </ul> </li> <li> <p>\u673a\u5668\u8bed\u8a00\u4ee5 <code>.o</code> \u4e3a\u540e\u7f00\u540d\uff0c\u5982 <code>main.o</code></p> <ol> <li> <p>\u4f7f\u7528 gcc \u751f\u6210\u76ee\u6807\u6587\u4ef6 <code>main.o</code></p> Bash<pre><code>gcc -c main.s -o main.o\n</code></pre> </li> </ol> </li> </ul> <p>\u94fe\u63a5</p> <ul> <li> <p>\u94fe\u63a5\u5668\u5c06\u591a\u4e2a\u6c47\u7f16\u6587\u4ef6\u94fe\u63a5\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6</p> </li> <li> <p>\u5728 linux \u4e2d\uff0c\u53ef\u6267\u884c\u6587\u4ef6\u4ee5 <code>.out</code> \u4e3a\u540e\u7f00\u540d</p> </li> <li> <p>\u73b0\u6709 <code>a.c</code> \u6587\u4ef6\u548c <code>b.c</code> \u6587\u4ef6</p> <ul> <li><code>a.c</code> C<pre><code>#include &lt;stdio.h&gt;\n\nint main(){\n    printf(\"%d\", ADD(2, 3));\n    return 0;\n}\n</code></pre></li> <li> <p><code>b.c</code> C<pre><code>int ADD(int a, int b){\n    return a + b;\n}\n</code></pre></p> </li> <li> <p>\u4f7f\u7528 gcc \u751f\u6210 <code>.o</code> \u6587\u4ef6     Bash<pre><code>gcc -c a.c -o a.o\n</code></pre></p> <p><code>a.o</code> \u4e2d\u7684 <code>main</code> \u51fd\u6570\u8c03\u7528\u4e86 <code>ADD</code> \u51fd\u6570\uff0c\u4f46\u662f <code>ADD</code> \u51fd\u6570\u7684\u5b9a\u4e49\u5e76\u6ca1\u6709\u627e\u5230</p> <p><code>gcc</code> \u53ea\u68c0\u67e5\u8bed\u6cd5\uff0c\u4e0d\u68c0\u67e5\u51fd\u6570\u7684\u5b9a\u4e49 <code>g++</code> \u4f1a\u68c0\u67e5\u51fd\u6570\u7684\u5b9a\u4e49\uff0c\u5b83\u4f1a\u5728\u8fd9\u91cc\u5f39\u51fa\u9519\u8bef</p> Bash<pre><code>gcc -c b.c -o b.o\n</code></pre> </li> <li> <p>\u4f7f\u7528 gcc \u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6     Bash<pre><code>gcc a.o b.o -o main.out\n</code></pre></p> <p>\u94fe\u63a5\u5668\u4f1a\u68c0\u67e5\u51fd\u6570\u7684\u5b9a\u4e49\uff0c\u5982\u679c\u627e\u4e0d\u5230\u5b9a\u4e49\uff0c\u5c31\u4f1a\u62a5\u9519</p> </li> </ul> </li> </ul>"},{"location":"src/cpp/cpp/#vscode","title":"vscode \u5982\u4f55\u914d\u7f6e","text":"JSON<pre><code>{\n    \"version\": \"2.0.0\",\n    \"tasks\": [\n        {\n            \"label\": \"cmake\",\n            \"type\": \"shell\",\n            \"command\": [\n                \"rm -rf ${workspaceFolder}/build &amp;&amp;\",\n                \"cmake -B ${workspaceFolder}/build -DCMAKE_BUILD_TYPE=Debug &amp;&amp;\",\n                \"cmake --build ${workspaceFolder}/build -j\"\n            ]\n        }\n    ]\n}\n</code></pre> JSON<pre><code>{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"preLaunchTask\": \"cmake\",\n            \"name\": \"gdb\",\n            \"type\": \"cppdbg\",\n            \"request\": \"launch\",\n            \"program\": \"${workspaceFolder}/build/main\",\n            \"cwd\": \"${fileDirname}\"\n        }\n    ]\n}\n</code></pre>"},{"location":"src/cpp/cpp/#2-c","title":"2 \u5f00\u59cb\u5b66\u4e60 C++","text":""},{"location":"src/cpp/cpp/#_3","title":"\u58f0\u660e\u4e0e\u5b9a\u4e49","text":"<p>\u58f0\u660e</p> C++<pre><code>extern int a;\n</code></pre> <p>\u5b9a\u4e49\u58f0\u660e\uff08\u7b80\u79f0\u5b9a\u4e49\uff09</p> C++<pre><code>int a;\n</code></pre> <p></p>"},{"location":"src/cpp/cpp/#_4","title":"\u521d\u59cb\u5316","text":"<p>\u9ed8\u8ba4\u521d\u59cb\u5316</p> C++<pre><code>int a;          // \u672a\u77e5\u503c\nint b[6];       // \u672a\u77e5\u503c\nstd::vector&lt;int&gt; v; // \u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\nstd::string s;      // \u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\n</code></pre> <p>\u503c\u521d\u59cb\u5316</p> C++<pre><code>int a = int();  // 0\nstd::vector&lt;int&gt; v = std::vector&lt;int&gt;();// \u76f4\u63a5\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\nstd::string s = std::string();          // \u76f4\u63a5\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\n</code></pre> <p>\u62f7\u8d1d\u521d\u59cb\u5316</p> C++<pre><code>int a = 6;\nstd::string s = \"jiao\"; // \u8c03\u7528\u6784\u9020\u51fd\u6570\nstd::string ss = s;     // \u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\n</code></pre> <p>\u76f4\u63a5\u521d\u59cb\u5316</p> C++<pre><code>int a(6);\nstd::vector&lt;int&gt; v(6);      // \u8c03\u7528\u6784\u9020\u51fd\u6570, \u5927\u5c0f\u4e3a 6\nstd::vector&lt;int&gt; vv(3, 1);  // \u8c03\u7528\u6784\u9020\u51fd\u6570, \u5927\u5c0f\u4e3a 3, \u503c\u90fd\u4e3a 1\nstd::string s(\"jiao\");      // \u8c03\u7528\u6784\u9020\u51fd\u6570\n</code></pre> <p>\u5217\u8868\u521d\u59cb\u5316</p> C++<pre><code>int a{6};\nstd::vector&lt;int&gt; v{3, 1};  // \u5927\u5c0f\u4e3a 2, \u503c\u4e3a 3, 1\nstd::string s{\"jiao\"};  // \u8c03\u7528\u6784\u9020\u51fd\u6570\n</code></pre> <p></p>"},{"location":"src/cpp/cpp/#3","title":"3 \u5904\u7406\u6570\u636e","text":""},{"location":"src/cpp/cpp/#auto","title":"auto","text":"<p>\u540c \u51fd\u6570\u6a21\u7248 \u4e2d\u7684\u7c7b\u578b\u63a8\u5bfc</p> <ul> <li> <p><code>auto list = {1, 2, 3, 4}</code></p> <p>\u8fd9\u91cc <code>list</code> \u7684\u7c7b\u578b\u662f <code>std::initializer_list&lt;int&gt;</code>\uff0c\u5143\u7d20\u53ea\u8bfb</p> </li> <li> <p><code>auto x{1]</code></p> <p>\u8fd9\u91cc <code>x</code> \u7684\u7c7b\u578b\u662f <code>int</code></p> </li> </ul>"},{"location":"src/cpp/cpp/#decltype","title":"decltype","text":""},{"location":"src/cpp/cpp/#_5","title":"\u7c7b\u578b\u8f6c\u6362","text":"<ul> <li> <p><code>static_cast</code> \u9759\u6001\u7c7b\u578b\u8f6c\u6362</p> C++<pre><code>auto x = static_cast&lt;char&gt;(65);\n// \u5c06 int 65 \u8f6c\u6362\u4e3a char 'A'\n</code></pre> </li> <li> <p><code>dynamic_cast</code> \u52a8\u6001\u7c7b\u578b\u8f6c\u6362</p> </li> <li> <p><code>reinterpret_cast</code> \u91cd\u65b0\u89e3\u91ca\u7c7b\u578b\u8f6c\u6362\uff08\u5f3a\u8f6c\uff09</p> </li> <li> <p><code>const_cast</code> \u53bb\u9664 <code>const</code> \u9650\u5b9a\u7b26</p> C++<pre><code>const int x = 666;\nint* p = const_cast&lt;int*&gt;(&amp;x);\n*p = 888;\n</code></pre> </li> </ul> <p></p>"},{"location":"src/cpp/cpp/#4","title":"4 \u590d\u5408\u7c7b\u578b","text":""},{"location":"src/cpp/cpp/#_6","title":"\u6570\u7ec4","text":"C++<pre><code>int arr[3];\nint brr[] = {1, 2, 3};\nint crr[3] = {1, 2}; // \u5269\u4e0b\u7684\u5143\u7d20\u521d\u59cb\u5316\u4e3a 0\n</code></pre>"},{"location":"src/cpp/cpp/#_7","title":"\u6307\u9488","text":""},{"location":"src/cpp/cpp/#6","title":"6 \u5206\u652f\u8bed\u53e5\u548c\u903b\u8f91\u8fd0\u7b97\u7b26","text":""},{"location":"src/cpp/cpp/#if","title":"if","text":"<p>if-init</p> C++<pre><code>if (auto p = getPointer(); p != nullptr) {\n    // \u4f7f\u7528 p\n}\n</code></pre> <ul> <li>\u5c06 <code>p</code> \u7684\u751f\u547d\u5468\u671f\u9650\u5236\u5728 <code>if</code> \u8bed\u53e5\u5757\u5185</li> </ul> <p></p>"},{"location":"src/cpp/cpp/#7-8","title":"7 &amp; 8 \u51fd\u6570\u63a2\u5e7d","text":""},{"location":"src/cpp/cpp/#pass-by-any","title":"Pass by Any","text":"<ul> <li> <p>\u80fd\u7528 <code>const int&amp;</code> \u5c31\u5c3d\u91cf\u522b\u503c\u4f20\u9012\uff0c\u7279\u522b\u662f\u4f20\u9012\u5927\u5bf9\u8c61\u65f6</p> </li> <li> <p><code>STL</code> \u76f4\u63a5\u4f20\u503c</p> </li> </ul> <p>Pass by Value\uff08\u4f20\u503c\uff09</p> C++<pre><code>void PassByValue(int x) {\n    // PassByValue(x + 6);\n    // PassByValue(x);\n}\n</code></pre> <ul> <li> <p>\u53ef\u4ee5\u4f20\u5165\u5de6\u503c\u6216\u53f3\u503c</p> </li> <li> <p>\u4f20\u5165\u7684\u503c\u662f\u4e00\u4e2a\u526f\u672c\uff0c\u51fd\u6570\u5185\u90e8\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd\u5916\u90e8\u53d8\u91cf</p> </li> </ul> <p>Pass by Reference\uff08\u4f20\u5f15\u7528\uff09</p> C++<pre><code>void PassByReference(int&amp; x) {\n    // PassByReference(x);\n}\n</code></pre> <ul> <li> <p>\u53ea\u80fd\u4f20\u5165\u5de6\u503c</p> </li> <li> <p>\u4f20\u5165\u7684\u503c\u662f\u4e00\u4e2a\u5f15\u7528\uff0c\u51fd\u6570\u5185\u90e8\u4fee\u6539\u4f1a\u5f71\u54cd\u5916\u90e8\u53d8\u91cf</p> </li> </ul> <p>Pass by Rvalue Reference\uff08\u4f20\u53f3\u503c\u5f15\u7528\uff09</p> C++<pre><code>void PassByRvalueReference(int&amp;&amp; x) {\n    // PassByRvalueReference(x + 6);\n}\n</code></pre> <ul> <li> <p>\u53ea\u80fd\u4f20\u5165\u53f3\u503c</p> </li> <li> <p>\u4f20\u5165\u7684\u503c\u662f\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\uff0c\u4f8b\u5982 <code>x + 6</code> \u7684\u7ed3\u679c\uff0c\u51fd\u6570\u5185\u90e8\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd\u5916\u90e8\u53d8\u91cf\uff0c\u53ea\u662f\u62ff\u5230\u4e86\u8fd9\u4e2a\u4e34\u65f6\u53d8\u91cf\u7684\u5f15\u7528</p> </li> </ul> <p>Pass by Pointer\uff08\u4f20\u6307\u9488\uff09</p> C++<pre><code>void PassByPointer(int* x) {\n    // int y = 6;\n    // int* x = &amp;y;\n    // PassByPointer(x);\n}\n</code></pre> <ul> <li> <p>\u53ef\u4ee5\u4f20\u5165\u5de6\u503c\u6216\u53f3\u503c</p> </li> <li> <p>\u4f20\u5165\u7684\u503c\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u51fd\u6570\u5185\u90e8\u4fee\u6539\u4f1a\u5f71\u54cd\u5916\u90e8\u53d8\u91cf</p> </li> </ul> <p>Pass by Smart Pointer\uff08\u4f20\u667a\u80fd\u6307\u9488\uff09</p> C++<pre><code>void PassBySmartPointer(std::unique_ptr&lt;std::string&gt; s) {\n    // std::unique_ptr&lt;std::string&gt; p = std::make_unique&lt;std::string&gt;(\"Hello\");\n    // PassBySmartPointer(std::move(p));\n    // PassBySmartPointer(std::make_unique&lt;std::string&gt;(\"Hello\"));\n}\n</code></pre> <ul> <li> <p>\u53ef\u4ee5\u4f20\u5165\u5de6\u503c\u6216\u53f3\u503c</p> </li> <li> <p>\u4e25\u683c\u4f7f\u7528 <code>std::make_xx</code> \u521b\u5efa\u667a\u80fd\u6307\u9488</p> </li> </ul> <p>Pass by STL\uff08\u4f20\u9012STL\uff09</p> C++<pre><code>void PassBySTL(std::vector&lt;int&gt; v) {\n    // std::vector&lt;int&gt; v = {1, 2, 3};\n    // PassBySTL(v);\n    // PassBySTL({4, 5, 6});\n    // PassBySTL(std::move(v));\n}\n</code></pre> <ul> <li> <p>\u53ef\u4ee5\u4f20\u5165\u5de6\u503c\u6216\u53f3\u503c</p> </li> <li> <p>\u5982\u679c\u4f7f\u7528 <code>std::move</code>\uff0c\u4f1a\u5c06 <code>v</code> \u7684\u8d44\u6e90\u642c\u8d70\uff0c<code>v</code> \u53d8\u6210\u4e00\u4e2a\u7a7a\u7684\u5bb9\u5668</p> </li> </ul> <p></p>"},{"location":"src/cpp/cpp/#return-any","title":"Return Any","text":"<p>Return Value\uff08\u8fd4\u56de\u503c\uff09</p> C++<pre><code>std::string ReturnValue() {\n    std::string s = \"Hello\";\n    return s;   // \u8fd4\u56de\u503c\u662f s \u7684\u526f\u672c\n}\n</code></pre> <p>Return Reference\uff08\u8fd4\u56de\u5f15\u7528\uff09</p> <p>\u4e0d\u662f\u975e\u5e38\u6e05\u6670\u7684\u573a\u666f\u4e0b\uff0c\u4e0d\u8981\u8fd4\u56de\u5f15\u7528</p> C++<pre><code>class A {\n   public:\n    A(int val) : x(val) {}\n    /*\n    @return x \u7684\u5f15\u7528\n    */\n    int&amp; modifyX() { return x; }\n    // a.modifyX() += 6;\n    // \u901a\u8fc7\u5f15\u7528\u4fee\u6539 x \u7684\u503c\n   private:\n    int x;\n};\n</code></pre> <p>Return Rvalue Reference\uff08\u8fd4\u56de\u53f3\u503c\u5f15\u7528\uff09</p> <p>\u5624\u5624\u5a74</p> <p>Return Pointer\uff08\u8fd4\u56de\u6307\u9488\uff09</p> C++<pre><code>int* ReturnPointer() {\n    int* p = new int(6);\n    return p;\n    // auto* p = ReturnPointer();\n}\n</code></pre> <p>Return Smart Pointer\uff08\u8fd4\u56de\u667a\u80fd\u6307\u9488\uff09</p> C++<pre><code>std::unique_ptr&lt;std::string&gt; ReturnSmartPointer() {\n    return std::make_unique&lt;std::string&gt;(\"Hello\");\n    // auto p = ReturnSmartPointer();\n}\n</code></pre> <p></p>"},{"location":"src/cpp/cpp/#_8","title":"\u51fd\u6570\u6a21\u7248","text":"<ul> <li> <p>\u6a21\u7248\u5728\u7f16\u8bd1\u65f6\u88ab\u5b9e\u4f8b\u5316\uff0c\u4f8b\u5982 <code>mmax(1, 2.0)</code> \u4f1a\u88ab\u5b9e\u4f8b\u5316\u4e3a <code>double mmax&lt;int, double&gt;(int, double)</code></p> C++<pre><code>template &lt;typename T1, typename T2&gt;\nauto mmax(T1 a, T2 b) {\n    return a &gt; b ? a : b;\n}\n</code></pre> </li> <li> <p>\u5f15\u7528\u7c7b\u578b\u63a8\u5bfc</p> C++<pre><code>template &lt;typename T&gt;\nvoid swap(T &amp;a, T &amp;b) {\n    T temp = a;\n    a = b;\n    b = temp;\n}\n</code></pre> <ol> <li> <p>\u63a8\u5bfc <code>T</code> \u7684\u7c7b\u578b\u65f6\uff0c\u5f15\u7528\u6027\u5148\u88ab\u5ffd\u7565</p> </li> <li> <p>\u4fdd\u7559\u7c7b\u578b\u9650\u5b9a\u7b26</p> </li> <li> <p>\u63a8\u5bfc\u51fa\u57fa\u672c\u7c7b\u578b</p> </li> </ol> <p>\u4f8b\u5982 <code>swap(x,y)</code>, \u4e14 <code>x</code> \u548c <code>y</code> \u90fd\u662f <code>int</code> \u7c7b\u578b\uff0c\u90a3\u4e48</p> <ul> <li> <p><code>T</code> \u4e3a <code>int</code></p> </li> <li> <p><code>a</code> \u548c <code>b</code> \u7684\u7c7b\u578b\u4e3a <code>int &amp;</code></p> </li> </ul> </li> <li> <p>\u6307\u9488\u7c7b\u578b\u63a8\u5bfc</p> C++<pre><code>template &lt;typename T&gt;\nvoid swap(T* a, T* b) {\n    T c = *a;\n    *a = *b;\n    *b = c;\n}\n// int a = 5;\n// int b = 10;\n// int* ptr_a = &amp;a;\n// int* ptr_b = &amp;b;\n// swap(ptr_a, ptr_b);\n</code></pre> <p>\u540c\u4e0a\uff0c\u5982\u679c\u662f <code>const int* ptr_a</code> \u5219\u5728\u7f16\u8bd1\u65f6 <code>read-only variable is not assignable</code></p> </li> <li> <p>\u6309\u503c\u4f20\u9012\u63a8\u5bfc</p> C++<pre><code>template &lt;typename T&gt;\nvoid f(T x) {\n    x = 666;\n    std::cout &lt;&lt; x &lt;&lt; std::endl;\n}\n</code></pre> <p>\u4f8b\u5982 <code>f(x)</code>\uff0c\u4e14 <code>x</code> \u662f <code>const int&amp;</code> \u7c7b\u578b\uff0c\u90a3\u4e48</p> <ul> <li> <p>\u5ffd\u7565\u5f15\u7528\u6027\uff0c\u518d\u5ffd\u7565\u7c7b\u578b\u9650\u5b9a\u7b26</p> </li> <li> <p><code>T</code> \u4e3a <code>int</code></p> </li> <li> <p><code>x</code> \u7684\u7c7b\u578b\u4e3a <code>int</code></p> </li> </ul> </li> </ul> <p></p>"},{"location":"src/cpp/cpp/#_9","title":"\u5185\u8054\u51fd\u6570","text":"C++<pre><code>inline int add(int a, int b) {\n    return a + b;\n}\n</code></pre> <ul> <li>\u5185\u8054\u51fd\u6570\u4f1a\u5728\u7f16\u8bd1\u65f6\u88ab\u5c55\u5f00\uff0c\u51cf\u5c11\u51fd\u6570\u8c03\u7528\u7684\u5f00\u9500\uff0c\u53ea\u9002\u7528\u4e8e\u5c0f\u51fd\u6570</li> </ul>"},{"location":"src/cpp/cpp/#9","title":"9 \u5185\u5b58\u6a21\u578b\u548c\u540d\u79f0\u7a7a\u95f4","text":""},{"location":"src/cpp/cpp/#_10","title":"\u5b58\u50a8\u8bf4\u660e\u7b26\u548c\u7c7b\u578b\u9650\u5b9a\u7b26","text":"<p>\u5b58\u50a8\u8bf4\u660e\u7b26</p> <ul> <li> <p><code>register</code></p> <ul> <li> <p>\u5df2\u88ab\u5f03\u7528</p> </li> <li> <p>\u5efa\u8bae\u5c06\u53d8\u91cf\u5b58\u50a8\u5728\u5bc4\u5b58\u5668\u4e2d</p> </li> <li> <p>\u4e0d\u80fd\u53d6\u5730\u5740</p> </li> </ul> </li> <li> <p><code>static</code></p> <ul> <li> <p>\u9759\u6001\u5c40\u90e8\u53d8\u91cf</p> <ul> <li>\u53ea\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e14\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u4e00\u76f4\u5b58\u5728</li> </ul> </li> <li> <p>\u9759\u6001\u5168\u5c40\u53d8\u91cf / \u9759\u6001\u51fd\u6570</p> <ul> <li>\u53ea\u80fd\u5728\u5f53\u524d\u6587\u4ef6\u4e2d\u4f7f\u7528</li> </ul> </li> <li> <p>\u9759\u6001\u6210\u5458\u53d8\u91cf</p> <ul> <li>\u6240\u6709\u5bf9\u8c61\u5171\u4eab\uff0c\u800c\u4e0d\u662f\u6bcf\u4e2a\u5bf9\u8c61\u6709\u4e00\u4efd</li> </ul> </li> <li> <p>\u9759\u6001\u6210\u5458\u51fd\u6570</p> <ul> <li>\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u5bf9\u8c61\uff0c\u800c\u662f\u5c5e\u4e8e\u7c7b</li> </ul> C++<pre><code>class Math {\n   public:\n    static int add(int a, int b) { return a + b; }\n};\n\nint main() {\n    std::cout &lt;&lt; Math::add(2, 3);  // \u76f4\u63a5\u8c03\u7528\n    return 0;\n}\n</code></pre> </li> </ul> </li> <li> <p><code>extern</code></p> <ul> <li> <p>\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\uff0c\u4f46\u4e0d\u5b9a\u4e49\u5b83</p> </li> <li> <p>\u544a\u8bc9\u7f16\u8bd1\u5668\uff0c\u8fd9\u4e2a\u53d8\u91cf\u5728\u5176\u4ed6\u5730\u65b9\u5b9a\u4e49\uff0c\u4f46\u4f60\u53ef\u4ee5\u5728\u5f53\u524d\u6587\u4ef6\u4e2d\u4f7f\u7528\u5b83</p> </li> <li> <p>\u901a\u5e38\u7528\u4e8e\u5728\u591a\u4e2a\u6587\u4ef6\u4e2d\u5171\u4eab\u5168\u5c40\u53d8\u91cf</p> </li> <li> <p>\u4e0e <code>static</code> \u76f8\u53cd</p> </li> <li> <p>\u4e0e <code>static</code> \u4e00\u8d77\u4f7f\u7528\u65f6\uff0c<code>extern</code> \u4f1a\u8986\u76d6 <code>static</code></p> </li> </ul> C++<pre><code>extern int x; // \u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\n</code></pre> </li> <li> <p><code>mutable</code></p> <ul> <li> <p>\u4fee\u9970\u7c7b\u7684\u6210\u5458\u53d8\u91cf</p> </li> <li> <p>\u5141\u8bb8\u4fee\u6539\uff08\u88ab <code>const</code> \u9650\u5b9a\u7684\uff09\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf</p> </li> </ul> C++<pre><code>class A {\n   public:\n    mutable int x;\n    int y;\n    A() {};\n};\n\nint main() {\n    const A a;\n    a.x = 666;  // \u53ef\u4ee5\u4fee\u6539\n    // a.y = 888; // \u4e0d\u53ef\u4ee5\u4fee\u6539\n    return 0;\n}\n</code></pre> </li> </ul> <p>\u7c7b\u578b\u9650\u5b9a\u7b26</p> <ul> <li> <p><code>const</code></p> <ul> <li> <p>\u5e38\u91cf</p> </li> <li> <p>\u4fee\u9970\u53d8\u91cf\uff0c\u8868\u793a\u53d8\u91cf\u7684\u503c\u4e0d\u80fd\u88ab\u4fee\u6539</p> </li> <li> <p>\u4fee\u9970\u51fd\u6570\uff0c\u8868\u793a\u51fd\u6570\u4e0d\u4f1a\u4fee\u6539\u6210\u5458\u53d8\u91cf</p> </li> </ul> C++<pre><code>const int* p = &amp;x; // \u6307\u9488\u6307\u5411\u7684\u503c\u4e0d\u80fd\u88ab\u4fee\u6539\uff0c\u7b49\u4ef7\u4e8e int const* p = &amp;x;\nint* const p = &amp;x; // \u6307\u9488\u4e0d\u80fd\u88ab\u4fee\u6539\nconst int* const p = &amp;x; // \u6307\u9488\u548c\u6307\u9488\u6307\u5411\u7684\u503c\u90fd\u4e0d\u80fd\u88ab\u4fee\u6539\n</code></pre> </li> <li> <p><code>mutable</code></p> <ul> <li> <p>\u5141\u8bb8\u5728 <code>const</code> \u5bf9\u8c61\u4e2d\u4fee\u6539\u6210\u5458\u53d8\u91cf</p> </li> <li> <p>\u4fee\u6539\u7684\u6210\u5458\u4e0d\u5e94\u8be5\u5f71\u54cd\u5bf9\u8c61\u7684\u903b\u8f91\u72b6\u6001\uff0c\u5373\u5bf9\u8c61\u7684\u903b\u8f91\u72b6\u6001\u662f <code>const</code></p> </li> </ul> C++<pre><code>class A {\n   public:\n    mutable int x;\n    A() : x(0) {}\n    void setX(int val) const { x = val; }  // \u53ef\u4ee5\u4fee\u6539\n};\n</code></pre> </li> <li> <p><code>constexpr</code></p> <ul> <li> <p>\u5e38\u91cf\u8868\u8fbe\u5f0f</p> </li> <li> <p>\u4fee\u9970\u53d8\u91cf\uff0c\u8868\u793a\u53d8\u91cf\u7684\u503c\u5728\u7f16\u8bd1\u671f\u95f4\u5c31\u80fd\u786e\u5b9a</p> </li> <li> <p>\u4fee\u9970\u51fd\u6570\uff0c\u8868\u793a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u5728\u7f16\u8bd1\u671f\u95f4\u5c31\u80fd\u786e\u5b9a\uff08\u5982\u679c\u51fd\u6570\u7684\u53c2\u6570\u4e5f\u662f\u5e38\u91cf\u8868\u8fbe\u5f0f\uff09</p> </li> </ul> C++<pre><code>constexpr int x = 666;\nint constexpr add(int a, int b) { return a + b; }\n</code></pre> </li> </ul> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f <code>enum</code>\uff0c\u679a\u4e3e C++<pre><code>enum nums {\n    ZERO,     // \u679a\u4e3e\u503c\u4ece 0 \u5f00\u59cb\n    ONE = 6,  // \u4e5f\u53ef\u4ee5\u6307\u5b9a\u679a\u4e3e\u503c \n    TWO       // 7, \u5982\u679c\u6ca1\u6709\u6307\u5b9a\uff0c\u679a\u4e3e\u503c\u4f1a\u81ea\u52a8\u9012\u589e\n};\n</code></pre></p> <p>\u66f4\u5b89\u5168\u7684\u662f\u5f3a\u7c7b\u578b\u679a\u4e3e <code>enum class : int</code></p> C++<pre><code>enum class nums : char {\n    ZERO\n    ONE\n    TWO\n};\n</code></pre> <ul> <li> <p><code>volatile</code></p> <ul> <li> <p>\u544a\u8bc9\u7f16\u8bd1\u5668\uff0c\u53d8\u91cf\u7684\u503c\u53ef\u80fd\u4f1a\u5728\u7a0b\u5e8f\u7684\u63a7\u5236\u4e4b\u5916\u88ab\u4fee\u6539</p> </li> <li> <p>\u901a\u5e38\u7528\u4e8e\u591a\u7ebf\u7a0b\u3001\u4e2d\u65ad\u5904\u7406\u7b49</p> </li> </ul> C++<pre><code>volatile int x;\n</code></pre> </li> </ul> <p></p>"},{"location":"src/cpp/cpp/#_11","title":"\u5185\u5b58\u5206\u533a","text":"<p>\u4ece \u9ad8 \u5730\u5740\u5230 \u4f4e \u5730\u5740\uff1a</p> <ol> <li> <p>\u5185\u6838\u7a7a\u95f4 <code>env</code></p> <ul> <li>\u5185\u6838\u5904\u7406\u7cfb\u7edf\u8c03\u7528\u3001\u786c\u4ef6\u4ea4\u4e92\u3001\u8fdb\u7a0b\u8c03\u5ea6\u7b49</li> </ul> </li> <li> <p>\u6808\u533a <code>stack</code></p> <ul> <li>\u5411 \u4f4e \u5730\u5740\u65b9\u5411\u589e\u957f</li> </ul> C++<pre><code>class A{\npublic:\n  int a;\n};\n</code></pre> C++<pre><code>void func(){\n  int a1; // \u6808\u533a\n  A a2;   // \u6808\u533a\n  return ;\n}\n</code></pre> </li> <li> <p>\u52a8\u6001\u94fe\u63a5\u5e93\uff08\u6587\u4ef6\u6620\u5c04\u533a\uff09</p> </li> <li> <p>\u5806\u533a <code>heap</code></p> <ul> <li>\u5411 \u9ad8 \u5730\u5740\u65b9\u5411\u589e\u957f</li> </ul> C++<pre><code>void func(){\n  int* a3 = new int;  // \u5806\u533a\n  A* a4 = new A;      // \u5806\u533a\n  return ;\n}\n</code></pre> </li> <li> <p>\u9759\u6001\u533a <code>static</code></p> <ul> <li> <p>\u6709\u65f6\u4e5f\u79f0 \u5168\u5c40\u533a <code>global</code>\uff0c\u8fd9\u4fe9\u5728\u5185\u5b58\u4e2d\u540c\u4e00\u5757\u533a\u57df</p> </li> <li> <p>\u5411 \u9ad8 \u5730\u5740\u65b9\u5411\u589e\u957f</p> </li> <li> <p>\u6309\u7167\u521d\u59cb\u5316\u65b9\u5f0f\u5206\u4e3a\uff1a</p> <ul> <li> <p>\u9759\u6001\u5c40\u90e8\u53d8\u91cf</p> C++<pre><code>void func(){\n  static int a7;      // \u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff0c\u5728 .bss \u6bb5\n  static int a8 = 8;  // \u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff0c\u5728 .data \u6bb5\n  return ;\n}\n</code></pre> </li> <li> <p>\u9759\u6001\u5168\u5c40\u53d8\u91cf</p> C++<pre><code>static int a5;    // \u9759\u6001\u5168\u5c40\u53d8\u91cf\uff0c\u5728 .bss \u6bb5\nstatic int a6 = 6;// \u9759\u6001\u5168\u5c40\u53d8\u91cf\uff0c\u5728 .data \u6bb5\n</code></pre> </li> <li> <p>\u5168\u5c40\u53d8\u91cf</p> C++<pre><code>int a9;       // \u5168\u5c40\u53d8\u91cf\uff0c\u5728 .bss \u6bb5\nint a10 = 10; // \u5168\u5c40\u53d8\u91cf\uff0c\u5728 .data \u6bb5\n</code></pre> </li> <li> <p>\u5e38\u91cf\u533a <code>.rodata</code>\uff0cread only data</p> <ul> <li>\u4e0e\u524d\u4e09\u79cd\u6240\u5728\u7684\u5185\u5b58\u533a\u57df\u4e0d\u8fde\u7eed</li> </ul> C++<pre><code>const int a11 = 1;  // \u5e38\u91cf\uff0c\u5728 .rodata \u6bb5\nconst char* p = \"1\";// \u5e38\u91cf\uff0c\u5728 .rodata \u6bb5\n</code></pre> </li> </ul> </li> </ul> </li> <li> <p>\u4ee3\u7801\u533a <code>.text</code></p> <ul> <li>\u5b58\u653e\u7a0b\u5e8f\u7684\u4ee3\u7801\uff08\u53ef\u6267\u884c\u6587\u4ef6\uff09</li> </ul> C++<pre><code>void func(){  // \u51fd\u6570\u5165\u53e3\u5728\u4ee3\u7801\u533a\n  return ;\n}\n</code></pre> </li> </ol> <p></p>"},{"location":"src/cpp/cpp/#_12","title":"\u5b58\u50a8\u6301\u7eed\u6027\uff08\u751f\u547d\u5468\u671f\uff09","text":"<p>\u81ea\u52a8\u5b58\u50a8\u6301\u7eed\u6027</p> <ul> <li> <p>\u51fd\u6570\u5185\u90e8\u7684\u5c40\u90e8\u53d8\u91cf</p> </li> <li> <p>\u51fd\u6570\u8c03\u7528\u65f6\u5206\u914d\u5185\u5b58\uff0c\u51fd\u6570\u7ed3\u675f\u65f6\u91ca\u653e\u5185\u5b58</p> </li> </ul> <p>\u9759\u6001\u5b58\u50a8\u6301\u7eed\u6027</p> <ul> <li> <p>\u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u53d8\u91cf</p> </li> <li> <p>\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5206\u914d\u5185\u5b58\uff0c\u7a0b\u5e8f\u7ed3\u675f\u65f6\u91ca\u653e\u5185\u5b58</p> </li> </ul> <p>\u52a8\u6001\u5b58\u50a8\u6301\u7eed\u6027</p> <ul> <li> <p><code>new</code>\u3001<code>malloc</code> \u5206\u914d\u7684\u5185\u5b58</p> </li> <li> <p>\u624b\u52a8\u521b\u5efa\uff0c\u624b\u52a8\u91ca\u653e</p> </li> </ul> <p>\u7ebf\u7a0b\u5b58\u50a8\u6301\u7eed\u6027</p> <ul> <li> <p><code>thread_local</code> \u4fee\u9970\u7684\u53d8\u91cf</p> </li> <li> <p>\u6bcf\u4e2a\u7ebf\u7a0b\u6709\u4e00\u4efd\u72ec\u7acb\u7684\u53d8\u91cf</p> </li> </ul> <p></p>"},{"location":"src/cpp/cpp/#_13","title":"\u4f5c\u7528\u57df","text":"<p>\u4ee3\u7801\u5757</p> <ul> <li>\u7531 <code>{}</code> \u5305\u56f4\u7684\u533a\u57df</li> </ul> <p>\u5168\u5c40</p> <ul> <li><code>{}</code> \u5916\u90e8\u7684\u533a\u57df</li> </ul> <p></p>"},{"location":"src/cpp/cpp/#_14","title":"\u94fe\u63a5\u6027","text":"<p>\u5916\u90e8\u94fe\u63a5\u6027</p> <ul> <li>\u5728 <code>{}</code> \u5916\u90e8\u5b9a\u4e49\uff0c\u4e14\u6ca1\u6709\u4f7f\u7528 <code>static</code> \u4fee\u9970</li> </ul> <p>\u5185\u90e8\u94fe\u63a5\u6027</p> <ul> <li>\u5728 <code>{}</code> \u5185\u90e8\u5b9a\u4e49\uff0c\u4e14\u4f7f\u7528 <code>static</code> \u4fee\u9970</li> </ul> <p></p>"},{"location":"src/cpp/cpp/#_15","title":"\u547d\u540d\u7a7a\u95f4","text":"C++<pre><code>namespace A{\n  int a = 1;\n  namespace B{  // \u5141\u8bb8\u5d4c\u5957\n    int a = 2;  // A::B::a\n  }\n}\n</code></pre>"},{"location":"src/cpp/cpp/#10","title":"10 \u5bf9\u8c61\u548c\u7c7b","text":""},{"location":"src/cpp/cpp/#_16","title":"\u547d\u540d","text":"<ul> <li> <p>\u7c7b\u6587\u4ef6\u540d <code>my_class_interface.hpp</code>\uff0c\u5c0f\u5199\u52a0\u4e0b\u5212\u7ebf\uff0c\u4e3a\u5168\u5e73\u53f0\u7edf\u4e00</p> </li> <li> <p>\u7c7b\u540d <code>MyClassInterface</code>\uff0c\u5927\u9a7c\u5cf0\u547d\u540d\u6cd5\uff0c\u4e0d\u8981\u4f7f\u7528\u52a8\u8bcd</p> </li> <li> <p>\u79c1\u6709\u6210\u5458\u53d8\u91cf <code>_myMemberVariable</code>\uff0c\u5c0f\u9a7c\u5cf0\u547d\u540d\u6cd5\uff0c\u524d\u7f00\u52a0\u4e0b\u5212\u7ebf</p> </li> <li> <p>\u51fd\u6570 <code>getMyMemberVariable()</code>\uff0c\u5c0f\u9a7c\u5cf0\u547d\u540d\u6cd5\uff0c\u52a8\u8bcd\u5f00\u5934</p> </li> <li> <p>\u5e38\u91cf <code>MY_CONSTANT_VALUE</code>\uff0c\u5168\u5927\u5199\u52a0\u4e0b\u5212\u7ebf</p> </li> <li> <p>\u6307\u9488\u540e\u7f00 <code>Ptr</code>\uff0c\u5f15\u7528\u540e\u7f00 <code>Ref</code></p> </li> </ul> <p></p>"},{"location":"src/cpp/cpp/#_17","title":"\u7c7b\u7684\u8bbe\u8ba1","text":"<ul> <li> <p>\u7528\u975e\u6210\u5458\u975e\u53cb\u5143\u51fd\u6570\u6765\u66ff\u6362\u6210\u5458\u51fd\u6570\uff0c\u8ba9\u7c7b\u53ef\u4ee5\u66f4\u52a0\u4e13\u4e00</p> <ul> <li> <p>\u4f8b\u5982 STL \u4e2d <code>std::vector</code>\uff0c<code>std::string</code> \u6ca1\u6709 <code>std::sort</code></p> </li> <li> <p>\u53ef\u4ee5\u5728\u4e0d\u4fee\u6539\u5df2\u6709\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\uff0c\u4e3a\u5b83\u589e\u52a0\u65b0\u529f\u80fd</p> </li> </ul> </li> </ul> <p></p>"},{"location":"src/cpp/cpp/#_18","title":"\u4e09\u5927\u7279\u6027","text":"<p>\u5c01\u88c5</p> <ul> <li> <p>\u5c06\u5ba2\u89c2\u4e8b\u7269\u62bd\u8c61\u4e3a\u7c7b\uff0c\u9690\u85cf\u5b9e\u73b0\u7ec6\u8282\uff0c\u53ea\u63d0\u4f9b\u63a5\u53e3</p> </li> <li> <p>\u5bf9\u5185\u90e8\u6570\u636e\u63d0\u4f9b\u4e86\u4e0d\u540c\u7ea7\u522b\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u4ee5\u4fdd\u62a4\u6570\u636e</p> </li> </ul> <p>\u7ee7\u627f</p> <ul> <li> <p>\u5b50\u7c7b\u53ef\u4ee5\u7ee7\u627f\uff08\u6216\u8005\u6269\u5c55\uff09\u7236\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5</p> </li> <li> <p>\u901a\u8fc7\u7ee7\u627f\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4ee3\u7801\u7684\u590d\u7528</p> </li> <li> <p>\u4e3b\u8981\u6709\u4e24\u79cd\u7ee7\u627f\u7684\u6982\u5ff5\uff1a\u5b9e\u73b0\u7ee7\u627f \u548c \u63a5\u53e3\u7ee7\u627f</p> <ul> <li> <p>\u5b9e\u73b0\u7ee7\u627f \u662f\u6307\uff08\u5b50\u7c7b\uff09\u7ee7\u627f\uff08\u7236\u7c7b\uff09\u7684\u5b9e\u73b0</p> C++<pre><code>#include &lt;iostream&gt;\n\nclass A {\n   public:\n    A() { std::cout &lt;&lt; 666 &lt;&lt; std::endl; }\n};\n\nclass B : public A {};\n\nint main() {\n    B b;  // 666\n    return 0;\n}\n</code></pre> </li> <li> <p>\u63a5\u53e3\u7ee7\u627f \u662f\u6307\uff08\u5b50\u7c7b\uff09\u7ee7\u627f\uff08\u7236\u7c7b\uff09\u7684\u63a5\u53e3</p> <p>\u5373\uff0c\u4f7f\u7528 \u7eaf\u865a\u51fd\u6570 \u7684 \u52a8\u6001\u591a\u6001</p> </li> </ul> </li> </ul> <p>\u591a\u6001</p> <ul> <li> <p>\u591a\u79cd\u5f62\u6001\uff1a\u540c\u4e00\u4e2a\u63a5\u53e3\uff0c\u4e0d\u540c\u7684\u8868\u73b0</p> <ol> <li> <p>\u52a8\u6001\uff08\u8fd0\u884c\u65f6\uff09\u591a\u6001\uff0c\u901a\u8fc7\uff08\u7ee7\u627f+\u865a\u51fd\u6570\uff09\u5b9e\u73b0</p> C++<pre><code>#include &lt;iostream&gt;\n\nclass A {\n   public:\n    virtual void func1() = 0;                                // \u7eaf\u865a\u51fd\u6570\u5fc5\u91cd\u5199\n    virtual void func2() { std::cout &lt;&lt; 666 &lt;&lt; std::endl; }  // \u865a\u51fd\u6570\u53ef\u9009\u91cd\u5199\n};\n\nclass B : public A {\n   public:\n    void func1() override { std::cout &lt;&lt; 888 &lt;&lt; std::endl; }\n    // void func2() override { std::cout &lt;&lt; 555 &lt;&lt; std::endl; }\n};\n\nint main() {\n    A *a = new B;\n    a-&gt;func1();  // 888\n    a-&gt;func2();  // 666\n    return 0;\n}\n</code></pre> </li> <li> <p>\u9759\u6001\uff08\u7f16\u8bd1\u65f6\uff09\u591a\u6001</p> <ul> <li> <p>\u51fd\u6570\u91cd\u8f7d</p> </li> <li> <p>\u8fd0\u7b97\u7b26\u91cd\u8f7d</p> </li> </ul> </li> </ol> </li> </ul> <p></p>"},{"location":"src/cpp/cpp/#_19","title":"\u8bbf\u95ee\u63a7\u5236","text":"<p>\u7c7b\u5185\u90e8\u548c\u5916\u90e8\u7684\u8bbf\u95ee\u6743\u9650</p> \u8bbf\u95ee\u63a7\u5236\u7b26 \u7c7b\u5185\u90e8 \u7c7b\u5916\u90e8 public \u2705 \u2705 protected \u2705 \u274c private \u2705 \u274c <p>\u7ee7\u627f\u65b9\u5f0f\u5bf9\u6210\u5458\u8bbf\u95ee\u6743\u9650\u7684\u5f71\u54cd</p> \u7ee7\u627f\u65b9\u5f0f / \u6210\u5458\u7c7b\u578b public\u6210\u5458 protected\u6210\u5458 private\u6210\u5458 public\u7ee7\u627f - \u6d3e\u751f\u7c7b\u5185\u90e8 public protected \u65e0\u6cd5\u8bbf\u95ee - \u6d3e\u751f\u7c7b\u5916\u90e8 public \u65e0\u6cd5\u8bbf\u95ee \u65e0\u6cd5\u8bbf\u95ee protected\u7ee7\u627f - \u6d3e\u751f\u7c7b\u5185\u90e8 protected protected \u65e0\u6cd5\u8bbf\u95ee - \u6d3e\u751f\u7c7b\u5916\u90e8 \u65e0\u6cd5\u8bbf\u95ee \u65e0\u6cd5\u8bbf\u95ee \u65e0\u6cd5\u8bbf\u95ee private\u7ee7\u627f - \u6d3e\u751f\u7c7b\u5185\u90e8 private private \u65e0\u6cd5\u8bbf\u95ee - \u6d3e\u751f\u7c7b\u5916\u90e8 \u65e0\u6cd5\u8bbf\u95ee \u65e0\u6cd5\u8bbf\u95ee \u65e0\u6cd5\u8bbf\u95ee <p>\u7b80\u5316\u89c4\u5219</p> <ul> <li>public\u7ee7\u627f\uff1a\u8bbf\u95ee\u6743\u9650\u4fdd\u6301\u4e0d\u53d8</li> <li>protected\u7ee7\u627f\uff1a\u6700\u9ad8\u8bbf\u95ee\u6743\u9650\u964d\u4e3a protected</li> <li>private\u7ee7\u627f\uff1a\u6700\u9ad8\u8bbf\u95ee\u6743\u9650\u964d\u4e3a private</li> </ul> <p></p>"},{"location":"src/cpp/cpp/#_20","title":"\u865a\u51fd\u6570","text":"<ul> <li> <p>\u7c7b\u4e2d\u6709\u7eaf\u865a\u51fd\u6570\uff0c\u8fd9\u4e2a\u7c7b\u662f\u62bd\u8c61\u7c7b\uff0c\u62bd\u8c61\u7c7b\u4e0d\u80fd\u5b9e\u4f8b\u5316</p> </li> <li> <p>\u7c7b\u4e2d\u6709\u7eaf\u865a\u51fd\u6570\uff0c\u5b50\u7c7b\u6ca1\u6709\u5b9e\u73b0\u8fd9\u4e2a\u51fd\u6570\uff0c\u5b50\u7c7b\u4e5f\u662f\u62bd\u8c61\u7c7b</p> </li> <li> <p>\u7c7b\u7ee7\u627f\u4e86\u62bd\u8c61\u7c7b\uff0c\u53ea\u6709\u5b9e\u73b0\u4e86\u62bd\u8c61\u7c7b\u4e2d\u7684\u7eaf\u865a\u51fd\u6570\uff0c\u8fd9\u4e2a\u7c7b\u624d\u80fd\u5b9e\u4f8b\u5316</p> </li> <li> <p>\u4e0d\u8981\u5728\u6784\u9020\u51fd\u6570\u6216\u6790\u6784\u51fd\u6570\u4e2d\u8c03\u7528\u865a\u51fd\u6570\uff0c\u56e0\u4e3a\u6b64\u65f6\u865a\u51fd\u6570\u8868\u8fd8\u6ca1\u6709\u5efa\u7acb</p> </li> </ul> C++<pre><code>class A {\n   public:\n    virtual ~A() = default;    // \u5b58\u5728\u865a\u51fd\u6570\u65f6\uff0c\u6790\u6784\u51fd\u6570\u4e5f\u5e94\u8be5\u662f\u865a\u51fd\u6570\n    virtual void func2() = 0;  // \u5fc5\u987b\u91cd\u5199\uff08\u7eaf\u865a\u51fd\u6570\uff09\n    virtual void func1() { std::cout &lt;&lt; 6 &lt;&lt; std::endl; }        // \u53ef\u9009\u91cd\u5199\n    virtual void func3() final { std::cout &lt;&lt; 8 &lt;&lt; std::endl; }  // \u4e0d\u53ef\u91cd\u5199\n};\n</code></pre> <ul> <li> <p>\u865a\u51fd\u6570\u8868 V-Table</p> <ul> <li>\u5f53\u4e00\u4e2a\u7c7b\u4e2d\u6709\u865a\u51fd\u6570\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u5728\u5bf9\u8c61\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6307\u5411\u865a\u51fd\u6570\u8868\u7684\u6307\u948b</li> <li>\u5f53\u5b50\u7c7b\u91cd\u5199\u4e86\u7236\u7c7b\u7684\u865a\u51fd\u6570\uff0c\u5b50\u7c7b\u4f1a\u6709\u81ea\u5df1\u7684\u865a\u51fd\u6570\u8868</li> <li>\u5b58\u50a8\u5728\u9759\u6001\u533a\u4e2d\u7684 <code>.rodata</code> \u6bb5</li> </ul> </li> <li> <p>\u865a\u51fd\u6570\u8868\u6307\u9488 V-Table Pointer</p> <ul> <li>\u5982\u679c\u4e00\u4e2a\u7c7b\u4e2d\u6709\u865a\u51fd\u6570\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7c7b\u7684\u5bf9\u8c61\u4e2d\u4f1a\u6709\u4e00\u4e2a\u6307\u5411\u865a\u51fd\u6570\u8868\u7684\u6307\u9488</li> <li>\u5b58\u50a8\u5728\u5bf9\u8c61\u7684\u5185\u5b58\u4e2d\uff08\u5bf9\u8c61\u5728\u54ea\u4e2a\u5185\u5b58\u533a\u57df\uff0c\u8fd9\u4e2a\u6307\u9488\u5c31\u5728\u54ea\u4e2a\u5185\u5b58\u533a\u57df\uff09\uff0c\u901a\u5e38\u662f\u5bf9\u8c61\u7684\u7b2c\u4e00\u4e2a\u6210\u5458</li> </ul> </li> </ul> <p></p>"},{"location":"src/cpp/cpp/#_21","title":"\u6784\u9020\u51fd\u6570","text":"<p>\u9ed8\u8ba4\u6784\u9020</p> C++<pre><code>class A {\n   public:\n    A() = default;  // \u9ed8\u8ba4\u6784\u9020\u51fd\u6570\n};\n</code></pre> <ul> <li> <p>\u9664\u4e86\u6784\u9020/\u6790\u6784\u51fd\u6570\u5916\uff0c\u5982\u679c\u4e0d\u9700\u8981\u5176\u4ed6\u6210\u5458\u51fd\u6570\uff0c\u52a1\u5fc5\u4f7f\u7528 <code>= delete</code> \u5220\u9664</p> C++<pre><code>class A {\n   public:\n    A() = default;                    // \u9ed8\u8ba4\u6784\u9020\u51fd\u6570\n    A(const A&amp;) = delete;             // \u5220\u9664\u62f7\u8d1d\u6784\u9020\u51fd\u6570\n    A&amp; operator=(const A&amp;) = delete;  // \u5220\u9664\u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26\n    A(A&amp;&amp;) = delete;                  // \u5220\u9664\u79fb\u52a8\u6784\u9020\u51fd\u6570\n    A&amp; operator=(A&amp;&amp;) = delete;       // \u5220\u9664\u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26\n};\n</code></pre> </li> </ul> <p>\u521d\u59cb\u5316\u5217\u8868</p> C++<pre><code>class A {\n   public:\n    A(int a, int b) : _x(a), _y(b) {};  // \u5728\u6784\u9020\u51fd\u6570\u4e3b\u4f53\u8fd0\u884c\u4e4b\u524d\u521d\u59cb\u5316\u7c7b\u6210\u5458\n   private:\n    int _x, _y;\n};\n</code></pre> <ul> <li> <p>\u6548\u7387\u66f4\u9ad8\uff0c\u6ca1\u6709\u4e34\u65f6\u5bf9\u8c61\u7684\u521b\u5efa\u548c\u9500\u6bc1</p> </li> <li> <p><code>const</code> \u6210\u5458\u5fc5\u987b\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u521d\u59cb\u5316</p> </li> <li> <p>\u660e\u786e\u6307\u5b9a\u6210\u5458\u7684\u521d\u59cb\u5316\u987a\u5e8f\uff08\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb\uff09</p> </li> </ul> <p>\u62f7\u8d1d\u6784\u9020 (\u590d\u5236\u5df2\u6709\u5bf9\u8c61)</p> C++<pre><code>class A {\n   public:\n    // \u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570(\u6d45\u62f7\u8d1d)\n    A(const A&amp; a) = default;\n    // A(const A&amp; a) : _x(a._x), _y(a._y) {};\n\n    // \u9ed8\u8ba4\u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26(\u6d45\u62f7\u8d1d)\n    A&amp; operator=(const A&amp; a) = default;\n    /*\n    A&amp; operator=(const A&amp; a) {\n        if (this == &amp;a)\n            return *this;  // \u81ea\u6211\u590d\u5236\u68c0\u67e5\n        _x = a._x;         // \u62f7\u8d1d\u6210\u5458\u53d8\u91cf\n        _y = a._y;\n        return *this;  // \u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\u5f15\u7528\n    }\n    */\n\n   private:\n    int _x, _y;\n};\n</code></pre> <ul> <li> <p>\u6d45\u62f7\u8d1d\u53ea\u4f1a\u62f7\u8d1d\u6210\u5458\u53d8\u91cf\u7684\u503c\uff0c\u4e0d\u4f1a\u62f7\u8d1d\u6307\u9488\u6307\u5411\u7684\u5185\u5b58</p> </li> <li> <p>\u6df1\u62f7\u8d1d\u51fd\u6570\u4e00\u822c\u81ea\u5df1\u5b9e\u73b0\uff0c\u624b\u52a8\u62f7\u8d1d\u6307\u9488\u6307\u5411\u7684\u5185\u5b58</p> </li> </ul> <p>\u79fb\u52a8\u6784\u9020 (\u79fb\u52a8\u5df2\u6709\u5bf9\u8c61)</p> C++<pre><code>#include &lt;iostream&gt;\n\nclass A {\npublic:\n  std::string x = \"\";\n  int *y;\n\n  //A() = default;\n\n  // \u9ed8\u8ba4\u79fb\u52a8\u6784\u9020\n  //A(A &amp;&amp;a) noexcept : x(std::move(a.x)), y(a.y) {}\n\n  // \u9ed8\u8ba4\u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26\n  /*\n  A &amp;operator=(A &amp;&amp;a) noexcept {\n    // \u81ea\u6211\u590d\u5236\u68c0\u67e5\n    if (this == &amp;a)\n      return *this;\n\n    // \u79fb\u52a8\u9759\u6001\u53d8\u91cf\n    x = std::move(a.x);\n\n    // \u79fb\u52a8\u52a8\u6001\u53d8\u91cf\n    delete y;\n    y = a.y;\n\n    // \u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\u5f15\u7528\n    return *this;\n  }\n  */\n};\n\nint main() {\n  A a1;\n  a1.x = \"xixi\";\n  a1.y = new int(6);\n\n  std::cout &lt;&lt; a1.x &lt;&lt; \" \" &lt;&lt; &amp;a1.x &lt;&lt; \" \" &lt;&lt; *a1.y &lt;&lt; \" \" &lt;&lt; a1.y &lt;&lt; \"\\n\\n\";\n\n  // \u79fb\u52a8\u6784\u9020\n  A a2(std::move(a1));\n  std::cout &lt;&lt; a1.x &lt;&lt; \" \" &lt;&lt; &amp;a1.x &lt;&lt; \" \" &lt;&lt; *a1.y &lt;&lt; \" \" &lt;&lt; a1.y &lt;&lt; \"\\n\";\n  std::cout &lt;&lt; a2.x &lt;&lt; \" \" &lt;&lt; &amp;a2.x &lt;&lt; \" \" &lt;&lt; *a2.y &lt;&lt; \" \" &lt;&lt; a2.y &lt;&lt; \"\\n\\n\";\n\n  // \u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26\n  A a3;\n  a3 = std::move(a2);\n  std::cout &lt;&lt; a2.x &lt;&lt; \" \" &lt;&lt; &amp;a2.x &lt;&lt; \" \" &lt;&lt; *a2.y &lt;&lt; \" \" &lt;&lt; a2.y &lt;&lt; \"\\n\";\n  std::cout &lt;&lt; a3.x &lt;&lt; \" \" &lt;&lt; &amp;a3.x &lt;&lt; \" \" &lt;&lt; *a3.y &lt;&lt; \" \" &lt;&lt; a3.y &lt;&lt; \"\\n\";\n\n  return 0;\n}\n\n/*\nxixi 0x16f777388 6 0x12be05f00\n\n 0x16f777388 6 0x12be05f00\nxixi 0x16f777358 6 0x12be05f00\n\n 0x16f777358 6 0x12be05f00\nxixi 0x16f777338 6 0x12be05f00\n*/\n</code></pre> <p>\u6709\u70b9\u62bd\u8c61\u7684\u662f\uff1a</p> \u6d45\u62f7\u8d1d \u6df1\u62f7\u8d1d \uff08\u9ed8\u8ba4\uff09\u79fb\u52a8\u6784\u9020 \u503c\uff0c\u65e7 \u503c\uff0c\u65b0 \u590d\u5236 \u590d\u5236 \u590d\u5236 \u5730\u5740\uff0c\u65e7 \u5730\u5740\uff0c\u65b0 \u65b0\u7684 \u65b0\u7684 \u65b0\u7684 *ptr\uff0c\u65e7 \uff08\u4e0d\u53d8\uff0c\u4e0d\u5b89\u5168\uff09 *ptr\uff0c\u65b0 \u590d\u5236 \u590d\u5236 \uff08\u540c\u65e7\uff0c\u4e0d\u5b89\u5168\uff09 ptr\uff0c\u65e7 \u4fdd\u6301\u539f\u5730\u5740\uff08\u4e0d\u53d8\uff0c\u4e0d\u5b89\u5168\uff09 ptr\uff0c\u65b0 \u6307\u5411\u65e7\u5730\u5740\uff08\u5171\u4eab\uff09 \u65b0\u5730\u5740 \u6307\u5411\u65e7\u5730\u5740\uff08\u5171\u4eab\uff0c\u4e0d\u5b89\u5168\uff09 <p>\u7a7a\u7684\u4f4d\u7f6e\u610f\u5473\u7740\u4e0d\u53d8</p> <p>\u5bf9\u4e8e\u652f\u6301\u79fb\u52a8\u8bed\u4e49\u7684\u7c7b\u578b\uff0c\u4e0d\u9002\u7528\u4e8e\u4ee5\u4e0a\u8868\u683c</p> <ul> <li> <p><code>std::unique_ptr</code>\uff0c\u5b83\u7684\u79fb\u52a8\u6784\u9020\u51fd\u6570\u4f1a\u5c06\u65e7\u5bf9\u8c61\u7684\u6307\u9488\u7f6e\u4e3a <code>nullptr</code></p> </li> <li> <p><code>std::string</code>\uff0c\u5b83\u7684\u79fb\u52a8\u6784\u9020\u51fd\u6570\u4f1a\u5c06\u65e7\u5bf9\u8c61\u503c\u7f6e\u4e3a <code>\"\"</code>\uff0c\u4f46\u662f\u5730\u5740\u4e0d\u53d8</p> </li> </ul> <p></p>"},{"location":"src/cpp/cpp/#_22","title":"\u6790\u6784\u51fd\u6570","text":"<ul> <li> <p>\u5982\u679c\u57fa\u7c7b\u6709\u865a\u51fd\u6570\uff0c\u90a3\u4e48\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e5f\u5e94\u8be5\u662f\u865a\u51fd\u6570</p> </li> <li> <p>\u4e0d\u8981\u5728\u6790\u6784\u51fd\u6570\u4e2d\u629b\u51fa\u5f02\u5e38\uff0c\u6790\u6784\u51fd\u6570\u7684\u804c\u8d23\u662f\u91ca\u653e\u8d44\u6e90\uff0c\u5f02\u5e38\u5904\u7406\u5e94\u5f53\u5199\u6210\u4e00\u4e2a\u666e\u901a\u51fd\u6570</p> </li> </ul> <p></p>"},{"location":"src/cpp/cpp/#11","title":"11 \u4f7f\u7528\u7c7b","text":""},{"location":"src/cpp/cpp/#_23","title":"\u8fd0\u7b97\u7b26\u91cd\u8f7d","text":"<ul> <li> <p>\u91cd\u5199 <code>=</code> \u8fd0\u7b97\u7b26\u65f6\uff0c\u8fd4\u56de\u503c\u7c7b\u578b\u5e94\u8be5\u662f <code>*this</code> \u7684\u5f15\u7528\uff0c\u800c\u4e0d\u662f\u526f\u672c</p> C++<pre><code>class A {\n   public:\n    int val;\n    // \u8fd4\u56de\u7c7b\u578b\u4e3a\u81ea\u8eab\u7684\u5f15\u7528\n    // \u53c2\u6570\u5217\u8868\u4e3a\u7b49\u53f7\u53f3\u503c\n    A&amp; operator=(const A&amp; other) {\n        // \u68c0\u67e5\u81ea\u8d4b\u503c\n        // \u5982\u679c\u5f53\u524d\u5bf9\u8c61\u4e0e other \u4e0d\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\n        // \u4fee\u6539\u5f53\u524d\u5bf9\u8c61\u7684 val \u4e3a other \u7684 val\n        if (this != &amp;other) {\n            val = other.val;\n        }\n        // \u5982\u679c\u662f\u81ea\u8d4b\u503c\uff0c\u8fd4\u56de *this\n        return *this;\n    }\n};\n</code></pre> </li> <li> <p>\u5f53\u7275\u626f\u5230\u52a8\u6001\u5185\u5b58\u65f6\uff0c\u91cd\u8f7d <code>=</code> \u8fd0\u7b97\u7b26\u65f6\u4f18\u5148\u4f7f\u7528 <code>Copy-and-Swap</code></p> C++<pre><code>class SafeString {\n   private:\n    char* data;\n    size_t length;\n\n   public:\n    void swap(SafeString&amp; other) noexcept {\n        std::swap(data, other.data);\n        std::swap(length, other.length);\n    }\n\n    SafeString&amp; operator=(SafeString other) {\n        // \u6309\u503c\u4f20\u9012\uff0c\u5c06 other \u7684\u526f\u672c\u4f20\u9012\u7ed9\u5f53\u524d\u5bf9\u8c61\n        // \u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u5728\u53d1\u751f\u5f02\u5e38\u65f6\uff0c\u539f\u59cb\u5bf9\u8c61\u4e0d\u4f1a\u88ab\u7834\u574f\n        // \u4f7f\u7528 swap \u51fd\u6570\u4ea4\u6362\u6570\u636e\n        swap(other);\n        return *this;\n    }\n};\n</code></pre> </li> <li> <p>\u4f7f\u7528 <code>friend const</code> \u4fee\u9970\u7b26\u6765\u91cd\u8f7d\u8fd0\u7b97\u7b26</p> <p>\u53ef\u4ee5\u5b9e\u73b0 <code>A - int</code>\uff0c<code>int - A</code> \u8fd9\u6837\u7684</p> C++<pre><code>#include &lt;iostream&gt;\n\nclass A {\n   public:\n    A(int a) : _value(a) {}\n\n    friend std::ostream&amp; operator&lt;&lt;(std::ostream&amp; os, const A&amp; a) {\n        os &lt;&lt; a._value;\n        return os;\n    }\n\n    friend A operator-(const A&amp; a, const A&amp; b);\n\n   private:\n    int _value;\n};\n\nA operator-(const A&amp; a, const A&amp; b) {\n    return a._value - b._value;\n}\n\nint main() {\n    std::cout &lt;&lt; 8 - A(2) &lt;&lt; std::endl;\n    std::cout &lt;&lt; A(8) - 2 &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre> </li> </ul> <p></p>"},{"location":"src/cpp/cpp/#12","title":"12 \u7c7b\u548c\u52a8\u6001\u5185\u5b58\u5206\u914d","text":""},{"location":"src/cpp/cpp/#_24","title":"\u52a8\u6001\u5185\u5b58\u5206\u914d","text":"<ul> <li> <p><code>new</code> \u5bf9\u5e94 <code>delete</code>\uff0c<code>new[]</code> \u5bf9\u5e94 <code>delete[]</code></p> C++<pre><code>auto p = new int[10];\ndelete[] p;\n// \u5982\u679c\u4f7f\u7528 delete p; \u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\n</code></pre> </li> </ul> <p></p>"},{"location":"src/cpp/cpp/#raii","title":"RAII","text":"<ul> <li> <p>\u8d44\u6e90\u83b7\u53d6\u5373\u521d\u59cb\u5316\uff08\u5728\u6784\u9020\u65f6\u83b7\u53d6\u8d44\u6e90\uff0c\u5728\u6790\u6784\u65f6\u91ca\u653e\u8d44\u6e90\uff09\uff0c\u4f5c\u7528\u57df\u7ed3\u675f\u65f6\u81ea\u52a8\u6e05\u7406</p> </li> <li> <p><code>RAII</code> \u5bf9\u8c61\uff0c\u6709\u5fc5\u8981\u63d0\u4f9b\u8bbf\u95ee\u539f\u59cb\u8d44\u6e90\u7684\u63a5\u53e3</p> <p>\u4f8b\u5982 <code>std::unique_ptr</code> \u548c <code>std::shared_ptr</code> \u90fd\u63d0\u4f9b\u4e86 <code>get()</code> \u65b9\u6cd5\u6765\u8bbf\u95ee\u539f\u59cb\u6307\u9488</p> </li> <li> <p>\u5728\u590d\u5236 <code>RAII</code> \u5bf9\u8c61\u65f6\uff0c\u5fc5\u987b\u5b9e\u73b0\u6df1\u62f7\u8d1d</p> </li> </ul> <p><code>RAII</code> \u7684\u590d\u5236\u7b56\u7565\u5fc5\u987b\u4e0e\u8d44\u6e90\u8bed\u4e49\u4fdd\u6301\u4e00\u81f4</p> <ul> <li> <p>\u72ec\u5360\uff0c\u7981\u6b62\u590d\u5236\u3001\u5141\u8bb8\u79fb\u52a8</p> C++<pre><code>class OnlyOne {\n   public:\n    OnlyOne() = default;\n    OnlyOne(const OnlyOne&amp;) = delete;             // \u7981\u6b62\u62f7\u8d1d\u6784\u9020\n    OnlyOne&amp; operator=(const OnlyOne&amp;) = delete;  // \u7981\u6b62\u62f7\u8d1d\u8d4b\u503c\n    OnlyOne(OnlyOne&amp;&amp;) = default;                 // \u5141\u8bb8\u79fb\u52a8\u6784\u9020\n    OnlyOne&amp; operator=(OnlyOne&amp;&amp;) = default;      // \u5141\u8bb8\u79fb\u52a8\u8d4b\u503c\n};\n</code></pre> </li> <li> <p>\u5171\u4eab\uff0c\u5f15\u7528\u8ba1\u6570 <code>std::shared_ptr</code></p> </li> <li> <p>\u53ef\u590d\u5236\uff0c\u6df1\u5ea6\u62f7\u8d1d</p> </li> </ul> <p></p>"},{"location":"src/cpp/cpp/#15","title":"15 \u53cb\u5143\u3001\u5f02\u5e38\u548c\u5176\u4ed6","text":""},{"location":"src/cpp/cpp/#try-catch","title":"try catch","text":"C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nvoid f(std::vector&lt;int&gt;&amp; v) {\n    try {\n        std::cout &lt;&lt; v.at(3) &lt;&lt; std::endl;\n    } catch (const std::out_of_range&amp; e) {\n        std::cerr &lt;&lt; \"out_of_range\\n\";\n        throw;\n    }\n}\n\nint main() {\n    std::vector&lt;int&gt; v = {0, 1, 2};\n    while (true) {\n        try {\n            f(v);\n            break;\n        } catch (const std::out_of_range&amp; e) {\n            std::cerr &lt;&lt; \"try fix: out_of_range\\n\";\n            v.emplace_back(3);\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"src/cpp/cpp/#_25","title":"\u58f0\u660e\u4e0e\u5b9a\u4e49","text":"<ul> <li>\u58f0\u660e \u6682\u4e0d\u5b9e\u73b0\uff0c\u4e0d\u5206\u914d\u5185\u5b58</li> </ul> C++<pre><code>extern int x;\n// \u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\n// \u544a\u8bc9\u7f16\u8bd1\u5668\uff0c\u8fd9\u4e2a\u53d8\u91cf\u5728\u5176\u4ed6\u5730\u65b9\u5b9a\u4e49\uff0c\u4f46\u4f60\u53ef\u4ee5\u5728\u5f53\u524d\u6587\u4ef6\u4e2d\u4f7f\u7528\u5b83\nvoid func();\n// \u58f0\u660e\u4e00\u4e2a\u51fd\u6570\n// \u786e\u4fdd\u7f16\u8bd1\u5668\u53ef\u4ee5\u6b63\u786e\u5730\u5904\u7406\u51fd\u6570\u8c03\u7528\uff0c\u5373\u4f7f\u51fd\u6570\u7684\u5b9e\u73b0\u53ef\u80fd\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\nclass A;\n// \u524d\u5411\u58f0\u660e\u4e00\u4e2a\u7c7b\n// \u5141\u8bb8\u5728\u7c7b\u7684\u5b9e\u73b0\u4e2d\u4f7f\u7528\u53e6\u4e00\u4e2a\u7c7b\u800c\u4e0d\u9700\u8981\u5305\u542b\u5176\u5b8c\u6574\u5b9a\u4e49\n</code></pre> <ul> <li>\u5b9a\u4e49 \u58f0\u660e + \u5b9e\u73b0\uff0c\u5206\u914d\u5185\u5b58\uff08\u7c7b\u9700\u8981\u5177\u4f53\u8ba8\u8bba\uff09</li> </ul> C++<pre><code>int x;          // \u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\nvoid func(){}   // \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\nclass A{};      // \u5b9a\u4e49\u4e00\u4e2a\u7c7b\n</code></pre>"},{"location":"src/cpp/cpp/#_26","title":"\u667a\u80fd\u6307\u9488","text":"<p>\u4e3a\u4e86\u89e3\u51b3\u5185\u5b58\u6cc4\u6f0f\u3001\u91ce\uff08wild\uff09\u6307\u9488\u3001\u60ac\u7a7a\uff08dangling\uff09\u6307\u9488\u7684\u95ee\u9898\uff0c\u5f15\u5165\u4e86\u667a\u80fd\u6307\u9488</p> <p>\u5185\u5b58\u6cc4\u6f0f</p> <ul> <li>\u542b\u4e49\uff1a\u7533\u8bf7\u7684\u5185\u5b58\u6ca1\u6709\u88ab\u91ca\u653e\uff0c\u5bfc\u81f4\u65e0\u6cd5\u518d\u6b21\u4f7f\u7528\u8be5\u5185\u5b58</li> </ul> C++<pre><code>#include &lt;iostream&gt;\n\nint main(){\n    while(true)                 // \u6b7b\u5faa\u73af\n        auto* ptr = new int();  // \u7533\u8bf7\u5806\u7a7a\u95f4\n    return 0;\n}\n</code></pre> <ul> <li> <p>\u539f\u56e0\uff1a\u5fd8\u4e86 <code>delete</code></p> </li> <li> <p>\u540e\u679c\uff1a<code>Killed</code>\uff0c\u5185\u5b58\u5360\u7528\u8fc7\u591a\uff0c\u7a0b\u5e8f\u5d29\u6e83</p> </li> </ul> <p>\u91ce\u6307\u9488</p> <ul> <li>\u542b\u4e49\uff1a\u6307\u9488\u6839\u672c\u6ca1\u6709\u6b63\u786e\u521d\u59cb\u5316\uff0c\u6307\u5411\u7684\u662f\u968f\u673a\u5185\u5b58\u4f4d\u7f6e\uff0c\u53ef\u80fd\u4ece\u672a\u88ab\u5206\u914d\u8fc7</li> </ul> C++<pre><code>#include &lt;iostream&gt;\n\nint main(){\n    int* ptr;\n    *ptr = 666;\n    return 0;\n}\n</code></pre> <ul> <li> <p>\u539f\u56e0\uff1a\u5fd8\u4e86 <code>new</code> \u5c31\u76f4\u63a5\u7528</p> </li> <li> <p>\u540e\u679c\uff1a<code>Segmentation fault (core dumped)</code></p> </li> </ul> <p>\u60ac\u7a7a\u6307\u9488</p> <ul> <li> <p>\u542b\u4e49\uff1a\u66fe\u7ecf\u6307\u5411\u6709\u6548\u5185\u5b58\uff0c\u4f46\u7531\u4e8e\u6240\u6307\u5411\u7684\u5185\u5b58\u5df2\u88ab\u91ca\u653e\u6216\u5bf9\u8c61\u751f\u547d\u5468\u671f\u5df2\u7ed3\u675f\uff0c\u73b0\u5728\u53d8\u5f97\u65e0\u6548</p> </li> <li> <p>\u539f\u56e0\uff1a<code>delete</code> \u540e\u8fd8\u5728\u7528</p> </li> </ul> C++<pre><code>#include &lt;iostream&gt;\n\nint main(){\n    int* ptr1 = new int;\n    delete ptr1;\n    *ptr1 = 666;        // \u6b64\u65f6\u5b9e\u9645\u4e0a\u662f\u8d8a\u754c\u8bbf\u95ee\u4e86\n    std::cout &lt;&lt; \"ptr1: \" &lt;&lt; *ptr1 &lt;&lt; \"\\n\";\n\n    int* ptr2 = new int;\n    *ptr2 = 888;        // \u8fd9\u4e2a\u503c\u4f1a\u8986\u76d6 *ptr1\n    std::cout &lt;&lt; \"ptr1: \" &lt;&lt; *ptr1 &lt;&lt; \"\\n\";\n    return 0;\n}\n</code></pre> <ul> <li>\u540e\u679c\uff1a\u8d8a\u754c\u8bbf\u95ee</li> </ul> <p></p>"},{"location":"src/cpp/cpp/#_27","title":"\u521b\u5efa","text":"C++<pre><code>#include &lt;memory&gt;\n\nstd::unique_ptr&lt;int&gt; uniquePtr = std::make_unique&lt;int&gt;();\nstd::shared_ptr&lt;int&gt; sharedPtr = std::make_shared&lt;int&gt;();\nstd::weak_ptr&lt;int&gt; weakPtr(sharedPtr);\n</code></pre> <p>\u72ec\u5360\u6307\u9488 <code>unique_ptr</code></p> <p>\u5f53 <code>unique_ptr</code> \u88ab\u9500\u6bc1\u65f6\uff0c\u5b83\u6240\u6307\u5411\u7684\u5bf9\u8c61\u4e5f\u88ab\u9500\u6bc1</p> C++<pre><code>void func(){\n    std::unique_ptr&lt;int&gt; ptr = std::make_unique&lt;int&gt;(666);\n}   // \u5f53\u51fd\u6570\u7ed3\u675f\u65f6, ptr \u88ab\u9500\u6bc1, ptr \u6307\u5411\u7684\u5185\u5b58\u4e5f\u88ab\u9500\u6bc1\n</code></pre> <p>\u5171\u4eab\u6307\u9488 <code>shared_ptr</code></p> <p>\u591a\u4e2a <code>shared_ptr</code> \u53ef\u4ee5\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5f53\u6700\u540e\u4e00\u4e2a <code>shared_ptr</code> \u88ab\u9500\u6bc1\u65f6\uff08\u5f15\u7528\u8bb0\u6570\u4e3a 0 \u7684\u65f6\u5019\uff09\uff0c\u5b83\u6240\u6307\u5411\u7684\u5bf9\u8c61\u4e5f\u88ab\u9500\u6bc1</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;memory&gt;\n\n// \u901a\u8fc7\u5f15\u7528\u4f20\u9012\u667a\u80fd\u6307\u9488\n// p1 \u548c p2 \u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61, \u5f15\u7528\u8ba1\u6570\u4e3a 2\nvoid f2(std::shared_ptr&lt;int&gt; &amp;p1){\n    std::shared_ptr&lt;int&gt; p2 = std::make_shared&lt;int&gt;(666);\n    p1 = p2;\n    // \u6b64\u65f6p2\u548cp1\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61, \u5f15\u7528\u8ba1\u6570\u4e3a 2\n    std::cout &lt;&lt; p1.use_count() &lt;&lt; std::endl;\n}\n\n// \u521b\u5efa\u4e00\u4e2a\u7a7a\u7684\u667a\u80fd\u6307\u9488\uff0c\u901a\u8fc7\u5f15\u7528\u4f20\u9012\u7ed9f2\u51fd\u6570\nvoid f1(){\n    std::shared_ptr&lt;int&gt; p1;\n    f2(p1);\n    // \u5f53 f2 \u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e, f2 \u51fd\u6570\u5185\u90e8\u7684 p2 \u6307\u9488\u88ab\u9500\u6bc1, \u5f15\u7528\u8ba1\u6570\u4e3a 1\n    std::cout &lt;&lt; p1.use_count() &lt;&lt; std::endl;\n    std::cout &lt;&lt; *p1 &lt;&lt; std::endl;\n}\n\nint main(){\n    f1();\n    return 0;\n}\n</code></pre> C++<pre><code>ptr.reset();        // \u9500\u6bc1 ptr \u6307\u5411\u7684\u5185\u5b58\nptr.reset(nullptr); // \u9500\u6bc1 ptr \u6307\u5411\u7684\u5185\u5b58\uff08\u7b49\u4ef7\uff09\n</code></pre> <p>\u6307\u9488 <code>weak_ptr</code></p> <p>\u4e3a\u4e86\u907f\u514d <code>shared_ptr</code> \u7684\u5faa\u73af\u5f15\u7528\u95ee\u9898\uff0c\u5f15\u5165\u4e86 <code>weak_ptr</code></p> <p>todo</p>"},{"location":"src/cpp/cyclonedds/","title":"\ud83d\udce6 cyclonedds","text":""},{"location":"src/cpp/cyclonedds/#_1","title":"\u53c2\u8003","text":"<p>cyclonedds-cxx</p> <p>\u914d\u7f6e\u6587\u4ef6\u53c2\u8003</p> <p>\u53d1\u73b0\u914d\u7f6e</p> <p></p>"},{"location":"src/cpp/cyclonedds/#omg-dds","title":"OMG DDS","text":""},{"location":"src/cpp/cyclonedds/#_2","title":"\u7f16\u8bd1\u5b89\u88c5","text":"<p>cyclonedds</p> Bash<pre><code>cmake -B build -DCMAKE_INSTALL_PREFIX=./build/install\ncmake --build build -j --target install\n</code></pre> <p>cyclonedds-cxx</p> Bash<pre><code>cmake -B build -DCMAKE_INSTALL_PREFIX=./build/install -DCMAKE_PREFIX_PATH=\"../cyclonedds-0.10.5/build/install\"\ncmake --build build -j --target install\n</code></pre> <p></p>"},{"location":"src/cpp/cyclonedds/#idl","title":"IDL","text":"<p>IDL \u7528\u4e8e\u5b9a\u4e49\u8bed\u8a00\u65e0\u5173\u7684\u63a5\u53e3\u548c\u6570\u636e\u7c7b\u578b</p> IDL<pre><code>module HelloWorldData{\n    struct Msg{\n        long userID;\n        string message;\n    };\n};\n</code></pre> <p></p>"},{"location":"src/cpp/cyclonedds/#cycloneddsxml","title":"cyclonedds.xml","text":"XML<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;CycloneDDS&gt;\n  &lt;Domain&gt;\n    &lt;General&gt;\n      &lt;AllowMulticast&gt;false&lt;/AllowMulticast&gt;\n    &lt;/General&gt;\n\n    &lt;Discovery&gt;\n      &lt;ParticipantIndex&gt;auto&lt;/ParticipantIndex&gt;     \n      &lt;Peers&gt;\n        &lt;Peer Address=\"10.0.0.xx\"/&gt;\n      &lt;/Peers&gt;\n    &lt;/Discovery&gt;\n  &lt;/Domain&gt;\n&lt;/CycloneDDS&gt;\n</code></pre> Bash<pre><code>export CYCLONEDDS_URI=file://$(pwd)/cyclonedds.xml\n</code></pre>"},{"location":"src/cpp/ffmpeg/","title":"\ud83d\udce6 FFmpeg","text":""},{"location":"src/cpp/ffmpeg/#_1","title":"\u53c2\u8003","text":"<p>\u5b98\u7f51 | \u4e0b\u8f7d | \u6587\u6863</p> <p>\u4e2d\u6587\u6587\u6863 6.0.1</p> <p></p>"},{"location":"src/cpp/ffmpeg/#setup","title":"setup","text":""},{"location":"src/cpp/ffmpeg/#linux","title":"linux","text":"<ol> <li> <p>\u4e0b\u8f7d <code>wget</code> / \u89e3\u538b <code>tar -xvf</code> / \u63d0\u6743 <code>chmod +x</code></p> </li> <li> <p>\u4e0b\u8f7d\u7f16\u8bd1\u5de5\u5177 <code>sudo apt install nasm pkg-config</code></p> </li> <li> <p><code>sudo apt install libsdl2-dev</code></p> </li> <li> <p>\u914d\u7f6e\u5b89\u88c5\u9009\u9879 <code>./configure --prefix=/.../FFmpeg-x.y.z --enable-shared --enable-sdl</code></p> </li> <li> <p>\u7f16\u8bd1\u5b89\u88c5 <code>make &amp;&amp; make install</code></p> </li> <li> <p>\u7f16\u5199\u6d4b\u8bd5\u4ee3\u7801     C++<pre><code>#define __STDC_CONSTANT_MACROS\n\nextern \"C\" {\n#include &lt;libavutil/avutil.h&gt;\n}\n#include &lt;iostream&gt;\n\nint main(){\n    std::cout &lt;&lt; av_version_info() &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre></p> </li> <li> <p>\u7f16\u8bd1     Bash<pre><code>g++ a.cpp -I/.../FFmpeg-7.0.1/include -L/.../FFmpeg-7.0.1/lib -lavutil\n</code></pre></p> </li> </ol>"},{"location":"src/cpp/ffmpeg/#windows","title":"windows","text":""},{"location":"src/cpp/ffmpeg/#use_ffmpeg","title":"use_ffmpeg","text":"Bash<pre><code>ffmpeg \\\n-y \\                              # \u5168\u5c40\u53c2\u6570\uff08\u5982\u679c\u8f93\u51fa\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u5219\u8986\u76d6\u5b83\uff09\n-c:a libfdk_aac -c:v libx264 \\    # \u8f93\u5165\u6587\u4ef6\u53c2\u6570\uff08\u6307\u5b9a\u97f3\u9891\u548c\u89c6\u9891\u7f16\u89e3\u7801\u5668\uff09\n-i input.mp4 \\                    # \u8f93\u5165\u6587\u4ef6\n-c:a libvorbis -c:v libvpx-vp9 \\  # \u8f93\u51fa\u6587\u4ef6\u53c2\u6570\uff08\u6307\u5b9a\u8f93\u51fa\u97f3\u9891\u548c\u89c6\u9891\u7f16\u89e3\u7801\u5668\uff09\noutput.webm                       # \u8f93\u51fa\u6587\u4ef6\n</code></pre>"},{"location":"src/cpp/ffmpeg/#drawtext","title":"drawtext","text":"Bash<pre><code>ffmpeg \\\n-y \\\n-i input.mp4 \\\n-vf \"drawtext='\u4f60\u597d' \\\noutput.mp4\n</code></pre>"},{"location":"src/cpp/ffmpeg/#dev","title":"dev","text":""},{"location":"src/cpp/ffmpeg/#avutil","title":"avutil","text":"<p>\u901a\u7528\u7684\u8f85\u52a9\u51fd\u6570\u548c\u6570\u636e\u7ed3\u6784</p>"},{"location":"src/cpp/ffmpeg/#swscale","title":"swscale","text":"<p>\u89c6\u9891\u7684\u50cf\u7d20\u683c\u5f0f\u548c\u5206\u8fa8\u7387\u8f6c\u6362\uff0c\u7f29\u653e\u3001\u8272\u5f69\u7a7a\u95f4\u8f6c\u6362</p>"},{"location":"src/cpp/ffmpeg/#swresample","title":"swresample","text":"<p>\u97f3\u9891\u7684\u91c7\u6837\u7387\u8f6c\u6362\u548c\u901a\u9053\u5e03\u5c40\u8f6c\u6362</p>"},{"location":"src/cpp/ffmpeg/#avcodec","title":"avcodec","text":"<p>\u97f3\u9891\u548c\u89c6\u9891\u7684\u7f16\u89e3\u7801</p>"},{"location":"src/cpp/ffmpeg/#avformat","title":"avformat","text":"<p>\u97f3\u89c6\u9891\u5bb9\u5668\u683c\u5f0f\u7684\u5c01\u88c5\u548c\u89e3\u5c01\u88c5</p>"},{"location":"src/cpp/ffmpeg/#avdevice","title":"avdevice","text":"<p>\u5904\u7406\u6355\u83b7\u548c\u64ad\u653e\u8bbe\u5907\u7684\u8f93\u5165\u8f93\u51fa\u64cd\u4f5c</p>"},{"location":"src/cpp/ffmpeg/#avfilter","title":"avfilter","text":"<p>\u63d0\u4f9b\u97f3\u89c6\u9891\u6ee4\u955c\u529f\u80fd\uff0c\u7528\u4e8e\u5904\u7406\u97f3\u89c6\u9891\u6570\u636e\u6d41\u4e2d\u7684\u8fc7\u6ee4\u64cd\u4f5c</p>"},{"location":"src/cpp/gcc/","title":"\ud83d\udd29 GCC","text":"<ul> <li> <p>\u5b89\u88c5</p> <ol> <li> <p>\u4e0b\u8f7d mingw-w64 <code>x86_64</code> <code>posix</code> <code>seh</code> <code>ucrt</code></p> </li> <li> <p>\u89e3\u538b</p> </li> <li> <p>\u6dfb\u52a0\u81f3\u73af\u5883\u53d8\u91cf <code>GCC\\XY\\mingw-w64\\bin</code></p> </li> </ol> </li> <li> <p>\u7f16\u8bd1\u5b89\u88c5\u6307\u5b9a\u7248\u672c</p> <ol> <li> <p>\u4e0b\u8f7d\uff08\u65e5\u672c\u955c\u50cf\u7ad9\uff09</p> </li> <li> <p>\u89e3\u538b\u7f29     Bash<pre><code>tar -zxvf *.tar.gz\ncd gcc*\n</code></pre></p> </li> <li> <p>\u5b89\u88c5\u4f9d\u8d56     Bash<pre><code>sudo apt install libgmp-dev libmpfr-dev libmpc-dev\n</code></pre></p> </li> <li> <p>\u914d\u7f6e\u7f16\u8bd1\u9009\u9879     Bash<pre><code>./configure \\\n    --enable-languages=c,c++ \\\n    --prefix='/usr/local/gcc-x.y.z' \\\n    --disable-multilib\n</code></pre></p> </li> <li> <p>\u7f16\u8bd1     Bash<pre><code>make -j$(nproc)\n</code></pre></p> </li> <li> <p>\u5b89\u88c5     Bash<pre><code>sudo make install\n</code></pre></p> </li> <li> <p>\u5728\u624b\u52a8\u5b89\u88c5 GCC \u540e\uff0c\u4f7f\u7528 <code>cmake -B build -DCMAKE_CXX_COMPILER=/usr/local/gcc-14.2.0/bin/g++</code> \u6765\u6307\u5b9a\u7f16\u8bd1\u5668</p> </li> <li> <p>\u4e34\u65f6\u8fd0\u884c <code>LD_LIBRARY_PATH=/usr/local/gcc-14.2.0/lib64:$LD_LIBRARY_PATH ./xxx</code> \u6765\u6307\u5b9a\u8fd0\u884c\u65f6\u7684\u52a8\u6001\u94fe\u63a5\u5e93\u8def\u5f84</p> </li> </ol> </li> </ul> <p></p> <ul> <li> <p>\u591a\u4e2a\u7248\u672c\u5207\u6362</p> <ol> <li> <p>\u8bbe\u7f6e\u5019\u9009\u9879     Bash<pre><code>sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 110\nsudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 110\nsudo update-alternatives --install /usr/bin/gcc gcc /usr/local/gcc-14.1.0/bin/gcc 140\nsudo update-alternatives --install /usr/bin/g++ g++ /usr/local/gcc-14.1.0/bin/g++ 140\n</code></pre></p> </li> <li> <p>\u5207\u6362\u7248\u672c     Bash<pre><code>sudo update-alternatives --config gcc\n</code></pre></p> </li> <li> <p>\u5220\u9664\u591a\u4f59\u5019\u9009\u9879     Bash<pre><code>sudo update-alternatives --remove gcc /usr/local/gcc-14.1.0/bin/gcc\nsudo update-alternatives --remove g++ /usr/local/gcc-14.1.0/bin/g++\n</code></pre></p> </li> </ol> </li> </ul>"},{"location":"src/cpp/gcc/#linux-use","title":"Linux-use","text":"<ul> <li>\u6307\u5b9a\u8f93\u51fa\u6587\u4ef6\u540d\u5b57     Bash<pre><code>g++ main.cpp -o main\n</code></pre></li> <li>\u6307\u5b9a <code>c++</code> \u6807\u51c6     Bash<pre><code>g++ main.cpp -std=c++26\n</code></pre></li> <li> <p>\u6307\u5b9a\u7f16\u8bd1\u5668\u4f18\u5316</p> Bash<pre><code>g++ main.cpp -O2\n</code></pre> <ul> <li><code>-O0</code> \u65e0\u4f18\u5316<ul> <li>\u6548\u679c\uff1a\u4e0d\u8fdb\u884c\u4efb\u4f55\u4f18\u5316\uff0c\u751f\u6210\u7684\u4ee3\u7801\u4e0e\u6e90\u4ee3\u7801\u7ed3\u6784\u4e00\u81f4\uff0c\u65b9\u4fbf\u8bd5</li> <li>\u9002\u7528\uff1a\u5f00\u53d1\u548c\u8c03\u8bd5\u9636\u6bb5\uff0c\u7528\u4e8e\u65b9\u4fbf\u8c03\u8bd5\u548c\u67e5\u627e\u95ee\u9898</li> </ul> </li> <li><code>-O1</code> \u57fa\u672c\u4f18\u5316\uff08\u7f3a\u7701\uff09<ul> <li>\u6548\u679c\uff1a\u5e94\u7528\u57fa\u672c\u7684\u4f18\u5316\u7b56\u7565\uff0c\u5982\u5185\u8054\u51fd\u6570\u3001\u53bb\u9664\u672a\u4f7f\u7528\u7684\u53d8\u91cf\u7b49</li> <li>\u9002\u7528\uff1a\u63d0\u4f9b\u4e00\u4e9b\u4f18\u5316\uff0c\u4f46\u4e0d\u4f1a\u663e\u8457\u589e\u52a0\u7f16\u8bd1\u65f6\u95f4\uff0c\u9002\u7528\u4e8e\u5927\u591a\u60c5\u51b5</li> </ul> </li> <li><code>-O2</code> \u6807\u51c6\u4f18\u5316<ul> <li>\u6548\u679c\uff1a\u5305\u62ec\u66f4\u591a\u7684\u5185\u8054\u3001\u5faa\u73af\u5c55\u5f00\u3001\u6d88\u9664\u4e0d\u5fc5\u8981\u7684\u6307\u4ee4\u7b49\u4f18\u5316\u7565</li> <li>\u9002\u7528\uff1a\u63d0\u4f9b\u66f4\u591a\u7684\u6027\u80fd\u4f18\u5316\uff0c\u9002\u7528\u4e8e\u53d1\u5e03\u7248\u672c\uff0c\u7f16\u8bd1\u65f6\u95f4\u53ef\u80fd\u589e\u52a0</li> </ul> </li> <li><code>-O3</code> \u66f4\u9ad8\u7ea7\u7684\u4f18\u5316<ul> <li>\u6548\u679c\uff1a\u5305\u62ec\u66f4\u591a\u590d\u6742\u7684\u4f18\u5316\uff0c\u5982\u77e2\u91cf\u5316\u3001\u51fd\u6570\u8c03\u7528\u4f18\u5316\u7b49</li> <li>\u9002\u7528\uff1a\u5bf9\u6027\u80fd\u8981\u6c42\u975e\u5e38\u9ad8\u7684\u5e94\u7528\uff0c\u4f46\u53ef\u80fd\u589e\u52a0\u7f16\u8bd1\u65f6\u95f4\uff0c\u4e0d\u5efa\u7528\u4e8e\u6240\u6709\u5e94\u7528</li> </ul> </li> <li><code>-Ofast</code> \u6700\u9ad8\u7ea7\u7684\u4f18\u5316<ul> <li>\u6548\u679c\uff1a\u542f\u7528\u6240\u6709\u53ef\u80fd\u7684\u4f18\u5316\uff0c\u5305\u62ec\u4e0d\u9075\u5faa\u6807\u51c6\u7684\u4f18\u5316\uff0c\u4f8b\u5982\u975e\u51c6\u6570\u5b66\u4f18\u5316\u548c\u7981\u7528\u5b89\u5168\u6027\u68c0\u67e5</li> <li>\u9002\u7528\uff1a\u5bf9\u6781\u81f4\u6027\u80fd\u8981\u6c42\u7684\u5e94\u7528\uff0c\u4f46\u53ef\u80fd\u5f15\u5165\u7cbe\u5ea6\u635f\u5931\u548c\u4e0d\u53ef\u9884\u7684\u884c\u4e3a</li> </ul> </li> </ul> </li> <li> <p>\u8f93\u51fa\u6587\u4ef6\u5e26\u8c03\u8bd5\u4fe1\u606f     Bash<pre><code>g++ main.cpp -g\n</code></pre></p> </li> <li> <p>\u751f\u6210\u52a8\u6001\u5e93     Bash<pre><code>g++ -shared -fPIC -o libutil.so util.cpp\n</code></pre></p> </li> <li> <p>\u8fde\u63a5\u52a8\u6001\u5e93     Bash<pre><code>g++ main.cpp -lssl\n</code></pre></p> <ul> <li><code>-lssl</code> \u662f <code>OpenSSL</code> \u7684 <code>SSL</code> \u5e93 Bash<pre><code>g++ main.cpp -I/usr/local/openssl-x.y.z/include -L/usr/local/openssl-x.y.z/lib -lssl\n</code></pre></li> <li>\u5728\u624b\u52a8\u8fde\u63a5\u52a8\u6001\u5e93\u65f6\uff0c\u901a\u5e38\u8fd8\u9700\u8981\u6307\u5b9a\u5934\u6587\u4ef6\u641c\u7d22\u4f4d\u7f6e</li> </ul> </li> </ul>"},{"location":"src/cpp/gcc/#mingw-w64","title":"mingw-w64","text":"<p>\u4e0b\u8f7d\u5730\u5740</p> <p>mingw-w64 \u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u7f16\u8bd1\u5668\uff0c\u53ef\u4ee5\u5728 Windows \u4e0a\u7f16\u8bd1\u51fa Linux \u4e0b\u53ef\u6267\u884c\u6587\u4ef6\u3002</p> \u7cfb\u7edf\u67b6\u6784 \u4f4d\u6570 i686 32\u4f4d x86-64 64\u4f4d \u63a5\u53e3\u6807\u51c6 \u8de8\u5e73\u53f0\u6027 \u4e3b\u8981\u7279\u70b9 POSIX \u8de8UNIX\u548c\u7c7bUNIX\u7cfb\u7edf \u6807\u51c6\u5316\u7684UNIX\u7cfb\u7edfAPI\uff0c\u8de8\u5e73\u53f0 MCF \u4ec5\u9650\u4e8eWindows\u5e73\u53f0 Windows API\u96c6\u6210\uff0c\u63d0\u4f9b\u9ad8\u7ea7\u529f\u80fd Win32 \u4ec5\u9650\u4e8eWindows\u5e73\u53f0 \u63d0\u4f9bWindows\u64cd\u4f5c\u7cfb\u7edf\u7684\u5404\u79cd\u529f\u80fd \u5f02\u5e38\u5904\u7406\u4e0e\u8c03\u8bd5 \u7528\u9014 \u5e94\u7528\u8303\u56f4 \u4f7f\u7528\u573a\u666f SEH \u4ec5\u9650\u4e8eWindows\u5e73\u53f0\uff0c\u5904\u7406Windows\u7279\u5b9a\u7684\u5f02\u5e38 \u5904\u7406\u7a0b\u5e8f\u8fd0\u884c\u65f6\u7684\u5f02\u5e38\uff0c\u63d0\u4f9b\u7ed3\u6784\u5316\u7684\u5f02\u5e38\u5904\u7406 \u5e94\u7528\u7a0b\u5e8f\u4e2d\u5904\u7406\u53ef\u80fd\u51fa\u73b0\u7684\u5f02\u5e38\u60c5\u51b5\uff0c\u5982\u6587\u4ef6\u8bfb\u53d6\u5931\u8d25\u6216\u5185\u5b58\u8bbf\u95ee\u9519\u8bef DWARF \u7528\u4e8e\u591a\u79cd\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5305\u62ecLinux\u3001Unix\u3001macOS\u7b49 \u63d0\u4f9b\u7f16\u8bd1\u540e\u7a0b\u5e8f\u7684\u8c03\u8bd5\u4fe1\u606f\u7ed9\u8c03\u8bd5\u5668 \u7531\u7f16\u8bd1\u5668\u751f\u6210\uff0c\u63d0\u4f9b\u6e90\u4ee3\u7801\u7ea7\u522b\u7684\u8c03\u8bd5\u4fe1\u606f\u7ed9\u5f00\u53d1\u8005\uff0c\u7528\u4e8e\u7a0b\u5e8f\u8c03\u8bd5\u548c\u5206\u6790 \u8fd0\u884c\u65f6\u5e93 \u7248\u672c\u517c\u5bb9\u6027\u548c\u517c\u5bb9\u6027 \u63d0\u4f9b\u7684\u51fd\u6570\u548c\u7279\u6027 ucrt \u8f83\u65b0\u7684Windows\u7248\u672c \u6807\u51c6C\u5e93\u51fd\u6570\uff0c\u5305\u62ecC11\u548cPOSIX\u6807\u51c6\u7684\u6269\u5c55\u51fd\u6570 msvcrt \u65e9\u671f\u548c\u67d0\u4e9bWindows\u7248\u672c \u65e9\u671f\u7684C\u5e93\u51fd\u6570\u548c\u4e00\u4e9b\u6269\u5c55\u51fd\u6570 <p>\u503c\u5f97\u4e00\u63d0\uff0c\u867d\u7136 POSIX \u63a5\u53e3\u6807\u51c6\u662f\u8de8\u5e73\u53f0\u7684\uff0c\u4f46\u662f Windows \u5e76\u4e0d\u652f\u6301 POSIX \u6807\u51c6\uff0c\u5982\u679c\u4f7f\u7528 POSIX \u6807\u51c6\uff0c\u90a3\u4e48\u7a0b\u5e8f\u4f1a</p> <p></p>"},{"location":"src/cpp/gdb/","title":"\ud83d\udd29 GDB","text":""},{"location":"src/cpp/gdb/#_1","title":"\u53c2\u8003","text":""},{"location":"src/cpp/gdb/#_2","title":"\u57fa\u7840","text":"<ol> <li> <p>\u542f\u52a8GDB</p> Bash<pre><code>gdb ac\n</code></pre> <ul> <li><code>ac</code> \u662f\u9700\u8981\u8c03\u8bd5\u7684\u7a0b\u5e8f</li> </ul> </li> <li> <p>\u8bbe\u7f6e\u65ad\u70b9</p> Bash<pre><code>break ac.cpp:main\nbreak ac.cpp:10\n</code></pre> <ul> <li><code>break</code> \u7528\u4e8e\u8bbe\u7f6e\u65ad\u70b9\uff0c\u7b80\u5199\u4e3a <code>b</code></li> <li><code>ac.cpp:main</code> \u662f\u65ad\u70b9\u7684\u4f4d\u7f6e\uff0c\u8fd9\u91cc\u662f <code>ac.cpp</code> \u6587\u4ef6\u7684 <code>main</code> \u51fd\u6570</li> <li><code>ac.cpp:10</code> \u662f\u65ad\u70b9\u7684\u4f4d\u7f6e\uff0c\u8fd9\u91cc\u662f <code>ac.cpp</code> \u6587\u4ef6\u7684\u7b2c <code>10</code> \u884c</li> <li>\u5982\u679c\u4e0d\u6307\u5b9a\u6587\u4ef6\u540d\uff0c\u90a3\u4e48\u9ed8\u8ba4\u662f\u5f53\u524d\u6587\u4ef6</li> </ul> </li> <li> <p>\u53d6\u6d88\u65ad\u70b9</p> Bash<pre><code>delete 1\n</code></pre> <ul> <li><code>delete</code> \u7528\u4e8e\u53d6\u6d88\u65ad\u70b9\uff0c\u7b80\u5199\u4e3a <code>d</code></li> <li><code>1</code> \u662f\u65ad\u70b9\u7684\u7f16\u53f7\uff0c\u53ef\u4ee5\u901a\u8fc7 <code>info breakpoints</code> \u67e5\u770b\u5f53\u524d\u6240\u6709\u65ad\u70b9</li> </ul> </li> <li> <p>\u8fd0\u884c\u7a0b\u5e8f</p> Bash<pre><code>run\n</code></pre> <ul> <li> <p><code>run</code> \u7528\u4e8e\u8fd0\u884c\u7a0b\u5e8f\uff0c\u7b80\u5199\u4e3a <code>r</code>\uff0c\u9047\u5230\u65ad\u70b9\u65f6\u4f1a\u6682\u505c\u6267\u884c</p> </li> <li> <p>\u5982\u679c\u9700\u8981\u4f20\u9012\u53c2\u6570\u7ed9\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u5728 <code>run</code> \u540e\u9762\u52a0\u4e0a\u53c2\u6570</p> Bash<pre><code>run arg1 arg2\n</code></pre> </li> </ul> </li> <li> <p>\u5355\u6b65\u6267\u884c</p> Bash<pre><code>step\n</code></pre> <ul> <li><code>step</code> \u7528\u4e8e\u5355\u6b65\u6267\u884c\u7a0b\u5e8f\uff0c\u7b80\u5199\u4e3a <code>s</code>\uff0c\u9047\u5230\u51fd\u6570\u4f1a\u8fdb\u5165\u51fd\u6570\u5185\u90e8</li> </ul> </li> <li> <p>\u8df3\u51fa\u51fd\u6570</p> Bash<pre><code>finish\n</code></pre> <ul> <li><code>finish</code> \u7528\u4e8e\u8df3\u51fa\u5f53\u524d\u51fd\u6570\uff0c\u8fd4\u56de\u5230\u8c03\u7528\u8be5\u51fd\u6570\u7684\u5730\u65b9\uff0c\u53ef\u4ee5\u7b80\u5199\u4e3a <code>fin</code></li> </ul> </li> <li> <p>\u5355\u6b65\u8df3\u8fc7</p> Bash<pre><code>next\n</code></pre> <ul> <li><code>next</code> \u7528\u4e8e\u5355\u6b65\u8df3\u8fc7\u51fd\u6570\u8c03\u7528\uff0c\u7b80\u5199\u4e3a <code>n</code>\uff0c\u4e0d\u4f1a\u8fdb\u5165\u51fd\u6570\u5185\u90e8</li> </ul> </li> <li> <p>\u7ee7\u7eed\u6267\u884c</p> Bash<pre><code>continue\n</code></pre> <ul> <li><code>continue</code> \u7528\u4e8e\u7ee7\u7eed\u6267\u884c\u7a0b\u5e8f\uff0c\u76f4\u5230\u9047\u5230\u4e0b\u4e00\u4e2a\u65ad\u70b9\uff0c\u53ef\u4ee5\u7b80\u5199\u4e3a <code>c</code></li> </ul> </li> <li> <p>\u67e5\u770b\u53d8\u91cf Bash<pre><code>print a\ndisplay a\n</code></pre></p> <ul> <li> <p><code>print</code> \u7528\u4e8e\u67e5\u770b\u53d8\u91cf\uff0c\u53ef\u4ee5\u7b80\u5199\u4e3a <code>p</code></p> </li> <li> <p><code>display</code> \u7528\u4e8e\u5728\u6bcf\u6b21\u7a0b\u5e8f\u6682\u505c\u65f6\u81ea\u52a8\u663e\u793a\u53d8\u91cf\u7684\u503c</p> </li> </ul> </li> <li> <p>\u67e5\u770b\u5806\u6808</p> Bash<pre><code>backtrace\n</code></pre> <ul> <li><code>backtrace</code> \u7528\u4e8e\u67e5\u770b\u5806\u6808\uff0c\u53ef\u4ee5\u7b80\u5199\u4e3a <code>bt</code></li> </ul> </li> <li> <p>\u9000\u51faGDB</p> Bash<pre><code>quit\n</code></pre> <ul> <li><code>quit</code> \u7528\u4e8e\u9000\u51faGDB\uff0c\u53ef\u4ee5\u7b80\u5199\u4e3a <code>q</code></li> </ul> </li> </ol> <p></p>"},{"location":"src/cpp/gdb/#termdebug","title":"termdebug","text":"<p>\u542f\u7528</p> Bash<pre><code>:packadd termdebug\n</code></pre> <p>\u4f7f\u7528</p> Bash<pre><code>:Termdebug ac\n</code></pre> <ul> <li><code>ac</code> \u662f\u9700\u8981\u8c03\u8bd5\u7684\u7a0b\u5e8f</li> </ul> <p>\u5207\u6362\u7a97\u53e3</p> <p><code>Ctrl + w</code> <code>w</code></p>"},{"location":"src/cpp/gtest/","title":"\ud83d\udce6 GTest","text":""},{"location":"src/cpp/gtest/#setup","title":"setup","text":""},{"location":"src/cpp/gtest/#linux","title":"linux","text":"<ol> <li> <p>\u4e0b\u8f7d \u5730\u5740</p> </li> <li> <p>\u89e3\u538b</p> Text Only<pre><code>tar -zxvf googletest*\n</code></pre> </li> <li> <p>\u7f16\u8bd1</p> Bash<pre><code>cd googletest*\nmkdir build &amp;&amp; cd build\ncmake ..\nmake\n</code></pre> </li> <li> <p>\u5b89\u88c5</p> Bash<pre><code>sudo make install\n</code></pre> <p>\u76f8\u5f53\u4e8e\u5c06\u5176\u590d\u5236\u5230 <code>/usr/local</code> \u76ee\u5f55\u4e0b</p> </li> </ol> <p></p>"},{"location":"src/cpp/gtest/#use","title":"use","text":""},{"location":"src/cpp/gtest/#easy","title":"easy","text":"<p>\u9879\u76ee\u76ee\u5f55\u7ed3\u6784</p> Text Only<pre><code>\u251c\u2500\u2500 CMakeLists.txt        # \u9876\u5c42 CMake \u914d\u7f6e\u6587\u4ef6\n\u251c\u2500\u2500 include               # \u516c\u5171\u5934\u6587\u4ef6\n\u2502   \u251c\u2500\u2500 add.h             # \u52a0\u6cd5\u5934\u6587\u4ef6\n\u2502   \u2514\u2500\u2500 sub.h             # \u51cf\u6cd5\u5934\u6587\u4ef6\n\u251c\u2500\u2500 src                   # \u6e90\u4ee3\u7801\u76ee\u5f55\n\u2502   \u251c\u2500\u2500 CMakeLists.txt    # src \u76ee\u5f55\u4e0b\u7684 CMake \u914d\u7f6e\u6587\u4ef6\n\u2502   \u251c\u2500\u2500 main.cpp          # \u4e3b\u51fd\u6570\u6e90\u4ee3\u7801\u6587\u4ef6\n\u2502   \u251c\u2500\u2500 add.cpp           # \u52a0\u6cd5\u6e90\u4ee3\u7801\u6587\u4ef6\n\u2502   \u2514\u2500\u2500 sub.cpp           # \u51cf\u6cd5\u6e90\u4ee3\u7801\u6587\u4ef6\n\u2514\u2500\u2500 tests                 # \u6d4b\u8bd5\u4ee3\u7801\u76ee\u5f55\n    \u251c\u2500\u2500 CMakeLists.txt    # tests \u76ee\u5f55\u4e0b\u7684 CMake \u914d\u7f6e\u6587\u4ef6\n    \u2514\u2500\u2500 test_as.cpp       # \u6d4b\u8bd5\u6587\u4ef6\n</code></pre> <p><code>CMakeLists.txt</code></p> CMake<pre><code>cmake_minimum_required(VERSION 3.10)\nproject(GT)\nset(CMAKE_CXX_STANDARD 11)\n\n# \u6dfb\u52a0\u5934\u6587\u4ef6\u76ee\u5f55\ninclude_directories(${CMAKE_SOURCE_DIR}/include)\n\n# \u6dfb\u52a0\u6e90\u4ee3\u7801\u76ee\u5f55\nadd_subdirectory(src)\n\n# \u6dfb\u52a0\u6d4b\u8bd5\u76ee\u5f55\nenable_testing()\nadd_subdirectory(tests)\n</code></pre> <p><code>include/add.h</code></p> C++<pre><code>#pragma once\n\nint add(int a, int b);\n</code></pre> <p><code>include/sub.h</code></p> C++<pre><code>#pragma once\n\nint sub(int a, int b);\n</code></pre> <p><code>src/CMakeLists.txt</code></p> CMake<pre><code># \u521b\u5efa\u5e93\u76ee\u6807\uff0c\u4f9b\u5176\u4ed6\u53ef\u6267\u884c\u6587\u4ef6\u6216\u6d4b\u8bd5\u4f7f\u7528\nadd_library(add add.cpp)\nadd_library(sub sub.cpp)\n\n# \u521b\u5efa\u53ef\u6267\u884c\u6587\u4ef6\u76ee\u6807\nadd_executable(main main.cpp)\ntarget_link_libraries(main PRIVATE add sub)\n</code></pre> <p><code>src/add.cpp</code></p> C++<pre><code>#include \"add.hpp\"\n\nint add(int x, int y){\n    return x + y;\n}\n</code></pre> <p><code>src/sub.cpp</code></p> C++<pre><code>#include \"sub.hpp\"\n\nint sub(int x, int y){\n    return x - y;\n}\n</code></pre> <p><code>src/main.cpp</code></p> C++<pre><code>#include \"add.hpp\"\n#include \"sub.hpp\"\n#include &lt;iostream&gt;\n\nint main(){\n    std::cout &lt;&lt; add(2, 1) &lt;&lt; std::endl;\n    std::cout &lt;&lt; sub(2, 1) &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre> <p><code>tests/CMakeLists.txt</code></p> CMake<pre><code># \u67e5\u627e GTest\nfind_package(GTest REQUIRED)\n\n# \u6dfb\u52a0 GTest \u7684\u5934\u6587\u4ef6\ninclude_directories(${GTEST_INCLUDE_DIRS})\n\n# \u6dfb\u52a0\u6d4b\u8bd5\u53ef\u6267\u884c\u6587\u4ef6\nadd_executable(test_as test.cpp)\n\n# \u94fe\u63a5 GTest \u5e93\u548c\u9879\u76ee\u7684\u4ee3\u7801\u5e93\ntarget_link_libraries(test_as ${GTEST_LIBRARIES} add sub)\n\n# \u6dfb\u52a0\u6d4b\u8bd5\nadd_test(NAME main COMMAND test_as)\n</code></pre> <p><code>tests/test_as.cpp</code></p> C++<pre><code>#include &lt;gtest/gtest.h&gt;\n#include \"add.hpp\"\n#include \"sub.hpp\"\n\nTEST(AddTest, PositiveNumbers){\n    EXPECT_EQ(add(2, 1), 3);\n}\n\nTEST(SubTest, PositiveNumbers){\n    EXPECT_EQ(sub(2, 1), 1);\n}\n\nint main(int argc, char **argv){\n    testing::InitGoogleTest(&amp;argc, argv);\n    return RUN_ALL_TESTS();\n}\n</code></pre>"},{"location":"src/cpp/hmbdc/","title":"\ud83d\udce6 HMBDC","text":""},{"location":"src/cpp/hmbdc/#_1","title":"\u53c2\u8003","text":"<ul> <li>hmbdc</li> </ul>"},{"location":"src/cpp/hmbdc/#_2","title":"\u6015\u4f60\u770b\u4e0d\u5230","text":"<ul> <li> <p>\u5728 docker \u4e2d\u8fd0\u884c\u65f6\uff0c\u9700\u8981 <code>--ipc=host</code> \u53c2\u6570</p> </li> <li> <p>\u8dd1\u8d77\u6765\u6ca1\u4efb\u4f55\u53cd\u5e94\uff0c\u53ef\u4ee5\u5c1d\u8bd5 <code>sudo rm -rf /dev/shm/*</code></p> </li> </ul>"},{"location":"src/cpp/hmbdc/#_3","title":"\u7f16\u8bd1","text":"<p>\u5168\u91cf\u7f16\u8bd1</p> Bash<pre><code>apt install g++-12 libboost-all-dev\nmake -j8 CXX=g++-12\n</code></pre> <p>\u5355\u72ec\u7f16\u8bd1</p> Text Only<pre><code>g++-12 hello-world.cpp -O3 -g -std=c++20 -pthread -D BOOST_BIND_GLOBAL_PLACEHOLDERS -I/mnt/dxl/hmbdc-master/ -lrt\n</code></pre> <ul> <li><code>-std=c++20</code> \u4f4e\u4e8e c++20 \u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1</li> <li><code>-D BOOST_BIND_GLOBAL_PLACEHOLDERS</code> \u5728\u7f16\u8bd1\u5f00\u59cb\u524d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5b8f</li> </ul> <p>\u9759\u6001\u7f16\u8bd1</p> <p></p>"},{"location":"src/cpp/hmbdc/#_4","title":"\u4e00\u4e9b\u6982\u5ff5","text":"<ul> <li> <p><code>TIPS</code> C++ Type Inferred Pub/Sub\uff0c\u7c7b\u578b\u63a8\u65ad\u53d1\u5e03\u8ba2\u9605\uff0c\u6d88\u606f\u4ee5 C++ \u7c7b\u578b struct/class \u5b9a\u4e49</p> </li> <li> <p><code>POTS</code> Pub/sub On Topic String\uff0c\u57fa\u4e8e\u4e3b\u9898\u5b57\u7b26\u4e32\u7684\u53d1\u5e03\u8ba2\u9605</p> </li> <li> <p><code>Node</code> \u6bcf\u4e2a Node \u4ee3\u8868\u4e00\u4e2a OS \u7ebf\u7a0b\uff0c\u5176\u5b9e\u5c31\u662f sender / receiver</p> </li> <li> <p><code>Domain</code> \u591a\u4e2a Node \u7ec4\u6210\u4e00\u4e2a Domain\uff0c\u6d88\u606f\u901a\u8fc7 Domain \u4f20\u64ad\uff08\u53d1\u5e03/\u8ba2\u9605\uff09</p> </li> </ul> <p></p>"},{"location":"src/cpp/hmbdc/#_5","title":"\u8fd0\u884c\u903b\u8f91","text":"<ul> <li> <p>\u53d1\u9001\u7aef\u548c\u63a5\u6536\u7aef\u5b9e\u9645\u4e0a\u90fd\u53ef\u4ee5\u63a5\u53d1\u6d88\u606f\uff0c\u533a\u522b\u5728\u4e8e\uff1a</p> <ul> <li> <p>Sender \u7684\u5b9e\u73b0\u901a\u5e38\u5305\u62ec\u4e00\u4e2a\u5b9a\u65f6\u5668\u6216\u8005\u4e3b\u52a8\u89e6\u53d1\u4e8b\u4ef6\u7684\u673a\u5236\u3002\u5b83\u7684\u91cd\u70b9\u662f \u5b9a\u671f\u53d1\u9001\u6d88\u606f\uff0c\u4e0d\u9700\u8981\u7b49\u5f85\u63a5\u6536\u5230\u5176\u4ed6\u6d88\u606f</p> </li> <li> <p>Receiver \u5219\u4f9d\u8d56\u4e8e \u6d88\u606f\u7684\u5230\u8fbe\uff0c\u5b83\u7684\u6838\u5fc3\u662f \u8ba2\u9605\u548c\u54cd\u5e94\u6d88\u606f\uff0c\u901a\u5e38\u5305\u542b\u4e00\u4e2a\u5904\u7406\u56de\u8c03\uff08\u4f8b\u5982 <code>potsCb</code>\uff09\u6765\u5904\u7406\u63a5\u6536\u5230\u7684\u6d88\u606f\u3002</p> </li> </ul> </li> </ul>"},{"location":"src/cpp/hmbdc/#tips","title":"TIPS","text":"<p>\u53d1\u9001\u7aef</p> <ol> <li> <p>\u901a\u8fc7\u5355\u4f8b\u6a21\u5f0f\u521b\u5efa HMBDC \u7f51\u7edc\u6808\u7684\u4e0a\u4e0b\u6587</p> C++<pre><code>hmbdc::app::SingletonGuardian&lt;hmbdc::tips::tcpcast::Protocol&gt; g;\n</code></pre> </li> <li> <p>\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u542f\u52a8 domain\uff08\u9700\u8981\u6307\u5b9a\u4e24\u90e8\u5206\u914d\u7f6e\uff09</p> C++<pre><code>Config config;\n\nauto domain = Domain&lt;std::tuple&lt;&gt;\n    , ipc_property&lt;&gt;\n    , net_property&lt;tcpcast::Protocol&gt;&gt;{config};\n\ndomain.startPumping();\n</code></pre> </li> <li> <p>\u53d1\u5e03\u6d88\u606f\uff1a\u5411 domain \u4e2d push \u6d88\u606f\u7ed3\u6784\u4f53</p> C++<pre><code>struct Hello : hasTag&lt;1001&gt; { \n    char msg[6] = \"hello\";\n};\n\ndomain.publish(Hello{});\n</code></pre> </li> </ol> <p>\u63a5\u6536\u7aef</p> <ol> <li> <p>\u901a\u8fc7\u5355\u4f8b\u6a21\u5f0f\u521b\u5efa HMBDC \u7f51\u7edc\u6808\u7684\u4e0a\u4e0b\u6587</p> </li> <li> <p>\u521b\u5efa\u6d88\u606f\u7ed3\u6784\u4f53</p> C++<pre><code>struct Hello : hasTag&lt;1001&gt; { \n    char msg[6] = \"hello\";\n};\n</code></pre> </li> <li> <p>\u521b\u5efa domain\uff08\u8fd8\u672a\u542f\u52a8\uff09</p> C++<pre><code>Config config\n\nauto domain = Domain&lt;std::tuple&lt;Hello&gt;\n    , ipc_property&lt;&gt;\n    , net_property&lt;tcpcast::Protocol&gt;&gt;{config};\n</code></pre> </li> <li> <p>\u521b\u5efa Receiver Node</p> C++<pre><code>struct Receiver : Node&lt;Receiver\n    , std::tuple&lt;Hello&gt;&gt;\n    , std::tuple&lt;&gt;&gt; {\n\n    void handleMessageCb(Hello const&amp; m) {\n        cout &lt;&lt; m.msg &lt;&lt; endl;\n    }\n};\n</code></pre> </li> <li> <p>\u5411 domain \u6ce8\u518c Receiver Node \u5e76\u542f\u52a8</p> C++<pre><code>domain.add(recv).startPumping();\n</code></pre> </li> </ol>"},{"location":"src/cpp/hmbdc/#pots","title":"POTS","text":"<p>\u53d1\u9001\u7aef</p> <ol> <li> <p>\u5217\u51fa\u6240\u6709\u7684 topic</p> C++<pre><code>char const* AllTopics[] = {\n    \"/hello\",\n    \"/hi-back\",\n};\n</code></pre> </li> <li> <p>\u901a\u8fc7\u5355\u4f8b\u6a21\u5f0f\u521b\u5efa HMBDC \u7f51\u7edc\u6808\u7684\u4e0a\u4e0b\u6587</p> C++<pre><code>hmbdc::pattern::SingletonGuardian&lt;pots::MessageConfigurator&gt; g{AllTopics};\n</code></pre> </li> <li> <p>\u521b\u5efa Domain</p> C++<pre><code>auto domain = pots::DefaultDomain{ifaceAddr};\n</code></pre> </li> <li> <p>\u521b\u5efa Sender Node</p> </li> <li> <p>\u5411 domain \u6ce8\u518c Sender Node \u5e76\u542f\u52a8</p> C++<pre><code>domain.add(sender);\ndomain.startPumping();\n</code></pre> </li> </ol> <p>\u63a5\u6536\u7aef</p> <ol> <li> <p>\u5217\u51fa\u6240\u6709\u7684 topic</p> </li> <li> <p>\u901a\u8fc7\u5355\u4f8b\u6a21\u5f0f\u521b\u5efa HMBDC \u7f51\u7edc\u6808\u7684\u4e0a\u4e0b\u6587</p> </li> <li> <p>\u521b\u5efa Domain</p> </li> <li> <p>\u521b\u5efa Receiver Node</p> </li> <li> <p>\u5411 domain \u6ce8\u518c Receiver Node \u5e76\u542f\u52a8</p> </li> </ol> <p></p>"},{"location":"src/cpp/hmbdc/#example","title":"example \u89e3\u6790","text":""},{"location":"src/cpp/hmbdc/#hello-worldcpp","title":"hello-world.cpp","text":"C++<pre><code>// hello-world for hmbdc TIPS\n// - domain \u548c Node \u7684\u6982\u5ff5\u89c1 https://github.com/hmbdc-dev/hmbdc\n// \u6784\u5efa\uff1a\n// g++ hello-world.cpp -O3 -std=c++1z -pthread -D BOOST_BIND_GLOBAL_PLACEHOLDERS -I/usr/include/boost -lrt -o /tmp/hw\n// \u6211\u8bd5\u4e86\uff0c\u7f16\u4e0d\u4e86\uff0c\u8fd8\u662f\u5f97\u53bb hmbdc \u4f7f\u7528 make\uff0c\u8bb0\u5f97\u52a0 -g\n//\n// \u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u6709 term1 \u548c term2 \u4e24\u4e2a\u7ec8\u7aef\uff0c\u5206\u522b\u4f5c\u4e3a receiver \u548c sender\uff0c\u5148\u542f\u52a8\u63a5\u6536\u7aef\uff0c\u518d\u542f\u52a8\u53d1\u9001\u7aef\n// [term1] ./hello-world 127.0.0.1 recv\n// running as receiver, ctrl-c to exit\n//\n// [term2] ./hello-world 127.0.0.1\n// running as sender, ctrl-c to exit\n//\n// PS: \u53ef\u4ee5\u542f\u52a8\u591a\u4e2asend\uff0crecv\u90fd\u53ef\u4ee5\u6536\u5230\n//\n// to debug:\n// \u5fc5\u8981\u65f6\u9700\u8981\u6e05\u7406\u5171\u4eab\u5185\u5b58 \"rm /dev/shm/*\" \n// - SHM \u7684\u6240\u6709\u6743\u7531 ipcTransportOwnership \u914d\u7f6e\u9879\u51b3\u5b9a\uff0c\u8be5\u9879\u7684\u5177\u4f53\u914d\u7f6e\u53ef\u4ee5\u5728 tips/DefaultUserConfig.hpp \u6587\u4ef6\u4e2d\u627e\u5230\n#include \"hmbdc/tips/tcpcast/Protocol.hpp\"  // \u5f15\u5165 tcpcast \u4f20\u8f93\u534f\u8bae\uff0c\u7528\u4e8e\u4e0d\u540c\u4e3b\u673a\u4e4b\u95f4\uff08inter-host\uff09\u57fa\u4e8e TCP \u7684\u901a\u4fe1\n#include \"hmbdc/tips/Tips.hpp\"              // hmbdc(TIPS)\u7684\u6838\u5fc3\u5934\u6587\u4ef6\uff0c\u5b9a\u4e49\u4e86\u8de8\u7ebf\u7a0b\u3001\u8fdb\u7a0b\u548c\u7f51\u7edc\u7684\u53d1\u5e03/\u8ba2\u9605\u901a\u4fe1\u673a\u5236\n#include \"hmbdc/os/Signals.hpp\"             // \u5904\u7406 UNIX \u4fe1\u53f7\uff08SIGTERM\u3001SIGINT\uff09\uff0c\u786e\u4fdd\u5f53\u8fdb\u7a0b\u6536\u5230\u8fd9\u4e9b\u4fe1\u53f7\u65f6\uff0c\u80fd\u591f\u4f18\u96c5\u9000\u51fa\n\n#include &lt;iostream&gt;\n\nusing namespace std;\nusing namespace hmbdc::app;\nusing namespace hmbdc::tips;\n\n// \u641e\u4e00\u4e2a\u6d88\u606f\u7c7b\u578b\u8bd5\u4e00\u8bd5\uff0c\u6d88\u606f\u7c7b\u578b\u4e3a Hello\nstruct Hello : hasTag&lt;1001&gt; { // \u4e3a\u6bcf\u4e2a\u6d88\u606f\u7c7b\u578b\u5206\u914d\u4e00\u4e2a16\u4f4d\u7684\u6807\u7b7e\uff0c\u6807\u7b7e\u9700\u8981\u5927\u4e8e1000\u4e14\u552f\u4e00\n    char msg[6] = \"hello\";\n};\n\n// \u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684 Node \u8ba2\u9605\u4e0a\u8ff0\u6d88\u606f\nstruct Receiver : Node&lt;Receiver // \u6807\u8bc6\u5f53\u524d Node \u7684\u7c7b\u578b\u4e3a Receiver\uff0c\u7528\u4e8e\u63a5\u6536\u6d88\u606f\n    , std::tuple&lt;Hello&gt;         // \u8ba2\u9605 Hello \u6d88\u606f\uff0c\u5982\u679c\u9700\u8981\u8ba2\u9605\u591a\u4e2a\uff1astd::tuple&lt;Hello, World, ...&gt;\n    , std::tuple&lt;&gt;              // \u53d1\u5e03\u6d88\u606f\n&gt; {\n    // \u6d88\u606f\u56de\u8c03\uff0c\u5bf9\u4e8e\u8ba2\u9605\u7684\u6bcf\u4e2a\u6d88\u606f\u7c7b\u578b\uff0c\u90fd\u5fc5\u987b\u5b9e\u73b0\u4e00\u4e2a handleMessageCb \u51fd\u6570\uff0c\u5426\u5219\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1\n    void handleMessageCb(Hello const&amp; m) {\n        cout &lt;&lt; m.msg &lt;&lt; endl;\n    }\n};\n\nint main(int argc, char** argv) {\n    using namespace std;\n    // \u5224\u65ad\u4f20\u5165\u53c2\u6570\u6570\u91cf\n    if (argc &lt; 2) {\n        cerr &lt;&lt; argv[0] &lt;&lt; \" local-ip [recv]\" &lt;&lt; endl;\n        cerr &lt;&lt; \"start application as sender (default) or as Receiver\" &lt;&lt; endl;\n        return -1;\n    }\n    // \u62ff\u5230 IP\n    std::string ifaceAddr = argv[1];\n    bool isSender = argc &lt;= 2;\n\n    Config config;\n    config.put(\"ifaceAddr\", ifaceAddr); // \u7528\u4e8e\u7f51\u7edc\u901a\u4fe1\u7684 IP\uff0c\u4ec5\u4fee\u6539\u4e00\u4e2a\u914d\u7f6e\u9879\uff0c\u5176\u4ed6\u4fdd\u6301\u9ed8\u8ba4\n\n    // tcpcast::Protocol \u662f HMBDC \u7f51\u7edc\u6808\u7684\u4e0a\u4e0b\u6587\n    // \u901a\u8fc7 SingletonGuardian \u5355\u4f8b\u786e\u4fdd\u53ea\u6709\u4e00\u4e2a\u4e0a\u4e0b\u6587\u5b58\u5728\n    SingletonGuardian&lt;tcpcast::Protocol&gt; g; // RAII\n\n    if (isSender) {\n        cout &lt;&lt; \"running as sender, ctrl-c to exit\" &lt;&lt; endl;\n        // \u5b9a\u4e49\u4e00\u4e2a\u57df\n        using MyDomain = Domain&lt;std::tuple&lt;&gt;    // \u65e0\u9700\u8ba2\u9605\uff08\u56e0\u4e3a\u8fd9\u662f\u53d1\u9001\u8005\uff09\n            , ipc_property&lt;&gt;                    // \u9ed8\u8ba4 IPC \u53c2\u6570\uff08\u4f7f\u7528\u5171\u4eab\u5185\u5b58\uff09\n            , net_property&lt;tcpcast::Protocol&gt;&gt;; // \u4f7f\u7528 tcpcast \u4f5c\u4e3a\u7f51\u7edc\u4f20\u8f93\n        // \u901a\u8fc7\u914d\u7f6e\u542f\u52a8\u57df\n        auto domain = MyDomain{config};\n        domain.startPumping();\n        // \u6355\u83b7 control+c\uff0c\u5e76\u901a\u8fc7\u539f\u5b50\u53d8\u91cf stopped \u901a\u77e5\u7a0b\u5e8f\u505c\u6b62\u8fd0\u884c\n        auto stopped = std::atomic&lt;bool&gt;{false};\n        hmbdc::os::HandleSignals::onTermIntDo([&amp;](){stopped = true;});\n        // \u76f4\u5230 control+c \u88ab\u6309\u4e0b \n        while (!stopped) {\n            // \u5411 domain \u4e2d\u53d1\u5e03\u4e00\u4e2a Hello \u6d88\u606f\uff0c\u6bcf\u79d2\u4e00\u6b21\n            domain.publish(Hello{});\n            std::this_thread::sleep_for(std::chrono::seconds(1));\n        }\n        domain.stop();\n        domain.join();\n    } else {\n        cout &lt;&lt; \"running as receiver, ctrl-c to exit\" &lt;&lt; endl;\n        using MyDomain = Domain&lt;std::tuple&lt;Hello&gt;\n            , ipc_property&lt;&gt;\n            , net_property&lt;tcpcast::Protocol&gt;&gt;;\n        auto domain = MyDomain{config};\n        Receiver recv;\n        domain.add(recv).startPumping();    // \u6dfb\u52a0\u63a5\u6536\u8005\u5e76\u542f\u52a8\u6d88\u606f\u5faa\u73af\n        // \u6355\u83b7 control+c\uff0c\u5e76\u901a\u8fc7\u539f\u5b50\u53d8\u91cf stopped \u901a\u77e5\u7a0b\u5e8f\u505c\u6b62\u8fd0\u884c\n        hmbdc::os::HandleSignals::onTermIntDo([&amp;](){domain.stop();});\n        domain.join();\n    }\n}\n</code></pre>"},{"location":"src/cpp/hmbdc/#hello-potscpp","title":"hello-pots.cpp","text":"C++<pre><code>// hello world for hmbdc POTS \n// \u540c\u4e0a\n#include \"hmbdc/pots/Pots.hpp\"\n#include \"hmbdc/os/Signals.hpp\"\n\n#include &lt;iostream&gt;\n#include &lt;iterator&gt;\n\nusing namespace hmbdc;\n\n// \u5217\u51fa\u6240\u6709\u4e3b\u9898\uff0c\u5728\u6240\u6709 .h \u6216 .cpp \u6587\u4ef6\u4e2d\uff0c\u987a\u5e8f\u5e94\u5f53\u4e00\u81f4\nchar const* AllTopics[] = {\n    \"/hello\",\n    \"/hi-back\",\n};\n\n// \u5411 /hello \u8bdd\u9898\u53d1\u5e03\u6d88\u606f\uff0c\u5e76\u4e14\u6bcf\u6b21\u6536\u5230 /hi-back \u8bdd\u9898\u7684\u6d88\u606f\u65f6\uff0c\u8f93\u51fa\u63a5\u6536\u5230\u7684\u6d88\u606f\u5185\u5bb9\nstruct Sender : pots::Node&lt;Sender&gt; {\n    Sender() \n    : Node{\n        {\"/hi-back\"}        // \u8ba2\u9605 topics\n        , {\"/hello\"}        // \u53d1\u5e03 topics\n    } {\n        // \u542f\u52a8\u4e00\u4e2a\u5b9a\u65f6\u5668\uff0c\u6bcf\u79d2\u89e6\u53d1\u4e00\u6b21\uff0c\u5e76\u4e14\u7b2c\u4e00\u6b21\u89e6\u53d1\u5c3d\u53ef\u80fd\u5feb\u5730\u53d1\u751f\n        Node::schedule(time::SysTime::now(), timer1Hz);\n    }\n\n    // \u8282\u70b9\u540d\u79f0\n    char const* hmbdcName() const {return \"Sender\";}\n\n    // \u8282\u70b9\u7684\u521d\u59cb\u5316\u9636\u6bb5\uff0c\u6240\u6709\u6d88\u606f\u7684\u8c03\u5ea6\u548c\u5b9a\u65f6\u5668\u89e6\u53d1\u4e4b\u524d\uff0c\u6846\u67b6\u4f1a\u8c03\u7528\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\n    virtual void messageDispatchingStartedCb(std::atomic&lt;size_t&gt; const*) override {\n        // \u6d88\u606f\u8c03\u5ea6\u548c\u5b9a\u65f6\u5668\u89e6\u53d1\u5df2\u7ecf\u5f00\u59cb\n        std::cout &lt;&lt; \"start messaging and timers\" &lt;&lt; std::endl;\n    }\n\n    // \u6bcf\u5f53\u6b64 Sender \u7ebf\u7a0b\u88ab\u89e3\u9501\u65f6\uff0c\u56de\u8c03\u51fd\u6570\u4f1a\u88ab\u8c03\u7528\u4e00\u6b21\u3002\n    // \u7ebf\u7a0b\u89e3\u9501\u7684\u539f\u56e0\u53ef\u80fd\u662f\uff1a\u65b0\u6d88\u606f\u5230\u8fbe\u3001\u5b9a\u65f6\u5668\u5524\u9192\uff0c\u6216\u8005\u6700\u5927\u963b\u585e\u8d85\u65f6\uff08\u9ed8\u8ba4 1 \u79d2\uff09\u3002\n    void invokedCb(size_t count) override {\n        if (count) std::cout &lt;&lt; \"msgs just received =\" &lt;&lt; count &lt;&lt; std::endl;\n    }\n\n    // \u5904\u7406\u63a5\u6536\u5230\u7684\u6d88\u606f - \u6d88\u606f\u56de\u8c03\uff0csender \u53ef\u4ee5\u4e0d\u5b9e\u73b0\u8fd9\u4e2a\u51fd\u6570\n    // topic: \u6d88\u606f\u6240\u5c5e\u4e3b\u9898\n    // msg: \u6307\u5411\u6d88\u606f\u5185\u5bb9\u7684\u6307\u9488\n    // msgLen: \u6d88\u606f\u957f\u5ea6\uff08\u5b57\u8282\u6570\uff09\n    virtual void potsCb(std::string_view topic, void const* msg, size_t msgLen) override {\n        std::cout &lt;&lt; static_cast&lt;char const*&gt;(msg) &lt;&lt; std::endl;\n    }\n\n    /// timer\n    time::ReoccuringTimer timer1Hz{time::Duration::seconds(1) // \u6bcf\u79d2\u89e6\u53d1\u4e00\u6b21\n        , [this](auto&amp;&amp;, auto&amp;&amp;) {                            // \u5728 timer \u89e6\u53d1\u65f6\u6267\u884c\u6b64\u64cd\u4f5c\n        static auto count = 10;\n        if (count--) { \n            std::cout &lt;&lt; \"sending a Hello\" &lt;&lt; std::endl;\n            auto msg = \"hello world!\";\n            publish(\"/hello\", msg, strlen(msg) + 1);          // \u5411 \"/hello\" \u53d1\u5e03\u6d88\u606f\n        } else {\n            throw (ExitCode(0));    // \u53d1\u9001\u5b8c\u6210\u540e\uff0c\u8282\u70b9\u4f1a\u629b\u51fa\u4e00\u4e2a ExitCode(0) \u5f02\u5e38\uff0c\u8868\u793a\u5b83\u7684\u4efb\u52a1\u5df2\u5b8c\u6210\u5e76\u9000\u51fa\u3002\n        }\n    }};\n};\n\nstruct Receiver : pots::Node&lt;Receiver&gt; {\n    Receiver()\n    : Node(\n        {\"/hello\"}          // \u8ba2\u9605 \"/hello\" topic\n        , {\"/hi-back\"})     // \u53d1\u5e03 \"/hi-back\" topic\n    {}\n    char const* hmbdcName() const {return \"Receiver\";}\n\n    // \u5904\u7406\u63a5\u6536\u5230\u7684\u6d88\u606f \u56de\u8c03\u51fd\u6570 \u5fc5\u987b\u6709\uff0c\u5426\u5219\u7f16\u8bd1\u4e0d\u8fc7\n    void potsCb(std::string_view topic, void const* msg, size_t msgLen) {\n        std::cout &lt;&lt; static_cast&lt;char const*&gt;(msg) &lt;&lt; std::endl;\n\n        std::string back{\"world hi back\"};\n        // \u53d1\u5e03\u6d88\u606f\u5230 \"/hi-back\"\n        publish(\"/hi-back\", back.c_str(), back.size() + 1);\n    }\n};\n\nint main(int argc, char** argv) {\n    using namespace std;\n    if (argc &lt; 2) {\n        cerr &lt;&lt; argv[0] &lt;&lt; \" local-ip [recv]\" &lt;&lt; endl;\n        cerr &lt;&lt; \"start application as sender (default) or as Receiver\" &lt;&lt; endl;\n        return -1;\n    }\n    auto ifaceAddr = argv[1];\n    bool isSender = argc &lt;= 2;\n\n    // RAII\n    // pots::MessageConfigurator \u662f HMBDC pots \u7684\u4e0a\u4e0b\u6587\n    // \u5728\u7a0b\u5e8f\u8fd0\u884c\u65e9\u671f\uff0c\u5c06 AllTopics \u6ce8\u518c\u5230 pots \u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u4f7f\u7528\u5355\u4f8b\u6a21\u5f0f\u5b9e\u4f8b\u5316\n    hmbdc::pattern::SingletonGuardian&lt;pots::MessageConfigurator&gt; g{AllTopics};\n    // \u4f7f\u7528\u7684\u57df\n    auto domain = pots::DefaultDomain{ifaceAddr};\n\n    if (isSender) {\n        cout &lt;&lt; \"running as sender for 10 sec and exit\" &lt;&lt; endl;\n        Sender sender;\n        domain.add(sender);                     // \u5c06 sender \u6dfb\u52a0\u5230\u57df\u4e2d\uff0c\u4f5c\u4e3a\u7ebf\u7a0b\u542f\u52a8\n        domain.startPumping();                  // \u542f\u52a8\u8fdb\u7a0b\u7ea7\u522b\u7684\u6d88\u606fIO\n        sleep(10);           // \u8ba9 sender \u7ebf\u7a0b\u8fd0\u884c\u4e00\u6bb5\u65f6\u95f4\n        domain.stop();       // \u5b8c\u6210\u5e76\u9000\u51fa\n        domain.join();       // \u7b49\u5f85 sender \u7ebf\u7a0b\u7ed3\u675f\n    } else {\n        cout &lt;&lt; \"running as receiver, ctrl-c to exit\" &lt;&lt; endl;\n        Receiver recv;\n        domain.add(recv).startPumping();\n        // \u6355\u83b7 control+c\uff0c\u5e76\u901a\u8fc7\u539f\u5b50\u53d8\u91cf stopped \u901a\u77e5\u7a0b\u5e8f\u505c\u6b62\u8fd0\u884c\n        hmbdc::os::HandleSignals::onTermIntDo([&amp;](){domain.stop();});\n        domain.join();\n    }\n}\n</code></pre>"},{"location":"src/cpp/hmbdc/#chat3cpp","title":"chat3.cpp","text":"C++<pre><code>//on top of chat.cpp, this is to show how to use zero copy (0cpy) feature of TIPS to accelerate IPC\n//communication - with minimum programming\n//search for &lt;====== mark in the code where the key additions related to timer and thread pool\n//\n//Additionally it demonstrates how to write ChatterInterface as Node interface classes that \n//diff concrete Chatter Nodes can derived from. Since it involves virtual functions and it could be\n//slightly slower than the previous Chatter that do not use this technique\n//\n//the app join a chat group and start to have group chat\n//to run:\n//./chat3 &lt;local-ip&gt; admin admin                  # start the groups by admin, and keep it running\n//./chat3 &lt;local-ip&gt; &lt;chat-group-name&gt; &lt;my-name&gt;  # join the group\n//to build:\n//g++ chat3.cpp -std=c++1z -D BOOST_BIND_GLOBAL_PLACEHOLDERS -pthread  -Ipath-to-boost -lrt -o /tmp/chat\n//\n//to debug:\n//somtimes you need to reset shared memory by \"rm /dev/shm/*\" \n//on each host, the shared memory is owned (create and delete) by the first chat process started on local host\n//- see ipcTransportOwnership config for shared memory ownership in tips/DefaultUserConfig.hpp\n//\n#include \"hmbdc/tips/tcpcast/Protocol.hpp\" //use tcpcast for communication\n#include \"hmbdc/tips/Tips.hpp\"\n\n\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;memory&gt;\n#include &lt;unistd.h&gt;\n\nusing namespace std;\nusing namespace hmbdc::app;\nusing namespace hmbdc::tips;\n\n//\n//this is the message the administrator \"annouces\", each Chatter subscribes to it\n//to hear what the admin has to say regardless of chatting group\n//\nstruct Announcement \n: hasTag&lt;1001&gt; {\n    char msg[1000];         //1000 char max per chat message\n};\n\n//\n//this is the message going back and forth carrying text conversations - unlimited in size\n//\n//we make all the chat groups use the same ChatMessage type, but each group will\n//be assigned a unique tag number ranging from 1002 - (1002 + 100)\n//\nstruct ChatMessage \n: hasSharedPtrAttachment&lt;ChatMessage, char[]&gt;\n, hasTag&lt;1002, 100&gt; {       //up to 100 chat groups; only configured 3 in the example\n    template &lt;typename Node&gt;\n    ChatMessage(char const* myId, uint16_t grouId, char const* msg, Node&amp; node)\n    : hasTag(grouId) {\n        /// allocate memory from shm - and it is managed by TIPS                &lt;======\n        /// no need to worry about deallocate afterwards on local machine\n        /// or on other processes or remote hosts, the message type works everywhere\n        node.allocateInShmFor0cpy(*this, strlen(msg) + 1); ///   &lt;===== that's it! fill and send it away\n        snprintf(id, sizeof(id), \"%s\", myId);\n        snprintf(hasSharedPtrAttachment::attachmentSp.get(), strlen(msg) + 1\n            , \"%s\", msg);\n    }\n\n    char id[16];            //chatter\n\n    // ChatMessage is a Message type whose tag is runtime determined (vs hasTag type of message that is \n    // statically tagged Message type - see Announcement), this method is used in the tag determination\n    static uint16_t getGroupId(std::string const&amp; group) {\n        static const std::string groupNames[] = {{\"tennis\"}, {\"volleyball\"}, {\"basketball\"}};\n        auto it = std::find(std::begin(groupNames), std::end(groupNames), group);\n        //returns group id which is used as the tag offset (against th base tag 1002)\n        if (it == std::end(groupNames)) throw std::out_of_range(\"non-existing group\");\n        return it - std::begin(groupNames);\n    }\n};\n\n/// Admin node that runs in a thread and gets message callbacks\nstruct Admin \n: Node&lt;Admin, std::tuple&lt;ChatMessage&gt;, std::tuple&lt;Announcement&gt;&gt; {\n    /// message callback - won't compile if missing\n    void handleMessageCb(ChatMessage const&amp; m) {\n        cout &lt;&lt; m.id &lt;&lt; \": \" &lt;&lt; m.attachmentSp.get() &lt;&lt; endl;\n    }\n\n    void annouce(char const* text) {\n        Announcement m;\n        snprintf(m.msg, sizeof(m.msg), \"%s\", text);\n        /// never blocking best effort publish\n        tryPublish(m);\n    }\n};\n\n/// Chatter node\nstruct ChatterInterface\n: Node&lt;ChatterInterface, std::tuple&lt;Announcement, ChatMessage&gt;, std::tuple&lt;ChatMessage&gt;&gt; {\n    virtual void addTypeTagRangeSubsForCfg(ChatMessage*, std::function&lt;void(uint16_t)&gt; addOffsetInRange) const  = 0;\n    virtual void handleMessageCb(Announcement const&amp; m) = 0;\n    virtual void handleMessageCb(ChatMessage const&amp; m) = 0;\n    virtual void say(std::string const&amp; something) = 0;\n    virtual bool stopped() const = 0;\n};\n\nstruct Chatter : ChatterInterface {\n    Chatter(std::string id, std::string group)\n    : id(id)\n    , groupId(ChatMessage::getGroupId(group)) {\n    }\n\n    /// unlike Admin who subscribes all ChatMessage\n    /// for ChatMessage Chatter only subscribes to one tag offset number (groupId: 0 - 99)\n    /// tennis uses the tag offset = 0, valleyball = 1, ...\n    /// here we tell the framework what the tag offset is for ChatMessage\n    /// Note Admin does not implemet this function and all ChatMessage\n    /// are delivered to Admin regardles of the tag offset of each message\n    void addTypeTagRangeSubsForCfg(ChatMessage*, std::function&lt;void(uint16_t)&gt; addOffsetInRange) const override {\n        addOffsetInRange(groupId);\n    }\n\n    void handleMessageCb(Announcement const&amp; m) override {\n        cout &lt;&lt; \"ADMIN ANNOUCEMENT: \" &lt;&lt; m.msg &lt;&lt; endl;\n        if (std::string(m.msg) == \"TERM\") {\n            cout &lt;&lt; \"Press Enter to exit\" &lt;&lt; endl;\n            stopFlag_ = true;\n            throw 0; //any exception in callback signal end of messaging\n        }\n    }\n\n    void handleMessageCb(ChatMessage const&amp; m) override {\n        if (id != m.id) { //do not reprint myself\n            cout &lt;&lt; m.id &lt;&lt; \": \" &lt;&lt; m.attachmentSp.get() &lt;&lt; endl;\n        }\n    }\n\n    /// thread safe function\n    void say(std::string const&amp; something) override {\n        ChatMessage m(id.c_str(), groupId, something.c_str(), *this);\n        publish(m); /// can publish from any thread\n    }\n\n    bool stopped() const override {\n        return stopFlag_;\n    }\n\n    string const id;\n    uint16_t const groupId;\n\n    private:\n        std::atomic&lt;bool&gt; stopFlag_{false};\n};\n\nint main(int argc, char** argv) {\n    using namespace std;\n    if (argc != 4) {\n        cerr &lt;&lt; argv[0] &lt;&lt; \" local-ip chat-group-name my-name\" &lt;&lt; endl;\n        cerr &lt;&lt; \"multicast should be enabled on local-ip network\" &lt;&lt; endl;\n        return -1;\n    }\n    std::string ifaceAddr = argv[1];\n    std::string chatGroup = argv[2];\n    std::string myId = argv[3];\n\n    Config config; //other config values are default\n    config.put(\"ifaceAddr\", ifaceAddr);//which interface to use for communication\n\n    SingletonGuardian&lt;tcpcast::Protocol&gt; g; //RAII for tcpcast::Protocol resources\n\n\n    /// hmbdc uses shared memory with very efficient algorithm for inter process commnunication on the same host\n    /// here we declare some properties for the shared memory config\n    using IpcProp = ipc_property&lt;4  /// up to 4 chatters on the SAME host to do IPC, largest number is 256\n        , 1000                      /// largest message size to send to IPC - 1000 is more than enough\n                                    /// all IPC parties needs to match on this\n    &gt;;  \n\n    if (myId == \"admin\") { //as admin\n        using SubMessages = typename Admin::RecvMessageTuple;\n        using NetProp = net_property&lt;tcpcast::Protocol\n            , 1000  /// big enough to hold largest message (excluding attachment - which isn't compile time \n                    /// determined anyway) to send to net\n                    /// compile time checked if that is the case - make it 64 bytes to see the compiling error\n        &gt;;\n\n        using ChatDomain = Domain&lt;SubMessages, IpcProp, NetProp&gt;;\n        auto domain = ChatDomain{config};           /// admin should create the chat group and own it\n                                                    /// so run it first\n        Admin admin;\n        domain.add(admin).startPumping();\n        //we can read the admin's input and send messages out now\n        string line;\n        cout &lt;&lt; \"start type a message\" &lt;&lt; endl;\n        cout &lt;&lt; \"ctrl-d to terminate\" &lt;&lt; endl;\n\n        while(getline(cin, line)) {\n            admin.annouce(line.c_str());\n        }\n        admin.annouce(\"TERM\");\n        sleep(1); //so the message does go out to the network\n        domain.stop();\n        domain.join();\n    } else {  //as a chatter\n        using SubMessages = typename Chatter::RecvMessageTuple;\n        using NetProp = net_property&lt;tcpcast::Protocol\n            , 128 /// largest message size to send to net\n        &gt;;\n\n        using ChatDomain = Domain&lt;SubMessages, IpcProp, NetProp&gt;;\n        auto domain = ChatDomain{config};\n        if (domain.ownIpcTransport()) {\n            cout &lt;&lt; \"You own the IPC transport now!\" &lt;&lt; endl;\n        }\n        Chatter concreteChatter(myId, chatGroup);\n        ChatterInterface&amp; chatter{concreteChatter};\n\n        // use the interface not the concrete\n        domain.add(chatter).startPumping();\n\n        //we can read the user's input and send messages out now\n        string line;\n        cout &lt;&lt; \"start typing a message\" &lt;&lt; endl;\n        cout &lt;&lt; \"ctrl-d to terminate\" &lt;&lt; endl;\n\n        while(!chatter.stopped() &amp;&amp; getline(cin, line)) {\n            chatter.say(line); //now reliable publish\n        }\n\n        domain.stop();\n        domain.join();\n    }\n}\n</code></pre>"},{"location":"src/cpp/make/","title":"\ud83d\udd29 Make","text":"<p>\u5b98\u7f51</p>"},{"location":"src/cpp/make/#setup","title":"setup","text":""},{"location":"src/cpp/make/#linux","title":"linux","text":""},{"location":"src/cpp/make/#windows","title":"windows","text":"<ol> <li>\u4e0b\u8f7d Make</li> <li>\u5b89\u88c5</li> <li>\u6dfb\u52a0\u73af\u5883\u53d8\u91cf <code>GnuWin32\\bin</code></li> </ol>"},{"location":"src/cpp/make/#use","title":"use","text":"<ul> <li> <p>\u5f53\u524d\u76ee\u5f55\u4e0b\u5b58\u5728 <code>Makefile</code> \u6587\u4ef6     Text Only<pre><code>project/\n\u251c\u2500\u2500 main.cpp\n\u2514\u2500\u2500 Makefile\n</code></pre></p> Bash<pre><code>make # \u76f4\u63a5 make \u5373\u53ef\n</code></pre> </li> <li> <p><code>Makefile</code> \u6700\u7b80\u793a\u4f8b     Makefile<pre><code># \u58f0\u660e\u53d8\u91cf\nCXX = g++                       # \u7f16\u8bd1\u5668\u547d\u4ee4\nCXXFLAGS = -std=c++26 -O2       # \u7f16\u8bd1\u9009\u9879\nTARGET = main                   # \u76ee\u6807\u53ef\u6267\u884c\u6587\u4ef6\u540d\nSRCS = main.cpp                 # \u6e90\u6587\u4ef6\u5217\u8868\n\nall: $(TARGET)                  # \u9ed8\u8ba4\u76ee\u6807\u89c4\u5219\n\n$(TARGET): $(SRCS)              # \u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u7684\u89c4\u5219\n        $(CXX) $(CXXFLAGS) -o $(TARGET) $(SRCS)\n\nclean:                          # \u6e05\u7406\u751f\u6210\u7684\u6587\u4ef6\n        rm -f $(TARGET)\n\n.PHONY: all clean               # \u58f0\u660e\u4f2a\u76ee\u6807\uff0c\u907f\u514d\u4e0e\u6587\u4ef6\u540d\u51b2\u7a81\n</code></pre></p> </li> <li> <p><code>Makefile</code> \u8fde\u63a5\u52a8\u6001\u5e93     Makefile<pre><code># \u58f0\u660e\u53d8\u91cf\nCXX = g++\nCXXFLAGS = -std=c++26\nTARGET = main\nSRCS = main.cpp\n\n# \u9700\u8981\u94fe\u63a5\u7684\u52a8\u6001\u5e93\u5217\u8868\nLIBS = -lssl -lcrypto -lz       # OpenSSL \u7684 SSL \u5e93\u3001\u52a0\u5bc6\u5e93\u548c zlib \u5e93\n\n# \u5934\u6587\u4ef6\u548c\u5e93\u6587\u4ef6\u8def\u5f84\nINC_DIR = /usr/local/XYZ/include\nLIB_DIR = /usr/local/XYZ/lib /usr/lib\n\nall: $(TARGET)                  # \u9ed8\u8ba4\u76ee\u6807\u89c4\u5219\n\n$(TARGET): $(SRCS)              # \u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u7684\u89c4\u5219\n    $(CXX) $(CXXFLAGS) -I$(INC_DIR) -L$(LIB_DIR) -o $(TARGET) $ (SRCS) $(LIBS)\n\nclean:                          # \u6e05\u7406\u751f\u6210\u7684\u6587\u4ef6\n    rm -f $(TARGET)\n\n.PHONY: all clean               # \u58f0\u660e\u4f2a\u76ee\u6807\uff0c\u907f\u514d\u4e0e\u6587\u4ef6\u540d\u51b2\u7a81\n</code></pre></p> </li> </ul>"},{"location":"src/cpp/network/","title":"\u7f51\u7edc\u7f16\u7a0b","text":""},{"location":"src/cpp/network/#_2","title":"\u5f15\u5b50","text":"<p>\u6e90\u4ee3\u7801</p> <p>TCP / IP \u5206\u5c42\u6a21\u578b\uff1a</p> \u5c42 \u534f\u8bae \u5e94\u7528\u5c42 <code>HTTP</code> <code>FTP</code> <code>...</code> \u4f20\u8f93\u5c42 <code>TCP</code> <code>UDP</code> <code>...</code> \u7f51\u7edc\u5c42 <code>IPv4</code> <code>IPv6</code> <code>...</code> \u7269\u7406\u5c42 <code>LAN</code> <code>WLAN</code> <code>...</code> <p>\u8ba1\u7b97\u673a\u7ec4\u6210\u539f\u7406\uff1a</p> \u8bbe\u5907 \u529f\u80fd \u6570\u636e\u603b\u7ebf \u4f20\u8f93\u6570\u636e IO\u8bbe\u5907 \u8f93\u5165\u8f93\u51fa \u4e3b\u5b58\u50a8\u5668 \u5b58\u50a8\u6570\u636e CPU \u8ba1\u7b97\u6570\u636e <p>\u64cd\u4f5c\u7cfb\u7edf\uff1a</p> <ul> <li> <p>\uff08\u5185\u6838\u7a7a\u95f4\uff09\u7ba1\u7406\u8ba1\u7b97\u673a\u786c\u4ef6\u8d44\u6e90\u8fdb\u884c\u7ba1\u7406\u548c\u63a7\u5236</p> </li> <li> <p>\uff08\u7528\u6237\u7a7a\u95f4\uff09\u63d0\u4f9b\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\uff0c\u4f9b\u7528\u6237\u7a0b\u5e8f\u8c03\u7528</p> </li> <li> <p>\u8fdb\u7a0b\uff1a\u4e3a\u4e86\u8ba9\u8ba1\u7b97\u673a\u80fd\u591f\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u7a0b\u5e8f\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5f15\u5165\u4e86\u8fdb\u7a0b\u7684\u6982\u5ff5</p> </li> <li> <p>\u7ebf\u7a0b\uff1a\u7ebf\u7a0b\u662f CPU \u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u8fdb\u7a0b\u662f\u8d44\u6e90\u5206\u914d\u7684\u57fa\u672c\u5355\u4f4d</p> </li> </ul> <p></p> <p>\u53c2\u8003</p> <ul> <li> <p>\u4e66\u7c4d</p> <ul> <li>\u300aLinux \u591a\u7ebf\u7a0b\u670d\u52a1\u7aef\u7f16\u7a0b\uff1a\u4f7f\u7528 muduo C++ \u7f51\u7edc\u5e93\u300b</li> <li>\u300aLinux \u9ad8\u6027\u80fd\u670d\u52a1\u5668\u7f16\u7a0b\u300b \u6e38\u53cc</li> </ul> </li> <li> <p>\u535a\u5ba2</p> <ul> <li>30\u5929\u81ea\u5236C++\u670d\u52a1\u5668</li> <li>webServer</li> </ul> </li> </ul> <p></p>"},{"location":"src/cpp/network/#1-io","title":"1 \u963b\u585e IO","text":"<p>\u5f53 \u8fdb\u7a0b \u53d1\u8d77 IO\u8bf7\u6c42 \u540e\uff0c\u5982\u679c \u5185\u6838 \u6ca1\u6709\u51c6\u5907\u597d\u6570\u636e\uff0c\u90a3\u4e48 \u8fdb\u7a0b \u5c06\u4e00\u76f4\u7b49\u5f85\uff0c\u76f4\u5230 \u5185\u6838 \u51c6\u5907\u597d\u6570\u636e\u4e3a\u6b62</p> <p>\u5f53\u7a0b\u5e8f\u53d1\u8d77\u53d1\u9001\u6570\u636e\u7684\u8bf7\u6c42\u65f6\uff0c\u5982\u679c\u53d1\u9001\u7f13\u51b2\u533a\u5df2\u6ee1\uff0c\u90a3\u4e48\u7a0b\u5e8f\u5c06\u4e00\u76f4\u7b49\u5f85\uff0c\u76f4\u5230\u53d1\u9001\u7f13\u51b2\u533a\u6709\u7a7a\u95f4\u4e3a\u6b62</p> <p>\u5f53\u7a0b\u5e8f\u53d1\u8d77\u63a5\u6536\u6570\u636e\u7684\u8bf7\u6c42\u65f6\uff0c\u5982\u679c\u63a5\u6536\u7f13\u51b2\u533a\u4e3a\u7a7a\uff0c\u90a3\u4e48\u7a0b\u5e8f\u5c06\u4e00\u76f4\u7b49\u5f85\uff0c\u76f4\u5230\u63a5\u6536\u7f13\u51b2\u533a\u6709\u6570\u636e\u4e3a\u6b62</p>"},{"location":"src/cpp/network/#tcp","title":"TCP","text":"<p>TCP \u901a\u4fe1\u6a21\u578b</p> <p>socket \u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u800c\u4e0d\u662f\u4e00\u79cd\u534f\u8bae\uff0c\u5176\u62bd\u8c61\u5728\u5e94\u7528\u5c42\u4e0e\u4f20\u8f93\u5c42\u4e4b\u95f4</p> \u51fd\u6570 \u670d\u52a1\u7aef 1 <code>socket()</code> \u521b\u5efa socket 2 <code>bind()</code> \u7ed1\u5b9a ip + port \u81f3\u8be5 socket \u4e0a 3 <code>listen()</code> \u76d1\u542c\u8be5 \u7aef\u53e3 4 <code>accept()</code> \u63a5\u53d7\u6765\u81ea\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u8bf7\u6c42 5 <code>recv()</code> \u4ece socket \u4e2d\u8bfb\u53d6\u5b57\u7b26 6 <code>close()</code> \u5173\u95ed socket \u51fd\u6570 \u5ba2\u6237\u7aef 1 <code>socket()</code> \u521b\u5efa socket 2 <code>connect()</code> \u8fde\u63a5\u6307\u5b9a ip + port 3 <code>send()</code> \u53d1\u9001\u6d88\u606f 4 <code>close()</code> \u5173\u95ed socket"},{"location":"src/cpp/network/#server","title":"server","text":"<ol> <li> <p>\u521b\u5efa\u5957\u63a5\u5b57 <code>socket()</code> C++<pre><code>#include &lt;sys/socket.h&gt; // socket()\n</code></pre></p> C++<pre><code>int server = socket(AF_INET, SOCK_STREAM, 0); // \u521b\u5efa\u5957\u63a5\u5b57\n</code></pre> <p>\u5f53 <code>socket()</code> \u51fd\u6570\u8c03\u7528\u6210\u529f\u65f6\uff0c\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5373 <code>socket</code>\uff0c\u5f53\u8c03\u7528\u5931\u8d25\u65f6\uff0c\u8fd4\u56de <code>-1</code></p> <ul> <li><code>AF_INET</code>\uff1aIPv4</li> <li><code>SOCK_STREAM</code>\uff1aTCP</li> <li><code>0</code>\uff1a\u81ea\u52a8\u9009\u62e9\u534f\u8bae\uff0c\u8fd9\u91cc\u662f <code>TCP</code> \u534f\u8bae</li> </ul> </li> </ol> <p></p> <ol> <li> <p>\u7ed1\u5b9a ip + port <code>bind()</code> C++<pre><code>#include &lt;cstring&gt;     // memset()\n#include &lt;arpa/inet.h&gt; // sockaddr\n</code></pre></p> C++<pre><code>// \u670d\u52a1\u7aef\u5730\u5740\nsockaddr_in server_addr;\nmemset(&amp;server_addr, '\\0', sizeof server_addr);\n// \u7ed9\u5730\u5740\u8d4b\u503c\nserver_addr.sin_family      = AF_INET;\nserver_addr.sin_addr.s_addr = inet_addr(\"0.0.0.0\");\nserver_addr.sin_port        = htons(10086);\n// \u7ed1\u5b9a\nbind(server, (sockaddr*)&amp;server_addr, sizeof server_addr);\n</code></pre> <p>\u5f53 <code>bind()</code> \u51fd\u6570\u8c03\u7528\u6210\u529f\u65f6\uff0c\u8fd4\u56de <code>0</code>\uff0c\u5f53\u8c03\u7528\u5931\u8d25\u65f6\uff0c\u8fd4\u56de <code>-1</code></p> <ul> <li><code>sockaddr_in</code>\uff1aIPv4 \u5957\u63a5\u5b57\u5730\u5740\u7ed3\u6784\u4f53</li> <li><code>sin_family</code>\uff1a\u5730\u5740\u65cf\uff0c\u8fd9\u91cc\u662f IPv4</li> <li><code>sin_addr.s_addr</code>\uff1aIPv4 \u5730\u5740</li> <li><code>sin_port</code>\uff1a\u7aef\u53e3\u53f7</li> </ul> <p></p> <p>\u4e3a\u4ec0\u4e48\u8981\u5f3a\u5236\u8f6c\u6362\u4e3a <code>sockaddr</code>\uff1f  \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528 <code>sockaddr_in</code> \u800c\u4e0d\u662f <code>sockaddr</code>\uff1f * <code>sockaddr</code> \u662f\u4e00\u4e2a\u901a\u7528\u7684\u5957\u63a5\u5b57\u5730\u5740\u7ed3\u6784\u4f53\uff0c\u53ef\u4ee5\u7528\u4e8e\u4efb\u4f55\u7c7b\u578b\u7684\u5957\u63a5\u5b57 * <code>sockaddr_in</code> \u662f\u4e00\u4e2a IPv4 \u5957\u63a5\u5b57\u5730\u5740\u7ed3\u6784\u4f53\uff0c\u53ea\u80fd\u7528\u4e8e IPv4 \u5957\u63a5\u5b57 * <code>sockaddr_in</code> \u662f <code>sockaddr</code> \u7684\u5b50\u7c7b\uff0c\u53ef\u4ee5\u5f3a\u5236\u8f6c\u6362\u4e3a <code>sockaddr</code> * \u9664\u4e86 <code>sockaddr_in</code>\uff0c\u8fd8\u6709 <code>sockaddr_in6</code>\u3001<code>sockaddr_un</code> \u7b49</p> </li> </ol> <p></p> <ol> <li> <p>\u76d1\u542c <code>listen()</code>      &gt; \u6210\u529f\uff1a\u8fd4\u56de <code>0</code>     &gt; \u5931\u8d25\uff1a\u8fd4\u56de <code>-1</code></p> C++<pre><code>// \u76d1\u542c\nlisten(server, 0);\n</code></pre> <ul> <li><code>0</code>\uff1a\u7b49\u5f85\u961f\u5217\u7684\u6700\u5927\u957f\u5ea6\uff0c\u76ee\u524d\u65e0\u9700\u5173\u6ce8</li> </ul> </li> </ol> <p></p> <ol> <li> <p>\u63a5\u53d7\u8fde\u63a5\u8bf7\u6c42 <code>accept()</code>      &gt; \u6210\u529f\uff1a\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c<code>fd &gt; 0</code>     &gt; \u5931\u8d25\uff1a\u8fd4\u56de <code>-1</code></p> C++<pre><code>sockaddr_in client_addr;\nsocklen_t   client_addr_len = sizeof client_addr;\nint client = accept(server, (sockaddr*)&amp;client_addr, &amp;client_addr_len);\n</code></pre> <ul> <li><code>socklen_t</code>\uff1a<code>sockaddr</code> \u7684\u957f\u5ea6\u7c7b\u578b</li> </ul> <p>\u4e3a\u4ec0\u4e48\u8fd9\u91cc\u9700\u8981\u4f20\u5165 <code>&amp;client_addr_len</code> \u800c\u4e0d\u662f <code>client_addr_len</code>\uff1f * <code>accept()</code> \u51fd\u6570\u4f1a\u4fee\u6539 <code>client_addr_len</code> \u7684\u503c\uff0c\u6240\u4ee5\u9700\u8981\u4f20\u5165\u6307\u9488</p> </li> </ol> <p></p> <ol> <li> <p>\u63a5\u6536\u6d88\u606f <code>recv()</code>      &gt; \u6210\u529f\uff1a\u8fd4\u56de\u63a5\u6536\u7684\u5b57\u8282\u6570     &gt; \u9519\u8bef\uff1a\u8fd4\u56de <code>-1</code>     &gt; \u5931\u8d25\uff1a\u8fd4\u56de <code>0</code>\uff0c\u5bf9\u7aef\u5173\u95ed\u8fde\u63a5</p> C++<pre><code>char buf[1024];\nmemset(buf, '\\0', sizeof buf);\nrecv(server, buf, sizeof buf, 0);\n</code></pre> <p>\u901a\u5e38\uff0c<code>recv()</code> \u51fd\u6570\u8fd4\u56de\u63a5\u6536\u5230\u7684\u5b57\u8282\u6570\uff0c\u5bf9\u7aef\u5173\u95ed\u8fd4\u56de <code>0</code>\uff0c\u5176\u4f59\u8fd4\u56de <code>-1</code></p> </li> </ol> <p></p> <ol> <li> <p>\u5173\u95ed\u5957\u63a5\u5b57 <code>close()</code></p> C++<pre><code>close(server);\n</code></pre> </li> </ol> <p></p>"},{"location":"src/cpp/network/#client","title":"client","text":"<ol> <li> <p>\u521b\u5efa\u5957\u63a5\u5b57 <code>socket()</code></p> </li> <li> <p>\u8fde\u63a5\u6307\u5b9a ip + port <code>connect()</code>      &gt; \u6210\u529f\uff1a\u8fd4\u56de <code>0</code>     &gt; \u5931\u8d25\uff1a\u8fd4\u56de <code>-1</code></p> C++<pre><code>sockaddr_in server_addr;\nmemset(&amp;server_addr, '\\0', sizeof server_addr);\n// \u7ed9\u5730\u5740\u8d4b\u503c\nserver_addr.sin_family      = AF_INET;\nserver_addr.sin_addr.s_addr = inet_addr(\"127.0.0.1\");\nserver_addr.sin_port        = htons(10086);\n// \u8fde\u63a5\nconnect(client, (sockaddr*)&amp;server_addr, sizeof server_addr);\n</code></pre> </li> <li> <p>\u53d1\u9001\u6d88\u606f <code>send()</code>      &gt; \u6210\u529f\uff1a\u8fd4\u56de\u53d1\u9001\u7684\u5b57\u8282\u6570     &gt; \u9519\u8bef\uff1a\u8fd4\u56de <code>-1</code>     &gt; \u5931\u8d25\uff1a\u8fd4\u56de <code>0</code>\uff0c\u5bf9\u7aef\u5173\u95ed\u8fde\u63a5     C++<pre><code>char buf[1024];\nmemset(buf, '\\0', sizeof buf);\nscanf(\"%s\", buf);\nsend(client, buf, strlen(buf), 0);\n</code></pre></p> </li> <li> <p>\u5173\u95ed\u5957\u63a5\u5b57 <code>close()</code></p> C++<pre><code>close(client);\n</code></pre> </li> </ol> <p></p>"},{"location":"src/cpp/network/#send-recv","title":"send \u548c recv","text":"<ul> <li><code>&gt; 0</code> \u53d1\u9001\u6216\u63a5\u6536\u7684\u5b57\u8282\u6570</li> <li><code>= 0</code> \u5bf9\u7aef\u5df2\u7ecf\u5173\u95ed\u8fde\u63a5</li> <li><code>&lt; 0</code> \u51fa\u73b0\u4e86\u9519\u8bef</li> </ul>"},{"location":"src/cpp/network/#tcp_1","title":"TCP \u4e09\u63e1\u56db\u6325","text":"<ul> <li> <p>\u8fde\u63a5</p> <ol> <li><code>\u5ba2\u6237\u7aef</code> \u8bf7\u6c42\u8fde\u63a5\uff0c<code>connect</code> \u963b\u585e</li> <li><code>\u670d\u52a1\u7aef</code> \u6536\u5230\u8bf7\u6c42\uff0c<code>accept</code> \u963b\u585e\uff0c\u540c\u65f6\u5411 <code>\u5ba2\u6237\u7aef</code> \u53d1\u9001\u786e\u8ba4\u4fe1\u606f</li> <li><code>\u5ba2\u6237\u7aef</code> \u786e\u8ba4\uff1b<code>connect</code> \u8fd4\u56de\uff1b\u540c\u65f6\u53d1\u9001\u4fe1\u606f\uff1b<code>accept</code> \u8fd4\u56de</li> </ol> </li> <li> <p>\u65ad\u5f00</p> <ol> <li><code>\u5ba2\u6237\u7aef</code> \u8bf7\u6c42\u65ad\u5f00\uff0c<code>close</code> \u963b\u585e</li> <li><code>\u670d\u52a1\u7aef</code> \u53d1\u9001\u786e\u8ba4\u4fe1\u606f\uff08\u6211\u5df2\u77e5\u6653\uff09</li> <li><code>\u670d\u52a1\u7aef</code> \u53d1\u9001\u8bf7\u6c42\u4fe1\u606f\uff08\u8bf7\u6c42\u65ad\u5f00\uff09\uff0c<code>close</code> \u963b\u585e</li> <li><code>\u5ba2\u6237\u7aef</code> \u6536\u5230\u786e\u8ba4\u4fe1\u606f\uff0c\u53d1\u9001\u786e\u8ba4\u4fe1\u606f\uff0c\u4fe9 <code>close</code> \u5148\u540e\u8fd4\u56de</li> </ol> </li> <li> <p>\u8fde\u63a5\u4e4b\u540e</p> <ol> <li><code>\u5ba2\u6237\u7aef</code> \u53d1\u9001\u4fe1\u606f\uff0c<code>send</code> \u963b\u585e</li> <li><code>\u670d\u52a1\u7aef</code> \u63a5\u6536\u4fe1\u606f\uff0c<code>recv</code> \u963b\u585e</li> <li><code>\u670d\u52a1\u7aef</code> \u53d1\u9001\u4fe1\u606f\uff0c<code>send</code> \u963b\u585e</li> <li><code>\u5ba2\u6237\u7aef</code> \u63a5\u6536\u4fe1\u606f\uff0c<code>recv</code> \u963b\u585e</li> <li>\u91cd\u590d 1-4\uff0c\u76f4\u5230 <code>\u5ba2\u6237\u7aef</code> \u6216 <code>\u670d\u52a1\u7aef</code> \u65ad\u5f00\u8fde\u63a5</li> </ol> </li> </ul> <p></p>"},{"location":"src/cpp/network/#udp","title":"UDP","text":"<p>UDP \u901a\u4fe1\u6a21\u578b</p> \u51fd\u6570 \u670d\u52a1\u7aef 1 <code>socket()</code> \u521b\u5efa socket 2 <code>bind()</code> \u7ed1\u5b9a ip + port \u81f3\u8be5 socket \u4e0a 3 <code>recvfrom()</code> \u63a5\u6536\u6765\u81ea\u5ba2\u6237\u7aef\u7684\u6d88\u606f 4 <code>close()</code> \u5173\u95ed socket \u51fd\u6570 \u5ba2\u6237\u7aef 1 <code>socket()</code> \u521b\u5efa socket 2 <code>sendto()</code> \u53d1\u9001\u6d88\u606f 3 <code>close()</code> \u5173\u95ed socket"},{"location":"src/cpp/network/#server_1","title":"server","text":"<ol> <li> <p>\u521b\u5efa\u5957\u63a5\u5b57 <code>socket()</code></p> <p>C++<pre><code>int server = socket(AF_INET, SOCK_DGRAM, 0);    // \u521b\u5efa\u5957\u63a5\u5b57\n</code></pre> * <code>SOCK_DGRAM</code>\uff1aUDP * <code>0</code>\uff1a\u81ea\u52a8\u9009\u62e9\u534f\u8bae\uff0c\u8fd9\u91cc\u662f <code>UDP</code> \u534f\u8bae</p> </li> <li> <p>\u7ed1\u5b9a ip + port <code>bind()</code></p> C++<pre><code>// \u670d\u52a1\u7aef\u5730\u5740\nsockaddr_in server_addr;\nmemset(&amp;server_addr, '\\0', sizeof server_addr);\n// \u7ed9\u5730\u5740\u8d4b\u503c\nserver_addr.sin_family      = AF_INET;\nserver_addr.sin_addr.s_addr = inet_addr(\"0.0.0.0\");\nserver_addr.sin_port        = htons(10086);\n// \u7ed1\u5b9a\nbind(server, (sockaddr*)&amp;server_addr, sizeof server_addr);\n</code></pre> </li> <li> <p>\u63a5\u6536\u6d88\u606f <code>recvfrom()</code></p> C++<pre><code>// \u7f13\u51b2\u533a\nchar buf[1024];\nmemset(buf, '\\0', sizeof buf);\n// \u5ba2\u6237\u7aef\u5730\u5740\nsockaddr_in client_addr;\nmemset(&amp;client_addr, '\\0', sizeof client_addr);\nsocklen_t   client_addr_len = sizeof client_addr;\n// \u63a5\u6536\u6d88\u606f\nrecvfrom(server, buf, sizeof buf, 0, (sockaddr*)&amp;client_addr, &amp;client_addr_len);\n</code></pre> </li> <li> <p>\u5173\u95ed\u5957\u63a5\u5b57 <code>close()</code></p> C++<pre><code>close(server);\n</code></pre> </li> </ol>"},{"location":"src/cpp/network/#client_1","title":"client","text":"<ol> <li> <p>\u521b\u5efa\u5957\u63a5\u5b57 <code>socket()</code></p> C++<pre><code>int server = socket(AF_INET, SOCK_DGRAM, 0);    // \u521b\u5efa\u5957\u63a5\u5b57\n</code></pre> </li> <li> <p>\u53d1\u9001\u6d88\u606f <code>sendto()</code></p> C++<pre><code>// \u670d\u52a1\u7aef\u5730\u5740\nsockaddr_in server_addr;\nmemset(&amp;server_addr, '\\0', sizeof server_addr);\n// \u7ed9\u5730\u5740\u8d4b\u503c\nserver_addr.sin_family      = AF_INET;\nserver_addr.sin_addr.s_addr = inet_addr(\"127.0.0.1\");\nserver_addr.sin_port        = htons(10086);\n// \u53d1\u9001\u6d88\u606f\nchar buf[1024];\nmemset(buf, '\\0', sizeof buf);\nscanf(\"%s\", buf);\nsendto(client, buf, strlen(buf), 0, (sockaddr*)&amp;server_addr, sizeof server_addr);\n</code></pre> </li> <li> <p>\u5173\u95ed\u5957\u63a5\u5b57 <code>close()</code></p> C++<pre><code>close(client);\n</code></pre> </li> </ol> <p></p> <p></p>"},{"location":"src/cpp/network/#boostasio","title":"Boost.Asio","text":"<p>\u76f4\u63a5\u4f7f\u7528\u5176\u63d0\u4f9b\u7684 <code>boost::asio::ip::tcp</code></p>"},{"location":"src/cpp/network/#server_2","title":"server","text":"C++<pre><code>##include &lt;boost/asio.hpp&gt;\n##include &lt;iostream&gt;\n\nusing namespace boost::asio;\n\nint main(int argc, char* argv[]){\n    // 1. \u521b\u5efa io_context \u4e0a\u4e0b\u6587\n    io_context io;\n    // \u521b\u5efa\u7aef\u70b9\n    ip::tcp::endpoint ep(ip::address::from_string(argv[1]), std::atoi(argv[2]));\n    // 2. \u521b\u5efa\u63a5\u53d7\u5668, \u5e76\u4e14\u4e0e io \u5173\u8054\n    ip::tcp::acceptor acceptor(io, ep);\n\n    while(true){\n        // 3. \u521b\u5efa\u5ba2\u6237\u7aef\u8fde\u63a5\u7528\u7684 socket\n        ip::tcp::socket socket(io);\n        // 4. \u7b49\u5f85\u5ba2\u6237\u7aef\u8fde\u63a5\n        acceptor.accept(socket);\n\n        while(true){\n            char buf[512];\n            memset(buf, '\\0', sizeof buf);\n\n            // 5. \u63a5\u6536\u6570\u636e\n            socket.read_some(buffer(buf));\n            std::cout &lt;&lt; buf &lt;&lt; std::endl;\n            // 6. \u53d1\u9001\u6570\u636e\n            std::cin.getline(buf, 512);\n            socket.write_some(buffer(buf));\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"src/cpp/network/#client_2","title":"client","text":"C++<pre><code>##include &lt;boost/asio.hpp&gt;\n##include &lt;iostream&gt;\n\nusing namespace boost::asio;\n\nint main(int argc, char* argv[]){\n    // 1. \u521b\u5efa io_context \u4e0a\u4e0b\u6587\n    io_context io;\n    // 2. \u521b\u5efa socket, \u5e76\u4e14\u4e0e io \u5173\u8054\n    ip::tcp::socket socket(io);\n    // \u521b\u5efa\u7aef\u70b9\n    ip::tcp::endpoint ep(ip::address::from_string(argv[1]), std::atoi(argv[2]));\n    // 3. \u8fde\u63a5\u670d\u52a1\u5668\n    socket.connect(ep);\n\n    while(true){\n        char buf[512];\n        memset(buf, '\\0', sizeof buf);\n\n        // 4. \u53d1\u9001\u6570\u636e\n        std::cin.getline(buf, 512);\n        socket.write_some(buffer(buf));\n        // 5. \u63a5\u6536\u6570\u636e\n        socket.read_some(buffer(buf));\n        std::cout &lt;&lt; buf &lt;&lt; std::endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"src/cpp/network/#2-io","title":"2 \u975e\u963b\u585e IO","text":"<p>\u5f53 \u8fdb\u7a0b \u53d1\u8d77 IO\u8bf7\u6c42 \u540e\uff0c\u5373\u4f7f \u5185\u6838 \u6ca1\u6709\u51c6\u5907\u597d\u6570\u636e\uff0c\u8fdb\u7a0b \u4e5f\u5c06\u7acb\u5373\u8fd4\u56de\uff0c\u4e0d\u4f1a\u7b49\u5f85\uff0c\u540c\u65f6 \u5185\u6838 \u4f1a\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u7801\uff0c\u544a\u8bc9 \u8fdb\u7a0b \u4e3a\u4ec0\u4e48\u6ca1\u6709\u51c6\u5907\u597d\u6570\u636e</p>"},{"location":"src/cpp/network/#_3","title":"\u975e\u963b\u585e\u8f93\u5165","text":"C++<pre><code>std::cin.sync_with_stdio(false);        // \u5173\u95ed\u540c\u6b65\nif(std::cin.rdbuf() -&gt; in_avail() &gt; 0)  // \u5982\u679c\u8f93\u5165\u7f13\u51b2\u533a\u6709\u6570\u636e\n    std::getline(std::cin, s);          // \u8bfb\u53d6\u6570\u636e\n</code></pre>"},{"location":"src/cpp/network/#c2s","title":"c2s","text":"<p>\u6b64\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 c2s \u901a\u4fe1\u6a21\u578b\uff1a \u591a\u4e2a \u5ba2\u6237\u7aef\u53ef\u4ee5\u4e0e \u4e00\u4e2a \u670d\u52a1\u7aef \u6536\u53d1\u4efb\u610f\u6761 \u6d88\u606f</p> <p><code>server</code>\uff1a</p> <ol> <li>\u521b\u5efa\u5957\u63a5\u5b57 <code>socket()</code></li> <li>\u7ed1\u5b9a ip + port <code>bind()</code></li> <li>\u76d1\u542c <code>listen()</code></li> <li> <p>\u8bbe\u7f6e\u5957\u63a5\u5b57\u4e3a\u975e\u963b\u585e <code>fcntl()</code> C++<pre><code>#include &lt;fcntl.h&gt;      // fcntl()\n</code></pre> C++<pre><code>fcntl(server, F_SETFL, O_NONBLOCK);\n</code></pre></p> <ul> <li><code>fcntl()</code>\uff1a\u63a7\u5236\u6587\u4ef6\u63cf\u8ff0\u7b26\u5c5e\u6027 <code>int fcntl(int fd, int cmd, ... /* arg */ );</code><ul> <li><code>fd</code>\uff1a\u6587\u4ef6\u63cf\u8ff0\u7b26</li> <li><code>cmd</code>\uff1a\u64cd\u4f5c\u547d\u4ee4\uff0c\u5bf9 <code>fd</code> \u8fdb\u884c\u64cd\u4f5c<ul> <li><code>F_SETFL</code>\uff1a\u8bbe\u7f6e\u6587\u4ef6\u63cf\u8ff0\u7b26\u72b6\u6001\u6807\u5fd7</li> <li><code>F_GETFL</code>\uff1a\u83b7\u53d6\u6587\u4ef6\u63cf\u8ff0\u7b26\u72b6\u6001\u6807\u5fd7</li> </ul> </li> <li><code>arg</code>\uff1a\u64cd\u4f5c\u547d\u4ee4\u7684\u53c2\u6570\uff0c\u6839\u636e <code>cmd</code> \u7684\u4e0d\u540c\u800c\u4e0d\u540c<ul> <li><code>O_NONBLOCK</code>\uff1a\u975e\u963b\u585e</li> <li><code>O_ASYNC</code>\uff1a\u5f02\u6b65</li> <li><code>O_SYNC</code>\uff1a\u540c\u6b65</li> </ul> </li> </ul> </li> </ul> </li> <li> <p>\u5faa\u73af\u63a5\u53d7\u8fde\u63a5\u8bf7\u6c42 <code>accept()</code></p> </li> <li>\u5faa\u73af\u63a5\u6536 <code>recv()</code> \u548c\u53d1\u9001 <code>send()</code> \u6d88\u606f</li> <li>\u5173\u95ed\u5957\u63a5\u5b57 <code>close()</code></li> </ol> <p><code>client</code>\uff1a</p> <ol> <li>\u521b\u5efa\u5957\u63a5\u5b57 <code>socket()</code></li> <li>\u8fde\u63a5\u6307\u5b9a ip + port <code>connect()</code></li> <li>\u8bbe\u7f6e\u5957\u63a5\u5b57\u4e3a\u975e\u963b\u585e <code>fcntl()</code></li> <li>\u5faa\u73af\u53d1\u9001 <code>send()</code> \u548c\u63a5\u6536 <code>recv()</code> \u6d88\u606f</li> <li>\u5173\u95ed\u5957\u63a5\u5b57 <code>close()</code></li> </ol> <p></p>"},{"location":"src/cpp/network/#echo-server","title":"echo server","text":"<p>echo server\uff0c\u5373\u5ba2\u6237\u7aef\u53d1\u9001\u4ec0\u4e48\uff0c\u670d\u52a1\u7aef\u5c31\u56de\u590d\u4ec0\u4e48 \u5728 c2s \u7684\u57fa\u7840\u4e0a\uff0c\u521d\u6b65\u5c1d\u8bd5\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684\u601d\u60f3\u5b9e\u73b0\uff1a</p> <ul> <li><code>SockAddr</code>\uff1a\u5957\u63a5\u5b57\u5730\u5740\u7c7b</li> <li><code>Event</code>\uff1a\u4e8b\u4ef6\u7c7b\uff0c\u5305\u542b\u4e8b\u4ef6\u5904\u7406\u51fd\u6570</li> <li><code>Acceptor</code>\uff1a\u63a5\u6536\u5668\u7c7b</li> </ul> <p></p>"},{"location":"src/cpp/network/#http-server","title":"http server","text":"<p>\u5728 echo server \u4e2d\uff0c\u4f7f\u7528 deal \u51fd\u6570\u5904\u7406\u63a5\u6536\u5230\u7684\u6d88\u606f\uff0c\u5982\u679c\u60f3\u5904\u7406 http \u8bf7\u6c42\uff0c\u53ea\u9700\u8981\u91cd\u5199 deal \u51fd\u6570\u5373\u53ef\uff1a * \u83b7\u53d6 http \u8bf7\u6c42\u7684\u8bf7\u6c42 * \u89e3\u6790 http \u8bf7\u6c42\u7684\u8bf7\u6c42 * \u6784\u9020 http \u54cd\u5e94\u7684\u54cd\u5e94 * \u53d1\u9001 http \u54cd\u5e94\u7684\u54cd\u5e94</p> <p></p>"},{"location":"src/cpp/network/#c2c","title":"c2c","text":"<p>\u4e4b\u524d\u7684 c2s \u901a\u4fe1\u6a21\u578b\uff0c\u662f\u591a\u4e2a\u5ba2\u6237\u7aef\u4e0e\u4e00\u4e2a\u670d\u52a1\u7aef\u6536\u53d1\u4efb\u610f\u6761\u6d88\u606f\uff0c\u73b0\u5728\u6211\u4eec\u5c1d\u8bd5\u6784\u5efa\u4e00\u4e2a c2c \u901a\u4fe1\u6a21\u578b\uff1a</p> <ul> <li>\u6bcf\u4e2a\u5ba2\u6237\u7aef\u53ef\u4ee5\u4e0e\u4efb\u610f\u4e2a\u5ba2\u6237\u7aef\u5efa\u7acb\u8fde\u63a5</li> <li>\u6bcf\u4e2a\u5ba2\u6237\u7aef\u53ef\u4ee5\u4e0e\u4efb\u610f\u4e2a\u5ba2\u6237\u7aef\u6536\u53d1\u4efb\u610f\u6761\u6d88\u606f</li> </ul> <p></p>"},{"location":"src/cpp/network/#3-io","title":"3 \u590d\u7528 IO","text":"<p>\u5728\u963b\u585e IO \u4e2d\uff0c\u5982\u4f55\u6ca1\u6709\u8fde\u63a5\u8bf7\u6c42\uff0c<code>accept()</code> \u51fd\u6570\u5c06\u4e00\u76f4\u963b\u585e\uff0c\u76f4\u5230\u6709\u8fde\u63a5\u8bf7\u6c42\u4e3a\u6b62\uff0c<code>recv()</code> \u548c <code>send()</code> \u51fd\u6570\u4e5f\u662f\u5982\u6b64\uff0c\u5982\u679c\u6ca1\u6709\u6570\u636e\uff0c\u5c06\u4e00\u76f4\u963b\u585e\uff0c\u76f4\u5230\u6709\u6570\u636e\u4e3a\u6b62\u3002</p> <p>\u5728\u975e\u963b\u585e IO \u4e2d\uff0c\u6211\u4eec\u91c7\u53d6\u5faa\u73af\u7684\u65b9\u5f0f\uff0c\u4e0d\u65ad\u7684\u8c03\u7528 <code>accept()</code>\u3001<code>recv()</code>\u3001<code>send()</code> \u51fd\u6570\uff0c\u5982\u679c\u6ca1\u6709\u63a5\u6536\u5230\u8fde\u63a5\u8bf7\u6c42\u6216\u6570\u636e\uff0c\u90a3\u4e48\u51fd\u6570\u5c06\u7acb\u5373\u8fd4\u56de\uff0c\u4e0d\u4f1a\u7b49\u5f85\uff0c\u540c\u65f6\u5185\u6838\u4f1a\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u7801\uff0c\u544a\u8bc9\u8fdb\u7a0b\u4e3a\u4ec0\u4e48\u6ca1\u6709\u51c6\u5907\u597d\u6570\u636e\u3002</p> <p>\u5728 IO \u590d\u7528 \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>select()</code>\u3001<code>poll()</code>\u3001<code>epoll()</code> \u51fd\u6570\uff0c\u5c06\u591a\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u6ce8\u518c\u5230\u5185\u6838\u4e2d\uff0c\u5f53\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u51c6\u5907\u597d\u6570\u636e\u65f6\uff0c\u5185\u6838\u5c06\u901a\u77e5\u8fdb\u7a0b\uff0c\u8fdb\u7a0b\u518d\u8c03\u7528 <code>accept()</code>\u3001<code>recv()</code>\u3001<code>send()</code> \u51fd\u6570\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u5faa\u73af\u8c03\u7528\u8fd9\u4e9b\u51fd\u6570\u4e86\u3002</p>"},{"location":"src/cpp/network/#c2s_epoll","title":"c2s_epoll","text":"<p>\u5728 c2s \u7684\u57fa\u7840\u4e0a\uff0c\u4f7f\u7528 <code>epoll()</code> \u51fd\u6570\u5b9e\u73b0 IO \u590d\u7528\uff0c\u5ba2\u6237\u7aef\u662f\u975e\u963b\u585e\u7684\u666e\u901a\u5ba2\u6237\u7aef\u3002</p> <p></p> <p>eventpoll\uff0c\u4e8b\u4ef6\u8f6e\u8be2\uff0cLinux \u5185\u6838\u5b9e\u73b0IO\u591a\u8def\u590d\u7528\uff08IO multiplexing\uff09\u7684\u4e00\u4e2a\u5b9e\u73b0</p> <p>\u76f4\u89c2\u6765\u8bf4\uff0cI/O \u590d\u7528\u7684\u4f5c\u7528\u5c31\u662f\uff1a\u8ba9\u7a0b\u5e8f\u80fd\u591f\u5728\u5355\u8fdb\u7a0b\u3001\u5355\u7ebf\u7a0b\u7684\u6a21\u5f0f\u4e0b\uff0c\u540c\u65f6\u5904\u7406 \u591a\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26 \u7684 I/O \u8bf7\u6c42</p> <ul> <li>\u5e95\u5c42\u521b\u5efa\u4e00\u4e2a \u7ea2\u9ed1\u6811 \u548c \u5c31\u7eea\u94fe\u8868\uff08\u53cc\u5411\u94fe\u8868\uff09</li> <li> <p>\u7ea2\u9ed1\u6811 \u5b58\u50a8\u6240\u76d1\u63a7\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u8282\u70b9\u6570\u636e\uff0c\u5c31\u7eea\u94fe\u8868 \u5b58\u50a8\u5c31\u7eea\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u8282\u70b9\u6570\u636e</p> </li> <li> <p><code>epoll_create1</code> \u521b\u5efa\u4e00\u4e2a epoll \u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u4e8b\u4ef6\u8f6e\u8be2\u7684\u5b9e\u4f8b\uff0c\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5373\u4e8b\u4ef6\u6811</p> C++<pre><code>#include &lt;sys/epoll.h&gt;  // epoll_create1()\n</code></pre> C++<pre><code>int epollfd = epoll_create1(0);\n</code></pre> <ul> <li><code>0</code>\uff1a\u7b49\u5f85\u961f\u5217\u7684\u6700\u5927\u957f\u5ea6</li> </ul> </li> <li> <p><code>int epoll_ctl(\u4e8b\u4ef6\u6811, \u64cd\u4f5c, \u6587\u4ef6\u63cf\u8ff0\u7b26, \u4e8b\u4ef6)</code></p> <ul> <li>\u64cd\u4f5c\uff1a<ul> <li><code>EPOLL_CTL_ADD</code>\uff1a\u6ce8\u518c\u65b0\u7684\u4e8b\u4ef6\u5230\u4e8b\u4ef6\u6811</li> <li><code>EPOLL_CTL_MOD</code>\uff1a\u4fee\u6539\u5df2\u7ecf\u6ce8\u518c\u7684\u4e8b\u4ef6</li> <li><code>EPOLL_CTL_DEL</code>\uff1a\u5220\u9664\u5df2\u7ecf\u6ce8\u518c\u7684\u4e8b\u4ef6</li> </ul> </li> <li>\u4e8b\u4ef6\uff1a<ul> <li><code>EPOLLIN</code>\uff1a\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u53ef\u4ee5\u8bfb <code>recv</code> \uff08\u5305\u62ec\u5bf9\u7aefSOCKET\u6b63\u5e38\u5173\u95ed\uff09</li> <li><code>EPOLLPRI</code>\uff1a\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u6709\u7d27\u6025\u7684\u6570\u636e\u53ef\u8bfb\uff08\u8fd9\u91cc\u5e94\u8be5\u8868\u793a\u6709\u5e26\u5916\u6570\u636e\u5230\u6765\uff09</li> <li><code>EPOLLOUT</code>\uff1a\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u53ef\u4ee5\u5199 <code>send</code>\uff08\u5305\u62ec\u5bf9\u7aefSOCKET\u6b63\u5e38\u5173\u95ed\uff09</li> <li><code>EPOLLERR</code>\uff1a\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u53d1\u751f\u9519\u8bef</li> <li><code>EPOLLHUP</code>\uff1a\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u88ab\u6302\u65ad</li> <li><code>EPOLLET</code>\uff1a\u5c06 EPOLL \u8bbe\u4e3a\u8fb9\u7f18\u89e6\u53d1(Edge Triggered)\u6a21\u5f0f</li> <li><code>EPOLLONESHOT</code>\uff1a\u53ea\u76d1\u542c\u4e00\u6b21\u4e8b\u4ef6\uff0c\u5f53\u76d1\u542c\u5b8c\u8fd9\u6b21\u4e8b\u4ef6\u4e4b\u540e\uff0c\u5220\u9664</li> </ul> </li> </ul> </li> <li> <p><code>int epoll_wait(\u4e8b\u4ef6\u6811, \u4e8b\u4ef6\u6570\u7ec4, \u4e8b\u4ef6\u6570\u7ec4\u5927\u5c0f, \u8d85\u65f6\u65f6\u95f4)</code></p> <ul> <li>\u4e8b\u4ef6\u6570\u7ec4\uff1a<code>epoll_event</code> \u7ed3\u6784\u4f53\u6570\u7ec4</li> <li>\u8d85\u65f6\u65f6\u95f4\uff1a<code>-1</code> \u963b\u585e\uff0c<code>0</code> \u7acb\u5373\u8fd4\u56de\uff0c<code>&gt;0</code> \u7b49\u5f85\u6307\u5b9a\u65f6\u95f4</li> </ul> </li> </ul> <p></p> <p>\u4e00\u4e9b\u6570\u636e\u7ed3\u6784</p> <ul> <li><code>epoll_event</code> \u4e8b\u4ef6\u7ed3\u6784\u4f53\uff0c\u7528\u4e8e\u6ce8\u518c\u4e8b\u4ef6     C++<pre><code>#include &lt;sys/epoll.h&gt;  // epoll_event\n</code></pre> C++<pre><code>struct epoll_event\n{\n    uint32_t events;    // \u4e8b\u4ef6\u7c7b\u578b\n    epoll_data_t data;  // \u7528\u6237\u6570\u636e\uff0c\u4e00\u4e2a\u8054\u5408\u4f53\n};\n</code></pre><ul> <li><code>events</code>\uff1a\u4e8b\u4ef6\u7c7b\u578b</li> <li><code>data</code>\uff1a\u7528\u6237\u6570\u636e<ul> <li><code>epoll_data_t</code>\uff1a\u7528\u6237\u6570\u636e\u7c7b\u578b     C++<pre><code>typedef union epoll_data\n{\n    void *ptr;      // \u6307\u9488\n    int fd;         // \u6587\u4ef6\u63cf\u8ff0\u7b26\n    uint32_t u32;   // 32\u4f4d\u65e0\u7b26\u53f7\u6574\u6570\n    uint64_t u64;   // 64\u4f4d\u65e0\u7b26\u53f7\u6574\u6570\n} epoll_data_t;\n</code></pre></li> </ul> </li> </ul> </li> </ul>"},{"location":"src/cpp/network/#4-io","title":"4 \u4fe1\u53f7\u9a71\u52a8 IO","text":""},{"location":"src/cpp/network/#tcp_2","title":"TCP","text":""},{"location":"src/cpp/network/#5-io","title":"5 \u5f02\u6b65 IO","text":"<p>\u524d 4 \u79cd IO \u6a21\u578b\u90fd\u662f\u540c\u6b65 IO\uff0c\u5373\u7528\u6237\u8fdb\u7a0b\u53d1\u8d77 IO \u8bf7\u6c42\u540e\uff0c\u9700\u8981\u7b49\u5f85\u5185\u6838\u5b8c\u6210 IO \u64cd\u4f5c\u540e\u624d\u80fd\u7ee7\u7eed\u6267\u884c\u3002</p> <p>\u5f02\u6b65 IO \u6a21\u578b\uff0c\u7528\u6237\u8fdb\u7a0b\u53d1\u8d77 IO \u8bf7\u6c42\u540e\uff0c\u4e0d\u9700\u8981\u7b49\u5f85\u5185\u6838\u5b8c\u6210 IO \u64cd\u4f5c\uff0c\u7528\u6237\u8fdb\u7a0b\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\uff0c\u5f53\u5185\u6838\u5b8c\u6210 IO \u64cd\u4f5c\u540e\uff0c\u4f1a\u901a\u77e5\u7528\u6237\u8fdb\u7a0b\u3002</p> C++<pre><code>##include &lt;boost/asio.hpp&gt;\n##include &lt;iostream&gt;\n\nusing namespace boost::asio;\n\nint main(){\n    io_context io;\n\n    steady_timer t3(io, chrono::seconds(3));\n    t3.async_wait([](const boost::system::error_code&amp;){\n        std::cout &lt;&lt; \"t: \" &lt;&lt; 666 &lt;&lt; std::endl; });\n    steady_timer t2(io, chrono::seconds(2));\n    t2.async_wait([](const boost::system::error_code&amp;){\n        std::cout &lt;&lt; \"t: \" &lt;&lt; 888 &lt;&lt; std::endl; });\n    steady_timer t1(io, chrono::seconds(1));\n    t1.async_wait([](const boost::system::error_code&amp;){\n        std::cout &lt;&lt; \"t: \" &lt;&lt; 999 &lt;&lt; std::endl; });\n    io.run();   // \u5904\u7406\u5df2\u63d0\u4ea4\u7684\u5f02\u6b65\u4efb\u52a1\uff0c\u76f4\u5230\u6240\u6709\u4efb\u52a1\u5b8c\u6210\n\n    std::cout &lt;&lt; \"-------------------\" &lt;&lt; std::endl;\n\n    for(int i=1; i&lt;=5; i++){\n        steady_timer t(io, chrono::seconds(1));\n        t.wait();\n        std::cout &lt;&lt; \"t: \" &lt;&lt; i &lt;&lt; std::endl;\n    }\n\n    return 0;\n}\n</code></pre> <p>\u7a0b\u5e8f\u8fd0\u884c\u540e\u4e00\u79d2\uff0c<code>999</code>\uff0c<code>888</code>\uff0c<code>666</code> \u4f1a\u95f4\u9694\u4e00\u79d2\uff0c\u4f9d\u6b21\u8f93\u51fa\u3002 \u800c\u540e\uff0c<code>t: 1</code>\u3001<code>t: 2</code>\u3001<code>t: 3</code>\u3001<code>t: 4</code>\u3001<code>t: 5</code> \u4f1a\u4f9d\u6b21\u8f93\u51fa\u3002</p> <p>\u524d\u8005\u662f\u5f02\u6b65\u7684\uff0c\u800c\u540e\u8005\u662f\u540c\u6b65\u7684\uff0c\u901a\u8fc7\u4ee3\u7801\u4e0d\u96be\u7406\u89e3\uff1a\u540c\u6b65\u7684\u662f <code>wait()</code>\uff0c\u963b\u585e\uff1b\u5f02\u6b65\u7684\u662f <code>async_wait()</code>\uff0c\u4e0d\u963b\u585e\uff0c\u4efb\u52a1\u5728 <code>io.run()</code> \u4e4b\u540e\uff0c\u7531\u540e\u53f0\u5904\u7406\u3002 </p>"},{"location":"src/cpp/network/#tcp_server","title":"TCP_Server","text":""},{"location":"src/cpp/network/#udp_server","title":"UDP_Server","text":"<p>boost\u5b98\u7f51\u7684udp\u5f02\u6b65</p> C++ <p></p>"},{"location":"src/cpp/network/#errno","title":"errno","text":"\u9519\u8bef\u7801 \u522b\u540d \u9519\u8bef\u63cf\u8ff0 note 4 <code>EINTR</code> \u4fe1\u53f7\u4e2d\u65ad \u901a\u5e38\u662f\u7531\u4e8e\u7528\u6237\u6309\u4e0b\u4e86 <code>Ctrl + C</code> 9 \u6587\u4ef6\u63cf\u8ff0\u7b26\u65e0\u6548 11 <code>EAGAIN</code> <code>EWOULDBLOCK</code> \u64cd\u4f5c\u88ab\u963b\u585e \u975e\u963b\u585e\u4e0b\uff0c\u6ca1\u6709\u6570\u636e\u53ef\u8bfb\u6216\u5199 98 \u5730\u5740\u5df2\u7ecf\u5728\u4f7f\u7528 \u901a\u5e38\u662f <code>bind()</code> \u65f6\uff0c\u5730\u5740\u5df2\u7ecf\u88ab\u5360\u7528 107 \u4f20\u8f93\u7ec8\u70b9\u6ca1\u6709\u8fde\u63a5"},{"location":"src/cpp/network/#http","title":"HTTP","text":"<p>HTTP \u534f\u8bae\u662f\u57fa\u4e8e TCP \u534f\u8bae\u7684\u5e94\u7528\u5c42\u534f\u8bae\uff0c\u9ed8\u8ba4\u7aef\u53e3\u53f7\u662f 80\uff08HTTPS\u662f 443\uff09\uff0cHTTP \u534f\u8bae\u7684\u901a\u4fe1\u6a21\u578b\u662f \u8bf7\u6c42-\u54cd\u5e94 \u6a21\u578b</p> <ul> <li>\u8bf7\u6c42\uff0c\u5373\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u7aef\u53d1\u9001\u7684\u6d88\u606f</li> <li>\u54cd\u5e94\uff0c\u5373\u670d\u52a1\u7aef\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u6d88\u606f</li> </ul> <p>HTTP \u534f\u8bae\u7684\u8bf7\u6c42\u6d88\u606f\u548c\u54cd\u5e94\u6d88\u606f\u90fd\u662f\u7531 \u8bf7\u6c42 / \u54cd\u5e94\u884c\u3001\u8bf7\u6c42 / \u54cd\u5e94\u5934\u3001\u8bf7\u6c42 / \u54cd\u5e94\u4f53 \u7ec4\u6210</p> <ul> <li> <p>\u8bf7\u6c42\u884c \u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff1a\u8bf7\u6c42\u65b9\u6cd5\u3001\u8bf7\u6c42\u8def\u5f84\u3001HTTP\u7248\u672c</p> <ul> <li> <p>\u8bf7\u6c42\u65b9\u6cd5\uff1a</p> <ul> <li>GET\uff1a</li> <li>\u7528\u9014\uff1a \u8bf7\u6c42\u83b7\u53d6\u6307\u5b9a\u8d44\u6e90.\u4e0d\u5e94\u8be5\u5bf9\u670d\u52a1\u5668\u7aef\u6570\u636e\u4ea7\u751f\u4efb\u4f55\u5f71\u54cd\u3002</li> <li> <p>\u793a\u4f8b\uff1a <code>GET /index.html</code>\uff0c\u83b7\u53d6\u9996\u9875\u4fe1\u606f\u3002</p> </li> <li> <p>POST\uff1a</p> </li> <li>\u7528\u9014\uff1a \u7528\u4e8e\u5411\u6307\u5b9a\u8d44\u6e90\u63d0\u4ea4\u6570\u636e\uff0c\u8bf7\u6c42\u670d\u52a1\u5668\u8fdb\u884c\u5904\u7406\u3002\u5e38\u7528\u4e8e\u63d0\u4ea4\u8868\u5355\u6570\u636e\u6216\u4e0a\u4f20\u6587\u4ef6\u3002</li> <li> <p>\u793a\u4f8b\uff1a <code>POST /users</code>\uff0c\u63d0\u4ea4\u7528\u6237\u6ce8\u518c\u8868\u5355\u3002</p> </li> <li> <p>PUT\uff1a</p> </li> <li>\u7528\u9014\uff1a \u8bf7\u6c42\u670d\u52a1\u5668\u5b58\u50a8\u4e00\u4e2a\u8d44\u6e90\u3002\u901a\u5e38\u662f\u66f4\u65b0\u5df2\u5b58\u5728\u7684\u8d44\u6e90\u6216\u521b\u5efa\u65b0\u8d44\u6e90\u3002</li> <li> <p>\u793a\u4f8b\uff1a <code>PUT /products/123</code>\uff0c\u66f4\u65b0\u4ea7\u54c1\u7f16\u53f7\u4e3a123\u7684\u5546\u54c1\u4fe1\u606f\u3002</p> </li> <li> <p>DELETE\uff1a</p> </li> <li>\u7528\u9014\uff1a \u8bf7\u6c42\u670d\u52a1\u5668\u5220\u9664\u6307\u5b9a\u7684\u8d44\u6e90\u3002</li> <li> <p>\u793a\u4f8b\uff1a <code>DELETE /users/456</code>\uff0c\u5220\u9664\u7528\u6237\u7f16\u53f7\u4e3a456\u7684\u7528\u6237\u4fe1\u606f\u3002</p> </li> <li> <p>HEAD\uff1a</p> </li> <li>\u7528\u9014\uff1a \u8bf7\u6c42\u83b7\u53d6\u6307\u5b9a\u8d44\u6e90\u7684\u54cd\u5e94\u5934\u4fe1\u606f\uff0c\u800c\u4e0d\u83b7\u53d6\u54cd\u5e94\u4f53\u7684\u5185\u5bb9\u3002\u901a\u5e38\u7528\u4e8e\u68c0\u67e5\u8d44\u6e90\u662f      \u5426\u5b58\u5728\u6216\u83b7\u53d6\u8d44\u6e90\u7684\u5143\u4fe1\u606f\u3002</li> <li> <p>\u793a\u4f8b\uff1a <code>HEAD /documents/789</code>\uff0c\u68c0\u67e5\u6587\u6863\u7f16\u53f7\u4e3a789\u7684\u8d44\u6e90\u662f\u5426\u5b58\u5728\u3002</p> </li> <li> <p>OPTIONS\uff1a</p> </li> <li>\u7528\u9014\uff1a \u8bf7\u6c42\u83b7\u53d6\u76ee\u6807\u8d44\u6e90\u6240\u652f\u6301\u7684\u901a\u4fe1\u9009\u9879\u3002\u7528\u4e8e\u67e5\u8be2\u670d\u52a1\u5668\u652f\u6301\u7684HTTP\u65b9\u6cd5\u3002</li> <li> <p>\u793a\u4f8b\uff1a <code>OPTIONS /products</code>\uff0c\u67e5\u8be2\u670d\u52a1\u5668\u652f\u6301\u7684HTTP\u65b9\u6cd5\u3002</p> </li> <li> <p>TRACE\uff1a</p> </li> <li>\u7528\u9014\uff1a \u7528\u4e8e\u8ffd\u8e2a\u8def\u5f84\u3002\u53d1\u9001\u8bf7\u6c42\u65f6\uff0c\u670d\u52a1\u5668\u4f1a\u8fd4\u56de\u8be5\u8bf7\u6c42\u6240\u7ecf\u8fc7\u7684\u670d\u52a1\u5668\u8def\u5f84\u3002\u4e3b\u8981\u7528      \u4e8e\u8c03\u8bd5\u548c\u6d4b\u8bd5\u3002</li> <li> <p>\u793a\u4f8b\uff1a <code>TRACE /debug</code>\uff0c\u8ffd\u8e2a\u8bf7\u6c42\u7684\u8def\u5f84\u3002</p> </li> <li> <p>CONNECT\uff1a</p> </li> <li>\u7528\u9014\uff1a \u7528\u4e8e\u5efa\u7acb\u4e0e\u76ee\u6807\u8d44\u6e90\u7684\u96a7\u9053\u8fde\u63a5\uff0c\u901a\u5e38\u7528\u4e8e\u52a0\u5bc6\u8fde\u63a5\uff0c\u5982HTTPS\u3002</li> <li>\u793a\u4f8b\uff1a <code>CONNECT www.example.com:443</code>\uff0c\u4e0e\u76ee\u6807\u670d\u52a1\u5668\u5efa\u7acb\u52a0\u5bc6\u8fde\u63a5\u3002</li> </ul> </li> <li> <p>\u8bf7\u6c42\u8def\u5f84\uff1a<code>/</code>\u3001<code>/index.html</code>\u3001<code>/jiao.html</code>\u3001<code>...</code></p> <ul> <li>\u6211\u4eec\u5c06\u8bf7\u6c42\u8def\u5f84\u79f0\u4e3a <code>URI</code>\uff0c\u5373\u7edf\u4e00\u8d44\u6e90\u6807\u8bc6\u7b26\uff0c\u800c <code>URL</code> \u662f <code>URI</code> \u7684\u5b50\u96c6</li> </ul> </li> <li> <p>HTTP\u7248\u672c\uff1a<code>HTTP/1.0</code>\u3001<code>HTTP/1.1</code>\u3001<code>HTTP/2.0</code> </p> </li> </ul> </li> <li> <p>\u8bf7\u6c42\u5934 \u7531\u8bf7\u6c42\u5934\u5b57\u6bb5\u548c\u8bf7\u6c42\u5934\u5b57\u6bb5\u503c\u7ec4\u6210\uff0c\u6bcf\u4e2a\u8bf7\u6c42\u5934\u5b57\u6bb5\u90fd\u6709\u7279\u5b9a\u7684\u542b\u4e49\uff0c\u5e38\u89c1\u7684\u8bf7\u6c42\u5934\u5b57\u6bb5\u6709\uff1a</p> <ul> <li><code>Accept</code>\uff1a\u6307\u5b9a\u5ba2\u6237\u7aef\u80fd\u591f\u63a5\u6536\u7684\u5185\u5bb9\u7c7b\u578b</li> <li><code>Accept-Encoding</code>\uff1a\u6307\u5b9a\u5ba2\u6237\u7aef\u80fd\u591f\u63a5\u6536\u7684\u5185\u5bb9\u7f16\u7801\u65b9\u5f0f</li> <li><code>Accept-Language</code>\uff1a\u6307\u5b9a\u5ba2\u6237\u7aef\u80fd\u591f\u63a5\u6536\u7684\u8bed\u8a00</li> <li><code>Connection</code>\uff1a\u6307\u5b9a\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u7aef\u7684\u8fde\u63a5\u7c7b\u578b</li> <li><code>Host</code>\uff1a\u6307\u5b9a\u8bf7\u6c42\u7684\u4e3b\u673a\u540d\u548c\u7aef\u53e3\u53f7</li> <li><code>User-Agent</code>\uff1a\u6307\u5b9a\u5ba2\u6237\u7aef\u7684\u7c7b\u578b</li> <li><code>Referer</code>\uff1a\u6307\u5b9a\u8bf7\u6c42\u7684\u6765\u6e90\u9875\u9762</li> <li><code>Cookie</code>\uff1a\u6307\u5b9a\u8bf7\u6c42\u7684 Cookie</li> <li><code>Content-Type</code>\uff1a\u6307\u5b9a\u8bf7\u6c42\u4f53\u7684\u7c7b\u578b</li> <li><code>Content-Length</code>\uff1a\u6307\u5b9a\u8bf7\u6c42\u4f53\u7684\u957f\u5ea6</li> <li><code>Authorization</code>\uff1a\u6307\u5b9a\u8bf7\u6c42\u7684\u6388\u6743\u4fe1\u606f</li> <li><code>If-Modified-Since</code>\uff1a\u6307\u5b9a\u8bf7\u6c42\u7684\u8d44\u6e90\u7684\u6700\u540e\u4fee\u6539\u65f6\u95f4</li> <li><code>If-None-Match</code>\uff1a\u6307\u5b9a\u8bf7\u6c42\u7684\u8d44\u6e90\u7684 ETag \u503c</li> </ul> </li> </ul> <p></p> <ul> <li>\u8bf7\u6c42\u4f53 \u5177\u4f53\u7684\u6570\u636e<ul> <li>\u901a\u5e38\u662f\u5728 post \u8bf7\u6c42\u4e2d\uff0c\u5c06\u8868\u5355\u6570\u636e\u653e\u5728\u8bf7\u6c42\u4f53\u4e2d</li> </ul> </li> </ul> <p></p> <ul> <li> <p>\u54cd\u5e94\u884c \u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff1aHTTP\u7248\u672c\u3001\u72b6\u6001\u7801\u3001\u72b6\u6001\u7801\u63cf\u8ff0</p> <ul> <li>HTTP\u7248\u672c\uff1a<code>HTTP/1.0</code>\u3001<code>HTTP/1.1</code>\u3001<code>HTTP/2.0</code></li> <li>\u72b6\u6001\u7801\uff1a<code>200</code>\u3001<code>404</code>\u3001<code>500</code>\u3001<code>...</code></li> <li>\u72b6\u6001\u7801\u63cf\u8ff0\uff1a<code>OK</code>\u3001<code>Not Found</code>\u3001<code>Internal Server Error</code>\u3001<code>...</code></li> <li>\u4f8b\u5982\uff1a<code>HTTP/1.1 200 OK</code></li> </ul> </li> </ul> <p></p> <ul> <li>\u54cd\u5e94\u5934 \u7531\u54cd\u5e94\u5934\u5b57\u6bb5\u548c\u54cd\u5e94\u5934\u5b57\u6bb5\u503c\u7ec4\u6210\uff0c\u6bcf\u4e2a\u54cd\u5e94\u5934\u5b57\u6bb5\u90fd\u6709\u7279\u5b9a\u7684\u542b\u4e49\uff0c\u5e38\u89c1\u7684\u54cd\u5e94\u5934\u5b57\u6bb5\u6709\uff1a<ul> <li><code>Content-Type</code>\uff1a\u6307\u5b9a\u54cd\u5e94\u4f53\u7684\u7c7b\u578b</li> <li><code>Content-Length</code>\uff1a\u6307\u5b9a\u54cd\u5e94\u4f53\u7684\u957f\u5ea6</li> <li><code>Content-Encoding</code>\uff1a\u6307\u5b9a\u54cd\u5e94\u4f53\u7684\u7f16\u7801\u65b9\u5f0f</li> <li><code>Content-Language</code>\uff1a\u6307\u5b9a\u54cd\u5e94\u4f53\u7684\u8bed\u8a00</li> <li><code>Content-Disposition</code>\uff1a\u6307\u5b9a\u54cd\u5e94\u4f53\u7684\u5904\u7406\u65b9\u5f0f</li> <li><code>Set-Cookie</code>\uff1a\u6307\u5b9a\u54cd\u5e94\u7684 Cookie</li> <li><code>Location</code>\uff1a\u6307\u5b9a\u54cd\u5e94\u7684\u91cd\u5b9a\u5411\u5730\u5740</li> <li><code>Last-Modified</code>\uff1a\u6307\u5b9a\u54cd\u5e94\u7684\u8d44\u6e90\u7684\u6700\u540e\u4fee\u6539\u65f6\u95f4</li> <li><code>ETag</code>\uff1a\u6307\u5b9a\u54cd\u5e94\u7684\u8d44\u6e90\u7684 ETag \u503c</li> </ul> </li> </ul> <p></p> <ul> <li>\u54cd\u5e94\u4f53 \u5177\u4f53\u7684\u6570\u636e<ul> <li>\u4f8b\u5982\u7f51\u9875\u7684 HTML \u4ee3\u7801</li> <li>\u4f8b\u5982\u56fe\u7247\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u3001pdf\u6587\u4ef6\u7b49</li> </ul> </li> </ul> <p></p>"},{"location":"src/cpp/network/#rtprtcp","title":"RTP/RTCP","text":""},{"location":"src/cpp/openssl/","title":"\ud83d\udce6 OpenSSL","text":"<p>\u5b98\u7f51 | \u4e0b\u8f7d | \u4f7f\u7528\u6587\u6863 | \u5f00\u53d1\u6587\u6863</p>"},{"location":"src/cpp/openssl/#setup","title":"setup","text":""},{"location":"src/cpp/openssl/#linux","title":"linux","text":"Bash<pre><code>sudo apt-get install libssl-dev\n</code></pre> <ol> <li> <p>\u4e0b\u8f7d <code>wget</code> / \u89e3\u538b <code>tar -zxvf</code> / \u63d0\u6743 <code>chmod +x</code></p> </li> <li> <p>\u914d\u7f6e\u5b89\u88c5\u9009\u9879 <code>./config shared --prefix=/opt/OpenSSL-x.y.z --openssldir=/opt/OpenSSL-x.y.z</code></p> </li> <li> <p>\u5b89\u88c5 <code>make &amp;&amp; sudo make install</code></p> </li> <li> <p>\u7f16\u5199\u6d4b\u8bd5\u4ee3\u7801     C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;openssl/opensslv.h&gt;\n#include &lt;openssl/crypto.h&gt;\n\nint main() {\n    // \u8f93\u51fa OpenSSL \u7248\u672c\u4fe1\u606f\n    printf(\"OpenSSL version: %s\\n\", OpenSSL_version(OPENSSL_VERSION));\n    printf(\"OpenSSL version number: %lx\\n\", OpenSSL_version_num());\n    return 0;\n}\n</code></pre></p> </li> <li> <p>\u7f16\u8bd1     Bash<pre><code>gcc a.c -I/.../openssl-x.y.z/include -L/.../openssl-x.y.z/lib64 -Wl,-rpath=/opt/openssl-x.y.z/lib64 -lssl -lcrypto\n</code></pre></p> </li> </ol>"},{"location":"src/cpp/openssl/#windows","title":"windows","text":""},{"location":"src/cpp/openssl/#use","title":"use","text":""},{"location":"src/cpp/openssl/#_1","title":"\u751f\u6210\u5bc6\u94a5\u5bf9","text":"Bash<pre><code>openssl genpkey -out pri.pem -algorithm RSA -pkeyopt rsa_keygen_bits:2048\nopenssl pkey -in pri.pem -pubout -out pub.pem\n</code></pre>"},{"location":"src/cpp/openssl/#dev","title":"dev","text":""},{"location":"src/cpp/perf/","title":"\ud83d\udd29 Perf","text":"<ol> <li> <p>\u5b89\u88c5 perf Bash<pre><code>sudo apt install linux-tools-common linux-tools-generic linux-tools-`uname -r`\n</code></pre></p> <ul> <li><code>linux-tools-common</code>\uff1aLinux \u6027\u80fd\u5206\u6790\u5de5\u5177\u7684\u516c\u5171\u6587\u4ef6\u3002</li> <li><code>linux-tools-generic</code>\uff1aLinux \u6027\u80fd\u5206\u6790\u5de5\u5177\u7684\u901a\u7528\u6587\u4ef6\u3002</li> <li><code>linux-tools-&lt;version&gt;</code>\uff1aLinux \u6027\u80fd\u5206\u6790\u5de5\u5177\u7684\u5185\u6838\u7248\u672c\u6587\u4ef6\u3002<ul> <li><code>uname -r</code> \u547d\u4ee4\u7528\u4e8e\u67e5\u770b\u5185\u6838\u7248\u672c\u3002</li> </ul> </li> </ul> Bash<pre><code>perf -v # \u9a8c\u8bc1\u662f\u5426\u5b89\u88c5\u6210\u529f\n</code></pre> </li> <li> <p>\u4e0b\u8f7d FlameGraph</p> <p>FlameGraph \u662f\u4e00\u4e2a\u751f\u6210\u706b\u7130\u56fe\u7684\u5de5\u5177\u3002</p> Bash<pre><code>git clone https://github.com/brendangregg/FlameGraph.git\n</code></pre> </li> <li> <p>\u4f7f\u7528 </p> Bash<pre><code>sudo perf record -g ./a.out sleep 10\n</code></pre> <ul> <li><code>perf record</code> \u547d\u4ee4\u7528\u4e8e\u8bb0\u5f55\u6027\u80fd\u6570\u636e\u3002</li> <li><code>-g</code> \u9009\u9879\u7528\u4e8e\u8bb0\u5f55\u8c03\u7528\u56fe\u3002</li> <li><code>./a.out</code> \u9700\u8981\u8bb0\u5f55\u6027\u80fd\u7684\u7a0b\u5e8f\u3002</li> <li><code>sleep 10</code> \u7a0b\u5e8f\u8fd0\u884c 10 \u79d2\u3002</li> </ul> Bash<pre><code>sudo perf script -i perf.data &amp;&gt; perf.unfold \n</code></pre> <ul> <li><code>perf script</code> \u547d\u4ee4\u7528\u4e8e\u5c06\u6027\u80fd\u6570\u636e\u8f6c\u6362\u4e3a\u53ef\u8bfb\u7684\u683c\u5f0f\u3002</li> <li><code>-i</code> \u9009\u9879\u7528\u4e8e\u6307\u5b9a\u8f93\u5165\u6587\u4ef6\u3002</li> <li><code>perf.data</code> \u662f\u6027\u80fd\u6570\u636e\u6587\u4ef6\u3002</li> <li><code>&amp;&gt; perf.unfold</code> \u7528\u4e8e\u5c06\u8f93\u51fa\u91cd\u5b9a\u5411\u5230 <code>perf.unfold</code> \u6587\u4ef6\u3002</li> </ul> Bash<pre><code>sudo FlameGraph/stackcollapse-perf.pl perf.unfold &amp;&gt; perf.folded\n</code></pre> <ul> <li><code>stackcollapse-perf.pl</code> \u547d\u4ee4\u7528\u4e8e\u5c06\u6027\u80fd\u6570\u636e\u8f6c\u6362\u4e3a\u706b\u7130\u56fe\u7684\u8f93\u5165\u683c\u5f0f\u3002</li> <li><code>perf.unfold</code> \u662f\u6027\u80fd\u6570\u636e\u6587\u4ef6\u3002</li> <li><code>&amp;&gt; perf.folded</code> \u7528\u4e8e\u5c06\u8f93\u51fa\u91cd\u5b9a\u5411\u5230 <code>perf.folded</code> \u6587\u4ef6\u3002</li> </ul> Bash<pre><code>sudo FlameGraph/flamegraph.pl perf.folded &gt; perf.svg\n</code></pre> <ul> <li><code>flamegraph.pl</code> \u547d\u4ee4\u7528\u4e8e\u751f\u6210\u706b\u7130\u56fe\u3002</li> <li><code>perf.folded</code> \u662f\u706b\u7130\u56fe\u9700\u8981\u7684\u6027\u80fd\u6570\u636e\u6587\u4ef6\u3002</li> <li><code>&gt; perf.svg</code> \u7528\u4e8e\u5c06\u8f93\u51fa\u91cd\u5b9a\u5411\u5230 <code>perf.svg</code> \u6587\u4ef6\u3002</li> </ul> </li> </ol> <p></p>"},{"location":"src/cpp/qt/","title":"Qt","text":""},{"location":"src/cpp/qt/#_1","title":"\u53c2\u8003","text":""},{"location":"src/cpp/qt/#setup","title":"SETUP","text":""},{"location":"src/cpp/qt/#linux","title":"LINUX","text":"<ol> <li> <p>\u6ce8\u518c QT\uff1a\u5b98\u7f51</p> </li> <li> <p>\u4e0b\u8f7d QT\uff1a\u5b98\u7f51</p> <p>\u88c5\u4e00\u4e9b\u4f9d\u8d56\uff1a</p> Bash<pre><code>sudo apt install -y \\\n    libxcb-cursor0 libxcb-cursor-dev \\\n    mesa-common-dev libgl1-mesa-dev \\\n    libxcb-xinerama0 \\\n\n    libxkbcommon-x11-0 libxkbcommon-dev\\\n    libvulkan-dev\n</code></pre> </li> <li> <p>\u6dfb\u52a0\u73af\u5883\u53d8\u91cf\uff1a</p> Bash<pre><code>export PATH=/home/user/Qt/x.y.z/gcc_64/bin:$PATH\nexport LD_LIBRARY_PATH=/home/user/Qt/x.y.z/gcc_64/lib:$LD_LIBRARY_PATH\n</code></pre> </li> <li> <p>vscode</p> <ol> <li> <p>\u5b89\u88c5\u63d2\u4ef6 <code>C/C++</code></p> </li> <li> <p>\u914d\u7f6e <code>.vscode/c_cpp_properties.json</code></p> JSON<pre><code>{\n    \"configurations\": [\n        {\n            \"name\": \"Qt\",\n            \"includePath\": [\n                \"${workspaceFolder}/**\",\n                \"/home/user/Qt/x.y.z/gcc_64/include/**\"\n            ],\n            \"compilerPath\": \"/usr/bin/gcc\"\n        }\n    ],\n    \"version\": 4\n}\n</code></pre> </li> </ol> </li> <li> <p>hello qt</p> <ol> <li> <p>\u6e90\u6587\u4ef6\uff1a<code>main.cpp</code></p> C++<pre><code>#include &lt;QApplication&gt;\n#include &lt;QPushButton&gt;\n#include &lt;QMessageBox&gt;\n\nint main(int argc, char *argv[]) {\n    QApplication app(argc, argv);\n\n    // \u521b\u5efa\u4e00\u4e2a\u6309\u94ae\n    QPushButton button(\"\u70b9\u51fb\u6211\uff01\", nullptr);\n\n    // \u5f53\u6309\u94ae\u88ab\u70b9\u51fb\u65f6\uff0c\u8fde\u63a5\u5230\u5e94\u7528\u7a0b\u5e8f\u7684quit()\u69fd\u51fd\u6570\n    QObject::connect(&amp;button, &amp;QPushButton::clicked, [&amp;]() {\n        // \u663e\u793a\u4e00\u4e2a\u6d88\u606f\u6846\n        QMessageBox::information(nullptr, \"\u6d88\u606f\", \"\u6309\u94ae\u88ab\u70b9\u51fb\u4e86\uff01\");\n    });\n\n    // \u663e\u793a\u7a97\u53e3\n    button.show();\n\n    // \u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u7684\u4e8b\u4ef6\u5faa\u73af\n    return app.exec();\n}\n</code></pre> </li> <li> <p><code>CMakeLists.txt</code></p> Text Only<pre><code>cmake_minimum_required(VERSION 3.28)\nproject(HelloQt VERSION 1.0.0.0313)\n\n# C++ \u6807\u51c6\u914d\u7f6e\nset(CMAKE_CXX_STANDARD 23)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\n\n# \u67e5\u627e Qt \u5e93\nfind_package(Qt6 REQUIRED COMPONENTS\n    Core\n    Widgets\n)\n\n# \u53ef\u6267\u884c\u6587\u4ef6\nadd_executable(HelloQt main.cpp)\n\n# \u94fe\u63a5 Qt \u5e93\ntarget_link_libraries(HelloQt PRIVATE\n    Qt6::Core\n    Qt6::Widgets\n)\n</code></pre> </li> <li> <p>\u7f16\u8bd1</p> Bash<pre><code>mkdir build &amp;&amp; cd build\ncmake ..\ncmake --build .\n</code></pre> </li> </ol> </li> <li> <p>debug</p> <ol> <li> <p>\u914d\u7f6e <code>.vscode/launch.json</code>\uff1a</p> JSON<pre><code>{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            // \u914d\u7f6e\u7684\u540d\u79f0\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\n            \"name\": \"debug\",\n            // \u914d\u7f6e\u7c7b\u578b\u4e3acppdbg\uff0c\u8868\u793aC++\u8c03\u8bd5\n            \"type\": \"cppdbg\",\n            // \u8bf7\u6c42\u7c7b\u578b\u4e3alaunch\uff0c\u8868\u793a\u542f\u52a8\u8c03\u8bd5\n            \"request\": \"launch\",\n            // \u53ef\u6267\u884c\u6587\u4ef6\u8def\u5f84\u4e3a\u5f53\u524d\u6253\u5f00\u6587\u4ef6\u7684\u8def\u5f84\u548c\u6587\u4ef6\u540d\uff08\u4e0d\u5e26\u6269\u5c55\u540d\uff09\n            \"program\": \"${fileDirname}/${fileBasenameNoExtension}\",\n            // \u662f\u5426\u5728\u7a0b\u5e8f\u5165\u53e3\u5904\u505c\u6b62\n            \"stopAtEntry\": true,\n            // \u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e3aVS Code\u7684\u5de5\u4f5c\u533a\u76ee\u5f55\n            \"cwd\": \"${workspaceFolder}\",\n            // \u8c03\u8bd5\u5668\u7c7b\u578b\u4e3agdb\n            \"MIMode\": \"gdb\",\n            // \u6307\u5b9agdb\u7684\u53ef\u6267\u884c\u6587\u4ef6\u8def\u5f84\n            \"miDebuggerPath\": \"gdb\",\n            // \u914d\u7f6e\u8c03\u8bd5\u4f1a\u8bdd\u7684\u73af\u5883\u53d8\u91cf\uff0c\u8fd9\u91cc\u8bbe\u7f6e DISPLAY \u4ee5\u4fbf\u8fdc\u7a0b\u8c03\u8bd5\uff08\u975e\u5fc5\u9700\uff09\n            // \u53ef\u4ee5\u8bbe\u7f6e\u4e3a x11 \u7684\u8f6c\u53d1\u7684 DISPLAY \u73af\u5883\u53d8\u91cf\uff0clocalhost:10.0\n            \"environment\": [\n                {\n                    \"name\": \"DISPLAY\",\n                    \"value\": \":10.0\"\n                }\n            ],\n        }\n    ]\n}\n</code></pre> </li> <li> <p>\u4f9d\u6b21\u70b9\u51fb\uff1a<code>\u8fd0\u884c</code> -&gt; <code>\u542f\u52a8\u8c03\u8bd5</code>\uff0c\u5373\u53ef\u5f00\u59cb\u8c03\u8bd5</p> <ol> <li>\u7ee7\u7eed\uff1a\u8fd0\u884c\u5230\u4e0b\u4e00\u4e2a\u65ad\u70b9</li> <li>\u9010\u8fc7\u7a0b\uff1a\u9010\u884c\u6267\u884c\uff0c\u9047\u5230\u51fd\u6570\u5219\u8df3\u8fc7\u51fd\u6570\u7684\u5185\u90e8\u6267\u884c</li> <li>\u5355\u6b65\u8c03\u8bd5\uff1a\u5355\u6b65\u6267\u884c\uff0c\u5982\u679c\u9047\u5230\u51fd\u6570\u5219\u8fdb\u5165\u51fd\u6570\u5185\u90e8\u6267\u884c</li> <li>\u5355\u6b65\u8df3\u51fa\uff1a\u6267\u884c\u5230\u5f53\u524d\u51fd\u6570\u7684\u6700\u540e\u4e00\u884c\uff0c\u7136\u540e\u8df3\u51fa\u51fd\u6570</li> </ol> </li> </ol> </li> </ol>"},{"location":"src/cpp/qt/#windows","title":"WINDOWS","text":""},{"location":"src/cpp/qt/#source","title":"Source","text":"<ol> <li> <p>\u4e0b\u8f7d https://download.qt.io/official_releases/qt/</p> </li> <li> <p><code>./configure -prefix $PWD/qtbase -opensource -nomake tests</code></p> </li> <li> <p><code>make -j$(nproc)</code></p> </li> </ol> <p></p>"},{"location":"src/cpp/qt/#_2","title":"\u6253\u5305\uff01\u5206\u4eab\u7ed9 \ud83d\udc67","text":""},{"location":"src/cpp/qt/#linux_1","title":"LINUX","text":""},{"location":"src/cpp/qt/#windows_1","title":"WINDOWS","text":"<ol> <li> <p>\u5c06\u4f60\u7684 <code>main.exe</code> \u6587\u4ef6\u5355\u72ec\u590d\u5236\u5230\u4e00\u4e2a\u5e72\u51c0\u7684\u6587\u4ef6\u5939\u4e2d\uff1b</p> </li> <li> <p>\u6253\u5f00\u7ec8\u7aef <code>Qt 6.x.x (MinGW)</code>\uff0c\u5230\u65b0\u5efa\u7684\u6587\u4ef6\u5939\uff0c\u6267\u884c\uff1a</p> Bash<pre><code>windeployqt main.exe\n</code></pre> <ul> <li> <p>\u5b83\u4f1a\u81ea\u52a8\u5206\u6790\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u627e\u51fa\u5b83\u6240\u4f9d\u8d56\u7684Qt\u6a21\u5757\u548c\u5176\u4ed6\u4f9d\u8d56\u9879\uff0c\u5e76\u5c06\u8fd9\u4e9b\u6587\u4ef6\u590d\u5236\u5230\u5e94\u7528\u7a0b\u5e8f\u7684\u76ee\u5f55\u4e2d\u3002</p> </li> <li> <p>\u6b64\u65f6\uff0c\u8f6f\u4ef6\u5df2\u7ecf\u53ef\u4ee5\u5728\u5176\u4ed6\uff08\u540c\u4e00\u5e73\u53f0\uff09\u7535\u8111\u4e0a\u8fd0\u884c\u4e86\u3002</p> </li> <li> <p>\u4e3a\u4e86\u66f4\u597d\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u6253\u5305\u6210\u4e00\u4e2a\u7eff\u8272\u7248\u7684\u8f6f\u4ef6\uff0c\ud83d\udc67 \u53ef\u4ee5\u70b9\u51fb <code>main.exe</code> \u76f4\u63a5\u8fd0\u884c\uff01</p> </li> </ul> </li> <li> <p>\u4e0b\u8f7d\u5b89\u88c5 Enigma Virtual Box\uff1b</p> </li> <li> <p>\u4f7f\u7528 Enigma Virtual Box \u5c06 <code>main.exe</code> \u6253\u5305\uff1a</p> <ol> <li> <p>\u5728 <code>Enter input File Name:</code> \u4e2d\u6253\u5f00 <code>main.exe</code>\uff0c\u4f1a\u81ea\u52a8\u586b\u5199 <code>output</code>\uff1b</p> </li> <li> <p>\u70b9\u51fb <code>Add</code> -&gt; <code>Add Folder Recursive</code>\uff0c\u9009\u62e9 <code>main.exe</code> \u6240\u5728\u7684\u6587\u4ef6\u5939\uff0c \u9ed8\u8ba4\u5c31\u597d\uff1b</p> </li> <li> <p>\u70b9\u51fb <code>Files Options</code>\uff0c\u52fe\u9009 <code>Files Virtualization</code> \u548c <code>Compress Files</code>\uff1b</p> </li> <li> <p>\u70b9\u51fb <code>Process</code>\uff0c\u7b49\u5f85\u6253\u5305\u5b8c\u6210\uff1b</p> </li> </ol> </li> </ol> <p></p>"},{"location":"src/cpp/qt/#qml-project","title":"QML &amp;&amp; project","text":""},{"location":"src/cpp/qt/#_3","title":"\u7b2c\u4e09\u65b9\u5e93","text":""},{"location":"src/cpp/qt/#qicstable","title":"qicstable","text":"<p>qicstable</p> <ul> <li> <p>Build the DLL</p> Bash<pre><code>qmake qicstable.pro &amp;&amp; make -j8\n</code></pre> Bash<pre><code>echo \"export LD_LIBRARY_PATH=/home/jiao/Desktop/qtp/qicstable-master/lib:\\$LD_LIBRARY_PATH\" &gt;&gt; ~/.bashrc\nsource ~/.bashrc\n</code></pre> </li> <li> <p>Build the Docs</p> <ol> <li><code>../bin/generate_docs</code></li> </ol> </li> </ul> <p></p>"},{"location":"src/cpp/qt/#_4","title":"\u4fe1\u53f7\u4e0e\u69fd","text":"<p>\u7b80\u5355\u7406\u89e3\uff0c\u5f53\u4f60\u5728\u9875\u9762\u70b9\u51fb\u4e00\u4e2a\u6309\u94ae\uff0c\u8fd9\u4e2a\u70b9\u51fb\u5c31\u662f \u4fe1\u53f7\uff0c\u800c\u540e\u7aef\u7684\u5904\u7406\u51fd\u6570\u5c31\u662f \u69fd\u3002 \u540c\u7406\uff0c\u5f53\u4f60\u5728\u9875\u9762\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\uff0c\u8fd9\u4e2a\u8f93\u5165\u5c31\u662f \u4fe1\u53f7\uff0c\u800c\u540e\u7aef\u7684\u5904\u7406\u51fd\u6570\u5c31\u662f \u69fd\u3002</p> <p>QT \u5b98\u65b9\u5bf9\u4fe1\u53f7\u4e0e\u69fd\u7684\u63cf\u8ff0\u5982\u4e0b\uff1a</p> <p>Qt \u7684\u6838\u5fc3\u601d\u60f3\u662f\u4fe1\u53f7\u4e0e\u69fd\u673a\u5236\u3002\u4fe1\u53f7\u4e0e\u69fd\u662f\u4e00\u79cd\u673a\u5236\uff0c\u7528\u4e8e\u5728\u5bf9\u8c61\u95f4\u8fdb\u884c\u901a\u4fe1\u3002\u4fe1\u53f7\u5728\u7279\u5b9a\u4e8b\u4ef6\u53d1\u751f\u65f6\u88ab\u53d1\u5c04\uff0c\u69fd\u662f\u5728\u4fe1\u53f7\u88ab\u53d1\u5c04\u65f6\u88ab\u8c03\u7528\u7684\u51fd\u6570\u3002Qt \u4e2d\uff0c\u4efb\u4f55 Qt \u5bf9\u8c61\u90fd\u80fd\u53d1\u9001\u4fe1\u53f7\u548c\u5904\u7406\u4fe1\u53f7\u3002\u4fe1\u53f7\u4e0e\u69fd\u662f\u4e00\u79cd\u975e\u5e38\u7075\u6d3b\u548c\u677e\u8026\u5408\u7684\u901a\u4fe1\u673a\u5236\uff0c\u5b83\u5141\u8bb8\u5bf9\u8c61\u95f4\u7684\u901a\u4fe1\u5b8c\u5168\u72ec\u7acb\u4e8e\u5f7c\u6b64\u7684\u5b9e\u73b0\u3002</p> <p>\u503c\u5f97\u4e00\u63d0 \u7684\u662f\uff0c\u4fe1\u53f7\u4e0e\u69fd\u7684\u8fde\u63a5\u662f \u52a8\u6001 \u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u53ef\u4ee5\u5728\u7a0b\u5e8f\u8fd0\u884c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u52a8\u6001\u7684\u8fde\u63a5\u4fe1\u53f7\u4e0e\u69fd\uff0c\u4e5f\u53ef\u4ee5\u52a8\u6001\u7684\u65ad\u5f00\u4fe1\u53f7\u4e0e\u69fd\u7684\u8fde\u63a5\u3002</p> <p>\u4fe1\u53f7\u4e0e\u69fd\u7684\u65b0\u8bed\u6cd5 </p> <ul> <li> <p>\u4e4b\u524d \u4fe1\u53f7\u4e0e\u69fd\u8fde\u63a5\u7684\u65b9\u5f0f\uff1a</p> C++<pre><code>connect(sender, SIGNAL(valueChanged(QString, QString)),\n        receiver, SLOT(updateValue(QString)));\n\n// \u5177\u4f53\u7684\nconnect(button, SIGNAL(clicked()), this, SLOT(showMessage()));\n</code></pre> <p>\u5b98\u7f51\u5bf9\u8fd9\u79cd\u65b9\u5f0f\u7684\u5f0a\u7aef\u8fdb\u884c\u4e86\u8be6\u7ec6\u7684\u8bf4\u660e\uff1aQt 5\u4e2d\u4fe1\u53f7\u548c\u69fd\u7684\u65b0\u8bed\u6cd5</p> <p></p> </li> <li> <p>\u76ee\u524d \u4fe1\u53f7\u4e0e\u69fd\u8fde\u63a5\u7684\u65b9\u5f0f\uff1a</p> C++<pre><code>connect(sender, &amp;Sender::valueChanged, receiver, &amp;Receiver::updateValue);\n\n// \u5177\u4f53\u7684\nconnect(button, &amp;QPushButton::clicked, this, &amp;MyWidget::showMessage);\n\n// \u4f7f\u7528 lambda \u8868\u8fbe\u5f0f\nconnect(button, &amp;QPushButton::clicked, [=](){ \n    QMessageBox::information(nullptr, \"\u6d88\u606f\", \"\u6309\u94ae\u88ab\u70b9\u51fb\u4e86\uff01\"); \n    });\n</code></pre> </li> </ul> <p></p>"},{"location":"src/cpp/qt/#_5","title":"\u7b80\u5355\u7a97\u53e3\u548c\u57fa\u672c\u63a7\u4ef6","text":"Text Only<pre><code>QObject                 # \u6240\u6709\u7c7b\u7684\u57fa\u7c7b\uff0c\u63d0\u4f9b\u4e86\u5bf9\u8c61\u7684\u57fa\u672c\u529f\u80fd\uff08\u5c5e\u6027\u3001\u4fe1\u53f7\u4e0e\u69fd...\uff09\n  \u2514\u2500\u2500 QWidget           # \u6240\u6709\u7a97\u53e3\u90e8\u4ef6\u7684\u57fa\u7c7b\uff0c\u63d0\u4f9b\u4e86\u7a97\u53e3\u90e8\u4ef6\u7684\u57fa\u672c\u529f\u80fd\uff08\u5c3a\u5bf8\u3001\u4f4d\u7f6e\u3001\u6807\u9898...\uff09\n      \u251c\u2500\u2500 QMainWindow   # \u4e3b\u7a97\u53e3\u7c7b\uff0c\u63d0\u4f9b\u4e86\u4e3b\u7a97\u53e3\u7684\u57fa\u672c\u529f\u80fd\uff08\u83dc\u5355\u680f\u3001\u5de5\u5177\u680f\u3001\u72b6\u6001\u680f...\uff09\n      \u251c\u2500\u2500 QLabel        # \u6807\u7b7e\u7c7b\uff0c\u7528\u4e8e\u663e\u793a\u6587\u672c\u6216\u56fe\u50cf\n      \u251c\u2500\u2500 QPushButton   # \u6309\u94ae\u7c7b\uff0c\u7528\u4e8e\u54cd\u5e94\u7528\u6237\u7684\u70b9\u51fb\n      \u251c\u2500\u2500 QLineEdit     # \u5355\u884c\u6587\u672c\u8f93\u5165\u6846\u7c7b\uff0c\u7528\u4e8e\u63a5\u6536\u7528\u6237\u7684\u8f93\u5165\n      \u251c\u2500\u2500 QComboBox     # \u4e0b\u62c9\u5217\u8868\u7c7b\uff0c\u7528\u4e8e\u4ece\u5217\u8868\u4e2d\u9009\u62e9\u4e00\u4e2a\u9009\u9879\n      \u251c\u2500\u2500 QCheckBox     # \u590d\u9009\u6846\u7c7b\uff0c\u7528\u4e8e\u4ece\u591a\u4e2a\u9009\u9879\u4e2d\u9009\u62e9\u4e00\u4e2a\u6216\u591a\u4e2a\n      \u251c\u2500\u2500 QRadioButton  # \u5355\u9009\u6309\u94ae\u7c7b\uff0c\u7528\u4e8e\u4ece\u591a\u4e2a\u9009\u9879\u4e2d\u9009\u62e9\u4e00\u4e2a\n      \u251c\u2500\u2500 QSlider       # \u6ed1\u5757\u7c7b\uff0c\u7528\u4e8e\u4ece\u4e00\u4e2a\u8303\u56f4\u4e2d\u9009\u62e9\u4e00\u4e2a\u503c\n      \u251c\u2500\u2500 QProgressBar  # \u8fdb\u5ea6\u6761\u7c7b\uff0c\u7528\u4e8e\u663e\u793a\u4efb\u52a1\u7684\u8fdb\u5ea6\n      \u2514\u2500\u2500 ...\n\nQLayout             # \u6240\u6709\u5e03\u5c40\u7ba1\u7406\u5668\u7684\u57fa\u7c7b\uff0c\u63d0\u4f9b\u4e86\u5e03\u5c40\u7ba1\u7406\u5668\u7684\u57fa\u672c\u529f\u80fd\n  \u251c\u2500\u2500 QHBoxLayout   # \u6c34\u5e73\u5e03\u5c40\n  \u251c\u2500\u2500 QVBoxLayout   # \u5782\u76f4\u5e03\u5c40\n  \u251c\u2500\u2500 QGridLayout   # \u7f51\u683c\u5e03\u5c40\n  \u2514\u2500\u2500 ...\n\nQEvent              # \u6240\u6709\u4e8b\u4ef6\u7684\u57fa\u7c7b\uff0c\u63d0\u4f9b\u4e86\u4e8b\u4ef6\u7684\u57fa\u672c\u529f\u80fd\n  \u251c\u2500\u2500 QMouseEvent   # \u9f20\u6807\u4e8b\u4ef6\n  \u251c\u2500\u2500 QKeyEvent     # \u952e\u76d8\u4e8b\u4ef6\n  \u251c\u2500\u2500 QResizeEvent  # \u7a97\u53e3\u5927\u5c0f\u6539\u53d8\u4e8b\u4ef6\n  \u251c\u2500\u2500 QCloseEvent   # \u7a97\u53e3\u5173\u95ed\u4e8b\u4ef6\n  \u2514\u2500\u2500 ...\n\nQPainter    # \u7ed8\u56fe\u8bbe\u5907\uff0c\u7528\u4e8e\u7ed8\u5236\u5404\u79cd\u56fe\u5f62\nQPixmap     # \u56fe\u7247\u8bbe\u5907\uff0c\u7528\u4e8e\u663e\u793a\u56fe\u7247\nQImage      # \u56fe\u7247\u8bbe\u5907\uff0c\u7528\u4e8e\u663e\u793a\u56fe\u7247\nQPen        # \u753b\u7b14\uff0c\u7528\u4e8e\u7ed8\u5236\u5404\u79cd\u56fe\u5f62\u7684\u8f6e\u5ed3\nQBrush      # \u753b\u5237\uff0c\u7528\u4e8e\u7ed8\u5236\u5404\u79cd\u56fe\u5f62\u7684\u80cc\u666f\nQColor      # \u989c\u8272\uff0c\u7528\u4e8e\u8bbe\u7f6e\u753b\u7b14\u548c\u753b\u5237\u7684\u989c\u8272\n...\n</code></pre>"},{"location":"src/cpp/qt/#leg-1-hello-qt","title":"Leg 1 Hello Qt","text":"<p>Qt \u521b\u5efa\u4e00\u4e2a\u7a97\u53e3\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u521b\u5efa\u4e00\u4e2a <code>QWidget</code> \u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528 <code>QWidget</code> \u7684 <code>show()</code> \u65b9\u6cd5\u5373\u53ef\u3002</p> <p>\u4e0d\u8fc7\u5728\u8fd9\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u4e86\u89e3\u4e00\u4e0b <code>QApplication</code> \u7c7b\uff0c\u5b83\u662f Qt \u7a0b\u5e8f\u7684\u5165\u53e3\uff0c\u4e5f\u662f Qt \u7a0b\u5e8f\u7684\u6838\u5fc3\u5bf9\u8c61\uff0c\u6bcf\u4e2a Qt \u7a0b\u5e8f\u90fd\u5fc5\u987b \u6709\u4e14\u4ec5\u6709\u4e00\u4e2a <code>QApplication</code> \u5bf9\u8c61\u3002</p> <ol> <li> <p>\u5e94\u7528\u7a0b\u5e8f\u7684\u521d\u59cb\u5316\u3002</p> <ul> <li>\u547d\u4ee4\u884c\u53c2\u6570\u7684\u89e3\u6790\u3002</li> <li>\u8d44\u6e90\u6587\u4ef6\u7684\u52a0\u8f7d\uff1a\u4f8b\u5982\u5e94\u7528\u56fe\u6807\uff0c\u5404\u79cd\u6309\u94ae\u7684\u56fe\u7247\u7b49\u3002</li> <li>\u521d\u59cb\u5316\u7b2c\u4e09\u65b9\u5e93\u548c\u670d\u52a1\uff1a\u4f8b\u5982\u6570\u636e\u5e93\u670d\u52a1\u3002</li> </ul> </li> <li> <p>\u4e8b\u4ef6\u5faa\u73af\u3002</p> <ul> <li>\u901a\u8fc7\u8c03\u7528 <code>exec()</code> \u65b9\u6cd5\u8fdb\u5165\u4e8b\u4ef6\u5faa\u73af\u3002</li> </ul> </li> <li> <p>\u5904\u7406\u7cfb\u7edf\u4e8b\u4ef6\u3002</p> <ul> <li>\u786e\u4fdd\u4e8b\u4ef6\uff08\u9f20\u6807\u70b9\u51fb\u3001\u952e\u76d8\u8f93\u5165\uff09\u88ab\u4f20\u9012\u7ed9\u9002\u5f53\u7684\u7a97\u53e3\u90e8\u4ef6\u8fdb\u884c\u5904\u7406\u3002</li> </ul> </li> <li> <p>\u9000\u51fa\u5e94\u7528\u7a0b\u5e8f\u3002</p> <ul> <li>\u7528\u6237\u5173\u95ed\u4e3b\u7a97\u53e3\uff0c\u5b83\u8d1f\u8d23\u5b89\u5168\u5730\u5173\u95ed\u6240\u6709\u7a97\u53e3\u5e76\u91ca\u653e\u6240\u6709\u8d44\u6e90\u3002</li> <li>\u6216\u8c03\u7528 <code>quit()</code> \u65b9\u6cd5\u5b89\u5168\u5730\u9000\u51fa\u4e8b\u4ef6\u5faa\u73af\u3002</li> </ul> </li> <li> <p>\u8ddf\u8e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u72b6\u6001\u3002</p> <ul> <li>\u4f8b\u5982\uff0c<code>QApplication</code> \u7c7b\u63d0\u4f9b\u4e86 <code>applicationStateChanged()</code> \u4fe1\u53f7\uff0c\u5f53\u5e94\u7528\u7a0b\u5e8f\u7684\u72b6\u6001\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u5c31\u4f1a\u53d1\u5c04\u8fd9\u4e2a\u4fe1\u53f7\u3002</li> </ul> </li> </ol> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u7684\u7a0b\u5e8f\u5e94\u8be5\u662f\u8fd9\u6837\u7684\uff1a</p> C++<pre><code>#include &lt;QApplication&gt;\n\nint main(int argc, char *argv[]){\n    QApplication app(argc, argv);   // \u521b\u5efa\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5bf9\u8c61\n    return app.exec();              // \u8fdb\u5165\u4e8b\u4ef6\u5faa\u73af\n}\n</code></pre> <p>\u7a0b\u5e8f\u6709\u4e86\uff0c\u4f46\u662f\u6ca1\u6709\u7a97\u53e3\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u7a97\u53e3\uff0c\u7136\u540e\u663e\u793a\u51fa\u6765\uff0c \u5f88\u6709\u5fc5\u8981\uff0c\u521b\u5efa\u4e00\u4e2a\u4e3b\u7a97\u53e3\u7c7b\uff1a</p> C++<pre><code>// MainWindow.h\n#pragma once\n\n#include &lt;QMainWindow&gt;\n\nclass MainWindow : public QMainWindow   // \u521b\u5efa\u4e00\u4e2a\u4e3b\u7a97\u53e3\u7c7b\n{                                       // \u7ee7\u627f\u81eaQMainWindow\n    Q_OBJECT                            // \u4f7f\u7528Qt\u7684\u4fe1\u53f7\u4e0e\u69fd\u673a\u5236\u9700\u8981\u8fd9\u4e2a\u5b8f\n\npublic:\n    MainWindow(QWidget *parent = nullptr); \n    ~MainWindow();\n\nprivate:\n    // \u5728\u8fd9\u91cc\u58f0\u660e\u79c1\u6709\u6210\u5458\u53d8\u91cf\u548c\u79c1\u6709\u65b9\u6cd5\n};\n</code></pre> <p><code>Q_OBJECT</code> \u5b8f\u662f\u4f7f\u7528 Qt \u7684\u4fe1\u53f7\u4e0e\u69fd\u673a\u5236\u5fc5\u987b\u7684\uff0c\u5b83\u4f1a\u5728\u7f16\u8bd1\u9636\u6bb5\u81ea\u52a8\u5c06 <code>moc</code> \u6587\u4ef6\uff08\u5143\u5bf9\u8c61\u7f16\u8bd1\u5668\uff09\u63d2\u5165\u5230\u6e90\u6587\u4ef6\u4e2d\uff0c\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u5305\u542b\u4e86\u4fe1\u53f7\u4e0e\u69fd\u7684\u5b9e\u73b0\u3002</p> C++<pre><code>// MainWindow.cpp\n#include \"../include/MainWindow.h\"\n\nMainWindow::MainWindow(QWidget *parent) // \u8fd9\u91cc\u7684parent\u662f\u53ef\u9009\u7684\n    : QMainWindow(parent)               // \u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u5316\u5217\u8868\n{\n    // \u5728\u8fd9\u91cc\u8fdb\u884c\u4e3b\u7a97\u53e3\u7684\u521d\u59cb\u5316\u64cd\u4f5c\n    this -&gt; setWindowTitle(\"Hello Qt!\");// \u8bbe\u7f6e\u7a97\u53e3\u6807\u9898\n}\n\nMainWindow::~MainWindow()\n{\n    // \u5728\u8fd9\u91cc\u8fdb\u884c\u8d44\u6e90\u7684\u6e05\u7406\u5de5\u4f5c\uff08\u5982\u679c\u9700\u8981\uff09\n}\n</code></pre> <p>\u5728 <code>main.cpp</code> \u4e2d\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a <code>MainWindow</code> \u5bf9\u8c61\uff0c\u7136\u540e\u663e\u793a\u51fa\u6765\uff1a</p> C++<pre><code>MainWindow *w = new MainWindow();   // \u521b\u5efa\u4e00\u4e2a\u4e3b\u7a97\u53e3\u5bf9\u8c61\nw-&gt;show();                          // \u663e\u793a\u4e3b\u7a97\u53e3\n</code></pre> <p>\u7a97\u53e3\u4e2d\u7684\u5185\u5bb9\u662f\u7a7a\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u5728\u7a97\u53e3\u4e2d\u663e\u793a\u4e00\u4e9b\u6587\u5b57\uff1a</p> C++<pre><code>// MainWindow.h\n#include &lt;QLabel&gt;   // \u5305\u542b\u6807\u7b7e\u7c7b\u7684\u5934\u6587\u4ef6\n// ...\nprivate:\n    QLabel *_label; // \u58f0\u660e\u4e00\u4e2a\u6807\u7b7e\n// ...\n</code></pre> C++<pre><code>// MainWindow.cpp\nthis -&gt; _label = new QLabel(this);  // \u4e3a\u5176\u5206\u914d\u5185\u5b58\nthis -&gt; _label -&gt; setText(\"Hello Qt!!!\");   // \u8bbe\u7f6e\u6807\u7b7e\u6587\u672c\n</code></pre> <p></p> <p>\u6e90\u4ee3\u7801\u53ca\u53c2\u89c1\uff1aLeg1</p>"},{"location":"src/cpp/qt/#leg-2","title":"Leg 2 \u5e03\u5c40\u7ba1\u7406\u5668","text":"<p>\u4e3a\u4e86\u80fd\u591f\u63a7\u5236\u6807\u7b7e\u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5e03\u5c40\u7ba1\u7406\u5668\uff0c\u5e03\u5c40\u7ba1\u7406\u5668\u662f Qt \u63d0\u4f9b\u7684\u4e00\u79cd\u81ea\u52a8\u5e03\u5c40\u673a\u5236\uff0c\u5b83\u80fd\u591f\u6839\u636e\u7a97\u53e3\u7684\u5927\u5c0f\u81ea\u52a8\u8c03\u6574\u7a97\u53e3\u90e8\u4ef6\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f\u3002</p> <p>Qt \u5e38\u89c1\u7684\u4e09\u79cd\u5e03\u5c40\u7ba1\u7406\u5668\uff1a * \u6c34\u5e73\u5e03\u5c40\uff1a<code>QHBoxLayout</code> * \u5782\u76f4\u5e03\u5c40\uff1a<code>QVBoxLayout</code> * \u7f51\u683c\u5e03\u5c40\uff1a<code>QGridLayout</code></p> <p>\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u5782\u76f4\u5e03\u5c40\uff1a</p> C++<pre><code>// MainWindow.h\n#pragma once\n\n#include &lt;QMainWindow&gt;\n#include &lt;QLayout&gt;\n#include &lt;QLabel&gt;\n\nclass MainWindow : public QMainWindow{\n    Q_OBJECT\n\npublic:\n    MainWindow(QWidget *parent = nullptr);\n    ~MainWindow();\n\nprivate:\n    QWidget     *_centralWidget;// \u58f0\u660e\u4e00\u4e2a\u4e2d\u592e\u90e8\u4ef6\n    QVBoxLayout *_layout;       // \u58f0\u660e\u4e00\u4e2a\u5782\u76f4\u5e03\u5c40\u7ba1\u7406\u5668\n    QLabel      *_labeltext;    // \u58f0\u660e\u4e00\u4e2a\u6587\u672c\u6807\u7b7e\n    QLabel      *_labelimg;     // \u58f0\u660e\u4e00\u4e2a\u56fe\u7247\u6807\u7b7e\n};\n</code></pre> <p>\u5e03\u5c40\u7ba1\u7406\u5668\u901a\u5e38\u9700\u8981\u9644\u7740\u5728\u4e00\u4e2a\u7279\u5b9a\u7684\u7a97\u53e3\u90e8\u4ef6\u4e0a\uff0c\u8fd9\u4e2a\u7a97\u53e3\u90e8\u4ef6\u88ab\u79f0\u4e3a\u4e2d\u592e\u90e8\u4ef6\uff08central widget\uff09\u3002</p> <p>\u901a\u8fc7\u8c03\u7528 <code>setCentralWidget(centralWidget)</code>\uff0c\u5c06\u6574\u4e2a\u5e03\u5c40\u5e94\u7528\u5230\u4e3b\u7a97\u53e3\u3002</p> <p>Q\uff1a\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u4e2d\u592e\u90e8\u4ef6\uff1f\u800c\u4e0d\u662f\u76f4\u63a5\u5c06\u5e03\u5c40\u5e94\u7528\u5230\u4e3b\u7a97\u53e3\uff1f</p> <ul> <li>\u5f53\u4f60\u5c06\u5e03\u5c40\u7ba1\u7406\u5668\u8bbe\u7f6e\u4e3a\u4e3b\u7a97\u53e3\u65f6\uff0c\u5b83\u4f1a\u76f4\u63a5\u5f71\u54cd\u4e3b\u7a97\u53e3\u7684\u6574\u4f53\u5e03\u5c40\uff0c\u5305\u62ec\u83dc\u5355\u680f\u3001\u5de5\u5177\u680f\u7b49\u3002\u800c\u5c06\u5e03\u5c40\u7ba1\u7406\u5668\u8bbe\u7f6e\u4e3a\u4e2d\u592e\u90e8\u4ef6\u7684\u5e03\u5c40\u7ba1\u7406\u5668\uff0c\u53ea\u4f1a\u5f71\u54cd\u4e2d\u592e\u90e8\u4ef6\u5185\u90e8\u7684\u5b50\u90e8\u4ef6\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u90e8\u5206\u7684\u5e03\u5c40\uff0c\u8fd9\u6837\u66f4\u52a0\u7075\u6d3b\u3002</li> <li>\u4e3b\u7a97\u53e3\u662f\u4e00\u4e2a\u9876\u7ea7\u7a97\u53e3\uff0c\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u5b50\u90e8\u4ef6\uff0c\u800c\u4e2d\u592e\u90e8\u4ef6\u662f\u4e3b\u7a97\u53e3\u7684\u4e00\u4e2a\u7279\u6b8a\u5b50\u90e8\u4ef6\uff0c\u5b83\u4f1a\u81ea\u52a8\u5360\u636e\u4e3b\u7a97\u53e3\u7684\u4e2d\u592e\u533a\u57df\u3002</li> </ul> C++<pre><code>// MainWindow.cpp\n#include \"../include/MainWindow.h\"\n\nMainWindow::MainWindow(QWidget *parent)\n    : QMainWindow(parent)\n{\n    setWindowTitle(\"Leg 2 \u5e03\u5c40\u7ba1\u7406\u5668\");\n\n    _centralWidget  = new QWidget();\n    _layout         = new QVBoxLayout();\n    _labeltext      = new QLabel();\n    _labelimg       = new QLabel();\n\n    setCentralWidget(_centralWidget);     // \u8bbe\u7f6e\u4e2d\u592e\u90e8\u4ef6\n    _centralWidget -&gt; setLayout(_layout); // \u8bbe\u7f6e\u4e2d\u592e\u90e8\u4ef6\u7684\u5e03\u5c40\u7ba1\u7406\u5668\n    _layout -&gt; addWidget(_labeltext);   // \u5c06\u6587\u672c\u6807\u7b7e\u6dfb\u52a0\u5230\u5e03\u5c40\u7ba1\u7406\u5668\n    _layout -&gt; addWidget(_labelimg);    // \u5c06\u56fe\u7247\u6807\u7b7e\u6dfb\u52a0\u5230\u5e03\u5c40\u7ba1\u7406\u5668\n\n    // \u8bbe\u7f6e\u6807\u7b7e\u7684\u5185\u5bb9\n    _labeltext -&gt; setText(\"Leg 2 \u5e03\u5c40\u7ba1\u7406\u5668\");         // \u8bbe\u7f6e\u6587\u672c\u6807\u7b7e\n    _labelimg  -&gt; setPixmap(QPixmap(\"img/cqvie.jpg\"));// \u8bbe\u7f6e\u56fe\u7247\u6807\u7b7e\n    // \u8bbe\u7f6e\u6807\u7b7e\u7684\u5bf9\u9f50\u65b9\u5f0f\u4e3a\u5c45\u4e2d\n    _labeltext -&gt; setAlignment(Qt::AlignCenter);\n    _labelimg  -&gt; setAlignment(Qt::AlignCenter);\n}\n\nMainWindow::~MainWindow()\n{\n    delete _labelimg;\n    delete _labeltext;\n    delete _layout;\n    delete _centralWidget;\n}\n</code></pre> <p>\u663e\u7136\uff0c\u53ea\u6709\u8fd9\u51e0\u79cd\u5e03\u5c40\u662f\u4e0d\u591f\u7684\uff0c\u4f46\u5982\u679c\u5e03\u5c40\u53ef\u4ee5\u5d4c\u5957\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5b9e\u73b0\u66f4\u52a0\u590d\u6742\u7684\u5e03\u5c40\u3002</p> <p>\u6211\u4eec\u5c1d\u8bd5\u5728\u73b0\u5728\u7684\u57fa\u7840\u4e0a\uff0c\u5728\u4e0a\u5c42\u6dfb\u52a0\u4e00\u4e2a\u7f51\u683c\u5e03\u5c40\uff1a</p> C++<pre><code>// MainWindow.h\n// ...\nprivate:\n    QVBoxLayout *_vLayout;      // \u58f0\u660e\u4e00\u4e2a\u5782\u76f4\u5e03\u5c40\u7ba1\u7406\u5668\n    QGridLayout *_gLayout;      // \u58f0\u660e\u4e00\u4e2a\u7f51\u683c\u5e03\u5c40\u7ba1\u7406\u5668\n    QLabel      _labeltext_1,   // \u521b\u5efa 6 \u4e2a\u6587\u672c\u6807\u7b7e  \n                _labeltext_2,\n                _labeltext_3,\n                _labeltext_4,\n                _labeltext_5,\n                _labeltext_6;\n</code></pre> C++<pre><code>// MainWindow.cpp\n_vLayout        = new QVBoxLayout();\n_gLayout        = new QGridLayout();\n_labelimg       = new QLabel();\n\nsetCentralWidget(_centralWidget);       // \u8bbe\u7f6e\u4e2d\u592e\u90e8\u4ef6\n_centralWidget -&gt; setLayout(_vLayout);  // \u8bbe\u7f6e\u4e2d\u592e\u90e8\u4ef6\u7684\u5e03\u5c40\u7ba1\u7406\u5668\n\n_vLayout -&gt; addLayout(_gLayout);        // \u5c06\u7f51\u683c\u5e03\u5c40\u7ba1\u7406\u5668\u6dfb\u52a0\u5230\u5782\u76f4\u5e03\u5c40\u7ba1\u7406\u5668\n_vLayout -&gt; addWidget(_labelimg);       // \u5c06\u56fe\u7247\u6807\u7b7e\u6dfb\u52a0\u5230\u5782\u76f4\u5e03\u5c40\u7ba1\u7406\u5668\n\n// \u5c06 6 \u4e2a\u6587\u672c\u6807\u7b7e\u6dfb\u52a0\u5230\u7f51\u683c\u5e03\u5c40\u7ba1\u7406\u5668\uff0c\u5e76\u4e14\u8bbe\u7f6e\u5185\u5bb9\n_gLayout -&gt; addWidget(&amp;_labeltext_1, 0, 0);\n_gLayout -&gt; addWidget(&amp;_labeltext_2, 0, 1);\n_gLayout -&gt; addWidget(&amp;_labeltext_3, 0, 2);\n_gLayout -&gt; addWidget(&amp;_labeltext_4, 1, 0);\n_gLayout -&gt; addWidget(&amp;_labeltext_5, 1, 1);\n_gLayout -&gt; addWidget(&amp;_labeltext_6, 1, 2);\n_labeltext_1.setText(\"C\"); _labeltext_1.setAlignment(Qt::AlignCenter);\n_labeltext_2.setText(\"Q\"); _labeltext_2.setAlignment(Qt::AlignCenter);\n_labeltext_3.setText(\"V\"); _labeltext_3.setAlignment(Qt::AlignCenter);\n_labeltext_4.setText(\"I\"); _labeltext_4.setAlignment(Qt::AlignCenter);\n_labeltext_5.setText(\"E\"); _labeltext_5.setAlignment(Qt::AlignCenter);\n_labeltext_6.setText(\"!\"); _labeltext_6.setAlignment(Qt::AlignCenter);\n\n// \u8bbe\u7f6e\u56fe\u7247\u6807\u7b7e\uff0c\u5e76\u4e14\u8bbe\u7f6e\u4e3a\u5c45\u4e2d\n_labelimg  -&gt; setPixmap(QPixmap(\"img/cqvie.jpg\"));\n_labelimg  -&gt; setAlignment(Qt::AlignCenter);\n</code></pre> <p></p> <p>\u6e90\u4ee3\u7801\u53ca\u53c2\u89c1\uff1aLeg2</p>"},{"location":"src/cpp/qt/#leg-3","title":"Leg 3 \u6309\u94ae\u4e0e\u6587\u672c\u8f93\u5165\u6846","text":"<p>\u73b0\u5728\u7684\u7a97\u53e3\uff0c\u90fd\u53ea\u662f\u5355\u4e00\u7684\u663e\u793a\u5185\u5bb9\uff0c\u6ca1\u6709\u4efb\u4f55\u4ea4\u4e92\uff0c\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e9b\u6309\u94ae\uff0c\u6765\u5b9e\u73b0\u4e00\u4e9b\u4ea4\u4e92\u3002</p> <p>\u8f93\u5165\u4e00\u4e32\u5c0f\u5199\u5b57\u6bcd\uff0c\u70b9\u51fb\u6309\u94ae\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u5927\u5199\u5b57\u6bcd\u3002</p> <ul> <li>\u5de6\u8fb9\uff1a\u6587\u672c\u8f93\u5165\u6846\uff0c\u7528\u4e8e\u8f93\u5165\u5c0f\u5199\u5b57\u6bcd\uff1b</li> <li>\u4e2d\u95f4\uff1a\u6309\u94ae\uff0c\u7528\u4e8e\u8f6c\u6362\uff1b</li> <li>\u53f3\u8fb9\uff1a\u6587\u672c\u663e\u793a\u6846\uff0c\u7528\u4e8e\u663e\u793a\u5927\u5199\u5b57\u6bcd\u3002</li> </ul> <ul> <li> <p>\u6309\u94ae\uff1a<code>QPushButton</code></p> </li> <li> <p>\u5355\u884c\u6587\u672c\u8f93\u5165\u6846\uff1a<code>QLineEdit</code> </p> </li> <li>\u591a\u884c\u6587\u672c\u8f93\u5165\u6846\uff1a<code>QTextEdit</code></li> </ul> <p>\u6211\u4eec\u5728\u8fd9\u91cc\u4f7f\u7528\u6c34\u5e73\u5e03\u5c40\uff0c\u5355\u884c\u6587\u672c\u8f93\u5165\u6846\u3002</p> C++<pre><code>// MainWindow.h\n#pragma once\n\n#include &lt;QMainWindow&gt;\n#include &lt;QLayout&gt;\n#include &lt;QLineEdit&gt;\n#include &lt;QPushButton&gt;\n#include &lt;QMessageBox&gt;\n\nclass MainWindow : public QMainWindow{\n    Q_OBJECT                  \n\npublic:\n    MainWindow(QWidget *parent = nullptr); \n    ~MainWindow();\n\nprivate:\n    QWidget     _centralWidget;\n    QHBoxLayout _hLayout;       // \u6c34\u5e73\u5e03\u5c40\n    QLineEdit   _input, _output;// \u6587\u672c\u6846\n    QPushButton _button;        // \u6309\u94ae\n\n    void _onButtonClicked();    // \u6309\u94ae\u70b9\u51fb\u7684\u69fd\u51fd\u6570\n};\n</code></pre> <ol> <li>\u9996\u5148\u5c06\u754c\u9762\u5199\u51fa\u6765\uff1b</li> <li>\u70b9\u51fb\u6309\u94ae\u65f6\uff1a<ol> <li>\u83b7\u53d6\u8f93\u5165\u6587\u672c\u6846\u7684\u5185\u5bb9\uff1b</li> <li>\u68c0\u6d4b\u8f93\u5165\u662f\u5426\u5408\u6cd5\uff1b<ul> <li>\u4e0d\u5408\u6cd5\u5219\u5f39\u51fa\u8b66\u544a\u6846\uff1b</li> </ul> </li> <li>\u5c06\u8f93\u5165\u8f6c\u6362\u4e3a\u5927\u5199\uff1b</li> <li>\u5c06\u8f6c\u6362\u540e\u7684\u5185\u5bb9\u8bbe\u7f6e\u5230\u8f93\u51fa\u6587\u672c\u6846\u4e2d\u3002</li> </ol> </li> </ol> C++<pre><code>#include \"../include/MainWindow.h\"\n\nMainWindow::MainWindow(QWidget *parent)\n    : QMainWindow(parent)\n{\n    setWindowTitle(\"Leg 3 \u6309\u94ae\u4e0e\u6587\u672c\u6846\");\n\n    setCentralWidget(&amp;_centralWidget);  // \u8bbe\u7f6e\u4e2d\u5fc3\u7a97\u53e3\n    _centralWidget.setLayout(&amp;_hLayout);// \u8bbe\u7f6e\u4e2d\u5fc3\u7a97\u53e3\u7684\u5e03\u5c40\n\n    _hLayout.addWidget(&amp;_input);    // \u5c06\u6587\u672c\u6846\u6dfb\u52a0\u5230\u5e03\u5c40\u4e2d\n    _hLayout.addWidget(&amp;_button);   // \u5c06\u6309\u94ae\u6dfb\u52a0\u5230\u5e03\u5c40\u4e2d\n    _hLayout.addWidget(&amp;_output);   // \u5c06\u6587\u672c\u6846\u6dfb\u52a0\u5230\u5e03\u5c40\u4e2d\n\n    _button.setText(\"\u8f6c\u6362\");        // \u8bbe\u7f6e\u6309\u94ae\u7684\u6587\u672c\n    _output.setReadOnly(true);      // \u8bbe\u7f6e\u8f93\u51fa\u6587\u672c\u6846\u4e3a\u53ea\u8bfb\n\n    // \u8fde\u63a5\u6309\u94ae\u7684\u70b9\u51fb\u4fe1\u53f7\u4e0e\u69fd\u51fd\u6570\n    connect(&amp;_button, &amp;QPushButton::clicked, this, &amp;MainWindow::_onButtonClicked);\n}\n\nvoid MainWindow::_onButtonClicked(){\n    QString input = _input.text();  // \u83b7\u53d6\u8f93\u5165\u6587\u672c\u6846\u7684\u5185\u5bb9\n    if (input.isEmpty()){           // \u68c0\u6d4b\u8f93\u5165\u662f\u5426\u4e3a\u7a7a\n        QMessageBox::warning(this, \"\u8b66\u544a\", \"\u8f93\u5165\u4e0d\u80fd\u4e3a\u7a7a\");\n        return;                     // \u5982\u679c\u4e3a\u7a7a\uff0c\u5f39\u51fa\u8b66\u544a\u6846\n    }\n\n    for (auto &amp;c : input){          // \u68c0\u6d4b\u8f93\u5165\u662f\u5426\u662f\u5c0f\u5199\u5b57\u6bcd\n        if (c &lt; 'a' || c &gt; 'z'){    // \u5982\u679c\u4e0d\u662f\u5c0f\u5199\u5b57\u6bcd\uff0c\u5f39\u51fa\u8b66\u544a\u6846\n            QMessageBox::warning(this, \"\u8b66\u544a\", \"\u8f93\u5165\u5fc5\u987b\u662f\u5c0f\u5199\u5b57\u6bcd\");\n            return;\n        }\n    }\n\n    QString output = input.toUpper();   // \u5c06\u8f93\u5165\u8f6c\u6362\u4e3a\u5927\u5199\n    _output.setText(output);            // \u5c06\u8f6c\u6362\u540e\u7684\u5185\u5bb9\u8bbe\u7f6e\u5230\u8f93\u51fa\u6587\u672c\u6846\u4e2d\n}\n\nMainWindow::~MainWindow(){}\n</code></pre> <p></p> <p>\u6e90\u4ee3\u7801\u53ca\u53c2\u89c1\uff1aLeg3</p>"},{"location":"src/cpp/qt/#mission-1","title":"Mission 1 \u8ba1\u7b97\u5668 \ud83e\uddee","text":"<p>\u5728\u6b64\u8282\u4e4b\u524d\uff0c\u9700\u8981\u518d\u5b8c\u6210\u7684\u51e0\u4e2a\u7b80\u5355\u4efb\u52a1\uff1a </p> <ol> <li> <p>\u591a\u884c\u7684\u5927\u5199\u8f6c\u5c0f\u5199</p> <ul> <li>\u5de6\u8f93\u5165\uff0c\u4e2d\u6309\u94ae\uff0c\u53f3\u8f93\u51fa</li> </ul> </li> <li> <p>\u5341\u8fdb\u5236\u8f6c\u4e8c/\u516b\u8fdb\u5236</p> <ul> <li>\u4e00\u4e2a\u6309\u94ae\u5c06\u5341\u8fdb\u5236\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236</li> <li>\u4e00\u4e2a\u6309\u94ae\u5c06\u5341\u8fdb\u5236\u8f6c\u6362\u4e3a\u516b\u8fdb\u5236</li> </ul> </li> <li> <p>\u5bc6\u7801\u5f3a\u5ea6\u68c0\u67e5</p> <ul> <li>\u957f\u5ea6\u9700\u8981\u8d85\u8fc7 8 \u4f4d\uff0c\u5305\u542b\u5927\u5199\uff0c\u5c0f\u5199\uff0c\u6570\u5b57\uff0c\u7279\u6b8a\u5b57\u7b26</li> <li>\u68c0\u67e5\u7ed3\u679c\u901a\u8fc7\u5f39\u51fa\u6846\u663e\u793a       <code>QMessageBox::information(this, \"title\", \"text\");</code></li> </ul> </li> <li> <p>\u6a21\u62df\u767b\u5f55</p> <ul> <li>\u5148\u6ce8\u518c\uff0c\u518d\u767b\u5f55</li> <li>\u6ce8\u518c\u540e\u7684\u4fe1\u606f\uff0c\u4fdd\u5b58\u5728\u4efb\u610f <code>.txt</code> \u4e2d</li> <li>\u7a0b\u5e8f\u91cd\u65b0\u542f\u52a8\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u767b\u5f55</li> </ul> </li> </ol> <p>\u8bbe\u8ba1\u4e00\u4e2a\u7b80\u5355\u7684\u8ba1\u7b97\u5668\uff0c\u8981\u6c42\uff1a</p> <ol> <li>\u8f93\u5165\u6846\uff1a\u7528\u4e8e\u8f93\u5165\u6570\u5b57\u548c\u8fd0\u7b97\u7b26\uff1b</li> <li>\u8f93\u51fa\u6846\uff1a\u7528\u4e8e\u663e\u793a\u7ed3\u679c\uff1b</li> <li>\u64cd\u4f5c\u7b26\uff1a<code>+</code>\u3001<code>-</code>\u3001<code>*</code>\u3001<code>/</code>\uff1b</li> <li>\u6570\u5b57\uff1a<code>0</code>\u3001<code>1</code>\u3001<code>2</code>\u3001<code>3</code>\u3001<code>4</code>\u3001<code>5</code>\u3001<code>6</code>\u3001<code>7</code>\u3001<code>8</code>\u3001<code>9</code>\uff1b</li> <li>\u5220\u9664\uff1a<code>D</code>\uff1b</li> <li>\u6e05\u7a7a\uff1a<code>C</code>\u3002</li> </ol> <p></p> <p>\u6e90\u4ee3\u7801\u53ca\u53c2\u89c1\uff1aMission1</p> <p>\u6b64\u4ee3\u7801\u4ec5\u4f9b\u53c2\u8003\uff0c\u4e3a\u4f7f\u5f97\u4ee3\u7801\u66f4\u52a0\u7b80\u6d01\uff1a 1. \u6ca1\u6709\u8fdb\u884c\u9519\u8bef\u5904\u7406\u3002 2. \u4e0d\u652f\u6301\u9ad8\u7cbe\u5ea6\u3002 3. \u4e0d\u652f\u6301\u5c0f\u6570\u3002  ...</p> <p>\u540c\u5b66\u4eec\u53ef\u4ee5\u81ea\u884c\u5bf9 <code>calc.h</code> \u8fdb\u884c\u4fee\u6539\uff0c\u4f7f\u5f97\u5176\u652f\u6301\u66f4\u591a\u7684\u8fd0\u7b97\u7b26\u548c\u66f4\u9ad8\u7684\u7cbe\u5ea6\u3002</p> <p></p>"},{"location":"src/cpp/qt/#leg-4","title":"Leg 4 \u5355\u9009\u3001\u591a\u9009","text":""},{"location":"src/cpp/qt/#_6","title":"\u5355\u9009","text":"<p>\u5728\u4e00\u7ec4\u5355\u9009\u6846\u4e2d\uff0c\u53ea\u80fd\u9009\u62e9\u4e00\u4e2a\u3002</p> <p>\u5355\u9009\u6309\u94ae <code>QRadioButton</code></p> C++<pre><code>// MainWindow.h\nprivate:\n    QButtonGroup    *_one_group;        // \u5355\u9009\u6309\u94ae\u7ec4\n    QRadioButton    *_one_A;            // \u5355\u9009\u6309\u94ae\n    QRadioButton    *_one_B;\n    QRadioButton    *_one_C;\n\n    QLabel          *_one_res;          // \u5b58\u653e\u5355\u9009\u9009\u62e9\u7ed3\u679c\n    void            _one_clicked();     // \u5355\u9009\u6309\u94ae\u7ec4\u7684\u9009\u62e9\u7ed3\u679c\n</code></pre> C++<pre><code>// MainWindow.cpp\n// \u8bbe\u7f6e\u5355\u9009\u6309\u94ae\u7684\u6587\u672c\n_one_A-&gt;setText(\"\u9a6c\u514b\u601d\");\n_one_B-&gt;setText(\"\u5217\u5b81\");\n_one_C-&gt;setText(\"\u6bdb\u6cfd\u4e1c\");\n// \u5c06\u5355\u9009\u6309\u94ae\u6dfb\u52a0\u5230\u5782\u76f4\u5e03\u5c40\n_vLayout-&gt;addWidget(_one_A);\n_vLayout-&gt;addWidget(_one_B);\n_vLayout-&gt;addWidget(_one_C);\n// \u5c06\u5355\u9009\u6309\u94ae\u6dfb\u52a0\u5230\u5355\u9009\u6309\u94ae\u7ec4\n_one_group-&gt;addButton(_one_A);\n_one_group-&gt;addButton(_one_B);\n_one_group-&gt;addButton(_one_C);\n// \u8bbe\u7f6e\u5355\u9009\u6309\u94ae\u7ec4\u7684\u9009\u62e9\u7ed3\u679c\nconnect(_one_group, &amp;QButtonGroup::buttonClicked, this, MainWindow::_one_clicked);\n</code></pre> C++<pre><code>// MainWindow.cpp\nvoid MainWindow::_one_clicked(){\n    if(_one_A-&gt;isChecked()){\n        _one_res-&gt;setPixmap(QPixmap(\"./img/mks.jpg\"));\n    } else if(_one_B-&gt;isChecked()){\n        _one_res-&gt;setPixmap(QPixmap(\"./img/ln.jpg\"));\n    } else if(_one_C-&gt;isChecked()){\n        _one_res-&gt;setPixmap(QPixmap(\"./img/mzd.jpg\"));\n    }\n}\n</code></pre>"},{"location":"src/cpp/qt/#_7","title":"\u591a\u9009","text":"<p>\u7ed9\u5b9a\u591a\u4e2a\u9009\u9879\uff0c\u53ef\u4ee5\u9009\u62e9\u591a\u4e2a\u3002</p> <p>\u590d\u9009\u6309\u94ae <code>QCheckBox</code></p> C++<pre><code>// MainWindow.h\nQVBoxLayout     *_vLayout2;         // \u5782\u76f4\u5e03\u5c40\n\nQButtonGroup    *_two_group;        // \u590d\u9009\u6309\u94ae\u7ec4\nQCheckBox       *_two;              // \u590d\u9009\u6309\u94ae\n\nQLabel          *_two_res;          // \u5b58\u653e\u590d\u9009\u9009\u62e9\u7ed3\u679c\nvoid            _two_clicked();     // \u590d\u9009\u6309\u94ae\u7ec4\u7684\u9009\u62e9\u7ed3\u679c\n</code></pre> C++<pre><code>// \u8bbe\u7f6e\u4e3a\u4e0d\u4e92\u65a5\n_two_group-&gt;setExclusive(false);\nfor(int i = 0; i &lt; 4; i++){\n    _vLayout2-&gt;addWidget(&amp;_two[i]); // \u5c06\u590d\u9009\u6309\u94ae\u6dfb\u52a0\u5230\u5782\u76f4\u5e03\u5c40\n    _two_group-&gt;addButton(&amp;_two[i]);// \u5c06\u590d\u9009\u6309\u94ae\u6dfb\u52a0\u5230\u590d\u9009\u6309\u94ae\u7ec4\n}\n// \u8bbe\u7f6e\u590d\u9009\u6309\u94ae\u7684\u6587\u672c\n_two[0].setText(\"\u62ab\u8428\");\n_two[1].setText(\"\u6c49\u5821\");\n_two[2].setText(\"\u85af\u6761\");\n_two[3].setText(\"\u70ed\u72d7\");\n// \u8bbe\u7f6e\u590d\u9009\u6309\u94ae\u7ec4\u7684\u9009\u62e9\u7ed3\u679c\nconnect(_two_group, &amp;QButtonGroup::buttonClicked, this, MainWindow::_two_clicked);\n</code></pre> C++<pre><code>// MainWindow.cpp\nvoid MainWindow::_two_clicked(){\n    QString res = \"\";\n    if(_two[0].isChecked()){\n        res += \"\u62ab\u8428 \";\n    }\n    if(_two[1].isChecked()){\n        res += \"\u6c49\u5821 \";\n    }\n    if(_two[2].isChecked()){\n        res += \"\u85af\u6761 \";\n    }\n    if(_two[3].isChecked()){\n        res += \"\u70ed\u72d7 \";\n    }\n    _two_res-&gt;setText(res);\n}\n</code></pre> <p></p>"},{"location":"src/cpp/qt/#leg-5","title":"Leg 5 \u83dc\u5355\u680f\u4e0e\u5feb\u6377\u952e","text":"<p>\u83dc\u5355\u680f\u662f\u4e3b\u7a97\u53e3\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u5b83\u4eec\u662f\u7531 <code>QMainWindow</code> \u7c7b\u63d0\u4f9b\u7684\u3002 \u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u5728\u83dc\u5355\u680f\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u83dc\u5355\uff0c\u7136\u540e\u5728\u83dc\u5355\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u52a8\u4f5c\u3002</p> C++<pre><code>// MainWindow.h\n#pragma once\n\n#include &lt;QMainWindow&gt;\n#include &lt;QLayout&gt;\n#include &lt;QMenuBar&gt;\n#include &lt;QMenu&gt;\n#include &lt;QAction&gt;\n#include &lt;QMessageBox&gt;\n\nclass MainWindow : public QMainWindow\n{\n    Q_OBJECT\npublic:\n    MainWindow(QWidget *parent = nullptr); \n    ~MainWindow();\nprivate:\n    QWidget     *_centralWidget;\n    QMenuBar    *_menuBar;   // \u83dc\u5355\u680f\n\n    QMenu       *_file;      // \u6587\u4ef6\n        QAction     *_new;      // \u65b0\u5efa\n        QAction     *_open;     // \u6253\u5f00\n\n    QMenu       *_help;      // \u5de5\u5177\n        QAction     *_about;    // \u5173\u4e8e\n\n    void newFile();\n    void openFile();\n    void about();\n};\n</code></pre> C++<pre><code>// MainWindow.cpp\n#include \"../include/MainWindow.h\"\n\nMainWindow::MainWindow(QWidget *parent)\n    : QMainWindow(parent)\n{   \n    _centralWidget  = new QWidget();\n    _menuBar        = new QMenuBar();\n    _file           = new QMenu();\n        _new        = new QAction();\n        _open       = new QAction();\n    _help           = new QMenu();\n        _about      = new QAction();\n\n    setWindowTitle(\"Leg 4 \u83dc\u5355\u4e0e\u5feb\u6377\u952e\");\n    setCentralWidget(_centralWidget);   // \u8bbe\u7f6e\u4e2d\u5fc3\u7a97\u53e3\n    setMenuBar(_menuBar);               // \u8bbe\u7f6e\u83dc\u5355\u680f\n\n    _file = _menuBar-&gt;addMenu(\"\u6587\u4ef6\");  // \u6dfb\u52a0 \"\u6587\u4ef6\u83dc\u5355\" \u5230 \"\u83dc\u5355\u680f\" \u4e2d\n    _new-&gt;setText(\"\u65b0\u5efa\");              // \u8bbe\u7f6e \"new\u52a8\u4f5c\" \u7684\u6587\u672c\n    _file-&gt;addAction(_new);             // \u5c06 \"new\u52a8\u4f5c\" \u6dfb\u52a0\u5230 \"\u6587\u4ef6\u83dc\u5355\" \u4e2d\n    _open-&gt;setText(\"\u6253\u5f00\");\n    _file-&gt;addAction(_open);\n\n    _help = _menuBar-&gt;addMenu(\"\u5e2e\u52a9\");\n    _about-&gt;setText(\"\u5173\u4e8e\");\n    _help-&gt;addAction(_about);\n\n    connect(_new, &amp;QAction::triggered, this, &amp;MainWindow::newFile);\n    connect(_open, &amp;QAction::triggered, this, &amp;MainWindow::openFile);\n    connect(_about, &amp;QAction::triggered, this, &amp;MainWindow::about);\n}\n\nvoid MainWindow::newFile(){\n    QMessageBox::information(this, \"\u65b0\u5efa\", \"\u65b0\u5efa\u6587\u4ef6\");\n}\n\nvoid MainWindow::openFile(){\n    QMessageBox::information(this, \"\u6253\u5f00\", \"\u6253\u5f00\u6587\u4ef6\");\n}\n\nvoid MainWindow::about(){\n    QMessageBox::information(this, \"\u5173\u4e8e\", \"Leg 4 \u83dc\u5355\u4e0e\u5feb\u6377\u952e\");\n}\n\nMainWindow::~MainWindow(){\n    delete _centralWidget;\n    delete _menuBar;\n    delete _file;\n    delete _new;\n    delete _open;\n    delete _help;\n    delete _about;\n}\n</code></pre> <p>\u4e00\u822c\u7684\uff0c\u6211\u4eec\u4f1a\u5728\u83dc\u5355\u680f\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u5feb\u6377\u952e\uff0c\u8fd9\u6837\u53ef\u4ee5\u63d0\u9ad8\u7528\u6237\u7684\u4f7f\u7528\u6548\u7387\u3002</p> C++<pre><code>// MainWindow.h\n// ...\nprivate:\n    QAction *_new, *_open, *_about;\n</code></pre> C++<pre><code>// MainWindow.cpp\n// ...\n_new-&gt;setShortcut(QKeySequence(\"Ctrl+N\"));\n_open-&gt;setShortcut(QKeySequence(\"Ctrl+O\"));\n_about-&gt;setShortcut(QKeySequence(\"Ctrl+A\"));\n</code></pre> <p>\u73b0\u5728\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u5feb\u6377\u952e\u6765\u89e6\u53d1\u83dc\u5355\u680f\u4e2d\u7684\u52a8\u4f5c\u4e86\u3002</p> <p></p>"},{"location":"src/cpp/qt/#leg-6","title":"Leg 6 \u5217\u8868","text":"<p>\u5217\u8868\uff0c\u663e\u793a\u4e00\u7ec4\u6570\u636e\uff0c\u5176\u548c\u9009\u62e9\u63a7\u4ef6\u5927\u540c\u5c0f\u5f02\u3002</p> <p>\u5217\u8868\u63a7\u4ef6 <code>QListWidget</code></p> C++<pre><code>// MainWindow.h\n#pragma once\n\n#include &lt;QMainWindow&gt;\n#include &lt;QLayout&gt;\n#include &lt;QListWidget&gt;\n#include &lt;QLineEdit&gt;\n\nclass MainWindow : public QMainWindow{\n    Q_OBJECT\npublic:\n\n    MainWindow(QWidget *parent = nullptr); \n    ~MainWindow();\nprivate:\n\n    void _onSelect(QListWidgetItem* item);\n\n    QWidget*        _centralWidget; // \u4e2d\u5fc3\u7a97\u53e3\n    QHBoxLayout*    _layout;        // \u6c34\u5e73\u5e03\u5c40\n    QListWidget*    _listWidget;    // \u5217\u8868\n    QLineEdit*      _lineEdit;      // \u6587\u672c\u6846\n};\n</code></pre> C++<pre><code>// MainWindow.cpp\n#include \"../include/MainWindow.h\"\n\nMainWindow::MainWindow(QWidget *parent)\n    : QMainWindow(parent)\n{\n    this -&gt; setWindowTitle(\"Leg 6 \u5217\u8868\");\n    _centralWidget  = new QWidget();\n    _layout         = new QHBoxLayout();\n    _listWidget     = new QListWidget();\n    _lineEdit       = new QLineEdit();\n\n    setCentralWidget(_centralWidget);\n    _centralWidget -&gt; setLayout(_layout);\n    _layout -&gt; addWidget(_listWidget);\n    _layout -&gt; addWidget(_lineEdit);\n\n    _lineEdit -&gt; setReadOnly(true);\n\n    _listWidget -&gt; addItem(\"\u9c7c\u9999\u8089\u4e1d\");\n    _listWidget -&gt; addItem(\"\u5bab\u4fdd\u9e21\u4e01\");\n    _listWidget -&gt; addItem(\"\u7cd6\u918b\u6392\u9aa8\");\n\n    connect(_listWidget, &amp;QListWidget::itemClicked, this, &amp;MainWindow::_onSelect);\n}\n\nMainWindow::~MainWindow(){\n    delete _centralWidget;\n    delete _layout;\n    delete _listWidget;\n    delete _lineEdit;\n}\n\nvoid MainWindow::_onSelect(QListWidgetItem* item){\n    _lineEdit -&gt; setText(item -&gt; text());\n}\n</code></pre> <p></p>"},{"location":"src/cpp/qt/#leg-7","title":"Leg 7 \u4e0b\u62c9\u5217\u8868","text":"<p>\u5728\u82e5\u5e72\u9009\u9879\u4e2d\u9009\u62e9\u4e00\u4e2a\u3002</p> <p>\u4e0b\u62c9\u5217\u8868 <code>QComboBox</code></p> C++<pre><code>// MainWindow.h\n#pragma once\n\n#include &lt;QMainWindow&gt;\n#include &lt;QLayout&gt;\n#include &lt;QComboBox&gt;\n#include &lt;QPushButton&gt;\n#include &lt;QMessageBox&gt;\n#include &lt;QCompleter&gt;\n\nclass MainWindow : public QMainWindow{\n    Q_OBJECT\npublic:\n    MainWindow(QWidget *parent = nullptr); \n    ~MainWindow();\nprivate:\n    QWidget     _centralWidget; // \u4e2d\u5fc3\u7a97\u53e3\n    QHBoxLayout _layout;        // \u6c34\u5e73\u5e03\u5c40\n    QComboBox   _comboBox;      // \u4e0b\u62c9\u6846\n    QPushButton _button;        // \u6309\u94ae\n    QMessageBox _messageBox;    // \u6d88\u606f\u6846\n};\n</code></pre> C++<pre><code>// MainWindow.cpp\n#include \"../include/MainWindow.h\"\n\nMainWindow::MainWindow(QWidget *parent)\n    : QMainWindow(parent)\n{\n    this -&gt; setWindowTitle(\"Leg 7 \u4e0b\u62c9\u5217\u8868\");\n    this -&gt; setCentralWidget(&amp;_centralWidget);  // \u8bbe\u7f6e\u4e2d\u5fc3\u7a97\u53e3\n    _centralWidget.setLayout(&amp;_layout);         // \u8bbe\u7f6e\u4e2d\u5fc3\u7a97\u53e3\u7684\u5e03\u5c40\n    _layout.addWidget(&amp;_comboBox);              // \u5c06\u4e0b\u62c9\u6846\u6dfb\u52a0\u5230\u5e03\u5c40\u4e2d\n    _layout.addWidget(&amp;_button);                // \u5c06\u6309\u94ae\u6dfb\u52a0\u5230\u5e03\u5c40\u4e2d\n\n    _comboBox.addItem(\"\u9c7c\u9999\u8089\u4e1d\");               // \u6dfb\u52a0\u4e0b\u62c9\u6846\u7684\u9009\u9879\n    _comboBox.addItem(\"\u5bab\u4fdd\u9e21\u4e01\");\n    _comboBox.addItem(\"\u7cd6\u918b\u6392\u9aa8\");\n\n    _button.setText(\"\u786e\u5b9a\");                    // \u8bbe\u7f6e\u6309\u94ae\u7684\u6587\u672c\n\n    connect(&amp;_button, &amp;QPushButton::clicked, this, [this](){\n        QMessageBox::information(nullptr, \"\u63d0\u793a\", \"\u4f60\u9009\u62e9\u4e86\uff1a\" + _comboBox.currentText());\n    });\n}\n\nMainWindow::~MainWindow(){}\n</code></pre> <p></p>"},{"location":"src/cpp/qt/#mission-2","title":"Mission 2 \u6a21\u7cca\u9009\u62e9 \ud83e\uddfe","text":"<p>\u5728\u4e0b\u62c9\u5217\u8868\u4e2d\uff0c\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4e0b\u62c9\u5217\u8868\u4e2d\u7684\u9009\u9879\u4f1a\u6839\u636e\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u6a21\u7cca\u5339\u914d\uff0c\u7136\u540e\u5c06\u5339\u914d\u7684\u9009\u9879\u663e\u793a\u51fa\u6765\u3002</p> C++<pre><code>#pragma once\n\n#include &lt;QMainWindow&gt;\n#include &lt;QLayout&gt;\n#include &lt;QComboBox&gt;\n#include &lt;QPushButton&gt;\n#include &lt;QMessageBox&gt;\n#include &lt;QCompleter&gt;\n\nclass MainWindow : public QMainWindow{\n    Q_OBJECT\npublic:\n    MainWindow(QWidget *parent = nullptr); \n    ~MainWindow();\nprivate:\n    QWidget     _centralWidget; // \u4e2d\u5fc3\u7a97\u53e3\n    QHBoxLayout _layout;        // \u6c34\u5e73\u5e03\u5c40\n    QComboBox   _comboBox;      // \u4e0b\u62c9\u6846\n    QPushButton _button;        // \u6309\u94ae\n    QMessageBox _messageBox;    // \u6d88\u606f\u6846\n};\n</code></pre> C++<pre><code>// MainWindow.cpp\n#include \"../include/MainWindow.h\"\n#include &lt;fstream&gt;\n\nMainWindow::MainWindow(QWidget *parent)\n    : QMainWindow(parent)\n{\n    this -&gt; setWindowTitle(\"Mission2 \u6a21\u7cca\u641c\u7d22\");\n    this -&gt; setCentralWidget(&amp;_centralWidget);  // \u8bbe\u7f6e\u4e2d\u5fc3\u7a97\u53e3\n    _centralWidget.setLayout(&amp;_layout);         // \u8bbe\u7f6e\u4e2d\u5fc3\u7a97\u53e3\u7684\u5e03\u5c40\n    _layout.addWidget(&amp;_comboBox);              // \u5c06\u4e0b\u62c9\u6846\u6dfb\u52a0\u5230\u5e03\u5c40\u4e2d\n    _layout.addWidget(&amp;_button);                // \u5c06\u6309\u94ae\u6dfb\u52a0\u5230\u5e03\u5c40\u4e2d\n\n    // \u8bfb\u53d6\u6587\u4ef6\n    std::ifstream ifs(\"data.txt\");\n    std::string line;\n    while (std::getline(ifs, line))\n        _comboBox.addItem(QString::fromStdString(line));\n\n    // \u8bbe\u7f6e\u4e0b\u62c9\u6846\u53ef\u7f16\u8f91\n    _comboBox.setEditable(true);\n    // \u8bbe\u7f6e\u4e0b\u62c9\u6846\u7684\u6a21\u7cca\u641c\u7d22\n    _comboBox.setCompleter(new QCompleter(_comboBox.model()));\n\n\n    // \u8bbe\u7f6e\u6309\u94ae\u7684\u6587\u672c\n    _button.setText(\"\u786e\u5b9a\");\n\n    // \u8bbe\u7f6e\u6309\u94ae\u7684\u70b9\u51fb\u4e8b\u4ef6\n    connect(&amp;_button, &amp;QPushButton::clicked, this, [this](){\n        QMessageBox::information(nullptr, \"\u63d0\u793a\", \"\u4f60\u9009\u62e9\u4e86\uff1a\" + _comboBox.currentText());\n    });\n}\n\nMainWindow::~MainWindow(){}\n</code></pre> <p></p>"},{"location":"src/cpp/qt/#leg-8","title":"Leg 8 \u8fdb\u5ea6\u6761","text":"<p>\u8fdb\u5ea6\u6761 <code>QProgressBar</code></p> C++<pre><code>// MainWindow.h\n#pragma once\n\n#include &lt;QMainWindow&gt;\n#include &lt;QLayout&gt;\n#include &lt;QProgressBar&gt;\n#include &lt;QPushButton&gt;\n#include &lt;QMessageBox&gt;\n\nclass MainWindow : public QMainWindow{\n    Q_OBJECT\npublic:\n    MainWindow(QWidget *parent = nullptr); \n    ~MainWindow();\nprivate:\n    QWidget         _centralWidget; // \u4e2d\u5fc3\u7a97\u53e3\n    QHBoxLayout     _layout;        // \u6c34\u5e73\u5e03\u5c40\n    QProgressBar    _progressBar;   // \u8fdb\u5ea6\u6761\n    QPushButton     _button;        // \u6309\u94ae\n};\n</code></pre> C++<pre><code>// MainWindow.cpp\n#include \"../include/MainWindow.h\"\n\nMainWindow::MainWindow(QWidget *parent)\n    : QMainWindow(parent)\n{\n    this -&gt; setWindowTitle(\"Leg8 \u8fdb\u5ea6\u6761\");\n    this -&gt; setCentralWidget(&amp;_centralWidget);  // \u8bbe\u7f6e\u4e2d\u5fc3\u7a97\u53e3\n    _centralWidget.setLayout(&amp;_layout);         // \u8bbe\u7f6e\u4e2d\u5fc3\u7a97\u53e3\u7684\u5e03\u5c40\n    _layout.addWidget(&amp;_progressBar);           // \u5c06\u8fdb\u5ea6\u6761\u6dfb\u52a0\u5230\u5e03\u5c40\u4e2d\n    _layout.addWidget(&amp;_button);                // \u5c06\u6309\u94ae\u6dfb\u52a0\u5230\u5e03\u5c40\u4e2d\n\n    // \u8bbe\u7f6e\u8fdb\u5ea6\u6761\u7684\u8303\u56f4\n    _progressBar.setRange(0, 100);\n    // \u8bbe\u7f6e\u8fdb\u5ea6\u6761\u7684\u5f53\u524d\u503c\n    _progressBar.setValue(0);\n\n    // \u8bbe\u7f6e\u6309\u94ae\u7684\u6587\u672c\n    _button.setText(\"\u70b9\u51fb\u589e\u52a0\u8fdb\u5ea6\u6761\u7684\u503c\");\n\n    // \u901a\u8fc7\u7a7a\u683c\u952e\u6765\u63a7\u5236\u8fdb\u5ea6\u6761\u7684\u589e\u957f\n    connect(&amp;_button, &amp;QPushButton::clicked, &amp;_progressBar, [&amp;](){\n        if(_progressBar.value() == 100)\n            QMessageBox::information(this, \"\u63d0\u793a\", \"\u8fdb\u5ea6\u6761\u5df2\u7ecf\u6ee1\u4e86\");\n        _progressBar.setValue(_progressBar.value() + 1);\n    });\n}\n\nMainWindow::~MainWindow(){}\n</code></pre> <p></p>"},{"location":"src/cpp/qt/#leg-9","title":"Leg 9 \u6ed1\u5757","text":"<p>\u6ed1\u5757 <code>QSlider</code></p> C++<pre><code>#pragma once\n\n#include &lt;QMainWindow&gt;\n#include &lt;QLayout&gt;\n#include &lt;QSlider&gt;\n#include &lt;QLabel&gt;\n\nclass MainWindow : public QMainWindow{\n    Q_OBJECT\npublic:\n    MainWindow(QWidget *parent = nullptr); \n    ~MainWindow();\nprivate:\n    QWidget         _centralWidget; // \u4e2d\u5fc3\u7a97\u53e3\n    QHBoxLayout     _layout;        // \u6c34\u5e73\u5e03\u5c40\n    QSlider         _slider;        // \u6ed1\u52a8\u6761\n    QLabel          _label;         // \u6807\u7b7e\n};\n</code></pre> C++<pre><code>#include \"../include/MainWindow.h\"\n\nMainWindow::MainWindow(QWidget *parent)\n    : QMainWindow(parent)\n{\n    this -&gt; setWindowTitle(\"Leg9 \u6ed1\u52a8\u6761\");\n    this -&gt; setCentralWidget(&amp;_centralWidget);  // \u8bbe\u7f6e\u4e2d\u5fc3\u7a97\u53e3\n    _centralWidget.setLayout(&amp;_layout);         // \u8bbe\u7f6e\u4e2d\u5fc3\u7a97\u53e3\u7684\u5e03\u5c40\n\n    _layout.addWidget(&amp;_slider);        // \u5c06\u6ed1\u52a8\u6761\u6dfb\u52a0\u5230\u5e03\u5c40\u4e2d\n    _layout.addWidget(&amp;_label);         // \u5c06\u6807\u7b7e\u6dfb\u52a0\u5230\u5e03\u5c40\u4e2d\n\n    _slider.setRange(0, 99);   // \u8bbe\u7f6e\u6ed1\u52a8\u6761\u7684\u8303\u56f4\n    _slider.setOrientation(Qt::Horizontal); // \u8bbe\u7f6e\u6ed1\u52a8\u6761\u7684\u65b9\u5411\n    _slider.setValue(49);       // \u8bbe\u7f6e\u6ed1\u52a8\u6761\u7684\u5f53\u524d\u503c\n\n    _label.setText(\"50\");       // \u8bbe\u7f6e\u6807\u7b7e\u7684\u6587\u672c\n\n    // \u8fde\u63a5\u4fe1\u53f7\u548c\u69fd\n    connect(&amp;_slider, &amp;QSlider::valueChanged, this, [=](int value){\n        _label.setText(QString::number(value)); // \u5c06\u6ed1\u52a8\u6761\u7684\u503c\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u5e76\u8bbe\u7f6e\u4e3a\u6807\u7b7e\u7684\u6587\u672c\n    });\n}\n\nMainWindow::~MainWindow(){}\n</code></pre> <p></p>"},{"location":"src/cpp/qt/#leg-10","title":"Leg 10 \u8c03\u6574\u63a7\u4ef6\u5927\u5c0f\u4e0e\u4f4d\u7f6e","text":"<p>\u8c03\u6574\u63a7\u4ef6\u5927\u5c0f\u4e0e\u4f4d\u7f6e <code>setGeometry()</code></p> C++<pre><code>// MainWindow.h\n#pragma once\n\n#include &lt;QMainWindow&gt;\n#include &lt;QLayout&gt;\n#include &lt;QPushButton&gt;\n#include &lt;QSlider&gt;\n#include &lt;QLabel&gt;\n\nclass MainWindow : public QMainWindow{\n    Q_OBJECT\npublic:\n    MainWindow(QWidget *parent = nullptr); \n    ~MainWindow();\nprivate:\n    bool ck(int x, int y);          // \u68c0\u67e5\u662f\u5426\u8d8a\u754c\n    QWidget         _centralWidget; // \u4e2d\u5fc3\u7a97\u53e3\n    QPushButton     _button_up,\n                    _button_down,\n                    _button_left,\n                    _button_right;  // \u6309\u94ae \u4e0a\u4e0b\u5de6\u53f3\n    QSlider         _slider;        // \u6ed1\u52a8\u6761\n    QLabel          _label;         // \u56fe\u7247\n};\n</code></pre> C++<pre><code>// MainWindow.cpp\n#include \"../include/MainWindow.h\"\n\nMainWindow::MainWindow(QWidget *parent)\n    : QMainWindow(parent)\n{\n    this -&gt; setWindowTitle(\"leg10 \u8bbe\u7f6e\u5927\u5c0f\");\n    this -&gt; setCentralWidget(&amp;_centralWidget);  // \u8bbe\u7f6e\u4e2d\u5fc3\u7a97\u53e3\n    this -&gt; setFixedSize(1080, 720);            // \u8bbe\u7f6e\u7a97\u53e3\u5927\u5c0f\uff0c\u4e0d\u53ef\u8c03\u6574\n\n    // \u8bbe\u7f6e\u6309\u94ae\n    _button_up.setParent   (&amp;_centralWidget);\n    _button_down.setParent (&amp;_centralWidget);\n    _button_left.setParent (&amp;_centralWidget);\n    _button_right.setParent(&amp;_centralWidget);\n\n    _button_up.setText   (\"up\");    \n    _button_down.setText (\"down\");  \n    _button_left.setText (\"left\");  \n    _button_right.setText(\"right\"); \n\n    _button_up.setGeometry   (100, 0, 100, 100);\n    _button_down.setGeometry (100, 100, 100, 100);\n    _button_left.setGeometry (0,   100, 100, 100);\n    _button_right.setGeometry(200, 100, 100, 100);\n\n    // \u8bbe\u7f6e\u6ed1\u52a8\u6761\n    _slider.setParent(&amp;_centralWidget);\n    _slider.setOrientation(Qt::Horizontal);\n    _slider.setRange(100, 300);\n    _slider.setValue(200);\n    _slider.setGeometry(0, 200, 300, 100);\n\n    // \u8bbe\u7f6e\u56fe\u7247\n    _label.setParent(&amp;_centralWidget);\n\n    QPixmap pixmap(\"Leg10.png\");    // \u8bfb\u53d6\u56fe\u7247 \u4fdd\u6301\u957f\u5bbd\u6bd4\u4f8b\u7f29\u653e \u56fe\u7247\u5e73\u6ed1\u5904\u7406\n    pixmap = pixmap.scaled(QSize(200, 200), Qt::KeepAspectRatio, Qt::SmoothTransformation);\n    _label.setPixmap(pixmap);\n    _label.setGeometry(0, 300, 200, 200);\n\n    connect(&amp;_button_up, &amp;QPushButton::clicked, [&amp;](){\n        if(!ck(_label.x(), _label.y() - 10)) return;\n        _label.move(_label.x(), _label.y() - 10);\n    });\n\n    connect(&amp;_button_down, &amp;QPushButton::clicked, [&amp;](){\n        if(!ck(_label.x(), _label.y() + 10)) return;\n        _label.move(_label.x(), _label.y() + 10);\n    });\n    connect(&amp;_button_left, &amp;QPushButton::clicked, [&amp;](){\n        if(!ck(_label.x() - 10, _label.y())) return;\n        _label.move(_label.x() - 10, _label.y());\n    });\n    connect(&amp;_button_right, &amp;QPushButton::clicked, [&amp;](){\n        if(!ck(_label.x() + 10, _label.y())) return;\n        _label.move(_label.x() + 10, _label.y());\n    });\n\n    connect(&amp;_slider, &amp;QSlider::valueChanged, [&amp;](int value){\n        QPixmap pixmap(\"Leg10.png\");    // \u8bfb\u53d6\u56fe\u7247 \u4fdd\u6301\u957f\u5bbd\u6bd4\u4f8b\u7f29\u653e \u56fe\u7247\u5e73\u6ed1\u5904\u7406\n        pixmap = pixmap.scaled(QSize(value, value), Qt::KeepAspectRatio, Qt::SmoothTransformation);\n        _label.setPixmap(pixmap);\n        _label.setGeometry(_label.x(), _label.y(), value, value);\n    });\n}\n\nbool MainWindow::ck(int x, int y){\n    if(x &lt; 0 || x &gt; 1080 || y &lt; 0 || y &gt; 720) return false;\n    if(x &lt; 300 &amp;&amp; y &lt; 300) return false;\n    return true;\n}\n\nMainWindow::~MainWindow(){}\n</code></pre> <p></p>"},{"location":"src/cpp/qt/#leg-11","title":"Leg 11 \u6ed1\u52a8\u7a97\u53e3\u4e0e\u5806\u53e0\u7a97\u53e3","text":"<p>\u6ed1\u52a8\u7a97\u53e3 <code>QScrollArea</code></p> \u6ed1\u52a8\u7a97\u53e3\u7b80\u5355\u5b9e\u4f8b code C++<pre><code>// MainWindow.h\n#pragma once\n\n#include &lt;QMainWindow&gt;\n#include &lt;QLayout&gt;\n#include &lt;QScrollArea&gt;\n#include &lt;QLabel&gt;\n\nclass MainWindow : public QMainWindow{\n    Q_OBJECT\npublic:\n    MainWindow(QWidget *parent = nullptr); \n    ~MainWindow();\nprivate:\n    QWidget         _centralWidget;\n    QHBoxLayout     _centralLayout;\n\n    QWidget         _contentWidget;\n    QVBoxLayout     _contentLayout;\n\n    QScrollArea     _scrollArea;\n};\n</code></pre> C++<pre><code>// MainWindow.cpp\n#include \"../include/MainWindow.h\"\n\nMainWindow::MainWindow(QWidget *parent)\n    : QMainWindow(parent)\n{\n    this -&gt; setWindowTitle(\"Hello Qt!\");\n    this -&gt; setCentralWidget(&amp;_centralWidget);\n    _centralWidget.setLayout(&amp;_centralLayout);  // \u8bbe\u7f6e\u5e03\u5c40\n\n    _centralLayout.addWidget(&amp;_scrollArea);     // \u5e03\u5c40\u6dfb\u52a0\u6ed1\u52a8\u533a\u57df\n\n    _scrollArea.setWidgetResizable(true);       // \u6ed1\u52a8\u533a\u57df\u53ef\u52a8\n    _scrollArea.setWidget(&amp;_contentWidget);     // \u8bbe\u7f6e\u6ed1\u52a8\u533a\u57df\u7684\u7a97\u53e3\n\n        _contentWidget.setLayout(&amp;_contentLayout);  // \u8bbe\u7f6e\u6ed1\u52a8\u533a\u57df\u7684\u7a97\u53e3\u7684\u5e03\u5c40\n        for(int i = 0; i &lt; 20; i++){\n            QLabel *label = new QLabel(QString(\"Hello Qt! %1\").arg(i));\n            _contentLayout.addWidget(label);\n        }\n}\n\nMainWindow::~MainWindow(){}\n</code></pre> <p>\u5806\u53e0\u7a97\u53e3 <code>QStackedWidget</code></p> \u5806\u53e0\u7a97\u53e3\u7b80\u5355\u5b9e\u4f8b code C++<pre><code>// MainWindow.h\n#pragma once\n\n#include &lt;QMainWindow&gt;\n#include &lt;QLayout&gt;\n#include &lt;QStackedWidget&gt;\n#include &lt;QPushButton&gt;\n#include &lt;QLabel&gt;\n\nclass MainWindow : public QMainWindow{\n    Q_OBJECT\npublic:\n    MainWindow(QWidget *parent = nullptr); \n    ~MainWindow();\nprivate:\n    QWidget         _centralWidget;\n    QHBoxLayout     _centralLayout;\n    QVBoxLayout     _leftLayout;    // \u5de6\u4fa7\n    QStackedWidget  _stackedWidget; // \u53f3\u4fa7\n\n    // \u4e09\u4e2a\u6309\u94ae\u5bf9\u5e94\u4e09\u4e2a\u5e03\u5c40\n    QPushButton _button[4];\n    QWidget     _widget[4];\n        QVBoxLayout _layout_1;\n            QLabel _label_1[5];\n        QHBoxLayout _layout_2;\n            QLabel _label_2[5];\n        QGridLayout _layout_3;\n            QLabel _label_3[5];\n};\n</code></pre> C++<pre><code>// MainWindow.cpp\n#include \"../include/MainWindow.h\"\n\nMainWindow::MainWindow(QWidget *parent)\n    : QMainWindow(parent)\n{\n    this -&gt; setWindowTitle(\"Hello Qt!\");\n    this -&gt; setCentralWidget(&amp;_centralWidget);\n    _centralWidget.setLayout(&amp;_centralLayout);\n\n    _centralLayout.addLayout(&amp;_leftLayout);\n    _centralLayout.addWidget(&amp;_stackedWidget);\n\n    for(int i=1; i&lt;=3; i++){\n        _leftLayout.addWidget(&amp;_button[i]);\n        _button[i].setText(QString(\"\u7a97\u53e3 %1\").arg(i));\n\n        _stackedWidget.addWidget(&amp;_widget[i]);\n    }\n    _widget[1].setLayout(&amp;_layout_1);\n    _widget[2].setLayout(&amp;_layout_2);\n    _widget[3].setLayout(&amp;_layout_3);\n\n    for(int i=1; i&lt;=4; i++){\n        _layout_1.addWidget(&amp;_label_1[i]);\n        _label_1[i].setText(QString(\"\u7a97\u53e31\u7684\u7b2c%1\u4e2a\u6807\u7b7e\").arg(i));\n    }\n\n    for(int i=1; i&lt;=4; i++){\n        _layout_2.addWidget(&amp;_label_2[i]);\n        _label_2[i].setText(QString(\"\u7a97\u53e32\u7684\u7b2c%1\u4e2a\u6807\u7b7e\").arg(i));\n    }\n\n    for(int i=1; i&lt;=4; i++){\n        _layout_3.addWidget(&amp;_label_3[i], (i-1)/2, (i-1)%2);\n        _label_3[i].setText(QString(\"\u7a97\u53e33\u7684\u7b2c%1\u4e2a\u6807\u7b7e\").arg(i));\n    }\n\n    for(int i=1; i&lt;=3; i++)\n        connect(&amp;_button[i], &amp;QPushButton::clicked, [=](){\n            _stackedWidget.setCurrentIndex(i-1);\n        });\n}\n\nMainWindow::~MainWindow(){}\n</code></pre> <p></p> <p>\u7ec4\u5408\u5b9e\u73b0</p> C++<pre><code>// MainWindow.h\n#pragma once\n\n#include &lt;QMainWindow&gt;\n#include &lt;QLayout&gt;\n#include &lt;QListWidget&gt;\n#include &lt;QStackedWidget&gt;\n#include &lt;QScrollArea&gt;\n#include &lt;QLabel&gt;\n#include &lt;QScrollBar&gt;\n\nclass MainWindow : public QMainWindow{\n    Q_OBJECT\npublic:\n    MainWindow(QWidget *parent = nullptr); \n    ~MainWindow();\nprivate:\n    void onItemClicked(QListWidgetItem *item);  // \u70b9\u51fb\u5217\u8868\u9879\n\n    QWidget     _centralWidget; // \u4e2d\u5fc3\u7a97\u53e3\n    QHBoxLayout _layout;        // \u6c34\u5e73\u5e03\u5c40\n    QListWidget _listWidget;    // \u5217\u8868\u7a97\u53e3\n    QStackedWidget _stackedWidget;  // \u5806\u53e0\u7a97\u53e3\n\n    QWidget     _contextWidget1;// \u53f3\u4fa7\u7a97\u53e3\n    QWidget     _contextWidget2;\n    QWidget     _contextWidget3;\n\n    QVBoxLayout _layout1;       // \u5782\u76f4\u5e03\u5c40\n    QVBoxLayout _layout2;\n    QVBoxLayout _layout3;\n\n    QScrollArea _scrollArea1;   // \u6eda\u52a8\u7a97\u53e3\n    QScrollArea _scrollArea2;\n    QScrollArea _scrollArea3;\n\n    QString _str1=\"\", _str2=\"\", _str3=\"\";\n    int cnt1=0, cnt2=0, cnt3=0;\n};\n</code></pre> C++<pre><code>#include \"../include/MainWindow.h\"\n\nMainWindow::MainWindow(QWidget *parent)\n    : QMainWindow(parent)\n{\n    this -&gt; setWindowTitle(\"Leg 11 \u6ed1\u52a8\u7a97\u53e3\");\n    this -&gt; setCentralWidget(&amp;_centralWidget);\n    _centralWidget.setLayout(&amp;_layout);\n\n    _layout.addWidget(&amp;_listWidget);    // \u5de6\u4fa7\u5217\u8868\u7a97\u53e3\n    _layout.addWidget(&amp;_stackedWidget); // \u53f3\u4fa7\u5806\u53e0\u7a97\u53e3\n\n    _listWidget.addItem(\"\u7a97\u53e3 1\");\n    _listWidget.addItem(\"\u7a97\u53e3 2\");\n    _listWidget.addItem(\"\u7a97\u53e3 3\");\n\n    _stackedWidget.addWidget(&amp;_scrollArea1); // \u53f3\u4fa7\u7b2c\u4e00\u4e2a\u7a97\u53e3\n    _stackedWidget.addWidget(&amp;_scrollArea2); // \u53f3\u4fa7\u7b2c\u4e8c\u4e2a\u7a97\u53e3\n    _stackedWidget.addWidget(&amp;_scrollArea3); // \u53f3\u4fa7\u7b2c\u4e09\u4e2a\u7a97\u53e3\n\n    _contextWidget1.setLayout(&amp;_layout1); // \u53f3\u4fa7\u7b2c\u4e00\u4e2a\u7a97\u53e3\u7684\u5e03\u5c40\n    _contextWidget2.setLayout(&amp;_layout2); // \u53f3\u4fa7\u7b2c\u4e8c\u4e2a\u7a97\u53e3\u7684\u5e03\u5c40\n    _contextWidget3.setLayout(&amp;_layout3); // \u53f3\u4fa7\u7b2c\u4e09\u4e2a\u7a97\u53e3\u7684\u5e03\u5c40\n\n    connect(&amp;_listWidget, &amp;QListWidget::itemClicked, this, &amp;MainWindow::onItemClicked);\n}\n\nMainWindow::~MainWindow(){}\n\nvoid MainWindow::onItemClicked(QListWidgetItem *item){\n    if(item -&gt; text() == \"\u7a97\u53e3 1\"){\n        _stackedWidget.setCurrentWidget(&amp;_scrollArea1);\n        // \u76f4\u63a5\u7ed9\u7a97\u53e3\u603c\u4e00\u4e2a\u6807\u7b7e\n        QLabel *label = new QLabel(QString(\"\u7b2c 1 \u4e2a\u7a97\u53e3\uff0c\u7b2c %1 \u6b21\u70b9\u51fb\").arg(++cnt1), &amp;_contextWidget1);\n        _scrollArea1.setWidgetResizable(true);  // \u8bbe\u7f6e\u6eda\u52a8\u7a97\u53e3\u7684\u5927\u5c0f\u53ef\u53d8\n        _layout1.addWidget(label);\n        _scrollArea1.setWidget(&amp;_contextWidget1);\n        // \u5b9a\u4f4d\u5230\u6700\u540e\n        QScrollBar *vScrollBar = _scrollArea1.verticalScrollBar();\n        vScrollBar-&gt;setValue(vScrollBar-&gt;maximum());\n    }\n    else if(item -&gt; text() == \"\u7a97\u53e3 2\"){\n        _stackedWidget.setCurrentWidget(&amp;_scrollArea2);\n        QLabel *label = new QLabel(QString(\"\u7b2c 2 \u4e2a\u7a97\u53e3\uff0c\u7b2c %1 \u6b21\u70b9\u51fb\").arg(++cnt2)); \n        _scrollArea2.setWidgetResizable(true);  // \u8bbe\u7f6e\u6eda\u52a8\u7a97\u53e3\u7684\u5927\u5c0f\u53ef\u53d8\n        _layout2.addWidget(label);\n        _scrollArea2.setWidget(&amp;_contextWidget2);\n    }\n    else if(item -&gt; text() == \"\u7a97\u53e3 3\"){\n        _stackedWidget.setCurrentWidget(&amp;_scrollArea3);\n        QLabel *label = new QLabel(QString(\"\u7b2c 3 \u4e2a\u7a97\u53e3\uff0c\u7b2c %1 \u6b21\u70b9\u51fb\").arg(++cnt3));\n        _scrollArea3.setWidgetResizable(true);  // \u8bbe\u7f6e\u6eda\u52a8\u7a97\u53e3\u7684\u5927\u5c0f\u53ef\u53d8\n        _layout3.addWidget(label);\n        _scrollArea3.setWidget(&amp;_contextWidget3);\n    }\n}\n</code></pre> <p></p>"},{"location":"src/cpp/qt/#_8","title":"\u7ed8\u56fe","text":""},{"location":"src/cpp/qt/#leg-12","title":"Leg 12 \u7ed8\u5236\u76f4\u7ebf","text":"<p>\u7ed8\u5236 <code>QPainter</code></p> <p>\u5728Qt\u4e2d\uff0c\u7ed8\u56fe\u901a\u8fc7 <code>paintEvent</code> \u4e8b\u4ef6\u6765\u5b9e\u73b0\uff0c\u5f53\u7a97\u53e3\u9700\u8981\u91cd\u7ed8\u65f6\uff0c\u5c31\u4f1a\u8c03\u7528 <code>paintEvent</code> \u4e8b\u4ef6\uff0c\u4e14\u4e0d\u9700\u8981\u624b\u52a8\u8c03\u7528\uff0c\u53ea\u9700\u8981\u91cd\u5199 <code>paintEvent</code> \u4e8b\u4ef6\u5373\u53ef\u3002</p> <p>\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7 <code>QLineEdit</code> \u4e2d\u7684\u5185\u5bb9\u6765\u7ed8\u5236\u4e00\u6761\u76f4\u7ebf\u3002 \u5f53 <code>QLineEdit</code> \u4e2d\u7684\u5185\u5bb9\u6539\u53d8\u65f6\uff0c\u5c31\u4f1a\u8c03\u7528 <code>paintEvent</code> \u4e8b\u4ef6\uff0c\u52a8\u6001\u7ed8\u5236\u76f4\u7ebf\u3002</p> C++<pre><code>// MainWindow.h\n#pragma once\n\n#include &lt;QMainWindow&gt;\n#include &lt;QWidget&gt;\n#include &lt;QLabel&gt;\n#include &lt;QLineEdit&gt;\n#include &lt;QPushButton&gt;\n#include &lt;QPainter&gt;\n\nclass MainWindow : public QMainWindow{\n    Q_OBJECT\npublic:\n    MainWindow(QWidget *parent = nullptr); \n    ~MainWindow();\nprivate:\n    QWidget     _centralWidget;\n    QLabel      _A, _B;\n    QLineEdit   _lineEdit_A_X,\n                _lineEdit_A_Y,\n                _lineEdit_B_X,\n                _lineEdit_B_Y;\n\n    void paintEvent(QPaintEvent *event);\n};\n</code></pre> C++<pre><code>#include \"../include/MainWindow.h\"\n\nMainWindow::MainWindow(QWidget *parent)\n    : QMainWindow(parent)\n{\n    this -&gt; setWindowTitle(\"Leg 11 Qt\u7ed8\u56fe\");\n    this -&gt; setFixedSize(1080, 720);            // \u8bbe\u7f6e\u7a97\u53e3\u5927\u5c0f\uff0c\u4e0d\u53ef\u8c03\u6574\n    this -&gt; setCentralWidget(&amp;_centralWidget);  // \u8bbe\u7f6e\u4e2d\u5fc3\u7a97\u53e3\n\n    _A.setParent(&amp;_centralWidget);\n    _B.setParent(&amp;_centralWidget);\n    _lineEdit_A_X.setParent(&amp;_centralWidget);\n    _lineEdit_A_Y.setParent(&amp;_centralWidget);\n    _lineEdit_B_X.setParent(&amp;_centralWidget);\n    _lineEdit_B_Y.setParent(&amp;_centralWidget);\n\n    _A.setText(\"A\u70b9\u5750\u6807\");\n    _B.setText(\"B\u70b9\u5750\u6807\");\n    _lineEdit_A_X.setText(\"123\");\n    _lineEdit_A_Y.setText(\"123\");\n    _lineEdit_B_X.setText(\"456\");\n    _lineEdit_B_Y.setText(\"456\");\n\n    _A.setGeometry(0, 0, 50, 50);\n    _B.setGeometry(100, 0, 50, 50);\n    _lineEdit_A_X.setGeometry(50, 0, 50, 25);\n    _lineEdit_A_Y.setGeometry(50, 25, 50, 25);\n    _lineEdit_B_X.setGeometry(150, 0, 50, 25);\n    _lineEdit_B_Y.setGeometry(150, 25, 50, 25);\n\n}\n\nvoid MainWindow::paintEvent(QPaintEvent *event){\n    update();\n    Q_UNUSED(event);\n    QPainter painter(this);\n    int A_X = _lineEdit_A_X.text().toInt(),\n        A_Y = _lineEdit_A_Y.text().toInt(),\n        B_X = _lineEdit_B_X.text().toInt(),\n        B_Y = _lineEdit_B_Y.text().toInt();\n    painter.drawLine(QPoint(A_X, A_Y), QPoint(B_X, B_Y));\n}\n\nMainWindow::~MainWindow(){}\n</code></pre> <p></p>"},{"location":"src/cpp/qt/#leg-13","title":"Leg 13 \u7ed8\u5236\u591a\u79cd\u56fe\u5f62","text":"<p><code>QPainter</code> \u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7684\u7ed8\u56fe\u51fd\u6570\uff0c\u53ef\u4ee5\u7ed8\u5236\u591a\u79cd\u56fe\u5f62\u3002</p> <ul> <li>\u76f4\u7ebf\uff1a<code>drawLine()</code></li> <li>\u77e9\u5f62\uff1a<code>drawRect()</code></li> <li>\u692d\u5706\uff1a<code>drawEllipse()</code></li> <li>\u5706\u5f27\uff1a<code>drawArc()</code></li> <li>\u591a\u8fb9\u5f62\uff1a<code>drawPolygon()</code></li> <li>\u6587\u5b57\uff1a<code>drawText()</code></li> </ul> <p>\u540c\u65f6\uff0c<code>QPainter</code> \u8fd8\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7684\u8bbe\u7f6e\u51fd\u6570\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u7ed8\u56fe\u7684\u989c\u8272\u3001\u7ebf\u5bbd\u3001\u586b\u5145\u7b49\u3002</p> <ul> <li>\u8bbe\u7f6e\u753b\u7b14\u989c\u8272\uff1a<code>setPen()</code> \u5916\u90e8\u7ebf\u6761</li> <li>\u8bbe\u7f6e\u753b\u5237\u989c\u8272\uff1a<code>setBrush()</code> \u5185\u90e8\u586b\u5145</li> <li>\u8bbe\u7f6e\u7ebf\u5bbd\uff1a<code>setLineWidth()</code></li> </ul> C++<pre><code>#pragma once\n\n#include &lt;QMainWindow&gt;\n#include &lt;QWidget&gt;\n#include &lt;QMenuBar&gt;\n#include &lt;QLabel&gt;\n#include &lt;QLineEdit&gt;\n#include &lt;QInputDialog&gt;\n#include &lt;QPainter&gt;\n\nclass MainWindow : public QMainWindow{\n    Q_OBJECT\npublic:\n    MainWindow(QWidget *parent = nullptr); \n    ~MainWindow();\nprivate:\n    QWidget     _centralWidget; // \u4e2d\u5fc3\u7a97\u53e3\n    QMenuBar    _menuBar;       // \u83dc\u5355\u680f\n\n    QLabel      _label;         // \u72b6\u6001\u6807\u7b7e\n\n    QMenu       _shape;         // \u5f62\u72b6\u83dc\u5355\n        QAction     _line;      // \u76f4\u7ebf\n        QAction     _rectangle; // \u77e9\u5f62\n        QAction     _ellipse;   // \u692d\u5706\n        QAction     _polygon;   // \u591a\u8fb9\u5f62\n    QString     _shape_str;     // \u5f53\u524d\u9009\u62e9\u7684\u5f62\u72b6\n\n    QMenu       _color_A;       // \u5916\u90e8\u7ebf\u6761\u989c\u8272\n        QAction     _A_black;   // \u9ed1\u8272\n        QAction     _A_red;     // \u7ea2\u8272\n        QAction     _A_green;   // \u7eff\u8272\n        QAction     _A_blue;    // \u84dd\u8272\n    QString     _color_A_str;   // \u5f53\u524d\u9009\u62e9\u7684\u5916\u90e8\u7ebf\u6761\u989c\u8272\n\n    QMenu       _color_B;       // \u5185\u90e8\u586b\u5145\u989c\u8272\n        QAction     _B_black;   // \u9ed1\u8272\n        QAction     _B_red;     // \u7ea2\u8272\n        QAction     _B_green;   // \u7eff\u8272\n        QAction     _B_blue;    // \u84dd\u8272\n    QString     _color_B_str;   // \u5f53\u524d\u9009\u62e9\u7684\u5185\u90e8\u586b\u5145\u989c\u8272\n\n    QAction     _width;         // \u7ebf\u6761\u5bbd\u5ea6\n    QString     _width_str;     // \u5f53\u524d\u9009\u62e9\u7684\u7ebf\u6761\u5bbd\u5ea6\n\n    void paintEvent(QPaintEvent *event);\n};\n</code></pre> C++<pre><code>#include \"../include/MainWindow.h\"\n\nMainWindow::MainWindow(QWidget *parent)\n    : QMainWindow(parent)\n{\n    this -&gt; setWindowTitle(\"Leg 12 \u7ed8\u5236\u591a\u79cd\u56fe\u5f62\");\n    this -&gt; setFixedSize(1080, 720);            // \u8bbe\u7f6e\u7a97\u53e3\u5927\u5c0f\uff0c\u4e0d\u53ef\u8c03\u6574\n    this -&gt; setCentralWidget(&amp;_centralWidget);  // \u8bbe\u7f6e\u4e2d\u5fc3\u7a97\u53e3\n    this -&gt; setMenuBar(&amp;_menuBar);              // \u8bbe\u7f6e\u83dc\u5355\u680f\n\n    _menuBar.addMenu(&amp;_shape);  // \u6dfb\u52a0 \u5f62\u72b6 \u83dc\u5355\n    _shape.setTitle(\"\u5f62\u72b6\");\n        _line.setText(\"\u76f4\u7ebf\");      _shape.addAction(&amp;_line);\n        _rectangle.setText(\"\u77e9\u5f62\"); _shape.addAction(&amp;_rectangle);\n        _ellipse.setText(\"\u692d\u5706\");   _shape.addAction(&amp;_ellipse);\n        _polygon.setText(\"\u591a\u8fb9\u5f62\"); _shape.addAction(&amp;_polygon);\n    _shape_str = \"\u76f4\u7ebf\";\n\n    _menuBar.addMenu(&amp;_color_A);// \u6dfb\u52a0 \u5916\u90e8\u7ebf\u6761\u989c\u8272 \u83dc\u5355\n    _color_A.setTitle(\"\u5916\u90e8\u7ebf\u6761\u989c\u8272\");\n        _A_black.setText(\"black\");   _color_A.addAction(&amp;_A_black);\n        _A_red.setText(\"red\");     _color_A.addAction(&amp;_A_red);\n        _A_green.setText(\"green\");   _color_A.addAction(&amp;_A_green);\n        _A_blue.setText(\"blue\");    _color_A.addAction(&amp;_A_blue);\n    _color_A_str = \"black\";\n\n    _menuBar.addMenu(&amp;_color_B);// \u6dfb\u52a0 \u5185\u90e8\u586b\u5145\u989c\u8272 \u83dc\u5355\n    _color_B.setTitle(\"\u5185\u90e8\u586b\u5145\u989c\u8272\");\n        _B_black.setText(\"black\");   _color_B.addAction(&amp;_B_black);\n        _B_red.setText(\"red\");     _color_B.addAction(&amp;_B_red);\n        _B_green.setText(\"green\");   _color_B.addAction(&amp;_B_green);\n        _B_blue.setText(\"blue\");    _color_B.addAction(&amp;_B_blue);\n    _color_B_str = \"black\";\n\n    _menuBar.addAction(&amp;_width);// \u6dfb\u52a0 \u7ebf\u6761\u5bbd\u5ea6 \u83dc\u5355\n    _width.setText(\"\u7ebf\u6761\u5bbd\u5ea6\");\n    _width_str = \"1\";\n\n    _menuBar.setCornerWidget(&amp;_label);  // \u8bbe\u7f6e\u72b6\u6001\u6807\u7b7e\n    _label.setAlignment(Qt::AlignRight);// \u8bbe\u7f6e\u6807\u7b7e\u53f3\u5bf9\u9f50\n    _label.setText(\"      \u5f53\u524d\u9009\u62e9\uff1a\u76f4\u7ebf\uff0cblack\uff0cblack\uff0c1\");\n\n    // \u8fde\u63a5\u4fe1\u53f7\u4e0e\u69fd\n    connect(&amp;_line, &amp;QAction::triggered, [=](){\n        _shape_str = \"\u76f4\u7ebf\";\n        _label.setText(\"\u5f53\u524d\u9009\u62e9\uff1a\" + _shape_str + \"\uff0c\" + _color_A_str + \"\uff0c\" + _color_B_str + \"\uff0c\" + _width_str);\n    });\n\n    connect(&amp;_rectangle, &amp;QAction::triggered, [=](){\n        _shape_str = \"\u77e9\u5f62\";\n        _label.setText(\"\u5f53\u524d\u9009\u62e9\uff1a\" + _shape_str + \"\uff0c\" + _color_A_str + \"\uff0c\" + _color_B_str + \"\uff0c\" + _width_str);\n    });\n\n    connect(&amp;_ellipse, &amp;QAction::triggered, [=](){\n        _shape_str = \"\u692d\u5706\";\n        _label.setText(\"\u5f53\u524d\u9009\u62e9\uff1a\" + _shape_str + \"\uff0c\" + _color_A_str + \"\uff0c\" + _color_B_str + \"\uff0c\" + _width_str);\n    });\n\n    connect(&amp;_polygon, &amp;QAction::triggered, [=](){\n        _shape_str = \"\u591a\u8fb9\u5f62\";\n        _label.setText(\"\u5f53\u524d\u9009\u62e9\uff1a\" + _shape_str + \"\uff0c\" + _color_A_str + \"\uff0c\" + _color_B_str + \"\uff0c\" + _width_str);\n    });\n\n    connect(&amp;_A_black, &amp;QAction::triggered, [=](){\n        _color_A_str = \"black\";\n        _label.setText(\"\u5f53\u524d\u9009\u62e9\uff1a\" + _shape_str + \"\uff0c\" + _color_A_str + \"\uff0c\" + _color_B_str + \"\uff0c\" + _width_str);\n    });\n\n    connect(&amp;_A_red, &amp;QAction::triggered, [=](){\n        _color_A_str = \"red\";\n        _label.setText(\"\u5f53\u524d\u9009\u62e9\uff1a\" + _shape_str + \"\uff0c\" + _color_A_str + \"\uff0c\" + _color_B_str + \"\uff0c\" + _width_str);\n    });\n\n    connect(&amp;_A_green, &amp;QAction::triggered, [=](){\n        _color_A_str = \"green\";\n        _label.setText(\"\u5f53\u524d\u9009\u62e9\uff1a\" + _shape_str + \"\uff0c\" + _color_A_str + \"\uff0c\" + _color_B_str + \"\uff0c\" + _width_str);\n    });\n\n    connect(&amp;_A_blue, &amp;QAction::triggered, [=](){\n        _color_A_str = \"blue\";\n        _label.setText(\"\u5f53\u524d\u9009\u62e9\uff1a\" + _shape_str + \"\uff0c\" + _color_A_str + \"\uff0c\" + _color_B_str + \"\uff0c\" + _width_str);\n    });\n\n    connect(&amp;_B_black, &amp;QAction::triggered, [=](){\n        _color_B_str = \"black\";\n        _label.setText(\"\u5f53\u524d\u9009\u62e9\uff1a\" + _shape_str + \"\uff0c\" + _color_A_str + \"\uff0c\" + _color_B_str + \"\uff0c\" + _width_str);\n    });\n\n    connect(&amp;_B_red, &amp;QAction::triggered, [=](){\n        _color_B_str = \"red\";\n        _label.setText(\"\u5f53\u524d\u9009\u62e9\uff1a\" + _shape_str + \"\uff0c\" + _color_A_str + \"\uff0c\" + _color_B_str + \"\uff0c\" + _width_str);\n    });\n\n    connect(&amp;_B_green, &amp;QAction::triggered, [=](){\n        _color_B_str = \"green\";\n        _label.setText(\"\u5f53\u524d\u9009\u62e9\uff1a\" + _shape_str + \"\uff0c\" + _color_A_str + \"\uff0c\" + _color_B_str + \"\uff0c\" + _width_str);\n    });\n\n    connect(&amp;_B_blue, &amp;QAction::triggered, [=](){\n        _color_B_str = \"blue\";\n        _label.setText(\"\u5f53\u524d\u9009\u62e9\uff1a\" + _shape_str + \"\uff0c\" + _color_A_str + \"\uff0c\" + _color_B_str + \"\uff0c\" + _width_str);\n    });\n\n    connect(&amp;_width, &amp;QAction::triggered, [=](){\n        bool ok;\n        _width_str = QInputDialog::getText(this, \"\u7ebf\u6761\u5bbd\u5ea6\", \"\u8bf7\u8f93\u5165\u7ebf\u6761\u5bbd\u5ea6\", QLineEdit::Normal, \"\", &amp;ok);\n        if(!ok){\n            _width_str = \"1\";\n        }\n        _label.setText(\"\u5f53\u524d\u9009\u62e9\uff1a\" + _shape_str + \"\uff0c\" + _color_A_str + \"\uff0c\" + _color_B_str + \"\uff0c\" + _width_str);\n    });\n\n}\n\nvoid MainWindow::paintEvent(QPaintEvent *event){\n    update();\n    Q_UNUSED(event);\n    QPainter painter(this);\n\n    if(_shape_str == \"\u76f4\u7ebf\"){\n        painter.setPen(QPen(QColor(_color_A_str), _width_str.toInt(), Qt::SolidLine, Qt::RoundCap));\n        painter.drawLine(100, 100, 500, 500);\n    }\n    else if(_shape_str == \"\u77e9\u5f62\"){\n        painter.setPen(QPen(QColor(_color_A_str), _width_str.toInt(), Qt::SolidLine, Qt::RoundCap));\n        painter.setBrush(QBrush(QColor(_color_B_str), Qt::SolidPattern));\n        painter.drawRect(100, 100, 400, 400);\n    }\n    else if(_shape_str == \"\u692d\u5706\"){\n        painter.setPen(QPen(QColor(_color_A_str), _width_str.toInt(), Qt::SolidLine, Qt::RoundCap));\n        painter.setBrush(QBrush(QColor(_color_B_str), Qt::SolidPattern));\n        painter.drawEllipse(100, 100, 400, 400);\n    }\n    else if(_shape_str == \"\u591a\u8fb9\u5f62\"){\n        painter.setPen(QPen(QColor(_color_A_str), _width_str.toInt(), Qt::SolidLine, Qt::RoundCap));\n        painter.setBrush(QBrush(QColor(_color_B_str), Qt::SolidPattern));\n        QVector&lt;QPoint&gt; points;\n        // \u4e94\u89d2\u661f\n        points.push_back(QPoint(200, 50));\n        points.push_back(QPoint(250, 200));\n        points.push_back(QPoint(400, 200));\n        points.push_back(QPoint(300, 300));\n        points.push_back(QPoint(350, 450));\n        points.push_back(QPoint(200, 350)); // \u5e95\u90e8\n        points.push_back(QPoint(50, 450));\n        points.push_back(QPoint(100, 300));\n        points.push_back(QPoint(0, 200));\n        points.push_back(QPoint(150, 200));\n\n        painter.drawPolygon(points);\n    }\n\n}\n\nMainWindow::~MainWindow(){}\n</code></pre> <p></p>"},{"location":"src/cpp/qt/#_9","title":"\u5b9a\u65f6\u5668","text":""},{"location":"src/cpp/qt/#leg-14","title":"Leg 14 \u5b9a\u65f6\u5668","text":"<p>\u5b9a\u65f6\u5668 <code>QTimer</code></p> <p>\u9664\u4e86\u901a\u8fc7 <code>connect</code> \u51fd\u6570\u6765\u8fde\u63a5\u4fe1\u53f7\u548c\u69fd\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5b9a\u65f6\u5668\u6765\u8fde\u63a5\u4fe1\u53f7\u548c\u69fd\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u5b9a\u65f6\u5668\u8d85\u65f6\u65f6\uff0c\u5c31\u4f1a\u89e6\u53d1\u4fe1\u53f7\uff0c\u7136\u540e\u6267\u884c\u69fd\u51fd\u6570\u3002</p> <p>\u968f\u673a\u6570 <code>QRandomGenerator::global()-&gt;bounded()</code></p> C++<pre><code>// MainWindow.h\n#pragma once\n\n#include &lt;QMainWindow&gt;\n#include &lt;QLabel&gt;\n#include &lt;QTimer&gt;\n#include &lt;QRandomGenerator&gt;\n\nclass MainWindow : public QMainWindow{\n    Q_OBJECT\npublic:\n    MainWindow(QWidget *parent = nullptr); \n    ~MainWindow();\nprivate:\n    QWidget     _centralWidget; // \u4e2d\u592e\u90e8\u4ef6\n    QLabel      _labeltext;\n    QTimer      _timer;         // \u5b9a\u65f6\u5668\n};\n</code></pre> C++<pre><code>// MainWindow.cpp\n#include \"../include/MainWindow.h\"\n\nMainWindow::MainWindow(QWidget *parent)\n    : QMainWindow(parent)\n{\n    this -&gt; setWindowTitle(\"Leg 14 \u5b9a\u65f6\u5668\");\n    this -&gt; setCentralWidget(&amp;_centralWidget);\n    this -&gt; resize(400, 300);\n\n    _labeltext.setParent(&amp;_centralWidget);\n    _labeltext.setText(\"Hello World!\");\n\n    _timer.start(5);\n\n    int lastDx = 10, lastDy = 10;\n    connect(&amp;_timer, &amp;QTimer::timeout, this, [&amp;](){\n        int x = _labeltext.x(), y = _labeltext.y();\n        int nx = x + lastDx, ny = y + lastDy;\n\n        if(nx &gt;=1 &amp;&amp; nx &lt;= 320 &amp;&amp; ny &gt;= 1 &amp;&amp; ny &lt;= 280 &amp;&amp; x != nx &amp;&amp; y != ny)\n            _labeltext.move(nx, ny);\n        else{\n            lastDx = QRandomGenerator::global()-&gt;bounded(10)-5;\n            lastDy = QRandomGenerator::global()-&gt;bounded(10)-5;\n        }\n    });\n}\n\nMainWindow::~MainWindow(){}\n</code></pre> <p></p>"},{"location":"src/cpp/qt/#leg-15","title":"Leg 15 \u52a8\u753b","text":"<p>\u6682\u65f6\u6ca1\u6709\u597d\u7684\u60f3\u6cd5\uff0c\u4f46\u611f\u89c9\u6709\u5fc5\u8981\uff0c\u6240\u4ee5\u5148\u5360\u4e2a\u5751\u3002</p> <p></p>"},{"location":"src/cpp/qt/#_10","title":"\u4e8b\u4ef6","text":"<p>\u4e8b\u4ef6 <code>event</code>\uff0c\u662f\u6307\u7528\u6237\u4e0e\u7a0b\u5e8f\u4ea4\u4e92\u7684\u8fc7\u7a0b\u4e2d\uff0c\u7a0b\u5e8f\u63a5\u6536\u5230\u7684\u4fe1\u53f7\u3002 \u4f8b\u5982 \u9f20\u6807\u70b9\u51fb\u3001\u5149\u6807\u79fb\u52a8\u3001\u952e\u76d8\u6309\u4e0b \u7b49\uff0c\u90fd\u662f\u4e8b\u4ef6\u3002 \u6355\u6349\u4fe1\u53f7\uff0c\u6267\u884c\u69fd\u51fd\u6570\uff0c\u5c31\u662f\u4e8b\u4ef6\u5904\u7406\u3002</p>"},{"location":"src/cpp/qt/#leg-16","title":"Leg 16 \u9f20\u6807\u4e8b\u4ef6","text":"<p>\u9f20\u6807\u4e8b\u4ef6 <code>QMouseEvent</code></p> C++<pre><code>// MainWindow.h\n#pragma once\n\n#include &lt;QMainWindow&gt;\n#include &lt;QLabel&gt;\n#include &lt;QMouseEvent&gt;\n#include &lt;QPainter&gt;\n#include &lt;QTimer&gt;\n\nclass MainWindow : public QMainWindow{\n    Q_OBJECT\npublic:\n    MainWindow(QWidget *parent = nullptr); \n    ~MainWindow();\nprivate:\n    QWidget     _centralWidget;\n\n    void paintEvent(QPaintEvent *event);\n\n    bool _l_pressed=0, _r_pressed=0, _m_pressed=0;\n    // \u9f20\u6807\u6309\u4e0b\n    void mousePressEvent(QMouseEvent *event);\n    // \u9f20\u6807\u91ca\u653e\n    void mouseReleaseEvent(QMouseEvent *event);\n\n    // \u9f20\u6807\u79fb\u52a8\n    QLabel      _x_y;\n    void mouseMoveEvent(QMouseEvent *event);\n\n    // \u9f20\u6807\u6eda\u8f6e\n    bool _wheel_up=0, _wheel_down=0;\n    void wheelEvent(QWheelEvent *event);\n};\n</code></pre> C++<pre><code>#include \"../include/MainWindow.h\"\n\nMainWindow::MainWindow(QWidget *parent)\n    : QMainWindow(parent)\n{\n    this -&gt; setWindowTitle(\"\u9f20\u6807\u68c0\u6d4b\u5668\");\n    this -&gt; setCentralWidget(&amp;_centralWidget);\n    this -&gt; setFixedSize(800, 600);\n\n    _x_y.setParent(&amp;_centralWidget);\n    _x_y.setGeometry(0, 0, 100, 20);\n    _x_y.setText(\"x: 0, y: 0\");\n\n    setMouseTracking(true); // \u9f20\u6807\u8ddf\u8e2a\n}\n\nMainWindow::~MainWindow(){}\n\nvoid MainWindow::paintEvent(QPaintEvent *event){\n    Q_UNUSED(event);\n    QPainter painter(this);\n    painter.setPen(Qt::black);\n    // \u9f20\u6807\u5916\u5f62\n    painter.drawRect(300, 200, 200, 300);   // \u5750\u6807 \u957f\u5bbd\n\n    // \u9f20\u6807\u5de6\u952e\n    if(_l_pressed) painter.setBrush(Qt::red);\n    painter.drawRect(300, 200, 90, 150);\n    painter.setBrush(Qt::NoBrush);  // \u6062\u590d\u73b0\u573a\n\n    // \u9f20\u6807\u53f3\u952e\n    if(_r_pressed) painter.setBrush(Qt::red);\n    painter.drawRect(410, 200, 90, 150);\n    painter.setBrush(Qt::NoBrush);  // \u6062\u590d\u73b0\u573a\n\n    // \u9f20\u6807\u4e2d\u952e\n    if(_m_pressed) painter.setBrush(Qt::red);\n    painter.drawRect(390, 200, 20, 150);\n    painter.setBrush(Qt::NoBrush);  // \u6062\u590d\u73b0\u573a\n\n    // \u9f20\u6807\u524d\u8fdb\n    if(_wheel_up) painter.setPen(QPen(Qt::red, 6));\n    else painter.setPen(QPen(Qt::black, 6));\n    painter.drawLine(400, 100, 400, 175);\n    painter.drawLine(400, 95, 375, 125);\n    painter.drawLine(400, 95, 425, 125);\n    _wheel_up = 0;\n\n    // \u9f20\u6807\u540e\u9000\n    if(_wheel_down) painter.setPen(QPen(Qt::red, 6));\n    else painter.setPen(QPen(Qt::black, 6));\n    painter.drawLine(400, 400, 400, 475);\n    painter.drawLine(375, 450, 400, 480);\n    painter.drawLine(425, 450, 400, 480);\n    _wheel_down = 0;\n\n} // \u771f\u7684\u670d\u4e86\uff0c\u8fd9\u4e2a\u5750\u6807\u592a\u53cd\u4eba\u7c7b\u4e86\n\nvoid MainWindow::mousePressEvent(QMouseEvent *event){\n    if(event -&gt; button() == Qt::LeftButton)\n        _l_pressed = 1; // \u9f20\u6807\u5de6\u952e\n    if(event -&gt; button() == Qt::RightButton)\n        _r_pressed = 1; // \u9f20\u6807\u53f3\u952e\n    if(event -&gt; button() == Qt::MiddleButton)\n        _m_pressed = 1; // \u9f20\u6807\u4e2d\u952e\n    update();           // \u91cd\u7ed8\n}\n\nvoid MainWindow::mouseReleaseEvent(QMouseEvent *event){\n    if(event -&gt; button() == Qt::LeftButton)\n        _l_pressed = 0; // \u9f20\u6807\u5de6\u952e\n    if(event -&gt; button() == Qt::RightButton)\n        _r_pressed = 0; // \u9f20\u6807\u53f3\u952e\n    if(event -&gt; button() == Qt::MiddleButton)\n        _m_pressed = 0; // \u9f20\u6807\u4e2d\u952e\n    update();           // \u91cd\u7ed8\n}\n\nvoid MainWindow::mouseMoveEvent(QMouseEvent *event){\n    _x_y.setText(QString(\"x: %1, y: %2\").arg(event -&gt; pos().x()).arg(event -&gt; pos().y()));\n    update();\n}\n\nvoid MainWindow::wheelEvent(QWheelEvent *event){\n    if(event -&gt;angleDelta().y() == 0) _wheel_up = 0, _wheel_down = 0;\n    else if(event -&gt;angleDelta().y() &gt; 0) _wheel_up = 1, _wheel_down = 0;\n    else if(event -&gt;angleDelta().y() &lt; 0) _wheel_down = 1, _wheel_up = 0;\n    update();\n\n    // 233ms \u540e\u6267\u884c\u4e00\u6b21\n    QTimer::singleShot(233, this, [=](){\n        _wheel_up = 0, _wheel_down = 0;\n        update();\n    });\n}\n</code></pre> <p></p>"},{"location":"src/cpp/qt/#leg-17","title":"Leg 17 \u952e\u76d8\u4e8b\u4ef6","text":"<p>\u952e\u76d8\u4e8b\u4ef6 <code>QKeyEvent</code></p> C++<pre><code>// MainWindow.h\n#pragma once\n\n#include &lt;QMainWindow&gt;\n#include &lt;fstream&gt;\n#include &lt;QPainter&gt;\n#include &lt;QKeyEvent&gt;\n#include &lt;QMessageBox&gt;\n\nclass MainWindow : public QMainWindow{\n    Q_OBJECT\npublic:\n    MainWindow(QWidget *parent = nullptr); \n    ~MainWindow();\nprivate:\n    QString _words; // \u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u7684\u6240\u6709\u5b57\n    int cnt=0;      // \u8bb0\u5f55\u5df2\u7ecf\u6253\u5bf9\u7684\u5b57\u6570\n\n    void paintEvent(QPaintEvent *event);\n    void keyPressEvent(QKeyEvent *event);\n};\n</code></pre> C++<pre><code>// MainWindow.cpp\n#include \"../include/MainWindow.h\"\n\nMainWindow::MainWindow(QWidget *parent)\n    : QMainWindow(parent)\n{\n    this -&gt; setWindowTitle(\"\u7f19\u4e91\u5c71\u6253\u5b57\u901a\");\n    this -&gt; setFixedSize(800, 600);\n\n    std::ifstream ifs(\"data.txt\");\n    std::string str;\n    while(ifs &gt;&gt; str)\n        _words.push_back(QString::fromStdString(str));\n}\n\nMainWindow::~MainWindow(){}\n\nvoid MainWindow::paintEvent(QPaintEvent *event){\n    update();\n    Q_UNUSED(event);\n    QPainter painter(this);\n    QFont font;\n    // \u8bbe\u7f6e\u7b49\u5bbd\u5b57\u4f53\n    font.setFamily(\"Courier New\");\n    font.setPointSize(30);\n    painter.setFont(font);\n    painter.setPen(Qt::green);\n\n    int x = 0, y = 100;\n    for (int i = 0; i &lt; _words.size(); i++) {\n        QString word = _words[i];\n        if (i &gt;= cnt) painter.setPen(Qt::black);\n        painter.drawText(x, y, word);\n        x += 30;\n        if (x &gt; 750) {\n            x = 0;\n            y += 50;\n        }\n    }\n}\n\nvoid MainWindow::keyPressEvent(QKeyEvent *event){\n    if(event -&gt; key() == Qt::Key_Backspace){\n        if(cnt &gt; 0) cnt--;\n    }\n    else if(event -&gt; key() == Qt::Key_Space){\n        cnt++;\n    }\n    else{\n        QString str = event -&gt; text();\n        if(str == _words[cnt]) cnt++;\n    }\n    if(cnt == _words.size()){\n        QMessageBox::information(this, \"\u606d\u559c\", \"\u4f60\u5df2\u7ecf\u5b8c\u6210\u4e86\u6253\u5b57\u7ec3\u4e60\");\n    }\n}\n</code></pre>"},{"location":"src/cpp/qt/#mission-3","title":"Mission 3 \ud83d\udc24","text":"C++<pre><code>// MainWindow.h\n#pragma once\n\n#include &lt;QMainWindow&gt;\n#include &lt;QPainter&gt;\n#include &lt;QLabel&gt;\n#include &lt;QKeyEvent&gt;\n#include &lt;QTimer&gt;\n#include &lt;QRandomGenerator&gt;\n#include &lt;QMessageBox&gt;\n\nclass MainWindow : public QMainWindow{\n    Q_OBJECT\npublic:\n    MainWindow(QWidget *parent = nullptr); \n    ~MainWindow();\nprivate:\n    bool ck();  // \u68c0\u67e5\u662f\u5426\u78b0\u649e\n    void keyPressEvent(QKeyEvent *event);\n\n    double g=1;    // \u5c06 g \u770b\u4f5c\u52a0\u901f\u5ea6    \n    int acc(){\n        return std::max(15, (int)(g += 0.2));\n    } // \u91cd\u529b\u52a0\u901f\u5ea6\uff0c\u8d8a\u6765\u8d8a\u5feb\n\n    int source = 0; // \u8bb0\u5f55\u5206\u6570\n    double up=-8;\n    int bcc(){\n        return up += 0.2;\n    } // \u8df3\u8dc3\u52a0\u901f\u5ea6\uff0c\u8d8a\u6765\u8d8a\u6162\n\n    QLabel  _background,\n            _bird,\n            za, zb;\n\n    QTimer  _G, _jump;  // \u91cd\u529b\u4e0e\u8df3\u8dc3\n    QTimer  _za_t;      // \u969c\u788d\u7269\n\n    bool flg = false;   // \u7528\u4e8e\u5224\u65ad\u662f\u5426\u5f00\u59cb\u6e38\u620f\n    int starty=0;       // \u8bb0\u5f55\u8df3\u8dc3\u524d\u7684\u9ad8\u5ea6\n};\n</code></pre> C++<pre><code>// MainWindow.cpp\n#include \"../Headers/MainWindow.h\"\n\nMainWindow::MainWindow(QWidget *parent)\n    : QMainWindow(parent)\n{\n    this -&gt; setWindowTitle(\"Misson3 \u98de\u9e1f\");\n    this -&gt; setFixedSize(600, 800);\n\n    QPixmap pixmap(\"img/bg.jpg\");\n    pixmap = pixmap.scaled(this -&gt; size(), Qt::IgnoreAspectRatio, Qt::SmoothTransformation);\n\n    _background.setParent(this);\n    _background.setPixmap(pixmap);\n    _background.setGeometry(0, 0, this -&gt; width(), this -&gt; height());\n\n    pixmap.load(\"img/bird.jpg\");\n    pixmap = pixmap.scaled(50, 50, Qt::IgnoreAspectRatio, Qt::SmoothTransformation);\n    _bird.setParent(this);\n    _bird.setPixmap(pixmap);\n    _bird.setGeometry(200, 340, pixmap.width(), pixmap.height());\n\n    pixmap.load(\"img/za.jpg\");\n    pixmap = pixmap.scaled(100, 600, Qt::IgnoreAspectRatio, Qt::SmoothTransformation);\n    za.setParent(this);\n    za.setPixmap(pixmap);\n    za.setGeometry(600, -400, pixmap.width(), pixmap.height());\n\n    pixmap.load(\"img/za.jpg\");\n    pixmap = pixmap.scaled(100, 600, Qt::IgnoreAspectRatio, Qt::SmoothTransformation);\n    zb.setParent(this);\n    zb.setPixmap(pixmap);\n    zb.setGeometry(600, 500, pixmap.width(), pixmap.height());\n\n    // \u5de6\u4e0a\u89d2\u663e\u793a\u5206\u6570\n    QLabel *score = new QLabel(this);\n    score -&gt; setGeometry(10, 10, 50, 20);\n    connect(&amp;_za_t, &amp;QTimer::timeout, [=](){\n        score -&gt; setText(\"\u5206\u6570\uff1a\" + QString::number(source));\n    });\n\n    // \u901a\u8fc7\u5b9a\u65f6\u5668\u5b9e\u73b0\u91cd\u529b\u6548\u679c\n    connect(&amp;_G, &amp;QTimer::timeout, [=](){\n        _bird.move(_bird.x(), _bird.y() + acc());\n        update();\n    });\n\n    // \u901a\u8fc7\u5b9a\u65f6\u5668\u5b9e\u73b0\u8df3\u8dc3\u6548\u679c\n    connect(&amp;_jump, &amp;QTimer::timeout, [=](){\n        if(abs(starty - _bird.y()) &gt; 200){  // \u8df3\u8dc3\u9ad8\u5ea6\n            _jump.stop();\n\n            g=1;    // \u6bcf\u6b21 start \u52a0\u901f\u5ea6\u91cd\u7f6e\n            _G.start(10);\n            return;\n        }\n\n        _bird.move(_bird.x(), _bird.y() + bcc());\n    });\n\n    connect(&amp;_za_t, &amp;QTimer::timeout, [=](){\n        za.move(za.x() - 2, za.y());\n        zb.move(zb.x() - 2, zb.y());\n\n        if(za.x() + za.width() &lt; 0){\n            int dy = QRandomGenerator::global()-&gt;bounded(-200, 200);\n            za.move(600, -400 + dy);\n            zb.move(600, 500 + dy);\n            source++;\n        }\n\n        if(ck()){   // \u68c0\u67e5\u78b0\u649e\n            _G.stop();\n            _jump.stop();\n            _za_t.stop();\n            flg = false;\n            QMessageBox::information(this, \"\u63d0\u793a\", \"\u6e38\u620f\u7ed3\u675f\uff0c\u60a8\u7684\u5206\u6570\u4e3a\uff1a\" + QString::number(source));\n            // bird\u91cd\u7f6e\n            _bird.move(200, 340);\n            // za\u91cd\u7f6e\n            za.move(600, -400);\n            zb.move(600, 500);\n            // \u5206\u6570\u91cd\u7f6e\n            source = 0;\n        }\n    });\n}\n\nMainWindow::~MainWindow(){}\n\nbool MainWindow::ck(){\n    if(_bird.x()+_bird.width() &gt;= za.x() &amp;&amp; _bird.x() &lt;= za.x() + za.width()){\n        if(_bird.y() &lt;= za.y() + za.height() || _bird.y() + _bird.height() &gt;= zb.y()){\n            return true;\n        }\n    }\n    return false;\n}\n\nvoid MainWindow::keyPressEvent(QKeyEvent *event){\n    if(event -&gt; key() == Qt::Key_Space){\n\n        // \u5f00\u59cb\u6e38\u620f\n        if(!flg){\n            flg=1;\n            g=1;\n            starty = _bird.y(); // \u8bb0\u5f55\u8df3\u8dc3\u524d\u7684\u9ad8\u5ea6\n            _G.start(10);\n            _za_t.start(10);\n        }\n\n        // \u8df3\u8dc3\n        if(!_jump.isActive()){ // \u5728\u975e\u8df3\u8dc3\u72b6\u6001\n            _G.stop();          // \u91cd\u529b\u505c\u6b62\n\n            starty = _bird.y(); // \u8bb0\u5f55\u8df3\u8dc3\u524d\u7684\u9ad8\u5ea6\n\n            g=1;\n            up=-8;\n            _jump.start(10);    // \u8df3\u8dc3\u5f00\u59cb\n        }\n        else if(_jump.isActive()){ // \u5728\u8df3\u8dc3\u72b6\u6001\u518d\u8df3\u8dc3\n            //_G.stop();          // \u5b9e\u9645\u4e0a\u672c\u6765\u5c31\u662f\u505c\u6b62\u7684\uff0c\u8fd9\u91cc\u6ca1\u5fc5\u8981\n\n            _jump.stop();       // \u505c\u6b62\u4e0a\u4e00\u6b21\u7684\u8df3\u8dc3\n            starty = _bird.y(); // \u8bb0\u5f55\u8df3\u8dc3\u524d\u7684\u9ad8\u5ea6\n\n            // g=1; \u8fde\u7eed\u8df3\u8dc3 g \u53e0\u52a0\n            up=-8;\n            _jump.start(10);    // \u91cd\u65b0\u8df3\u8dc3\n        }\n    }\n}\n</code></pre>"},{"location":"src/cpp/qt/#_11","title":"\u6587\u4ef6\u4e0e\u6570\u636e\u5e93\u64cd\u4f5c","text":""},{"location":"src/cpp/qt/#leg-xx","title":"Leg xx \u8bfb\u5199\u6587\u4ef6","text":""},{"location":"src/cpp/qt/#leg-xx-mysql","title":"Leg xx \u8fde\u63a5 MYSQL \u6570\u636e\u5e93","text":""},{"location":"src/cpp/qt/#leg-xx_1","title":"Leg xx \u589e\u5220\u6539\u67e5","text":""},{"location":"src/cpp/qt/#_12","title":"\u591a\u5a92\u4f53","text":""},{"location":"src/cpp/qt/#leg-xx_2","title":"Leg xx \u64ad\u653e\u97f3\u9891","text":""},{"location":"src/cpp/qt/#leg-xx_3","title":"Leg xx \u64ad\u653e\u89c6\u9891","text":""},{"location":"src/cpp/qt/#raylib","title":"raylib","text":"<p>raylib \u662f\u4e00\u4e2a\u7b80\u5355\u6613\u7528\u7684\u6e38\u620f\u5f00\u53d1\u5e93\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7684\u51fd\u6570\uff0c\u7528\u4e8e\u5904\u7406\u7a97\u53e3\u3001\u56fe\u50cf\u3001\u97f3\u9891\u3001\u8f93\u5165\u3001\u6a21\u578b\u7b49\u3002</p>"},{"location":"src/cpp/qt/#_13","title":"\u5b89\u88c5","text":"Bash<pre><code>sudo apt install libglfw3-dev libgl1-mesa-dev libglu1-mesa-dev\n</code></pre>"},{"location":"src/cpp/qt/#_14","title":"\u6d4b\u8bd5\u4ee3\u7801","text":"C++<pre><code>#include \"raylib.h\"\n\n\n## \u7f16\u8bd1\n\n```sh\ngcc main.c -o main -lraylib -lGL -lm -lpthread -ldl -lrt -lX11\n</code></pre>"},{"location":"src/cpp/qt/#_15","title":"\u8fd0\u884c","text":"Bash<pre><code>./main\n</code></pre>"},{"location":"src/cpp/rocksdb/","title":"\ud83d\udce6 rocksdb","text":""},{"location":"src/cpp/rocksdb/#_1","title":"\u53c2\u8003","text":""},{"location":"src/cpp/ros/","title":"\u4e00\u79cd\u8de8\u5e73\u53f0\u6a21\u5757\u5316\u8f6f\u4ef6\u901a\u8baf\u673a\u5236","text":""},{"location":"src/cpp/ros/#_2","title":"\u53c2\u8003","text":"<ul> <li>ROS\u7684\u6700\u7b80\u5355\u5b89\u88c5\u2014\u2014\u9c7c\u9999\u4e00\u952e\u5b89\u88c5</li> </ul>"},{"location":"src/cpp/ros/#roscore","title":"roscore","text":"<p>\u542f\u52a8 ROS Master\u3001Parameter Server \u548c rosout</p> <p></p>"},{"location":"src/cpp/ros/#hello-ros","title":"hello ros","text":"<ol> <li> <p>\u521d\u59cb\u5316\u5de5\u4f5c\u7a7a\u95f4</p> Bash<pre><code>mkdir -p ~/hello_ros/src\ncd ~/hello_ros\ncatkin_make\nsource devel/setup.bash\n</code></pre> <ul> <li><code>src</code> \u662f\u5fc5\u987b\u7684</li> </ul> </li> <li> <p>\u521b\u5efa ros \u5305</p> Bash<pre><code>cd ~/hello_ros/src\ncatkin_create_pkg hello std_msgs roscpp\ncd ..\ncatkin_make\nsource devel/setup.bash\ncd ~/hello_ros/src/hello\n</code></pre> <ul> <li>\u521b\u5efa\u4e00\u4e2a <code>hello</code> \u7684 ros \u5305\uff0c\u5e76\u6307\u5b9a\u4f9d\u8d56</li> </ul> </li> <li> <p>\u53d1\u5e03\u8005</p> Bash<pre><code>vim publisher_node.cpp\n</code></pre> C++<pre><code>#include \"ros/ros.h\"\n#include \"std_msgs/String.h\"\n\nint main(int argc, char **argv) {\n    ros::init(argc, argv, \"simple_publisher\");\n    ros::NodeHandle nh;\n\n    // \u521b\u5efa\u53d1\u5e03\u8005\u5bf9\u8c61\n    ros::Publisher pub = nh.advertise&lt;std_msgs::String&gt;(\"chatter\", 1000);\n\n    ros::Rate loop_rate(10);  // 10 Hz\n    int count = 0;\n\n    while (ros::ok()) {\n        std_msgs::String msg;\n        msg.data = \"Hello, ROS! \" + std::to_string(count);\n\n        ROS_INFO(\"%s\", msg.data.c_str());\n\n        // \u53d1\u5e03\u6d88\u606f\n        pub.publish(msg);\n\n        ros::spinOnce();\n        loop_rate.sleep();\n        ++count;\n    }\n\n    return 0;\n}\n</code></pre> </li> <li> <p>\u8ba2\u9605\u8005</p> Bash<pre><code>vim subscriber_node.cpp\n</code></pre> C++<pre><code>#include \"ros/ros.h\"\n#include \"std_msgs/String.h\"\n\n// \u56de\u8c03\u51fd\u6570\uff0c\u5904\u7406\u63a5\u6536\u5230\u7684\u6d88\u606f\nvoid chatterCallback(const std_msgs::String::ConstPtr&amp; msg) {\n    ROS_INFO(\"I heard: [%s]\", msg-&gt;data.c_str());\n}\n\nint main(int argc, char **argv) {\n    ros::init(argc, argv, \"simple_subscriber\");\n    ros::NodeHandle nh;\n\n    // \u521b\u5efa\u8ba2\u9605\u8005\u5bf9\u8c61\n    ros::Subscriber sub = nh.subscribe(\"chatter\", 1000, chatterCallback);\n\n    // \u8fdb\u5165\u5faa\u73af\uff0c\u7b49\u5f85\u56de\u8c03\n    ros::spin();\n\n    return 0;\n}\n</code></pre> </li> <li> <p>\u7f16\u8bd1</p> Bash<pre><code>vim CMakeLists.txt\n</code></pre> Text Only<pre><code>add_executable(publisher_node publisher_node.cpp)\ntarget_link_libraries(publisher_node ${catkin_LIBRARIES})\n\nadd_executable(subscriber_node subscriber_node.cpp)\ntarget_link_libraries(subscriber_node ${catkin_LIBRARIES})\n</code></pre> Bash<pre><code>cd ~/hello_ros\ncatkin_make\nsource devel/setup.bash\n</code></pre> </li> <li> <p>\u8fd0\u884c</p> Bash<pre><code>roscore\nrosrun hello publisher_node\nrosrun hello subscriber_node\n</code></pre> </li> </ol>"},{"location":"src/cpp/sqlpp11/","title":"\ud83d\udce6 sqlpp11","text":""},{"location":"src/cpp/sqlpp11/#_1","title":"\u53c2\u8003","text":"<ul> <li>sqlpp11</li> </ul>"},{"location":"src/cpp/sqlpp11/#_2","title":"\u5b89\u88c5","text":"<ol> <li> <p>\u4e0b\u8f7d</p> </li> <li> <p>\u7f16\u8bd1\u5b89\u88c5</p> Bash<pre><code>cmake -B build\nsudo cmake --build build --target install -- -j$(nproc)\n</code></pre> </li> <li> <p>\u7f16\u8bd1\u8fd0\u884c</p> Bash<pre><code>g++ a.cc\n</code></pre> </li> </ol>"},{"location":"src/cpp/stl/","title":"STL","text":""},{"location":"src/cpp/stl/#_1","title":"\u53c2\u8003","text":"<ul> <li>C++ STL Tutorial</li> </ul>"},{"location":"src/cpp/stl/#jiaostl","title":"jiao::STL","text":"<ul> <li>\u9a84\u9a84\u7684 C++ \u6807\u51c6\u5e93</li> </ul>"},{"location":"src/cpp/stl/#_2","title":"\u5bb9\u5668\uff1a\u5e8f\u5217","text":""},{"location":"src/cpp/stl/#vector","title":"vector","text":"<ul> <li> <p>\u53ef\u4ee5\u81ea\u52a8\u6269\u5c55\u5927\u5c0f\u7684\u52a8\u6001\u6570\u7ec4\u3002</p> </li> <li> <p>\u5176\u6269\u5bb9\u89c4\u5219\u4e3a\uff1a</p> <ul> <li> <p>\u5f53\u6570\u7ec4\u5927\u5c0f\u4e0d\u591f\u5bb9\u7eb3\u65b0\u7684\u5143\u7d20\u65f6\uff0c<code>new</code> \u4e00\u7247\u66f4\u5927\u7684\u7a7a\u95f4\uff0c\u5c06\u65e7\u7684\u5143\u7d20\u590d\u5236\u8fc7\u53bb\uff1b</p> </li> <li> <p>\u66f4\u5927\u7a7a\u95f4\u7684\u5927\u5c0f\u4e0d\u786e\u5b9a\uff0c\u4e00\u822c\u4e3a\u65e7\u7a7a\u95f4\u7684 \\(1.5\\) \u500d\u6216 \\(2\\) \u500d\u3002</p> </li> </ul> </li> </ul> <p>\u521b\u5efa</p> C++<pre><code>vector&lt;int&gt; v();            // \u7a7a\u6570\u7ec4\nvector&lt;int&gt; v(10);          // 10\u4e2a\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f0\nvector&lt;int&gt; v(10, 1);       // 10\u4e2a\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f1\nvector&lt;int&gt; v(v0);          // \u62f7\u8d1d\u6784\u9020\u51fd\u6570\nvector&lt;int&gt; v({1, 2, 3});   // \u521d\u59cb\u5316\u5217\u8868\n</code></pre> <p>\u7a7a\u95f4</p> C++<pre><code>v.size();           // \u5b9e\u9645\u5b58\u50a8\u7684\u5143\u7d20\u6570\u91cf\nv.capacity();       // \u9884\u5148\u5206\u914d\u7684\u53ef\u7528\u5143\u7d20\u6570\u91cf\uff0c\u5360\u7528\u5185\u5b58\nv.resize(10);       // \u8c03\u6574\u5bb9\u5668\u5927\u5c0f\u4e3a 10\nv.shrink_to_fit();  // \u91ca\u653e\u672a\u4f7f\u7528\u7684\u5185\u5b58\n</code></pre> <ul> <li> <p><code>resize(n)</code> \u7b49\u4ef7\u4e8e <code>resize(n, 0)</code>\uff1a</p> <ul> <li> <p>\u5982\u679c\u5df2\u6709\u5143\u7d20\uff0c\u5219\u4e0d\u53d8\uff1b</p> </li> <li> <p>\u5982\u679c\u6ca1\u6709\u5143\u7d20\uff0c\u5219\u8d4b\u503c\u4e3a <code>0</code> \u6216\u81ea\u5b9a\u4e49\u7684\u503c\uff1b</p> </li> <li> <p>\u5982\u679c\u8c03\u6574\u4e86\u4e00\u4e2a\u66f4\u5c0f\u7684\u503c\uff0c\u5176\u5b9e\u53ea\u662f\u5c06 <code>end()</code> \u524d\u79fb\u4e86\u3002</p> <ul> <li> <p>\u8d8a\u754c\u8bbf\u95ee\u4ecd\u7136\u53ef\u4ee5\u8bbf\u95ee\u5230\u5143\u7d20\uff0c<code>size()</code> \u53d8\u4e86\uff0c<code>capacity()</code> \u6ca1\u53d8\uff1b</p> </li> <li> <p><code>push_back</code> \u4f1a\u8986\u76d6\u4e4b\u524d\u7684\u503c\uff1b</p> </li> <li> <p>\u53ef\u4ee5\u901a\u8fc7 <code>shrink_to_fit()</code> \u91ca\u653e\u7a7a\u95f4\uff1b</p> </li> </ul> </li> </ul> </li> </ul> <p></p>"},{"location":"src/cpp/stl/#deque","title":"deque","text":""},{"location":"src/cpp/stl/#array","title":"array","text":""},{"location":"src/cpp/stl/#list","title":"list","text":""},{"location":"src/cpp/stl/#forward_list","title":"forward_list","text":""},{"location":"src/cpp/stl/#_3","title":"\u5bb9\u5668\uff1a\u5173\u8054","text":""},{"location":"src/cpp/stl/#_4","title":"\u5bb9\u5668\uff1a\u65e0\u5e8f\u5173\u8054","text":""},{"location":"src/cpp/stl/#_5","title":"\u8fed\u4ee3\u5668","text":""},{"location":"src/cpp/stl/#_6","title":"\u7b97\u6cd5","text":""},{"location":"src/cpp/stl/#_7","title":"\u51fd\u6570\u5bf9\u8c61","text":""},{"location":"src/cpp/stl/#_8","title":"\u914d\u63a5\u5668","text":""},{"location":"src/cpp/stl/#_9","title":"\u5185\u5b58\u5206\u914d\u5668","text":""},{"location":"src/cpp/subprocess/","title":"\ud83d\udce6 subprocess","text":""},{"location":"src/cpp/subprocess/#_1","title":"\u53c2\u8003","text":"<ul> <li>subprocess</li> </ul>"},{"location":"src/cpp/subprocess/#_2","title":"\ud83d\udce6 subprocess","text":""},{"location":"src/cpp/taskflow/","title":"\ud83d\udce6 taskflow","text":""},{"location":"src/cpp/taskflow/#_1","title":"\u53c2\u8003","text":"<ul> <li>taskflow</li> </ul>"},{"location":"src/cpp/taskflow/#_2","title":"\ud83d\udce6 taskflow","text":""},{"location":"src/cpp/thread/","title":"Thread","text":""},{"location":"src/cpp/thread/#0","title":"0 \u5173\u4e8e\u6b64\u6587","text":"<p>\u5bf9 C++ \u7684\u8865\u5145</p> <ul> <li>\u4ee5 \u300aC++ \u5e76\u53d1\u7f16\u7a0b\u5b9e\u6218\u300b \u4e3a\u4e3b\u7ebf</li> </ul> <p></p>"},{"location":"src/cpp/thread/#1-c","title":"1 \u4f60\u597d\uff0cC++\u7684\u5e76\u53d1\u4e16\u754c","text":""},{"location":"src/cpp/thread/#_1","title":"\u5e76\u53d1\u4e0e\u5e76\u884c","text":"<ol> <li> <p>\u5e76\u53d1\uff08Concurrency\uff09\u662f\u903b\u8f91\u4e0a\u7684\uff0c\u5e76\u884c\uff08Parallelism\uff09\u662f\u7269\u7406\u4e0a\u7684\u3002</p> <ul> <li> <p>\u5e76\u53d1\u662f\u6307\u4e00\u4e2a \u65f6\u95f4\u6bb5 \u5185\u6709\u591a\u4e2a\u7a0b\u5e8f\u5728\u540c\u4e00\u4e2a\u5904\u7406\u5668\u4e0a\u8fd0\u884c</p> </li> <li> <p>\u5e76\u884c\u662f\u6307\u591a\u4e2a\u5904\u7406\u5668\u6216\u8005\u662f\u591a\u6838\u7684\u5904\u7406\u5668 \u540c\u4e00\u65f6\u523b \u8fd0\u884c\u591a\u4e2a\u7a0b\u5e8f</p> </li> </ul> <p>\u5f53\u5173\u6ce8\u7684\u91cd\u70b9\u5728\u4e8e\u4efb\u52a1\u5206\u79bb\u6216\u4efb\u52a1\u54cd\u5e94\u65f6\uff0c\u5c31\u4f1a\u8ba8\u8bba\u5230\u7a0b\u5e8f\u7684\u5e76\u53d1\u6027 \u5728\u8ba8\u8bba\u4f7f\u7528\u5f53\u524d\u53ef\u7528\u786c\u4ef6\u6765\u63d0\u9ad8\u6279\u91cf\u6570\u636e\u5904\u7406\u7684\u901f\u5ea6\u65f6\uff0c\u6211\u4eec\u4f1a\u8ba8\u8bba\u7a0b\u5e8f\u7684\u5e76\u884c\u6027</p> </li> <li> <p>\u5e76\u53d1\u5305\u542b\u5e76\u884c</p> <ul> <li> <p>\u5e76\u53d1\u662f\u6307\u5728\u540c\u4e00\u65f6\u523b\u6709\u591a\u4e2a\u7ebf\u7a0b\u5728\u540c\u4e00\u4e2a\u5904\u7406\u5668\u4e0a\u4ea4\u66ff\u8fd0\u884c</p> </li> <li> <p>\u5982\u679c\u6709\u591a\u4e2a\u5904\u7406\u5668\uff0c\u90a3\u4e48\u8fd9\u4e9b\u7ebf\u7a0b\u53ef\u80fd\u4f1a\u540c\u65f6\u8fd0\u884c\uff0c\u6b64\u65f6\u5e76\u53d1\u5305\u542b\u4e86\u5e76\u884c</p> </li> </ul> </li> <li> <p>\u5e76\u53d1\u9002\u7528\u4e8e I/O \u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u5e76\u884c\u9002\u7528\u4e8e CPU \u5bc6\u96c6\u578b\u4efb\u52a1</p> </li> </ol> <p></p>"},{"location":"src/cpp/thread/#_2","title":"\u4e3a\u4ec0\u4e48\u4f7f\u7528\u5e76\u53d1","text":"<ol> <li> <p>\u4e3a\u4e86\u5206\u79bb\u5173\u6ce8\u70b9</p> <ul> <li>\u901a\u8fc7\u5e76\u53d1\uff0c\u53ef\u4ee5\u5c06\u7a0b\u5e8f\u5206\u89e3\u4e3a\u591a\u4e2a\u72ec\u7acb\u7684\u4efb\u52a1\uff0c\u6bcf\u4e2a\u4efb\u52a1\u90fd\u53ef\u4ee5\u72ec\u7acb\u5730\u6267\u884c</li> </ul> </li> <li> <p>\u4e3a\u4e86\u6027\u80fd</p> </li> </ol> <p></p>"},{"location":"src/cpp/thread/#2","title":"2 \u7ebf\u7a0b\u7ba1\u7406","text":""},{"location":"src/cpp/thread/#thread","title":"\u542f\u52a8\u7ebf\u7a0b thread","text":"<p><code>std::thread</code> \u63a5\u53d7\u591a\u79cd\u53ef\u8c03\u7528\u5bf9\u8c61</p> <ol> <li>\u666e\u901a\u51fd\u6570</li> </ol> C++<pre><code>void f(int n) {\n  for (int i = 1; i &lt;= n; i++)\n    std::cout &lt;&lt; i &lt;&lt; std::endl;\n}\n\nint main() {\n  std::thread t1(f, 1e3);   // \u521b\u5efa\u7ebf\u7a0b t1\n  // \u8c03\u7528\u7684\u51fd\u6570\u662f f\n  // \u4f20\u9012\u7684\u53c2\u6570\u662f 1e3\n  t1.join();\n  return 0;\n}\n</code></pre> <ol> <li>\u6210\u5458\u51fd\u6570</li> </ol> C++<pre><code>class A {\npublic:\n  void f(int n) {\n    for (int i = 1; i &lt;= n; i++)\n      std::cout &lt;&lt; i &lt;&lt; std::endl;\n  }\n};\n\nint main() {\n  A a;\n  std::thread t1(&amp;A::f, &amp;a, 1e3);  // \u521b\u5efa\u7ebf\u7a0b t1\n  // \u8c03\u7528\u7684\u51fd\u6570\u662f A::f\n  // \u8c03\u7528\u7684\u5bf9\u8c61\u662f a\n  // \u4f20\u9012\u7684\u53c2\u6570\u662f 1e3\n  t1.join();\n  return 0;\n}\n</code></pre> <ol> <li>\u51fd\u6570\u6307\u9488</li> </ol> C++<pre><code>void f(int n) {\n  for (int i = 1; i &lt;= n; i++)\n    std::cout &lt;&lt; i &lt;&lt; std::endl;\n}\n\nint main() {\n  void (*p)(int) = f;\n  std::thread t1(p, 1e3);   // \u521b\u5efa\u7ebf\u7a0b t1\n  // \u8c03\u7528\u7684\u51fd\u6570\u662f f\n  // \u4f20\u9012\u7684\u53c2\u6570\u662f 1e3\n  t1.join();\n  return 0;\n}\n</code></pre> <ol> <li>\u51fd\u6570\u5bf9\u8c61</li> </ol> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;thread&gt;\n\nclass A {\npublic:\n  void operator()(int n) {\n    for (int i = 1; i &lt;= n; i++)\n      std::cout &lt;&lt; i &lt;&lt; std::endl;\n  }\n};\n\nint main() {\n  A a;\n  std::thread t1(a, 1e3);   // \u521b\u5efa\u7ebf\u7a0b t1\n  // \u8c03\u7528\u7684\u51fd\u6570\u662f f\n  // \u4f20\u9012\u7684\u53c2\u6570\u662f 1e3\n  std::thread t2{A(), 1e3};\n  // \u8c03\u7528\u7684\u662f A \u7684\u4e34\u65f6\u5bf9\u8c61\n  // \u4f20\u9012\u7684\u53c2\u6570\u662f 1e3\n  t1.join();\n  t2.join();\n  return 0;\n}\n</code></pre> <ol> <li><code>Lambda</code></li> </ol> C++<pre><code>int main() {\n  std::thread t1(\n      [](int n) {\n        for (int i = 1; i &lt;= n; i++)\n          std::cout &lt;&lt; i &lt;&lt; std::endl;\n      },\n      1e3); // \u521b\u5efa\u7ebf\u7a0b t1\n  // \u8c03\u7528\u7684\u51fd\u6570\u662f lambda\n  // \u4f20\u9012\u7684\u53c2\u6570\u662f 1e3\n  t1.join();\n  return 0;\n}\n</code></pre> <ol> <li><code>std::function</code></li> </ol> C++<pre><code>void f(int n) {\n  for (int i = 1; i &lt;= n; i++)\n    std::cout &lt;&lt; i &lt;&lt; std::endl;\n}\n\nint main() {\n  std::function&lt;void(int)&gt; func = f;\n  std::thread t1(func, 1e3); // \u521b\u5efa\u7ebf\u7a0b t1\n  // \u8c03\u7528\u7684\u51fd\u6570\u662f func\n  // \u4f20\u9012\u7684\u53c2\u6570\u662f 1e3\n  t1.join();\n  return 0;\n}\n</code></pre> <ol> <li><code>std::bind</code></li> </ol> C++<pre><code>void f(int n) {\n  for (int i = 1; i &lt;= n; i++)\n    std::cout &lt;&lt; i &lt;&lt; std::endl;\n}\n\nint main() {\n  auto func = std::bind(f, 1e3);\n  std::thread t1(func); // \u521b\u5efa\u7ebf\u7a0b t1\n  // \u8c03\u7528\u7684\u51fd\u6570\u662f func\n  // \u4f20\u9012\u7684\u53c2\u6570\u662f 1e3\n  t1.join();\n  return 0;\n}\n</code></pre> <p></p>"},{"location":"src/cpp/thread/#detach","title":"\u5206\u79bb\u7ebf\u7a0b detach","text":""},{"location":"src/cpp/thread/#join","title":"\u7b49\u5f85\u7ebf\u7a0b join","text":""},{"location":"src/cpp/thread/#thread_1","title":"thread","text":""},{"location":"src/cpp/thread/#thread_2","title":"thread\uff1a\u7ebf\u7a0b","text":"<ul> <li><code>join</code> \u65b9\u5f0f\uff1a\u7b49\u5f85\u7ebf\u7a0b\u7ed3\u675f\uff0c\u518d\u7ee7\u7eed\u6267\u884c\u3002</li> <li><code>detach</code> \u65b9\u5f0f\uff1a\u5206\u79bb\u7ebf\u7a0b\uff0c\u7ebf\u7a0b\u7ed3\u675f\u540e\u81ea\u52a8\u56de\u6536\u8d44\u6e90\u3002</li> </ul> <p>C++<pre><code>#include &lt;iostream&gt;\n#include &lt;thread&gt;\nusing namespace std;\n\nvoid func(int i){\n    cout &lt;&lt; \"hello \"&lt;&lt; i &lt;&lt;\" Thread\" &lt;&lt; endl;\n}\n\nint main(){\n    thread (func, 1).detach();  // \u521b\u5efa\u533f\u540d\u7ebf\u7a0b\u5e76\u5206\u79bb\n                                // \u4e3b\u7ebf\u7a0b\u7ed3\u675f\uff0c\u6b64\u7ebf\u7a0b\u4e5f\u4f1a\u7ed3\u675f\n    thread t(func, 2);  // \u521b\u5efa\u7ebf\u7a0b t\n    t.join();           // \u7b49\u5f85\u7ebf\u7a0b t \u7ed3\u675f\n    return 0;\n}\n</code></pre> \u4e3b\u51fd\u6570\u521b\u5efa\u4e86\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u7136\u540e\u5206\u79bb\uff0c\u4e3b\u51fd\u6570\u7ed3\u675f\uff0c\u7ebf\u7a0b\u4e5f\u7ed3\u675f\u3002 \u4e3b\u51fd\u6570\u521b\u5efa\u4e86\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u7136\u540e\u7b49\u5f85\uff0c\u4e3b\u51fd\u6570\u7ed3\u675f\uff0c\u7ebf\u7a0b\u4e5f\u7ed3\u675f\u3002</p>"},{"location":"src/cpp/thread/#this_thread","title":"this_thread\uff1a\u7ebf\u7a0b\u672c\u8eab","text":""},{"location":"src/cpp/thread/#mutex","title":"mutex","text":""},{"location":"src/cpp/thread/#mutex_1","title":"mutex\uff1a\u4e92\u65a5\u91cf","text":"<ul> <li><code>lock</code>\uff1a\u4e0a\u9501\u3002</li> <li><code>unlock</code>\uff1a\u89e3\u9501\u3002</li> </ul> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;thread&gt;\n#include &lt;mutex&gt;\nusing namespace std;\n\nint value;  // \u5206\u522b\u5bf9\u6b64\u53d8\u91cf\u8fdb\u884c\u52a0 [1,1e6] \u548c\u51cf [1,1e6] \u64cd\u4f5c\nint m_value;// \u4e92\u65a5\u9501\u4fdd\u62a4\u7684\u53d8\u91cf\uff0c\u540c\u6837\u8fdb\u884c\u52a0\u51cf\u64cd\u4f5c\nmutex mtx;  // \u4e92\u65a5\u9501\n\nvoid add(){\n    for(int i = 1; i &lt;= 1e6; i++) value++;\n}\n\nvoid sub(){\n    for(int i = 1; i &lt;= 1e6; i++) value--;\n}\n\nvoid m_add(){\n    for(int i = 1; i &lt;= 1e6; i++){\n        mtx.lock();   // \u4e0a\u9501\n        m_value++;\n        mtx.unlock(); // \u89e3\u9501\n    }\n}\n\nvoid m_sub(){\n    for(int i = 1; i &lt;= 1e6; i++){\n        mtx.lock();   // \u4e0a\u9501\n        m_value--;\n        mtx.unlock(); // \u89e3\u9501\n    }\n}\n\nint main(){\n    thread t1 (add);\n    thread t2 (sub);\n    t1.join();\n    t2.join();\n    cout&lt;&lt;value&lt;&lt;endl;\n\n    thread t3 (m_add);\n    thread t4 (m_sub);\n    t3.join();\n    t4.join();\n    cout&lt;&lt;m_value&lt;&lt;endl;\n    return 0;\n}\n</code></pre> <p>\u4e3b\u51fd\u6570\u9996\u5148\u521b\u5efa\u4e86\u4e24\u4e2a\u7ebf\u7a0b\uff0c\u5206\u522b\u5bf9 value \u8fdb\u884c\u52a0\u51cf\u64cd\u4f5c\uff0c\u7136\u540e\u8f93\u51fa value \u7684\u503c\u3002 \u5728\u52a0\u51cf\u64cd\u4f5c\u4e2d\uff0c\u6ca1\u6709\u5bf9 value \u8fdb\u884c\u4fdd\u62a4\uff0c\u6240\u4ee5\u6700\u540e\u8f93\u51fa\u7684 value \u7684\u503c\u4e0d\u4e00\u5b9a\u662f 0\u3002</p> <p>\u4e3b\u51fd\u6570\u63a5\u7740\u521b\u5efa\u4e86\u4e24\u4e2a\u7ebf\u7a0b\uff0c\u5206\u522b\u5bf9 m_value \u8fdb\u884c\u52a0\u51cf\u64cd\u4f5c\uff0c\u7136\u540e\u8f93\u51fa m_value \u7684\u503c\u3002 \u5728\u52a0\u51cf\u64cd\u4f5c\u4e2d\uff0c\u5bf9 m_value \u8fdb\u884c\u4e86\u4fdd\u62a4\uff0c\u6240\u4ee5\u6700\u540e\u8f93\u51fa\u7684 m_value \u7684\u503c\u4e00\u5b9a\u662f 0\u3002</p>"},{"location":"src/cpp/thread/#lock_guard","title":"lock_guard\uff1a\u9501\u4fdd\u62a4","text":"<p>\u7b80\u5355\u7406\u89e3\uff0c\u4f5c\u7528\u57df\u5185\u81ea\u52a8\u4e0a\u9501\u89e3\u9501\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;thread&gt;\n#include &lt;mutex&gt;\nusing namespace std;\n\nmutex mtx;  // \u9501\nint value = 0;\n\nvoid add(int i){\n    for(int i=1; i&lt;=1e6; i++){\n        lock_guard&lt;mutex&gt; lock(mtx);  // \u52a0\u9501\n        value++;\n    }\n}\n\nvoid sub(int i){\n    for(int i=1; i&lt;=1e6; i++){\n        lock_guard&lt;mutex&gt; lock(mtx);  // \u52a0\u9501\n        value--;\n    }\n}\n\nint main(){\n    thread t1(add, 1);\n    thread t2(sub, 2);\n    t1.join();\n    t2.join();\n    cout &lt;&lt; value &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>\u4e3b\u51fd\u6570\u521b\u5efa\u4e86\u4e24\u4e2a\u7ebf\u7a0b\uff0c\u5206\u522b\u5bf9 value \u8fdb\u884c\u52a0\u51cf\u64cd\u4f5c\uff0c\u7136\u540e\u8f93\u51fa value \u7684\u503c\u3002 \u5728\u52a0\u51cf\u64cd\u4f5c\u4e2d\uff0c\u4f7f\u7528 lock_guard lock(mtx) \u5bf9 value \u8fdb\u884c\u4fdd\u62a4\uff0c\u6240\u4ee5\u6700\u540e\u8f93\u51fa\u7684 value \u7684\u503c\u4e00\u5b9a\u662f 0\u3002"},{"location":"src/cpp/thread/#unique_lock","title":"unique_lock\uff1a\u72ec\u5360\u9501","text":"<p>\u76f8\u8f83\u4e8e lock_guard\uff0cunique_lock \u66f4\u52a0\u7075\u6d3b\uff0c\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u529f\u80fd\u3002</p> <p>\u5ef6\u8fdf\u9501\u5b9a</p> <p>\u5728\u6784\u5efa unique_lock \u5bf9\u8c61\u65f6\uff0c\u53ef\u4ee5\u6307\u5b9a\u53c2\u6570 <code>std::defer_lock</code>\uff0c\u8868\u793a\u5ef6\u8fdf\u9501\u5b9a\uff0c\u5373\u4e0d\u4e0a\u9501\u3002 \u5728\u540e\u9762\u9700\u8981\u4e0a\u9501\u65f6\uff0c\u8c03\u7528 <code>lock</code> \u65b9\u6cd5\u5373\u53ef\u3002</p> C++<pre><code>#include &lt;mutex&gt;\n\nstd::mutex mtx; // \u4e00\u4e2a\u4e92\u65a5\u9501\n\nvoid f(){\n    std::unique_lock&lt;std::mutex&gt; lock(mtx, std::defer_lock); // \u5ef6\u8fdf\u9501\u5b9a\n    // \u6267\u884c\u4e00\u4e9b\u4e0d\u9700\u8981\u4e92\u65a5\u8bbf\u95ee\u7684\u64cd\u4f5c\n    lock.lock();    // \u5728\u9700\u8981\u65f6\u624b\u52a8\u4e0a\u9501\n    // \u6267\u884c\u9700\u8981\u4e92\u65a5\u8bbf\u95ee\u7684\u64cd\u4f5c\n}   // \u5728\u4f5c\u7528\u57df\u7ed3\u675f\u65f6\u81ea\u52a8\u89e3\u9501\n\nint main() {\n    f();\n    return 0;\n}\n</code></pre> <p>\u9012\u5f52\u9501\u5b9a</p> <p><code>std::unique_lock</code> \u5141\u8bb8\u540c\u4e00\u4e2a\u7ebf\u7a0b\u591a\u6b21\u4e0a\u9501\u540c\u4e00\u4e2a\u4e92\u65a5\u9501\uff0c\u5373\u9012\u5f52\u9501\u5b9a\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7ebf\u7a0b\u9700\u8981\u5728\u89e3\u9501\u65f6\u6b63\u786e\u5730\u8fdb\u884c\u76f8\u5e94\u6b21\u6570\u7684\u89e3\u9501\u64cd\u4f5c\uff0c\u5426\u5219\u4e92\u65a5\u9501\u4e0d\u4f1a\u88ab\u89e3\u9501\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;mutex&gt;\n\nstd::recursive_mutex mtx; // \u4e00\u4e2a\u9012\u5f52\u4e92\u65a5\u9501\n\nvoid recursiveFunction(int depth) {\n    std::unique_lock&lt;std::recursive_mutex&gt; lock(mtx, std::defer_lock);\n    if (depth &gt; 0) {\n        lock.lock(); // \u624b\u52a8\u4e0a\u9501\n        std::cout &lt;&lt; \"Depth: \" &lt;&lt; depth &lt;&lt; std::endl;\n        recursiveFunction(depth - 1); // \u9012\u5f52\u8c03\u7528\n    }\n}\n\nint main() {\n    recursiveFunction(3);\n    return 0;\n}\n</code></pre>"},{"location":"src/cpp/thread/#atomic","title":"atomic","text":"<p>\u539f\u5b50\u64cd\u4f5c\u662f\u4e00\u79cd\u4e0d\u53ef\u88ab\u4e2d\u65ad\u7684\u64cd\u4f5c\uff0c\u8981\u4e48\u5168\u90e8\u6267\u884c\uff0c\u8981\u4e48\u5b8c\u5168\u4e0d\u6267\u884c\uff0c\u4e0d\u4f1a\u51fa\u73b0\u5728\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\u88ab\u5176\u4ed6\u7ebf\u7a0b\u5e72\u6270\u7684\u60c5\u51b5\u3002\u5728\u5e76\u53d1\u7f16\u7a0b\u4e2d\uff0c\u539f\u5b50\u64cd\u4f5c\u662f\u786e\u4fdd\u6570\u636e\u4e00\u81f4\u6027\u548c\u907f\u514d\u7ade\u6001\u6761\u4ef6\u7684\u5173\u952e\u3002</p>"},{"location":"src/cpp/thread/#atomic_1","title":"atomic\uff1a\u539f\u5b50\u64cd\u4f5c","text":"<p>\u5305\u88c5\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u63d0\u4f9b\u539f\u5b50\u6027\u7684\u8bfb\u53d6\u3001\u4fee\u6539\u3001\u64cd\u4f5c\u3002</p> <p>\u52a0\u51cf\u3001\u4e0e\u975e\u3001\u5f02\u6216</p> C++<pre><code>#include &lt;atomic&gt;\n#include &lt;iostream&gt;\n\nstd::atomic&lt;int&gt; counter(-2); // \u521b\u5efa\u4e00\u4e2a\u539f\u5b50\u6574\u6570\n\nvoid increment() {\n    counter.fetch_add(1, std::memory_order_relaxed); // \u539f\u5b50\u6027\u5730\u589e\u52a0\u8ba1\u6570\u5668\u7684\u503c\n}\n\nint main() {\n    increment();\n    std::cout &lt;&lt; counter.load(std::memory_order_acquire) &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre> <p>\u539f\u5b50\u52a0\u8f7d\u548c\u5b58\u50a8</p> C++<pre><code>#include &lt;atomic&gt;\n#include &lt;iostream&gt;\n\nstd::atomic&lt;int&gt; value(42);\n\nint readValue() {\n    return value.load(std::memory_order_acquire); // \u539f\u5b50\u52a0\u8f7d\u64cd\u4f5c\n}\n\nvoid modifyValue(int newValue) {\n    value.store(newValue, std::memory_order_release); // \u539f\u5b50\u5b58\u50a8\u64cd\u4f5c\n}\n\nint main() {\n    modifyValue(43);\n    std::cout &lt;&lt; readValue() &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre> <p>\u6bd4\u8f83\u4ea4\u6362</p> <ul> <li>\u540c\u6b65\u539f\u8bed</li> <li>\u65e0\u9501\u6570\u636e\u7ed3\u6784</li> <li>\u89e3\u51b3\u7ade\u6001\u6761\u4ef6</li> <li>\u4e50\u89c2\u9501</li> </ul>"},{"location":"src/cpp/thread/#atomic_flag","title":"atomic_flag\uff1a\u8f7b\u91cf\u7ea7\u539f\u5b50\u64cd\u4f5c","text":""},{"location":"src/cpp/thread/#condition_variable","title":"condition_variable","text":"<p>\u6761\u4ef6\u53d8\u91cf\uff0c\u5141\u8bb8\u7ebf\u7a0b\u7b49\u5f85\u67d0\u4e2a\u7279\u5b9a\u6761\u4ef6\u5f97\u5230\u6ee1\u8db3\uff0c\u7136\u540e\u518d\u7ee7\u7eed\u6267\u884c\u3002 \u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u963b\u585e\u673a\u5236\uff0c\u5f53\u67d0\u4e2a\u6761\u4ef6\u4e0d\u6ee1\u8db3\u65f6\uff0c\u7ebf\u7a0b\u53ef\u4ee5\u7b49\u5f85\u5728\u6761\u4ef6\u53d8\u91cf\u4e0a\uff0c\u76f4\u5230\u5176\u4ed6\u7ebf\u7a0b\u901a\u77e5\u5b83\u6ee1\u8db3\u6761\u4ef6\u3002</p>"},{"location":"src/cpp/thread/#condition_variable_1","title":"condition_variable\uff1a\u6761\u4ef6\u53d8\u91cf","text":""},{"location":"src/cpp/thread/#condition_variable_any","title":"condition_variable_any\uff1a\u901a\u7528\u6761\u4ef6\u53d8\u91cf","text":""},{"location":"src/cpp/thread/#future","title":"future","text":""},{"location":"src/cpp/thread/#future_1","title":"future\uff1a\u5f02\u6b65\u64cd\u4f5c","text":""},{"location":"src/cpp/thread/#shared_future","title":"shared_future\uff1a\u5171\u4eab\u5f02\u6b65\u64cd\u4f5c","text":""},{"location":"src/cpp/thread/#promise","title":"promise\uff1a\u5f02\u6b65\u64cd\u4f5c","text":""},{"location":"src/cpp/thread/#packaged_task","title":"packaged_task\uff1a\u5f02\u6b65\u64cd\u4f5c","text":"<p>\u5eb7\u5eb7</p>"},{"location":"src/cpp/thread/#_3","title":"\u7ebf\u7a0b\u6c60","text":"<ol> <li>\u7ebf\u7a0b\u7ba1\u7406\u8005</li> </ol> <p>\u521d\u59cb\u5316\u3001\u521b\u5efa\u7ebf\u7a0b\uff0c\u542f\u52a8\u3001\u505c\u6b62\u7ebf\u7a0b\uff0c\u8c03\u914d\u4efb\u52a1\u3002</p> <ol> <li>\u5de5\u4f5c\u7ebf\u7a0b</li> </ol> <p>\u6267\u884c\u4efb\u52a1\u3002</p> <ol> <li>\u4efb\u52a1\u961f\u5217</li> </ol> <p>\u5b58\u653e\u4efb\u52a1\u3002\u4e00\u79cd\u7f13\u51b2\u673a\u5236\uff0c\u5e73\u8861\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u7684\u901f\u5ea6\u5dee\u5f02\u3002</p>"},{"location":"src/cs/cs/","title":"CS","text":"\ud83d\udd2d       Sci-Hub   \u514d\u8d39\u77e5\u7f51   \u8c37\u6b4c\u5b66\u672f   \u767e\u5ea6\u5b66\u672f"},{"location":"src/cs/historyOfChina/","title":"1840 - 1919 \u65e7\u6c11\u4e3b\u4e3b\u4e49\u65f6\u671f","text":""},{"location":"src/cs/historyOfChina/#18396","title":"1839.6 \u864e\u95e8\u9500\u70df","text":""},{"location":"src/cs/historyOfChina/#18406","title":"1840.6 \u9e26\u7247\u6218\u4e89","text":""},{"location":"src/cs/historyOfChina/#18428","title":"1842.8 \u5357\u4eac\u6761\u7ea6","text":"<ul> <li>\u4e2d\u56fd\u7b7e\u8ba2\u7684\u7b2c\u4e00\u4e2a\u4e0d\u5e73\u7b49\u6761\u7ea6</li> <li>\u6807\u5fd7\u7740\u7b2c\u4e00\u6b21\u9e26\u7247\u6218\u4e89\u7684\u7ed3\u675f</li> <li>\u6807\u5fd7\u7740\u4e2d\u56fd \u534a\u6b96\u6c11\u5730\u534a\u5c01\u5efa \u793e\u4f1a\u7684\u5f00\u59cb</li> </ul> <p>1842\u5e748\u670829\u65e5\uff0c\u6e05\u5ef7\u4ee3\u8868\u94a6\u5dee\u5927\u81e3 \u8006\u82f1\u3001\u4f0a\u91cc\u5e03 \u548c\u5927\u82f1\u4ee3\u8868 \u749e\u9f0e\u67e5 \u5728\u82f1\u519b\u65d7\u8230 \u6c57\u534e\u4e3d\u53f7\uff08\u5eb7\u6c83\u5229\u65af\u53f7\uff09 \u4e0a\u6b63\u5f0f\u7b7e\u8ba2\u300a\u5357\u4eac\u6761\u7ea6\u300b\u3002</p> <p>\u4e3b\u8981\u5185\u5bb9\uff1a 1. \u4e2d\u56fd\u8d54\u6b3e 2100 \u4e07\u94f6\u5143 2. \u5f00\u653e\u4e0a\u6d77\u3001\u798f\u5dde\u3001\u53a6\u95e8\u3001\u5b81\u6ce2\u3001\u5e7f\u5dde\u3001\u9999\u6e2f\u7b49\u4e94\u4e2a\u901a\u5546\u53e3\u5cb8 3. \u6e05\u653f\u5e9c\u5c06\u6c38\u4e45\u5272\u8ba9\u9999\u6e2f\u5c9b\u4e88\u5927\u82f1\u6cbb\u7406\u3002 4. \u4e2d\u56fd\u4e0e\u82f1\u56fd\u7b7e\u8ba2\u6700\u60e0\u56fd\u5f85\u9047\u6761\u6b3e 5. \u82f1\u56fd\u4eba\u5728\u4e2d\u56fd\u4eab\u6709\u6cbb\u5916\u6cd5\u6743</p>"},{"location":"src/cs/historyOfChina/#184310","title":"1843.10 \u864e\u95e8\u6761\u7ea6","text":"<ul> <li>\u4e2d\u56fd\u7b7e\u8ba2\u7684\u7b2c\u4e8c\u4e2a\u4e0d\u5e73\u7b49\u6761\u7ea6</li> </ul> <p>1843\u5e7410\u670824\u65e5\uff0c\u300a\u4e2d\u82f1\u4e94\u53e3\u901a\u5546\u7ae0\u7a0b\u300b\u53ca\u300a\u864e\u95e8\u6761\u7ea6\u300b\uff0c\u4f5c\u4e3a\u300a\u5357\u4eac\u6761\u7ea6\u300b\u7684\u8865\u5145\u6761\u7ea6\u3002</p>"},{"location":"src/cs/historyOfChina/#18511","title":"1851.1 \u592a\u5e73\u5929\u56fd\u8fd0\u52a8","text":"<ul> <li>\u4e2d\u56fd\u7b2c\u4e00\u6b21\u5927\u89c4\u6a21\u7684\u519c\u6c11\u8d77\u4e49</li> <li>\u4fc3\u8fdb\u4e86\u5c01\u5efa\u793e\u4f1a\u7684\u5d29\u6e83\uff0c\u963b\u6b62\u4e86\u4e2d\u56fd\u6b96\u6c11\u5316\u7684\u8fdb\u7a0b</li> </ul> <p>1851\u5e741\u670811\u65e5\uff0c\u7531 \u6d2a\u79c0\u5168\u3001\u6768\u79c0\u6e05\u3001\u8427\u671d\u8d35\u3001\u51af\u4e91\u5c71\u3001\u97e6\u660c\u8f89\u3001\u77f3\u8fbe\u5f00 \u7b49\u7ec4\u6210\u7684\u9886\u5bfc\u96c6\u56e2\u4ece\u5e7f\u897f\u91d1\u7530\u6751\u7387\u5148\u53d1\u8d77\u7684\u53cd\u5bf9\u6e05\u671d\u5c01\u5efa\u7edf\u6cbb\u548c\u5916\u56fd\u8d44\u672c\u4e3b\u4e49\u4fb5\u7565\u7684\u519c\u6c11\u8d77\u4e49\u6218\u4e89\uff0c\u662f19\u4e16\u7eaa\u4e2d\u53f6\u4e2d\u56fd\u6700\u5927\u7684\u4e00\u573a\u5927\u89c4\u6a21\u53cd\u6e05\u8fd0\u52a8\u30021864\u5e74\uff0c\u968f\u7740\u592a\u5e73\u5929\u56fd\u9996\u90fd\u5929\u4eac\uff08\u5357\u4eac\uff09\u7684\u9677\u843d\uff0c\u6807\u5fd7\u7740\u8fd0\u52a8\u5931\u8d25\u3002</p>"},{"location":"src/cs/marx/","title":"\u601d\u7ef4\u5bfc\u56fe","text":""},{"location":"src/cs/marx/#_2","title":"\u4ec0\u4e48\u662f\u54f2\u5b66","text":""},{"location":"src/cs/marx/#wiki","title":"wiki \u7684\u89e3\u91ca\uff1a\u7528\u7406\u6027\u548c\u6279\u5224\u6027\u7684\u65b9\u5f0f\uff0c\u5bf9\u5b58\u5728\u3001\u7406\u6027\u3001\u77e5\u8bc6\u3001\u4ef7\u503c\u3001\u5fc3\u7075\u548c\u8bed\u8a00\u7b49\u4e3b\u9898\u7684\u4e00\u822c\u548c\u57fa\u672c\u95ee\u9898\u7684\u7cfb\u7edf\u7814\u7a76","text":""},{"location":"src/cs/marx/#_3","title":"\u7406\u89e3\u4e3a\u4e00\u4e2a\u52a8\u8bcd\uff0c\u54f2\u5b66\u5c31\u662f\u601d\u8003\u672c\u8eab\uff0c\u8ba4\u8bc6\u4e16\u754c\u7684\u65b9\u5f0f","text":""},{"location":"src/cs/marx/#_4","title":"\u54f2\u5b66\u7684\u57fa\u672c\u95ee\u9898","text":""},{"location":"src/cs/marx/#_5","title":"\u7b2c\u4e00\u6027\uff1a\u552f\u5fc3\u4e3b\u4e49\u4e0e\u552f\u7269\u4e3b\u4e49","text":""},{"location":"src/cs/marx/#_6","title":"\u552f\u5fc3\u4e3b\u4e49","text":""},{"location":"src/cs/marx/#_7","title":"\u4e3b\u89c2\u552f\u5fc3\u4e3b\u4e49","text":""},{"location":"src/cs/marx/#_8","title":"\u5ba2\u89c2\u552f\u5fc3\u4e3b\u4e49","text":""},{"location":"src/cs/marx/#_9","title":"\u552f\u7269\u4e3b\u4e49","text":""},{"location":"src/cs/marx/#_10","title":"\u53e4\u4ee3\u6734\u7d20\u552f\u7269\u4e3b\u4e49","text":""},{"location":"src/cs/marx/#_11","title":"\u8fd1\u4ee3\u5f62\u800c\u4e0a\u5b66\u552f\u7269\u4e3b\u4e49","text":""},{"location":"src/cs/marx/#_12","title":"\u73b0\u4ee3\u9a6c\u514b\u601d\u4e3b\u4e49\u54f2\u5b66","text":""},{"location":"src/cs/marx/#_13","title":"\u540c\u4e00\u6027\uff1a\u53ef\u77e5\u8bba\u548c\u4e0d\u53ef\u77e5\u8bba","text":""},{"location":"src/cs/marx/#_14","title":"\u53ef\u77e5\u8bba\uff1a\u5173\u6ce8\u77e5\u8bc6\u7684\u6765\u6e90\u3001\u6761\u4ef6\u548c\u8303\u56f4\u3002\u901a\u8fc7\u7406\u6027\u601d\u8003\u3001\u611f\u89c9\u3001\u7ecf\u9a8c\u7b49\u65b9\u5f0f\uff0c\u4eba\u7c7b\u53ef\u4ee5\u83b7\u5f97\u771f\u5b9e\u800c\u53ef\u9760\u7684\u77e5\u8bc6","text":""},{"location":"src/cs/marx/#_15","title":"\u4e0d\u53ef\u77e5\u8bba\uff1a\u6301\u6000\u7591\u6216\u5426\u5b9a\u7684\u7acb\u573a\uff0c\u8ba4\u4e3a\u4eba\u7c7b\u65e0\u6cd5\u83b7\u5f97\u53ef\u9760\u7684\u77e5\u8bc6\uff0c\u4eba\u7c7b\u7684\u611f\u77e5\u548c\u7406\u6027\u5b58\u5728\u5c40\u9650\uff0c\u6211\u4eec\u7684\u89c2\u5bdf\u548c\u63a8\u7406\u53ef\u80fd\u53d7\u5230\u9519\u89c9\u3001\u504f\u89c1\u6216\u6709\u9650\u6027\u7684\u5f71\u54cd","text":""},{"location":"src/cs/marx/#_16","title":"\u54f2\u5b66\u7684\u4e3b\u8981\u5206\u652f","text":""},{"location":"src/cs/marx/#_17","title":"\u5f62\u800c\u4e0a\u5b66","text":""},{"location":"src/cs/marx/#_18","title":"\u7814\u7a76\u5b58\u5728\u548c\u73b0\u5b9e\u7684\u672c\u8d28\uff0c\u5305\u62ec\u8ba8\u8bba\u5b58\u5728\u3001\u7269\u8d28\u3001\u65f6\u95f4\u3001\u7a7a\u95f4\u3001\u56e0\u679c\u5173\u7cfb\u548c\u53ef\u80fd\u6027\u7b49\u95ee\u9898","text":""},{"location":"src/cs/marx/#_19","title":"\u4f8b\uff1a\u4ec0\u4e48\u662f\u5b58\u5728\uff1f\u4ec0\u4e48\u662f\u771f\u5b9e\u7684\uff1f\u65f6\u95f4\u548c\u7a7a\u95f4\u7684\u672c\u8d28\u662f\u4ec0\u4e48\uff1f","text":""},{"location":"src/cs/marx/#_20","title":"\u8ba4\u8bc6\u8bba","text":""},{"location":"src/cs/marx/#_21","title":"\u7814\u7a76\u77e5\u8bc6\u7684\u672c\u8d28\u3001\u6765\u6e90\u3001\u8303\u56f4\u548c\u6709\u6548\u6027","text":""},{"location":"src/cs/marx/#_22","title":"\u4f8b\uff1a\u4ec0\u4e48\u662f\u77e5\u8bc6\uff1f\u77e5\u8bc6\u7684\u8fb9\u754c\u5728\u54ea\u91cc\uff1f","text":""},{"location":"src/cs/marx/#_23","title":"\u4f26\u7406\u5b66","text":""},{"location":"src/cs/marx/#_24","title":"\u903b\u8f91\u5b66","text":""},{"location":"src/cs/marx/#_25","title":"\u7f8e\u5b66","text":""},{"location":"src/cs/marx/#_26","title":"\u54f2\u5b66\u4e3b\u4e49","text":""},{"location":"src/cs/marx/#_27","title":"\u4e00\u7cfb\u5217\u601d\u60f3\u6216\u7406\u8bba\u4f53\u7cfb\uff0c\u5b83\u4eec\u4ee5\u7279\u5b9a\u7684\u89c2\u70b9\u3001\u65b9\u6cd5\u6216\u4ef7\u503c\u89c2\u4e3a\u57fa\u7840\uff0c\u5bf9\u4e8e\u7279\u5b9a\u95ee\u9898\u6216\u9886\u57df\u63d0\u51fa\u4e86\u72ec\u7279\u7684\u89e3\u91ca\u6216\u89e3\u51b3\u65b9\u6848","text":""},{"location":"src/cs/marx/#_28","title":"\u4e3b\u4e49\u4e00\u822c\u4f1a\u5305\u542b\u591a\u4e2a\u8bba\uff0c\u4f46\u6709\u65f6\u5019\u4e5f\u6ca1\u6709\u5177\u4f53\u7684\u8bba","text":""},{"location":"src/cs/marx/#_29","title":"\u54f2\u5b66\u7b80\u53f2","text":""},{"location":"src/cs/marx/#_30","title":"\u67cf\u62c9\u56fe","text":""},{"location":"src/cs/marx/#_31","title":"\u7406\u60f3\u4e3b\u4e49","text":""},{"location":"src/cs/marx/#_32","title":"\u4e9a\u91cc\u58eb\u591a\u5fb7","text":""},{"location":"src/cs/marx/#_33","title":"\u5b9e\u5728\u4e3b\u4e49","text":""},{"location":"src/cs/marx/#_34","title":"\u7b1b\u5361\u5c14","text":""},{"location":"src/cs/marx/#_35","title":"\u7406\u6027\u4e3b\u4e49","text":""},{"location":"src/cs/marx/#_36","title":"\u6211\u601d\u6545\u6211\u5728","text":""},{"location":"src/cs/marx/#_37","title":"\u5eb7\u5fb7","text":""},{"location":"src/cs/marx/#_38","title":"\u9ed1\u683c\u5c14","text":""},{"location":"src/cs/marx/#_39","title":"\u8fa9\u8bc1\u552f\u5fc3\u4e3b\u4e49","text":""},{"location":"src/cs/marx/#_40","title":"\u8d39\u5c14\u5df4\u54c8","text":""},{"location":"src/cs/marx/#_41","title":"\u552f\u7269\u4e3b\u4e49","text":""},{"location":"src/cs/marx/#_42","title":"\u5c3c\u91c7","text":""},{"location":"src/cs/marx/#_43","title":"\u8d85\u4eba\u54f2\u5b66","text":""},{"location":"src/cs/marx/#_44","title":"\u9a6c\u514b\u601d","text":""},{"location":"src/cs/marx/#_45","title":"\u552f\u5fc3","text":""},{"location":"src/cs/marx/#_46","title":"\u552f\u5fc3\u4e3b\u4e49\u4e3a\u4f55\u957f\u671f\u5b58\u5728","text":""},{"location":"src/cs/marx/#_47","title":"\u793e\u4f1a\u5386\u53f2\u6839\u6e90\uff0c\u751f\u4ea7\u529b\u4f4e\u4e0b\u548c\u79d1\u5b66\u4e0d\u53d1\u8fbe","text":""},{"location":"src/cs/marx/#_48","title":"\u9636\u7ea7\u6839\u6e90\uff0c\u4fdd\u5b88\u3001\u53cd\u52a8\u7684\u9636\u7ea7\u6216\u96c6\u56e2\u9700\u8981\u548c\u652f\u6301\u552f\u5fc3\u4e3b\u4e49","text":""},{"location":"src/cs/marx/#_49","title":"\u8ba4\u8bc6\u6839\u6e90\uff0c\u5272\u88c2\u4e3b\u89c2\u4e0e\u5ba2\u89c2\u3001\u8ba4\u8bc6\u548c\u5b9e\u8df5\u7684\u8fa9\u8bc1\u5173\u7cfb\uff0c\u7247\u9762\u8ba4\u8bc6\u548c\u5938\u5927\u67d0\u4e00\u65b9\u9762\u6216\u73af\u8282","text":""},{"location":"src/cs/marx/#_50","title":"\u552f\u5fc3\u53f2\u89c2\u7684\u4e3b\u8981\u7f3a\u9677\u662f\u4ec0\u4e48","text":""},{"location":"src/cs/marx/#_51","title":"\u6839\u672c\u5426\u8ba4\u4eba\u4eec\u7fa4\u4f17\u5728\u793e\u4f1a\u5386\u53f2\u53d1\u5c55\u4e2d\u7684\u51b3\u5b9a\u4f5c\u7528","text":""},{"location":"src/cs/marx/#_52","title":"\u6839\u672c\u5426\u8ba4\u4e86\u793e\u4f1a\u5386\u53f2\u7684\u5ba2\u89c2\u89c4\u5f8b\uff0c\u56e0\u4e3a\u4ece\u793e\u4f1a\u610f\u8bc6\u51b3\u5b9a\u793e\u4f1a\u5b58\u5728\u7684\u524d\u63d0\u51fa\u53d1\uff0c\u628a\u793e\u4f1a\u770b\u6210\u662f\u7cbe\u795e\u53d1\u5c55\u53f2","text":""},{"location":"src/cs/marx/#_53","title":"\u53ea\u8003\u5bdf\u4e86\u4eba\u4eec\u6d3b\u52a8\u7684\u601d\u60f3\u52a8\u673a\uff0c\u800c\u6ca1\u6709\u8fdb\u4e00\u6b65\u8003\u7a76\u601d\u60f3\u52a8\u673a\u80cc\u540e\u7684\u7269\u8d28\u52a8\u56e0\u548c\u7ecf\u6d4e\u6839\u6e90","text":""},{"location":"src/cs/marx/#_54","title":"\u5386\u53f2\u552f\u7269\u4e3b\u4e49","text":""},{"location":"src/cs/marx/#_55","title":"\u5386\u53f2\u89c2\u7684\u57fa\u672c\u95ee\u9898","text":""},{"location":"src/cs/marx/#_56","title":"\u793e\u4f1a\u5b58\u5728\uff1a\u4eba\u4eec\u5728\u793e\u4f1a\u4e2d\u7684\u5b9e\u9645\u751f\u6d3b\u72b6\u6001\uff0c\u5305\u62ec\u751f\u4ea7\u6d3b\u52a8\uff0c\u7ecf\u6d4e\u5730\u4f4d\uff0c\u793e\u4f1a\u5173\u7cfb\u7b49","text":""},{"location":"src/cs/marx/#_57","title":"\u793e\u4f1a\u610f\u8bc6\uff1a\u5b97\u6559\u4fe1\u4ef0\uff0c\u9053\u5fb7\u89c4\u8303\uff0c\u827a\u672f\u5f62\u5f0f\u7b49","text":""},{"location":"src/cs/marx/#_58","title":"\u793e\u4f1a\u5b58\u5728\u4e0e\u793e\u4f1a\u610f\u8bc6\u7684\u5173\u7cfb","text":""},{"location":"src/cs/marx/#_59","title":"\u793e\u4f1a\u5b58\u5728\u51b3\u5b9a\u793e\u4f1a\u610f\u8bc6\uff0c\u793e\u4f1a\u610f\u8bc6\u662f\u5bf9\u793e\u4f1a\u5b58\u5728\u7684\u53cd\u6620","text":""},{"location":"src/cs/marx/#_60","title":"\u4eba\u6c11\u7fa4\u4f17","text":""},{"location":"src/cs/marx/#_61","title":"\u8fa9\u8bc1\u552f\u7269\u4e3b\u4e49","text":""},{"location":"src/cs/marx/#_62","title":"\u8fa9\u8bc1\u552f\u7269\u8bba","text":""},{"location":"src/cs/marx/#_63","title":"\u7269\u8d28","text":""},{"location":"src/cs/marx/#_64","title":"\u7269\u8d28\u662f\u5b58\u5728\u7684\u57fa\u672c\u5b9e\u4f53\uff0c\u662f\u6784\u6210\u4e16\u754c\u7684\u6839\u672c\u8981\u7d20","text":""},{"location":"src/cs/marx/#_65","title":"\u7269\u8d28\u5177\u6709\u5ba2\u89c2\u5b58\u5728\u6027\uff0c\u5b83\u662f\u552f\u4e00\u4e0d\u4f9d\u8d56\u4e8e\u4eba\u7c7b\u610f\u8bc6\u800c\u5b58\u5728\u7684\u4e1c\u897f","text":""},{"location":"src/cs/marx/#_66","title":"\u7269\u8d28\u662f\u6c38\u6052\u7684\u3001\u65e0\u9650\u7684\uff0c\u662f\u7269\u8d28\u4e16\u754c\u7684\u672c\u6e90","text":""},{"location":"src/cs/marx/#_67","title":"\u610f\u8bc6","text":""},{"location":"src/cs/marx/#_68","title":"\u610f\u8bc6\u662f\u7269\u8d28\u7279\u6b8a\u5f62\u5f0f\u7684\u53cd\u6620","text":""},{"location":"src/cs/marx/#_69","title":"\u610f\u8bc6\u662f\u7531\u7269\u8d28\u53d1\u5c55\u5230\u4e00\u5b9a\u9636\u6bb5\u65f6\u4ea7\u751f\u7684\uff0c\u662f\u7269\u8d28\u4e16\u754c\u5185\u90e8\u77db\u76fe\u8fd0\u884c\u7684\u4ea7\u7269","text":""},{"location":"src/cs/marx/#_70","title":"\u610f\u8bc6\u5177\u6709\u5ba2\u89c2\u6027\u548c\u793e\u4f1a\u6027\uff0c\u5b83\u53d7\u5230\u793e\u4f1a\u548c\u5386\u53f2\u6761\u4ef6\u7684\u5236\u7ea6\u548c\u5f71\u54cd","text":""},{"location":"src/cs/marx/#_71","title":"\u7269\u8d28\u4e0e\u610f\u8bc6\u7684\u8fa9\u8bc1\u5173\u7cfb","text":""},{"location":"src/cs/marx/#_72","title":"\u4ed6\u4eec\u76f8\u4e92\u4f9d\u5b58\uff0c\u76f8\u4e92\u4f5c\u7528\uff0c\u7269\u8d28\u51b3\u5b9a\u610f\u8bc6\uff0c\u610f\u8bc6\u53cd\u4f5c\u7528\u4e8e\u7269\u8d28","text":""},{"location":"src/cs/marx/#_73","title":"\u7269\u8d28\u662f\u610f\u8bc6\u7684\u57fa\u7840\uff0c\u610f\u8bc6\u53c8\u53ef\u4ee5\u901a\u8fc7\u8ba4\u8bc6\u548c\u5b9e\u8df5\u5bf9\u7269\u8d28\u8fdb\u884c\u6539\u9020\u548c\u53d1\u5c55","text":""},{"location":"src/cs/marx/#_74","title":"\u552f\u7269\u8fa9\u8bc1\u6cd5","text":""},{"location":"src/cs/marx/#_75","title":"\u4e24\u5927\u7279\u5f81","text":""},{"location":"src/cs/marx/#_76","title":"\u666e\u904d\u8054\u7cfb","text":""},{"location":"src/cs/marx/#_77","title":"\u6c38\u6052\u53d1\u5c55","text":""},{"location":"src/cs/marx/#_78","title":"\u4e09\u5927\u89c4\u5f8b","text":""},{"location":"src/cs/marx/#_79","title":"\u5bf9\u7acb\u7edf\u4e00\u89c4\u5f8b\uff08\u77db\u76fe\u89c4\u5f8b\uff09","text":""},{"location":"src/cs/marx/#_80","title":"\u77db\u76fe\u7684\u666e\u904d\u6027\u548c\u7279\u6b8a\u6027","text":""},{"location":"src/cs/marx/#_81","title":"\u77db\u76fe\u7684\u666e\u904d\u6027\u548c\u7279\u6b8a\u6027\u7684\u8fa9\u8bc1\u5173\u7cfb","text":""},{"location":"src/cs/marx/#_82","title":"\u9a6c\u514b\u601d\u4e3b\u4e49","text":""},{"location":"src/cs/marx/#_83","title":"\u8d28\u91cf\u4e92\u53d8\u89c4\u5f8b","text":""},{"location":"src/cs/marx/#_84","title":"\u5426\u5b9a\u4e4b\u5426\u5b9a\u89c4\u5f8b","text":""},{"location":"src/cs/marx/#_85","title":"\u8fa9\u8bc1\u5426\u5b9a\u7684\u5b9e\u8d28\u662f\u201c\u626c\u5f03\u201d\uff0c\u5bf9\u65b0\u4e8b\u7269\u65e7\u4e8b\u7269\u53c8\u6279\u5224\u53c8\u7ee7\u627f\uff0c\u514b\u670d\u6d88\u6781\u56e0\u7d20\uff0c\u4fdd\u7559\u79ef\u6781\u56e0\u7d20","text":""},{"location":"src/cs/marx/#_86","title":"\u5426\u5b9a\u662f\u4e8b\u7269\u7684\u81ea\u6211\u5426\u5b9a\uff0c\u662f\u4e8b\u7269\u5185\u90e8\u77db\u76fe\u8fd0\u52a8\u7684\u7ed3\u679c","text":""},{"location":"src/cs/marx/#_87","title":"\u5426\u5b9a\u65e2\u662f\u4e8b\u7269\u53d1\u5c55\u7684\u73af\u8282\uff0c\u662f\u65e7\u4e8b\u7269\u5411\u65b0\u4e8b\u7269\u7684\u8f6c\u53d8\uff0c\u53c8\u662f\u65b0\u65e7\u4e8b\u7269\u8054\u7cfb\u7684\u73af\u8282","text":""},{"location":"src/cs/marx/#_88","title":"\u4e94\u5bf9\u8303\u7574","text":""},{"location":"src/cs/marx/#_89","title":"\u5185\u5bb9\u4e0e\u5f62\u5f0f","text":""},{"location":"src/cs/marx/#_90","title":"\u73b0\u8c61\u4e0e\u672c\u8d28","text":""},{"location":"src/cs/marx/#_91","title":"\u539f\u56e0\u4e0e\u7ed3\u679c","text":""},{"location":"src/cs/marx/#_92","title":"\u5fc5\u7136\u4e0e\u5076\u7136","text":""},{"location":"src/cs/marx/#_93","title":"\u53ef\u80fd\u4e0e\u73b0\u5b9e","text":""},{"location":"src/cs/marx/#_94","title":"\u8fa9\u8bc1\u552f\u7269\u4e3b\u4e49\u8ba4\u8bc6\u8bba","text":""},{"location":"src/cs/marx/#_95","title":"\u5b9e\u8df5","text":""},{"location":"src/cs/marx/#_96","title":"\u5b9e\u8df5\u662f\u6307\u4eba\u4eec\u5728\u793e\u4f1a\u751f\u6d3b\u4e2d\u8fdb\u884c\u7684\u5404\u7c7b\u6d3b\u52a8\u548c\u884c\u4e3a\uff0c\u5305\u62ec\u7269\u8d28\u751f\u4ea7\uff0c\u793e\u4f1a\u4ea4\u5f80\uff0c\u653f\u6cbb\u6d3b\u52a8\u3002\u5b9e\u8df5\u662f\u4eba\u4eec\u4e0e\u5ba2\u89c2\u4e16\u754c\u76f8\u4e92\u4f5c\u7528\uff0c\u76f8\u4e92\u6539\u9020\u7684\u8fc7\u7a0b\uff0c\u662f\u4eba\u7c7b\u751f\u6d3b\u7684\u6838\u5fc3","text":""},{"location":"src/cs/marx/#_97","title":"\u4e3b\u89c2\u5b9e\u8df5\uff1a\u662f\u6307\u4eba\u4eec\u5728\u81ea\u5df1\u7684\u601d\u60f3\u548c\u610f\u8bc6\u4e2d\u8fdb\u884c\u7684\u5b9e\u8df5\u6d3b\u52a8\uff0c\u5305\u62ec\u601d\u8003\u3001\u5224\u65ad\u3001\u51b3\u7b56\u7b49","text":""},{"location":"src/cs/marx/#_98","title":"\u5ba2\u89c2\u5b9e\u8df5\uff1a\u662f\u6307\u4eba\u4eec\u5728\u793e\u4f1a\u751f\u6d3b\u4e2d\u5bf9\u5ba2\u89c2\u4e16\u754c\u7684\u76f4\u63a5\u6539\u9020\u548c\u5f71\u54cd\uff0c\u5305\u62ec\u751f\u4ea7\u52b3\u52a8\uff0c\u793e\u4f1a\u4ea4\u5f80\uff0c\u6587\u5316\u521b\u9020","text":""},{"location":"src/cs/marx/#_99","title":"\u5b9e\u8df5\u6784\u6210\u4e86\u793e\u4f1a\u751f\u6d3b\u7684\u57fa\u672c\u9886\u57df\uff0c\u5b9e\u8df5\u6784\u6210\u4e86\u793e\u4f1a\u53d1\u5c55\u7684\u52a8\u529b","text":""},{"location":"src/cs/marx/#_100","title":"\u8ba4\u8bc6","text":""},{"location":"src/cs/marx/#_101","title":"\u8ba4\u8bc6\u662f\u6307\u4eba\u4eec\u5bf9\u5ba2\u89c2\u4e16\u754c\u7684\u8ba4\u8bc6\u548c\u7406\u89e3\uff0c\u662f\u4eba\u4eec\u5bf9\u4e8b\u7269\u53ca\u5176\u89c4\u5f8b\u7684\u53cd\u6620","text":""},{"location":"src/cs/marx/#_102","title":"\u611f\u6027\u8ba4\u8bc6\uff1a\u901a\u8fc7\u611f\u5b98\u5bf9\u4e8b\u7269\u7684\u76f4\u63a5\u611f\u77e5\u548c\u7ecf\u9a8c","text":""},{"location":"src/cs/marx/#_103","title":"\u7406\u6027\u8ba4\u8bc6\uff1a\u5728\u611f\u6027\u8ba4\u8bc6\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u7684\u601d\u7ef4\u548c\u601d\u8003\u6d3b\u52a8\uff0c\u5305\u62ec\u6982\u5ff5\uff0c\u5224\u65ad\uff0c\u63a8\u7406\u7b49","text":""},{"location":"src/cs/marx/#_104","title":"\u5b9e\u8df5\u4e0e\u8ba4\u8bc6\u7684\u5173\u7cfb","text":""},{"location":"src/cs/marx/#_105","title":"\u5b9e\u8df5\u662f\u8ba4\u8bc6\u7684\u6765\u6e90\u4e0e\u57fa\u7840\uff0c\u8ba4\u8bc6\u662f\u5bf9\u5b9e\u8df5\u7684\u603b\u7ed3\u548c\u53cd\u6620","text":""},{"location":"src/cs/marx/#_106","title":"\u8ba4\u8bc6\u6307\u5bfc\u5b9e\u8df5\uff0c\u63a8\u52a8\u5b9e\u8df5\u53d1\u5c55","text":""},{"location":"src/cs/marx/#_107","title":"\u5b9e\u8df5\u548c\u8ba4\u8bc6\u662f\u76f8\u4e92\u8f6c\u5316\u7684\u8fc7\u7a0b","text":""},{"location":"src/cs/marx/#_108","title":"\u5b9e\u8df5\u662f\u68c0\u9a8c\u771f\u7406\u7684\u552f\u4e00\u6807\u51c6","text":""},{"location":"src/cs/marx/#_109","title":"\u8fd9\u662f\u7531\u771f\u7406\u7684\u672c\u6027\u548c\u5b9e\u8df5\u7684\u7279\u70b9\u51b3\u5b9a\u7684","text":""},{"location":"src/cs/marx/#_110","title":"\u771f\u7406\u7684\u672c\u6027\u5728\u4e8e\u4e3b\u89c2\u548c\u5ba2\u89c2\u76f8\u7b26\u5408\uff0c\u68c0\u9a8c\u771f\u7406\u5c31\u662f\u68c0\u9a8c\u4eba\u7684\u4e3b\u89c2\u8ba4\u8bc6\u540c\u5ba2\u89c2\u5b9e\u9645\u662f\u5426\u76f8\u7b26\u5408\u53ca\u7b26\u5408\u7684\u7a0b\u5ea6\uff0c\u4e3b\u89c2\u8ba4\u8bc6\u672c\u8eab\u4e0d\u80fd\u81ea\u79f0\u81ea\u5df1\u6b63\u786e\uff0c\u5ba2\u89c2\u4e8b\u7269\u672c\u8eab\u65e0\u6240\u8c13\u6b63\u786e\u548c\u9519\u8bef\u7684\u95ee\u9898","text":""},{"location":"src/cs/marx/#_111","title":"\u5b9e\u8df5\u5177\u6709\u76f4\u63a5\u73b0\u5b9e\u6027\u7684\u7279\u70b9\uff0c\u5982\u679c\u5728\u5b9e\u8df5\u4e2d\u8fbe\u5230\u4e86\u539f\u6765\u9884\u60f3\u7684\u7ed3\u679c\uff0c\u5c31\u53ef\u4ee5\u79f0\u4e4b\u4e3a\u771f\u7406\u6027\u7684\u8ba4\u8bc6\uff0c\u5982\u679c\u5931\u8d25\u4e86\uff0c\u5e76\u4e0d\u662f\u7531\u4e8e\u8ba4\u8bc6\u4e4b\u5916\u7684\u5176\u4ed6\u539f\u56e0\u6240\u5f15\u8d77\u7684\uff0c\u90a3\u5c31\u662f\u9519\u8bef\u7684\u8ba4\u8bc6","text":""},{"location":"src/cs/marx/#_112","title":"\u5728\u68c0\u9a8c\u771f\u7406\u7684\u8fc7\u7a0b\u4e2d\uff0c\u903b\u8f91\u8bc1\u660e\u53ef\u4ee5\u8d77\u5230\u8865\u5145\u4f5c\u7528","text":""},{"location":"src/cs/marx/#_113","title":"\u79d1\u5b66\u793e\u4f1a\u4e3b\u4e49","text":""},{"location":"src/cs/marx/#_114","title":"\u9a6c\u514b\u601d\u653f\u6cbb\u7ecf\u6d4e\u5b66","text":""},{"location":"src/cs/marx/#_115","title":"\u5269\u4f59\u4ef7\u503c\u7406\u8bba","text":""},{"location":"src/cs/marx/#_116","title":"\u8d44\u672c\u7d2f\u79ef\u8fc7\u7a0b","text":""},{"location":"src/cs/marx/#_117","title":"\u52b3\u52a8\u4ef7\u503c\u8bba","text":""},{"location":"src/cs/marx/#_118","title":"\u52b3\u52a8\u7684\u672c\u8d28","text":""},{"location":"src/cs/marx/#_119","title":"\u52b3\u52a8\u662f\u4eba\u7c7b\u4e0e\u81ea\u7136\u754c\u4e4b\u95f4\u7684\u7269\u8d28\u4ea4\u6362\u8fc7\u7a0b\uff0c\u901a\u8fc7\u52b3\u52a8\uff0c\u5c06\u81ea\u7136\u754c\u4e2d\u7684\u7269\u8d28\u8f6c\u5316\u4e3a\u6ee1\u8db3\u81ea\u8eab\u9700\u8981\u7684\u4ea7\u54c1\uff0c\u79bb\u5f00\u81ea\u7136\u754c\uff0c\u52b3\u52a8\u4fbf\u65e0\u4ece\u53d1\u751f","text":""},{"location":"src/cs/marx/#_120","title":"\u52b3\u52a8\u5177\u6709\u4e8c\u91cd\u6027","text":""},{"location":"src/cs/marx/#_121","title":"\u62bd\u8c61\u52b3\u52a8\uff1a\u751f\u4ea7\u7279\u5b9a\u7684\u4ea7\u54c1\uff0c\u8fd9\u79cd\u52b3\u52a8\u521b\u9020\u4e86\u5546\u54c1\u7684\u4ef7\u503c","text":""},{"location":"src/cs/marx/#_122","title":"\u5177\u4f53\u52b3\u52a8\uff1a\u751f\u4ea7\u7279\u5b9a\u7684\u4ea7\u54c1\uff0c\u8fd9\u79cd\u52b3\u52a8\u521b\u9020\u4e86\u5546\u54c1\u7684\u4f7f\u7528\u4ef7\u503c","text":""},{"location":"src/cs/marx/#_123","title":"\u52b3\u52a8\u4e0e\u81ea\u7136\u754c\u7684\u5173\u7cfb","text":""},{"location":"src/cs/marx/#_124","title":"\u81ea\u7136\u754c\u662f\u52b3\u52a8\u7684\u5bf9\u8c61","text":""},{"location":"src/cs/marx/#_125","title":"\u52b3\u52a8\u662f\u5bf9\u81ea\u7136\u754c\u7684\u6539\u9020","text":""},{"location":"src/cs/marx/#_126","title":"\u8d44\u672c\u4e3b\u4e49\u751f\u4ea7\u5173\u7cfb","text":""},{"location":"src/cs/marx/#_127","title":"\u8d44\u672c\u4e3b\u4e49\u7684\u77db\u76fe\u548c\u5371\u673a","text":""},{"location":"src/cs/marx/#_128","title":"\u793e\u4f1a\u4e3b\u4e49\u7684\u5386\u53f2\u5fc5\u7136\u6027","text":""},{"location":"src/cs/marx/#_129","title":"\u79d1\u5b66\u793e\u4f1a\u4e3b\u4e49\u7684\u7406\u8bba\u57fa\u7840","text":""},{"location":"src/cs/marx/#_130","title":"\u9a6c\u514b\u601d\u4e3b\u4e49","text":""},{"location":"src/cs/marx/#_131","title":"\u4e00\u3001\u4e16\u754c\u7684\u7269\u8d28\u6027\u53ca\u53d1\u5c55\u89c4\u5f8b","text":""},{"location":"src/cs/marx/#_132","title":"\u6734\u7d20\u552f\u7269\u4e3b\u4e49","text":"<ul> <li>\u57fa\u4e8e\u5bf9\u81ea\u7136\u73b0\u8c61\u7684\u89c2\u5bdf\uff0c\u8ba4\u4e3a\u7269\u8d28\u662f\u4e16\u754c\u7684\u57fa\u7840\uff0c\u800c\u6ca1\u6709\u6df1\u5165\u5230\u590d\u6742\u7684\u54f2\u5b66\u5206\u6790\u6216\u79d1\u5b66\u9a8c\u8bc1\u9636\u6bb5</li> <li>\u6700\u65e9\u7684\u54f2\u5b66\u5bb6\uff0c\u6cf0\u52d2\u65af</li> </ul>"},{"location":"src/cs/marx/#_133","title":"\u5ba2\u89c2\u552f\u5fc3\u4e3b\u4e49","text":"<ul> <li>\u4e16\u754c\u7684\u672c\u8d28\u662f\u67d0\u79cd\u72ec\u7acb\u4e8e\u4eba\u7c7b\u610f\u8bc6\u4e4b\u5916\u7684\u7cbe\u795e\u6216\u7406\u5ff5</li> <li>\u4e16\u754c\u7684\u672c\u8d28\u201c\u7406\u201d\u662f\u5ba2\u89c2\u5b58\u5728\u7684\uff0c\u4e0d\u4f9d\u8d56\u4e8e\u4e2a\u4eba\u7684\u610f\u8bc6</li> <li>\u7269\u8d28\u4e0d\u80fd\u88ab\u611f\u89c9\u6240\u8ba4\u8bc6</li> </ul>"},{"location":"src/cs/marx/#_134","title":"\u4e3b\u89c2\u552f\u5fc3\u4e3b\u4e49","text":"<ul> <li>\u4e16\u754c\u662f\u7531\u4e2a\u4eba\u7684\u601d\u60f3\u6216\u611f\u77e5\u6240\u6784\u6210\u7684</li> <li>\u5b58\u5728\u5373\u611f\u77e5\uff0c\u8d1d\u514b\u83b1</li> <li>\u5fc3\u5373\u7406\uff0c\u53d1\u660e\u672c\u5fc3\uff0c\u9646\u4e5d\u6e0a</li> </ul>"},{"location":"src/cs/marx/#_135","title":"\u673a\u68b0\u552f\u7269\u4e3b\u4e49","text":"<ul> <li>\u6240\u6709\u81ea\u7136\u73b0\u8c61\u90fd\u53ef\u4ee5\u7528\u673a\u68b0\u7684\u3001\u56e0\u679c\u7684\u5173\u7cfb\u6765\u89e3\u91ca</li> <li>\u56e0\u4e3a\u81ea\u7136\u79d1\u5b66\u7684\u53d1\u5c55\uff0c\u7b1b\u5361\u5c14\uff0c\u725b\u987f</li> <li>\u65e0\u6cd5\u7406\u89e3\u7269\u8d28\u7684\u54f2\u5b66\u6982\u5ff5\u548c\u79d1\u5b66\u6982\u5ff5\uff0c\u6709\u6bd4\u539f\u5b50\u8fd8\u5c0f\u7684\u7269\u8d28</li> <li>\u9519\u8bef\u7684\u8ba4\u4e3a\u65f6\u7a7a\u4e0e\u7269\u8d28\u53ef\u4ee5\u5206\u5272</li> </ul>"},{"location":"src/cs/marx/#_136","title":"\u8fa9\u8bc1\u552f\u7269\u4e3b\u4e49","text":"<ul> <li>\u4e16\u754c\u4e07\u4e8b\u4e07\u7269\u90fd\u5904\u5728\u666e\u904d\u8054\u7cfb\u4e4b\u4e2d</li> <li>\u8fd0\u52a8\u662f\u7269\u8d28\u7684\u8fd0\u52a8</li> <li>\u65f6\u95f4\u662f\u7269\u8d28\u8fd0\u52a8\u7684\u4e00\u79cd\u8868\u73b0\u5f62\u5f0f\uff0c\u4e00\u7ef4\u6027</li> <li>\u65f6\u7a7a\u4e0e\u7269\u8d28\u8fd0\u52a8\u4e4b\u95f4\u662f\u5bc6\u5207\u8054\u7cfb\u548c\u76f8\u4e92\u5f71\u54cd</li> <li>\u65f6\u95f4\u79bb\u4e0d\u5f00\u7269\u8d28\u7684\u8fd0\u52a8</li> <li>\u7269\u8d28\u80fd\u591f\u88ab\u611f\u89c9\u590d\u5199</li> <li>\u610f\u8bc6\u968f\u7740\u793e\u4f1a\u5b9e\u8df5\u7684\u53d1\u5c55\u800c\u53d1\u751f\u53d8\u5316</li> <li>\u610f\u8bc6\u662f\u5ba2\u89c2\u4e16\u754c\u7684\u4e3b\u89c2\u5370\u8c61</li> <li>\u5bf9\u7acb\u7edf\u4e00\u4ece\u6839\u672c\u4e0a\u56de\u7b54\u4e86\u4e8b\u7269\u4e3a\u4ec0\u4e48\u4f1a\u53d1\u5c55</li> <li>\u8981\u628a\u63e1\u4e8b\u7269\u7684\u5ea6</li> </ul>"},{"location":"src/cs/marx/#_137","title":"\u53ef\u77e5\u8bba\u4e0e\u4e0d\u53ef\u77e5\u8bba","text":"<ul> <li>\u53ef\u77e5\u8bba\uff1a\u77e5\u8bc6\u53ef\u4ee5\u901a\u8fc7\u795e\u79d8\u4f53\u9a8c\u3001\u7075\u77e5\u6216\u542f\u793a\u83b7\u5f97</li> <li>\u4e0d\u53ef\u77e5\u8bba\uff1a\u77e5\u8bc6\u5728\u67d0\u4e9b\u65b9\u9762\uff08\u7279\u522b\u662f\u5f62\u800c\u4e0a\u5b66\uff09\u662f\u4e0d\u53ef\u77e5\u7684\u6216\u76ee\u524d\u4e0d\u53ef\u77e5\u7684</li> <li>\u5b58\u5728\u548c\u601d\u7ef4\u662f\u5426\u5177\u6709\u540c\u4e00\u6027</li> </ul>"},{"location":"src/cs/marx/#_138","title":"\u552f\u7269\u4e3b\u4e49\u4e0e\u552f\u5fc3\u4e3b\u4e49","text":"<ul> <li>\u5b58\u5728\u548c\u601d\u7ef4\u4f55\u4e3a\u7b2c\u4e00\u6027</li> <li>\u5b58\u5728\u548c\u601d\u7ef4\u662f\u5426\u5177\u6709\u540c\u4e00\u6027</li> <li>\u8c01\u662f\u5386\u53f2\u7684\u521b\u9020\u8005</li> </ul>"},{"location":"src/cs/marx/#_139","title":"\u4e8c\u3001\u5b9e\u8df5\u4e0e\u8ba4\u77e5\u53ca\u5176\u53d1\u5c55\u89c4\u5f8b","text":""},{"location":"src/cs/marx/#_140","title":"\u5b9e\u8df5","text":"<ul> <li>\u5b9e\u8df5\u662f\u9a6c\u514b\u601d\u4e3b\u4e49\u7684\u57fa\u672c\u89c2\u70b9</li> <li>\u5b9e\u8df5\u5177\u6709\u793e\u4f1a\u5386\u53f2\u6027\uff08\u5b9e\u8df5\u53d7\u5230\u793e\u4f1a\u5386\u53f2\u6761\u4ef6\u7684\u7ea6\u675f\uff09</li> <li>\u5b9e\u8df5\u53ef\u4ee5\u5f15\u8d77\u5ba2\u89c2\u4e16\u754c\u7684\u53d8\u5316</li> <li>\u5b9e\u8df5\u8054\u7cfb\u4eba\u4e0e\u81ea\u7136</li> <li>\u5b9e\u8df5\u80fd\u79f0\u4e3a\u5b9e\u8df5\u770b\u5176\u662f\u5426\u8d85\u51fa\u4e86\u7eaf\u7cb9\u7684\u610f\u8bc6\u6d3b\u52a8</li> <li>\u5b9e\u8df5\u662f\u610f\u8bc6\u7684\u57fa\u7840\uff0c\u662f\u8ba4\u8bc6\u7684\u6e90\u5934\u6d3b\u6c34\uff0c\u662f\u8ba4\u8bc6\u53d1\u5c55\u7684\u52a8\u529b</li> <li>\u7269\u8d28\u751f\u4ea7\u5b9e\u8df5\u6784\u6210\u4e86\u5168\u90e8\u793e\u4f1a\u751f\u6d3b\u7684\u57fa\u7840</li> <li>\u4eba\u7c7b\u53ef\u4ee5\u901a\u8fc7\u5b9e\u8df5\u521b\u9020\u51fa\u81ea\u7136\u754c\u4e2d\u4e0d\u5b58\u5728\u7684\u4e1c\u897f</li> </ul>"},{"location":"src/cs/marx/#_141","title":"\u8ba4\u8bc6/\u610f\u8bc6","text":"<ul> <li>\u8ba4\u8bc6\u5fc5\u7136\u4ee5\u5ba2\u89c2\u4e8b\u7269\u4e3a\u539f\u578b\u548c\u6479\u672c</li> <li>\u8ba4\u8bc6\u5177\u6709\u80fd\u52a8\u6027\u548c\u521b\u9020\u6027</li> <li>\u610f\u8bc6\u662f\u5ba2\u89c2\u5b58\u5728\u7684\u53cd\u6620</li> <li>\u4e3b\u89c2\u4e0e\u5ba2\u89c2\u7684\u77db\u76fe\u662f\u4eba\u7c7b\u8ba4\u8bc6\u548c\u6539\u9020\u4e16\u754c\u7684\u6839\u672c\u52a8\u529b</li> <li>\u611f\u6027\u8ba4\u8bc6\u548c\u7406\u6027\u8ba4\u8bc6\u662f\u76f8\u4e92\u6e17\u900f\u3001\u76f8\u4e92\u5305\u542b\u7684</li> </ul>"},{"location":"src/cs/marx/#_142","title":"\u771f\u7406","text":"<ul> <li>\u771f\u7406\u5177\u6709\u5ba2\u89c2\u6027</li> <li>\u771f\u7406\u5177\u6709\u76f8\u5bf9\u6027</li> <li>\u771f\u7406\u7684\u7edd\u5bf9\u6027\u548c\u76f8\u5bf9\u6027\u8fa9\u8bc1\u7edf\u4e00</li> <li>\u771f\u7406\u7684\u672c\u6027\u5728\u4e8e\u4e3b\u5ba2\u89c2\u76f8\u7b26\u5408</li> </ul>"},{"location":"src/cs/marx/#_143","title":"\u4ef7\u503c","text":"<ul> <li>\u4ef7\u503c\u5177\u6709\u793e\u4f1a\u5386\u53f2\u6027</li> <li>\u4ef7\u503c\u8bc4\u4ef7\u6709\u79d1\u5b66\u4e0e\u975e\u79d1\u5b66\u4e4b\u522b</li> </ul>"},{"location":"src/cs/marx/#_144","title":"\u4e09\u3001\u4eba\u7c7b\u793e\u4f1a\u53ca\u5176\u53d1\u5c55\u89c4\u5f8b","text":""},{"location":"src/cs/marx/#_145","title":"\u793e\u4f1a","text":"<ul> <li>\u81ea\u7136\u5730\u7406\u73af\u5883\u63d0\u4f9b\u4e86\u793e\u4f1a\u751f\u6d3b\u548c\u751f\u4ea7\u8d44\u6599\u7684\u6765\u6e90</li> <li>\u793e\u4f1a\u610f\u8bc6\u662f\u5386\u53f2\u7684\u5177\u4f53\u7684</li> <li>\u793e\u4f1a\u610f\u8bc6\u5177\u6709\u5386\u53f2\u7ee7\u627f\u6027</li> <li>\u793e\u4f1a\u610f\u8bc6\u5bf9\u793e\u4f1a\u5b58\u5728\u5177\u6709\u53cd\u4f5c\u7528</li> <li>\u793e\u4f1a\u610f\u8bc6\u5177\u6709\u80fd\u52a8\u4f5c\u7528</li> <li>\u7ecf\u6d4e\u5f62\u6001\u662f\u793e\u4f1a\u5f62\u6001\u7684\u57fa\u7840</li> <li>\u793e\u4f1a\u7684\u53d1\u5c55\u548c\u8fdb\u6b65\u96c6\u4e2d\u8868\u73b0\u4e3a\u793e\u4f1a\u5f62\u6001\u7684\u66f4\u66ff</li> </ul>"},{"location":"src/cs/marx/#_146","title":"\u751f\u4ea7","text":"<ul> <li>\u751f\u4ea7\u529b\u8861\u91cf\u793e\u4f1a\u8fdb\u6b65\u7684\u6839\u672c\u5c3a\u5ea6</li> <li>\u751f\u4ea7\u529b\u51b3\u5b9a\u4eba\u7c7b\u793e\u4f1a\u53d1\u5c55\u548c\u8fdb\u6b65</li> <li>\u751f\u4ea7\u529b\u662f\u4eba\u7c7b\u793e\u4f1a\u751f\u6d3b\u548c\u5168\u90e8\u5386\u53f2\u7684\u7269\u8d28\u57fa\u7840</li> <li>\u52b3\u52a8\u8fc7\u7a0b\u4e2d\u6700\u91cd\u8981\u7684\u662f\u751f\u4ea7\u5de5\u5177</li> <li>\u751f\u4ea7\u5de5\u5177\u662f\u89e3\u51b3\u793e\u4f1a\u540c\u81ea\u7136\u77db\u76fe</li> <li>\u751f\u4ea7\u5173\u7cfb\u662f\u4eba\u5728\u7269\u8d28\u751f\u4ea7\u8fc7\u7a0b\u4e2d\u6240\u5f62\u6210\u7684\u8054\u7cfb\u548c\u5173\u7cfb</li> <li>\u751f\u4ea7\u5173\u7cfb\u8981\u9002\u5408\u751f\u4ea7\u529b\u72b6\u51b5</li> <li>\u751f\u4ea7\u529b\u7684\u53d1\u5c55\u51b3\u5b9a\u751f\u4ea7\u5173\u7cfb\u7684\u53d8\u5316</li> <li>\u751f\u4ea7\u529b\u6210\u679c\u7684\u4fdd\u5b58\u6709\u8d56\u4e8e\u4ea4\u5f80\u7684\u6269\u5927</li> <li>\u4e16\u754c\u5386\u53f2\u7684\u53d1\u5c55\u57fa\u7840\u662f\u751f\u4ea7\u529b\u7684\u53d1\u5c55\u53d8\u9769</li> <li>\u751f\u4ea7\u529b\u548c\u751f\u4ea7\u5173\u7cfb\u51b3\u5b9a\u7740\u5176\u4ed6\u77db\u76fe\u7684\u5b58\u5728\u548c\u53d1\u5c55</li> </ul>"},{"location":"src/cs/marx/#_147","title":"\u56fd\u5bb6","text":"<ul> <li>\u56fd\u5bb6\u653f\u6743\u662f\u653f\u6cbb\u4e0a\u5c42\u5efa\u7b51\u7684\u6838\u5fc3</li> <li>\u56fd\u5bb6\u7684\u5b9e\u8d28\u662f\u9636\u7ea7\u7edf\u6cbb\u7684\u5de5\u5177</li> <li>\u56fd\u5bb6\u662f\u4e3a\u81ea\u5df1\u7684\u7ecf\u6d4e\u57fa\u7840\u6240\u670d\u52a1\u7684</li> <li>\u56fd\u4f53\u6307\u660e\u56fd\u5bb6\u653f\u6743\u638c\u63e1\u5728\u54ea\u4e2a\u9636\u7ea7</li> <li>\u9636\u7ea7\u6597\u4e89\u662f\u9636\u7ea7\u793e\u4f1a\u53d1\u5c55\u7684\u76f4\u63a5\u52a8\u529b</li> </ul>"},{"location":"src/cs/marx/#_148","title":"\u793e\u4f1a\u5386\u53f2\u89c2","text":"<ul> <li>\u57fa\u672c\u95ee\u9898\u793e\u4f1a\u5b58\u5728\u548c\u793e\u4f1a\u610f\u8bc6\u7684\u5173\u7cfb\u95ee\u9898</li> </ul>"},{"location":"src/cs/marx/#_149","title":"\u552f\u7269/\u5fc3\u53f2\u89c2","text":"<ul> <li>\u548c\u552f\u5fc3\u53f2\u89c2\u7684\u6839\u672c\u533a\u522b\u662f\u5bf9\u793e\u4f1a\u5b58\u5728\u3001\u793e\u4f1a\u610f\u8bc6\u5173\u7cfb\u95ee\u9898\u7684\u4e0d\u540c\u56de\u7b54</li> <li>\u4e16\u754c\u5386\u53f2\u662f\u5404\u4e2a\u6c11\u65cf\uff0c\u5404\u4e2a\u56fd\u5bb6\u76f8\u4e92\u4ea4\u6d41\u7684\u5386\u53f2</li> </ul>"},{"location":"src/cs/marx/#_150","title":"\u56db\u3001\u8d44\u672c\u4e3b\u4e49\u7684\u672c\u8d28\u53ca\u89c4\u5f8b","text":""},{"location":"src/cs/marx/#_151","title":"\u5546\u54c1\u7ecf\u6d4e","text":"<ul> <li>\u81ea\u7136\u7ecf\u6d4e\u4e0e\u5546\u54c1\u7ecf\u6d4e\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u751f\u4ea7\u76ee\u7684\u4e0d\u540c</li> <li>\u5546\u54c1\u7684\u4f7f\u7528\u4ef7\u503c\u53cd\u6620\u4eba\u4e0e\u81ea\u7136\u4e4b\u95f4\u7684\u7269\u8d28\u5173\u7cfb</li> <li>\u52b3\u52a8\u4e8c\u91cd\u6027\uff1a\u5177\u4f53\u52b3\u52a8\u548c\u62bd\u8c61\u52b3\u52a8</li> <li>\u5546\u54c1\u4ef7\u503c\u7684\u91cf\u662f\u7531\u751f\u4ea7\u5546\u54c1\u6240\u6d88\u8017\u7684\u52b3\u52a8\u91cf\u51b3\u5b9a\u7684</li> <li>\u5546\u54c1\u4ef7\u503c\u7684\u91cf\u662f\u7531\u793e\u4f1a\u5fc5\u8981\u52b3\u52a8\u65f6\u95f4\u51b3\u5b9a\uff0c\u800c\u4e0d\u662f\u4e2a\u522b\u52b3\u52a8\u65f6\u95f4</li> <li>\u201c\u60ca\u9669\u8df3\u8dc3\u201d\u662f\u6307\u5546\u54c1\u8f6c\u5316\u4e3a\u8d27\u5e01</li> <li>\u5546\u54c1\u7ecf\u6d4e\u7684\u57fa\u672c\u77db\u76fe\u662f\u79c1\u4eba\u52b3\u52a8\u4e0e\u793e\u4f1a\u52b3\u52a8\u7684\u77db\u76fe</li> <li>\u5546\u54c1\u7ecf\u6d4e\u7684\u4ea4\u6362\u672c\u8d28\u662f\u79c1\u4eba\u52b3\u52a8\u548c\u793e\u4f1a\u52b3\u52a8\u7684\u77db\u76fe\u51b3\u5b9a\u7684</li> <li>\u9a6c\u514b\u601d\u52b3\u52a8\u4ef7\u503c\u8bba\u521b\u65b0\u7684\u533a\u5206\u4e86\u5177\u4f53\u52b3\u52a8\u548c\u62bd\u8c61\u52b3\u52a8</li> </ul>"},{"location":"src/cs/marx/#_152","title":"\u8d44\u672c\u4e3b\u4e49","text":"<ul> <li>\u8d44\u672c\u603b\u516c\u5f0f\uff1a\u8d27\u5e01-\u5546\u54c1-\u589e\u503c\u540e\u7684\u8d27\u5e01</li> <li>\u52b3\u52a8\u529b\u79f0\u4e3a\u5546\u54c1\u6807\u5fd7\u7740\u8d44\u672c\u4e3b\u4e49\u5546\u54c1\u751f\u4ea7\u7684\u65b0\u9636\u6bb5</li> <li>\u52b3\u52a8\u529b\u5546\u54c1\u7684\u7a81\u51fa\u7279\u70b9\u5728\u4e8e\u5b83\u7684\u4f7f\u7528\u4ef7\u503c\u662f\u4ef7\u503c\u7684\u6e90\u6cc9</li> <li>\u8d44\u672c\u4e3b\u4e49\u751f\u4ea7\u8fc7\u7a0b\u5177\u6709\u4e8c\u91cd\u6027\uff1a\u65e2\u662f\u52b3\u52a8\u8fc7\u7a0b\u53c8\u662f\u4ef7\u503c\u589e\u503c\u8fc7\u7a0b</li> <li>\u4ef7\u503c\u589e\u503c\u8fc7\u7a0b\u662f\u503c\u8d85\u8fc7\u4e86\u5bf9\u52b3\u52a8\u529b\u4ef7\u503c\u7684\u8865\u507f</li> <li>\u5265\u524a\u7a0b\u5ea6\u7528\u5269\u4f59\u4ef7\u503c\u548c\u53ef\u53d8\u4ef7\u503c\u76f8\u6bd4</li> <li>\u5de5\u8d44\u7684\u672c\u8d28\u662f\u52b3\u52a8\u529b\u7684\u4ef7\u503c\u6216\u4ef7\u683c</li> <li>\u8d44\u672c\u4e3b\u4e49\u56fd\u5bb6\u5bf9\u8d44\u672c\u4e3b\u4e49\u751f\u4ea7\u5173\u7cfb\u7684\u8c03\u6574\u6709\u5229\u4e8e\u8d44\u672c\u4e3b\u4e49\u793e\u4f1a\u751f\u4ea7\u529b\u7684\u53d1\u5c55</li> </ul>"},{"location":"src/cs/marx/#_153","title":"\u4e94\u3001\u8d44\u672c\u4e3b\u4e49\u7684\u53d1\u5c55\u53ca\u5176\u8d8b\u52bf","text":""},{"location":"src/cs/marx/#_154","title":"\u8d44\u672c\u4e3b\u4e49","text":"<ul> <li>\u8d44\u672c\u96c6\u4e2d\u662f\u6307\u5927\u8d44\u672c\u541e\u5e76\u5c0f\u8d44\u672c</li> <li>\u91d1\u878d\u5be1\u5934\u662f\u6307\u64cd\u7eb5\u56fd\u6c11\u7ecf\u6d4e\u547d\u8109</li> <li>\u5784\u65ad\u8d44\u672c\u83b7\u53d6\u7684\u662f\u52b3\u52a8\u5de5\u4f5c\u6240\u521b\u9020\u7684\u5269\u4f59\u4ef7\u503c</li> <li>\u79d1\u5b66\u6280\u672f\u7684\u53d1\u5c55\u548c\u751f\u4ea7\u529b\u7684\u53d1\u5c55\u662f\u7269\u8d28\u57fa\u7840\u7684\u6839\u672c\u63a8\u52a8\u529b</li> <li>\u56fd\u5bb6\u8d44\u672c\u6240\u6709\u5236\u4f53\u73b0\u603b\u8d44\u672c\u5bb6\u5265\u524a\u96c7\u4f63\u52b3\u52a8\u8005\u7684\u5173\u7cfb</li> <li>\u8d44\u672c\u4e3b\u4e49\u662f\u751f\u4ea7\u8d44\u6599\u79c1\u6709\u5236</li> <li>\u6b21\u8d37\u5371\u673a\u7684\u6839\u672c\u539f\u56e0\u662f\u8d44\u672c\u4e3b\u4e49\u7684\u57fa\u672c\u77db\u76fe</li> <li>\u5784\u65ad\u7ec4\u7ec7\u80fd\u63a5\u53d7\u7684\u6700\u4f4e\u4ef7\u662f\u6210\u672c\u4ef7\u683c</li> <li>\u91d1\u878d\u5be1\u5934\u5728\u7ecf\u6d4e\u9886\u57df\u5b9e\u73b0\u7edf\u6cbb\u7684\u5f62\u5f0f\u662f\u53c2\u4e0e\u5236</li> <li>\u5f53\u4ee3\u8d44\u672c\u4e3b\u4e49\u6700\u7a81\u51fa\u7684\u3001\u6700\u9c9c\u660e\u7684\u7279\u5f81\u662f\u56fd\u9645\u91d1\u878d\u8d44\u672c\u7684\u5784\u65ad</li> </ul>"},{"location":"src/cs/marx/#_155","title":"\u516d\u3001\u793e\u4f1a\u4e3b\u4e49\u7684\u53d1\u5c55\u53ca\u5176\u8d8b\u52bf","text":""},{"location":"src/cs/marx/#_156","title":"\u793e\u4f1a\u4e3b\u4e49","text":"<ul> <li>1516\u5e74\u82f1\u56fd\u4eba\u6258\u9a6c\u65af\u83ab\u5c14\u300a\u4e4c\u6258\u90a6\u300b\u662f\u7a7a\u60f3\u793e\u4f1a\u4e3b\u4e49\u7684\u5f00\u5c71\u4e4b\u4f5c</li> <li>1871\u5df4\u9ece\u516c\u793e\u9769\u547d\u662f\u65e0\u4ea7\u9636\u7ea7\u593a\u53d6\u653f\u6743\u7684\u7b2c\u4e00\u6b21\u4f1f\u5927\u5c1d\u8bd5</li> <li>1889\u6069\u683c\u65af\u56fd\u9645\u793e\u4f1a\u4e3b\u4e49\u5728\u5df4\u9ece\u4e3e\u884c\u4ee3\u8868\u5927\u4f1a\u6807\u5fd7\u7740\u7b2c\u4e8c\u56fd\u9645\u7684\u8bde\u751f</li> <li>\u5217\u5b81\u6df1\u523b\u8bba\u8ff0\u4e86\u793e\u4f1a\u4e3b\u4e49\u9769\u547d\u53ef\u4ee5\u9996\u5148\u5728\u51e0\u4e2a\u56fd\u5bb6\u53d6\u5f97\u6210\u529f\uff0c\u56e0\u4e3a\u8d44\u672c\u4e3b\u4e49\u7684\u53d1\u5c55\u5728\u5404\u4e2a\u56fd\u5bb6\u4e4b\u95f4\u662f\u4e0d\u5e73\u8861\u7684</li> <li>\u300a\u8bba\u5341\u5927\u5173\u7cfb\u300b\u548c\u300a\u5173\u4e8e\u6b63\u786e\u5904\u7406\u4eba\u6c11\u5185\u90e8\u77db\u76fe\u7684\u95ee\u9898\u300b\uff0c\u6807\u5fd7\u7740\u515a\u5bf9\u5982\u4f55\u5efa\u8bbe\u793e\u4f1a\u4e3b\u4e49\u6709\u4e86\u81ea\u5df1\u7684\u65b0\u8ba4\u8bc6</li> <li>1978\u5e7412\u6708\uff0c\u5341\u4e00\u5c4a\u4e09\u4e2d\u5168\u4f1a\u91cd\u65b0\u786e\u7acb\u4e86\u89e3\u653e\u601d\u60f3\uff0c\u5b9e\u4e8b\u6c42\u662f\u7684\u601d\u60f3\u8def\u7ebf</li> <li>\u793e\u4f1a\u4e3b\u4e49\u7ecf\u6d4e\u5236\u5ea6\u57fa\u7840\u662f\u793e\u4f1a\u4e3b\u4e49\u516c\u6709\u5236</li> <li>\u65e0\u4ea7\u9636\u7ea7\u9769\u547d\u7684\u6839\u672c\u95ee\u9898\u662f\u56fd\u5bb6\u653f\u6743\u95ee\u9898</li> <li>\u65e0\u4ea7\u9636\u7ea7\u9769\u547d\u662f\u4ee5\u653f\u6cbb\u9769\u547d\u4e3a\u6838\u5fc3\u7684\u793e\u4f1a\u9769\u547d</li> <li>\u793e\u4f1a\u4e3b\u4e49\u53d1\u5c55\u7684\u9053\u8def\u662f\u591a\u6837\u6027\u7684</li> </ul>"},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/","title":"\u5fae\u79ef\u5206","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_1","title":"\u5f15\u5b50","text":"<p>\u753b\u56fe / \u8ba1\u7b97 / \u5907\u7528\u8ba1\u7b97</p> <p></p>"},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#lim_x-to-x_0-a","title":"\\(\\lim_{x \\to x_0} = A\\)","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_2","title":"\u51fd\u6570","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_3","title":"\u4e09\u89d2\u51fd\u6570","text":"<p>\u516c\u5f0f\u53c2\u8003</p> <p>\u6b63\u5f26\u51fd\u6570\uff1a\\(\\sin x\\)</p> <p>\u4f59\u5f26\u51fd\u6570\uff1a\\(\\cos x\\)</p> <p>\u6b63\u5207\u51fd\u6570\uff1a\\(\\tan x\\) = \\(\\frac{\\sin x}{\\cos x}\\)</p> <p>\u4f59\u5207\u51fd\u6570\uff1a\\(\\cot x\\) = \\(\\frac{\\cos x}{\\sin x}\\)</p> <p>\u53cd\u6b63\u5f26\u51fd\u6570\uff1a\\(\\arcsin x\\) = \\(\\sin^{-1} x\\)</p> <p>\u53cd\u4f59\u5f26\u51fd\u6570\uff1a\\(\\arccos x\\) = \\(\\cos^{-1} x\\)</p> <p>\u53cd\u6b63\u5207\u51fd\u6570\uff1a\\(\\arctan x\\) = \\(\\tan^{-1} x\\)</p> <p>\u53cd\u4f59\u5207\u51fd\u6570\uff1a\\(\\text{arccot} \\ x\\) = \\(\\text{cot}^{-1} x\\)</p> <p>\u6b63\u5272\u51fd\u6570\uff1a\\(\\sec x\\) = \\(\\frac{1}{\\cos x}\\)</p> <p>\u4f59\u5272\u51fd\u6570\uff1a\\(\\csc x\\) = \\(\\frac{1}{\\sin x}\\)</p>"},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_4","title":"\u5bf9\u6570\u51fd\u6570","text":"<p>\u4e00\u822c\u5bf9\u6570\u51fd\u6570\uff1a\\(\\log_a x\\)</p> <p>\u81ea\u7136\u5bf9\u6570\u51fd\u6570\uff1a\\(\\ln x\\) = \\(\\log_e x\\)</p> <p>\u5e38\u7528\u5bf9\u6570\u51fd\u6570\uff1a\\(\\lg x\\) = \\(\\log_{10} x\\)</p>"},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_5","title":"\u6307\u6570\u51fd\u6570","text":"<p>\u6307\u6570\u51fd\u6570\uff1a\\(a^x\\)</p>"},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_6","title":"\u5e42\u51fd\u6570","text":"<p>\u5e42\u51fd\u6570\uff1a\\(x^a\\)</p>"},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_7","title":"\u6027\u8d28","text":"<ol> <li> <p>\u6709\u754c\u6027</p> </li> <li> <p>\u5355\u8c03\u6027</p> </li> <li> <p>\u5947\u5076\u6027</p> </li> <li> <p>\u5468\u671f\u6027</p> </li> </ol> <p></p>"},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_8","title":"\u6781\u9650","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_9","title":"\u6570\u5217\u6781\u9650","text":"<p>\u5982\u679c\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\uff0c\u968f\u7740\u5e8f\u53f7\u7684\u589e\u52a0\uff0c\u800c\u8d8a\u6765\u8d8a\u63a5\u8fd1\u67d0\u4e2a\u7279\u5b9a\u7684\u503c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u503c\u5c31\u662f\u6b64\u5e8f\u5217\u7684\u6781\u9650</p> <p>$ a_n = \\frac{1}{n} $</p> <p>\u8ba1\u7b97\u6570\u5217\u524d\u51e0\u9879</p> <p>$ a_1 = \\frac{1}{1} \\ \\ a_2 = \\frac{1}{2} \\ \\ a_3 = \\frac{1}{3} $</p> <p>\u5f53 \\(n\\) \u8d8a\u6765\u8d8a\u5927\u65f6\uff0c\u6570\u5217\u6bcf\u4e00\u9879\u90fd\u53d8\u5f97\u8d8a\u6765\u8d8a\u5c0f\uff0c\u4f46\u662f\u4e0d\u4f1a\u53d8\u6210 \\(0\\)\uff0c\u800c\u662f\u8d8b\u8fd1\u4e8e \\(0\\)</p> <p>\uff08\u6211\u4eec\u53ea\u5173\u6ce8\u8d8b\u52bf\uff0c\u5bf9\u4e8e\u67d0\u4e00\u70b9\u662f\u5426\u80fd\u53d6\u5230\u7279\u5b9a\u503c\uff0c\u65e0\u6240\u8c13\uff09</p> <p>\u6545\u8868\u8fbe\u4e3a\uff1a\\(\\lim_{b \\to \\infty} \\frac{1}{n} = 0\\) </p> <p>\u5b9a\u4e49</p> <p>\\({\\forall} \\ {\\epsilon} &gt; 0\\)\uff0c$ {\\exists} \\ N &gt; 0\\(\uff0c\u5f53 \\(n &gt; N\\) \u65f6\uff0c\\)|a_n - A| &lt; {\\epsilon}$\uff0c\u5219 \\(\\lim_{n \\to \\infty} a_n = A\\)</p> <p>\u7ed9\u5b9a\u4e00\u4e2a \u4efb\u610f\u5c0f \u7684\u6b63\u6570 \\(\\epsilon\\)\uff0c\u4f7f\u5f97\u4ece\u7b2c \\(N+1\\) \u8d77\u7684\u6bcf\u4e00\u9879\uff0c\u5176\u4e0e\u6781\u9650\u503c \\(A\\) \u4e4b\u95f4\u7684\u5dee\u5f02\u90fd\u5c0f\u4e8e \\(\\epsilon\\)</p> <p>\u4f8b\uff1a</p> <p>\\(|a_n - A| &lt; e^{\\frac{\\epsilon}{10}}\\) \u4e0d\u662f\u6781\u9650</p> <p>\u56e0\u4e3a \\(e^{\\frac{\\epsilon}{10}}\\) \u4e0d\u662f\u4efb\u610f\u5c0f\u7684\u6b63\u6570</p> <ul> <li> <p>\\({\\frac{\\epsilon}{10}}\\) \u7684\u503c\u57df \\((0, +\\infty)\\)</p> </li> <li> <p>\\(e^{\\frac{\\epsilon}{10}}\\) \u7684\u503c\u57df \\((1, +\\infty)\\)</p> </li> </ul> <p>\u5145\u8981\u6761\u4ef6</p> <p>\\(\\lim_{n \\to \\infty} u_n = A \\iff \\lim_{n \\to \\infty} u_{2n} = \\lim_{n \\to \\infty} u_{2n-1} = A\\)</p> <p></p>"},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_10","title":"\u51fd\u6570\u6781\u9650","text":"<p>\u51fd\u6570\u5728\u67d0\u4e00\u70b9\u6216\u65e0\u7a77\u8fdc\u5904\uff0c\u8d8b\u8fd1\u4e8e\u67d0\u4e2a\u503c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u503c\u5c31\u662f\u51fd\u6570\u7684\u6781\u9650</p> <p>\\(\\lim_{x \\to \\infty} \\frac{1}{x} = 0\\) \u5f53 \\(x\\) \u8d8a\u6765\u8d8a\u5927\u65f6\uff0c\u51fd\u6570\u503c\u8d8a\u6765\u8d8a\u5c0f\uff0c\u4f46\u662f\u4e0d\u4f1a\u53d8\u6210 \\(0\\)\uff0c\u800c\u662f\u8d8b\u8fd1\u4e8e \\(0\\) \uff08\u540c\u4e0a\uff0c\u6211\u4eec\u53ea\u5173\u6ce8\u51fd\u6570\u5728\u67d0\u4e00\u70b9\u9644\u8fd1\u7684\u8d8b\u52bf\uff0c\u800c\u4e0d\u662f\u8be5\u70b9\u4e0a\u7684\u53d6\u503c\uff09 \u6545\u8868\u8fbe\u4e3a\uff1a\\(\\lim_{x \\to \\infty} \\frac{1}{x} = 0\\)</p> <p>\\(\\lim_{x \\to 2} x^2 = 4\\) \u5f53 \\(x\\) \u8d8b\u8fd1\u4e8e \\(2\\) \u65f6\uff0c\u51fd\u6570\u503c\u8d8b\u8fd1\u4e8e \\(4\\) \u6545\u8868\u8fbe\u4e3a\uff1a\\(\\lim_{x \\to 2} x^2 = 4\\) \u56e0\u4e3a\u51fd\u6570\u5728 \\(x=2\\) \u5904\u7684\u786e\u5207\u53d6\u503c \\(f(2)\\) \u4e5f\u7b49\u4e8e \\(4\\)\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u51fd\u6570\u5728 \\(x=2\\) \u5904\u662f\u6536\u655b\u7684</p> <p>\u5b9a\u4e49</p> <ol> <li> <p>\\(x \\to x_0\\)</p> <ul> <li>\\(\\forall \\ \\epsilon &gt; 0, \\exists \\ \\delta &gt; 0\\)\uff0c\u5f53 \\(0 &lt; |x - x_0| &lt; \\delta\\) \u65f6\uff0c\\(|f(x) - A| &lt; \\epsilon\\)\uff0c\u79f0 \\(\\lim_{x \\to x_0} f(x) = A\\)     &gt; \u7ed9\u5b9a \u4efb\u610f\u5c0f \u7684\u6b63\u6570 \\(\\epsilon\\) \u548c \\(\\delta\\)\uff0c\u5f53 \\(x\\) \u4e0e \\(x_0\\) \u4e4b\u95f4\u7684\u5dee\u5f02\u5c0f\u4e8e \\(\\delta\\) \u65f6     &gt; \u51fd\u6570\u503c\u4e0e\u6781\u9650\u503c \\(A\\) \u4e4b\u95f4\u7684\u5dee\u5f02\u90fd\u5c0f\u4e8e \\(\\epsilon\\)</li> </ul> </li> <li> <p>\\(x \\to \\infty\\)</p> <ul> <li>\\(\\forall \\ \\epsilon &gt; 0, \\exists \\ \\delta &gt; 0\\)\uff0c\u5f53 \\(|x| &gt; \\delta\\) \u65f6\uff0c\\(|f(x) - A| &lt; \\epsilon\\)\uff0c\u79f0 \\(\\lim_{x \\to \\infty} f(x) = A\\)     &gt; \u7ed9\u5b9a \u4efb\u610f\u5c0f \u7684\u6b63\u6570 \\(\\epsilon\\) \u548c \\(\\delta\\)\uff0c\u5f53 \\(x\\) \u7684\u7edd\u5bf9\u503c\u5927\u4e8e \\(\\delta\\) \u65f6     &gt; \u51fd\u6570\u503c\u4e0e\u6781\u9650\u503c \\(A\\) \u4e4b\u95f4\u7684\u5dee\u5f02\u90fd\u5c0f\u4e8e \\(\\epsilon\\)</li> </ul> </li> </ol> <p>\u5145\u8981\u6761\u4ef6</p> <p>\\(\\lim_{x \\to x_0} f(x) = A \\iff f(x_0^-) = f(x_0^+) = A\\)</p>"},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_11","title":"\u65e0\u7a77\u5927\u5c0f","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_12","title":"\u6027\u8d28","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_13","title":"\u8fd0\u7b97","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_14","title":"\u8fde\u7eed","text":"<p>\u51fd\u6570\u5728\u67d0\u4e2a\u533a\u95f4\u5185\u7684\u6240\u6709\u70b9\u90fd \u5b58\u5728 \u4e14 \u65e0\u95f4\u65ad\uff0c\u90a3\u4e48\u8fd9\u4e2a\u51fd\u6570\u5c31\u662f\u8fde\u7eed\u7684</p>"},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_15","title":"\u95f4\u65ad\u70b9","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#textdy-a-textdx","title":"\\(\\text{d}y = A \\ \\text{d}x\\)","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_16","title":"\u5bfc\u6570","text":"<p>\u5bfc\u6570 \u7528\u6765\u63cf\u8ff0\u51fd\u6570\u5728\u67d0\u4e00\u70b9\u7684 \u53d8\u5316\u7387 \u6216 \u659c\u7387</p> <p>\u5e73\u884c\u4e8e \\(X\\) \u8f74\u7684\u76f4\u7ebf \\(f(x) = 5\\) \u65e0\u8bba \\(x\\) \u53d6\u591a\u5c11\uff0c\\(y\\) \u90fd\u662f \\(5\\) \u56e0\u6b64\u4e0d\u5b58\u5728\u659c\u7387\u53d8\u5316\uff0c\u6545 \\(f'(x) = 0\\)</p> <p>\u5b9a\u4e49\uff1a\u5bfc\u6570\u7684\u6781\u9650\u5b9a\u4e49</p> \\[f'(x_0) = \\lim_{x \\to x_0} \\frac{f(x)-f(x_0)}{x-x_0} = \\left. \\frac{\\text{d} f}{\\text{d} x} \\right|_{x=x_0}\\] <ol> <li>\u8ba1\u7b97\u51fd\u6570\u5728 \\(x\\) \u548c \\(x_0\\) \u7684\u51fd\u6570\u503c\uff1a\\(f(x)\\) \u548c \\(f(x_0)\\)</li> <li>\u8ba1\u7b97\u4e24\u70b9\u95f4\u7684\u53d8\u5316\u91cf\uff1a\\(f(x)-f(x_0)\\)</li> <li>\u5c06\u53d8\u5316\u91cf\u9664\u4ee5 \\(x-x_0\\)</li> <li> <p>\u5f53 \\(x\\) \u8d8b\u8fd1\u4e8e \\(x_0\\) \u65f6\uff0c\u53ef\u4ee5\u5f97\u77e5\u51fd\u6570\u5728 \\(x_0\\) \u70b9\u7684\u77ac\u65f6\u53d8\u5316\u7387 \u53ef\u5bfc</p> </li> <li> <p>\\(f(x)\\) \u5728 \\(x_0\\) \u5904 \u8fde\u7eed</p> </li> </ol> <p></p>"},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_17","title":"\u5fae\u5206","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#inta_b-fx-textdx","title":"\\(\\int^a_b f(x) \\ \\text{d}x\\)","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_18","title":"\u5b9a\u79ef\u5206","text":"<p>\u725b\u987f-\u83b1\u5e03\u5229\u5179\u5b9a\u7406</p> <p>\\(\\int^a_b f(x) \\ \\text{d}x = F(x)|_a^b = F(b) - F(a)\\)</p> <p></p>"},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_19","title":"\u4e0d\u5b9a\u79ef\u5206","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_20","title":"\u591a\u5143\u51fd\u6570\u5fae\u5206","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_21","title":"\u591a\u5143\u51fd\u6570\u79ef\u5206","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_22","title":"\u5fae\u5206\u65b9\u7a0b","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#-","title":"--------\u4e0b\u9762\u662f\u65e7\u7684----------","text":"<p>\u5fae\u79ef\u5206\u4e4b\u524d\u5148 \u5316\u7b80 \\(\\left\\{ \\begin{aligned}     \u62c6\u9879\u3001\u63d0\u9879\u3001\u540c\u4e58\u3001\u540c\u9664 \\\\     \u5bf9\u6570\u516c\u5f0f \\\\     \u4e09\u89d2\u516c\u5f0f \\\\ \\end{aligned} \\right.\\)</p> <p>\u5bf9\u6570\u516c\u5f0f 1. \\(\u25a2 = e^{\\ln \u25a2} = \\ln e^\u25a2\\) 2. \\(\\ln ab = \\ln a + \\ln b\\) 3. \\(\\ln \\frac{a}{b} = \\ln a - \\ln b\\) 4. \\(\\log _a ^b = \\frac{\\ln b}{\\ln a}\\)</p>"},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_23","title":"\u7b2c\u4e00\u8282 \u51fd\u6570\u4e0e\u6781\u9650","text":"<p>\u8981\u591a\u8fd1\u6709\u591a\u8fd1\uff08\u67ef\u897f cauchy \u8bf4\u7684\uff09</p> <ul> <li> <p>\u6570\u5217\u6781\u9650</p> <ol> <li>\u5355\u8c03\u6709\u754c</li> <li>\u5939\u903c\u5b9a\u7406</li> <li>\u5b9a\u79ef\u5206\u5b9a\u4e49\uff08\u7528\u65e0\u7a77\u4e2a\u957f\u65b9\u5f62\u7684\u9762\u79ef\u903c\u8fd1\u66f2\u7ebf\u4e0b\u7684\u9762\u79ef\uff09</li> </ol> </li> <li> <p>\u51fd\u6570\u6781\u9650</p> <ol> <li>\u6d1b\u5fc5\u8fbe\uff08\u7b80\u5355\u51fd\u6570\uff0c\u5bb9\u6613\u6c42\u5bfc\uff0c\u8d8a\u6c42\u8d8a\u7b80\u5355\uff09</li> <li>\u7b49\u4ef7\u4ee3\u6362\uff083\u7ec4\uff09</li> <li>\u6cf0\u52d2\u516c\u5f0f\uff088\u4e2a\uff09</li> <li>\u5bfc\u6570\u5b9a\u4e49\uff08\u5bfc\u6570\u662f\u53d8\u6362\u7387\u7684\u6781\u9650\uff0c\u725b\u987f\u7814\u7a76\u52a0\u901f\u5ea6\uff09</li> <li>\u62c9\u683c\u6717\u65e5\u4e2d\u503c\u5b9a\u7406\uff08\u5bfc\u6570\u7684\u51e0\u4f55\u610f\u4e49\uff0c\u5207\u7ebf\u659c\u7387\uff09</li> </ol> </li> </ul>"},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_24","title":"\u51fd\u6570","text":"<p>\u5355\u8c03\u6027</p> <p>\u6709\u754c\u6027</p> <p>\u5947\u5076\u6027</p> <p>\u5468\u671f\u6027</p>"},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_25","title":"\u6570\u5217\u6781\u9650","text":"<p>\u6570\u5217\u6781\u9650\u6982\u5ff5 </p> <p>\u5b9a\u4e49\uff1a\\(\\lim_{n \\to \\infty} a_n = a\\)</p> <p>\\({\\forall} {\\epsilon} &gt; 0, {\\exists}  N &gt; 0\\)\uff0c\u5f53\\(n &gt; N\\)\u65f6\uff0c\\(|a_n - a| &lt; {\\epsilon}\\)</p> <p>\u6ce8\u610f\uff1a\\(|a_n - a| &lt; {\\epsilon}\\) \u4e2d\u7684 \\({\\epsilon}\\) \u662f\u4efb\u610f\u5c0f\u7684\u6b63\u6570\uff0c\u4e0d\u662f\u56fa\u5b9a\u7684\uff0c\u5982\u679c\u4e0d\u662f\u4efb\u610f\u5c0f\uff0c\u90a3\u4e48\u5c31\u4e0d\u662f\u6781\u9650\u4e86\u3002</p> <p>\\(|a_n - a| &lt; e^{\\frac{\\epsilon}{10}}\\) \u8fd9\u4e2a\u4e0d\u662f\u6781\u9650\uff0c\u56e0\u4e3a \\(e^{\\frac{\\epsilon}{10}}\\) \u4e0d\u662f\u4efb\u610f\u5c0f\u7684\u6b63\u6570 * \\({\\frac{\\epsilon}{10}}\\) \u7684\u503c\u57df \\((0, +\\infty)\\) * \\(e^{\\frac{\\epsilon}{10}}\\) \u7684\u503c\u57df \\((1, +\\infty)\\)</p> <p>\u6240\u4ee5 \\(e^{\\frac{\\epsilon}{10}}\\) \u4e0d\u662f\u4efb\u610f\u5c0f\u7684\u6b63\u6570\u3002</p> <p>\u6570\u5217\u6781\u9650\u7684\u5145\u8981\u6761\u4ef6</p> <p>\\(\\lim_{n \\to \\infty} a_n = a &lt;=&gt; {\\forall} \u5b50\u5217\u5747\u6536\u655b\u4e8e a\\)</p> <p>\\(\\lim_{n \\to \\infty} a_n = a &lt;=&gt; \\lim_{n \\to \\infty} a_{2n} = \\lim_{n \\to \\infty} a_{2n+1} = a\\)</p> <p>\\(\\lim_{n \\to \\infty} a_n = a &lt;=&gt; \\lim_{n \\to \\infty} a_{3n} = \\lim_{n \\to \\infty} a_{3n+1} = \\lim_{n \\to \\infty} a_{3n+2} = a\\)</p> <p>\u6570\u5217\u6781\u9650\u7684\u6027\u8d28</p> <ol> <li>\u552f\u4e00\u6027\uff1a\\(\\lim_{n \\to \\infty} a_n = a\\)\uff0c\\(\\lim_{n \\to \\infty} a_n = b\\)\uff0c\u5219 \\(a = b\\)</li> <li>\u6709\u754c\u6027\uff1a\\(\\lim_{n \\to \\infty} a_n {\\exists}\\)\uff0c\u5219 \\({a_n}\\) \u6709\u754c</li> <li>\u5c40\u90e8\u4fdd\u53f7\u6027\uff1a\\(\\lim_{n \\to \\infty} a_n = a &gt; 0\\)\uff0c\u5219 \\({\\exists} N &gt; 0\\)\uff0c\u5f53 \\(n &gt; N\\) \u65f6\uff0c\\(a_n &gt; 0\\)</li> </ol>"},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_26","title":"\u51fd\u6570\u6781\u9650","text":"<p>\u51fd\u6570\u6781\u9650\u6982\u5ff5 </p> <p>\u5b9a\u4e49\uff1a</p> <ol> <li> <p>\\(x -&gt; x_0\\)</p> <ul> <li> <p>\\(\\lim_{x \\to x_0} f(x) = A\\)\uff1a\\({\\forall} {\\epsilon} &gt; 0, {\\exists} {\\delta} &gt; 0\\)\uff0c\u5f53 \\(0 &lt; |x - x_0| &lt; {\\delta}\\) \u65f6\uff0c\\(|f(x) - A| &lt; {\\epsilon}\\) \u51fd\u6570\u6781\u9650 \\(x-&gt;x_0\\) \u4f46\u4e0d\u5141\u8bb8 \\(x=x_0\\)\uff08\u51fd\u6570\u5728 \\(x_0\\) \u5904\u4e0d\u4e00\u5b9a\u6709\u5b9a\u4e49\uff09\u3002</p> </li> <li> <p>\\(\\lim_{x \\to x_0^+} f(x) = A\\)\uff1a\\({\\forall} {\\epsilon} &gt; 0, {\\exists} {\\delta} &gt; 0\\)\uff0c\u5f53 \\(0 &lt; x - x_0 &lt; {\\delta}\\) \u65f6\uff0c\\(|f(x) - A| &lt; {\\epsilon}\\)</p> </li> <li> <p>\\(\\lim_{x \\to x_0^-} f(x) = A\\)\uff1a\\({\\forall} {\\epsilon} &gt; 0, {\\exists} {\\delta} &gt; 0\\)\uff0c\u5f53 \\(0 &lt; x_0 - x &lt; {\\delta}\\) \u65f6\uff0c\\(|f(x) - A| &lt; {\\epsilon}\\)</p> </li> </ul> </li> <li> <p>\\(x -&gt; \\infty\\)</p> <ul> <li>\\(\\lim_{x \\to \\infty} f(x) = A\\)\uff1a\\({\\forall} {\\epsilon} &gt; 0, {\\exists} X &gt; 0\\)\uff0c\u5f53 \\(|x| &gt; X\\) \u65f6\uff0c\\(|f(x) - A| &lt; {\\epsilon}\\)</li> <li>\\(\\lim_{x \\to \\infty^+} f(x) = A\\)\uff1a\\({\\forall} {\\epsilon} &gt; 0, {\\exists} X &gt; 0\\)\uff0c\u5f53 \\(x &gt; X\\) \u65f6\uff0c\\(|f(x) - A| &lt; {\\epsilon}\\)</li> <li>\\(\\lim_{x \\to \\infty^-} f(x) = A\\)\uff1a\\({\\forall} {\\epsilon} &gt; 0, {\\exists} X &gt; 0\\)\uff0c\u5f53 \\(x &lt; -X\\) \u65f6\uff0c\\(|f(x) - A| &lt; {\\epsilon}\\)</li> </ul> </li> </ol> <p>\u51fd\u6570\u6781\u9650\u7684\u5145\u8981\u6761\u4ef6</p> <p>\\(\\lim_{x \\to x_0} f(x) = A &lt;=&gt; \\lim_{x \\to x_0^+} f(x) = \\lim_{x \\to x_0^-} f(x) = A\\)</p> <p>\\(\\lim_{x \\to \\infty} f(x) = A &lt;=&gt; \\lim_{x \\to \\infty^+} f(x) = \\lim_{x \\to \\infty^-} f(x) = A\\)</p> <p>\u51fd\u6570\u6781\u9650\u7684\u6027\u8d28</p> <ol> <li>\u552f\u4e00\u6027\uff1a\\(\\lim_{x \\to x_0} f(x) = A\\)\uff0c\\(\\lim_{x \\to x_0} f(x) = B\\)\uff0c\u5219 \\(A = B\\)</li> <li>\u5c40\u90e8\u6709\u754c\u6027\uff1a\\(\\lim_{x \\to x_0} f(x) = A\\)\uff0c\u5219 \\({\\exists} {\\delta} &gt; 0\\)\uff0c \\(M &gt; 0\\)\uff0c\u5f53 \\(0 &lt; |x - x_0| &lt; {\\delta}\\) \u65f6\uff0c\\(|f(x)| &lt;= M\\)</li> <li>\u5c40\u90e8\u4fdd\u53f7\u6027\uff1a\\(\\lim_{x \\to x_0} f(x) = A &gt; 0\\)\uff0c\u5219 \\({\\exists} {\\delta} &gt; 0\\)\uff0c\u5f53 \\(0 &lt; |x - x_0| &lt; {\\delta}\\) \u65f6\uff0c\\(f(x) &gt; 0\\)     \u63a8\u8bba\uff1a     \\(f(x) &gt;= 0\\)\uff0c\u4e14 \\(\\lim_{x \\to x_0} f(x) = A\\)\uff0c\u5219 \\(A &gt;= 0\\)</li> </ol> <p>$ f(x) &gt; 0$\uff0c\u4e14 \\(\\lim_{n \\to \\infty} f(n) = A\\)\uff0c\u5219 \\(A &gt;= 0\\) \\(f(x) = 1/x\\)\uff0c\u4e14 \\(\\lim_{x \\to 0} f(x) = A\\)\uff0c\u5219 \\(A &gt;= 0\\) </p> <p>\u56db\u5219\u8fd0\u7b97\u6cd5\u5219</p> <ol> <li> <p>\\(\\lim_{x \\to x_0} [f(x) \\pm g(x)] = \\lim_{x \\to x_0} f(x) \\pm \\lim_{x \\to x_0} g(x)\\)</p> </li> <li> <p>\\(\\lim_{x \\to x_0} f(x) \\cdot g(x) = \\lim_{x \\to x_0} f(x) \\cdot \\lim_{x \\to x_0} g(x)\\)</p> </li> <li> <p>\\(\\lim_{x \\to x_0} \\frac{f(x)}{g(x)} = \\frac{\\lim_{x \\to x_0} f(x)}{\\lim_{x \\to x_0} g(x)}\\)\uff0c\u5176\u4e2d \\(\\lim_{x \\to x_0} g(x) \\neq 0\\)</p> </li> </ol> <p>\u63a8\u8bba\uff1a\uff08\u63d0\u975e\u96f6\u56e0\u5b50\uff09 \u8bbe \\(\\lim_{x \\to x_0} f(x) = A \\neq 0\\)\uff0c \u5219 \\(\\lim_{x \\to x_0} f(x) \\cdot g(x) = A \\cdot \\lim_{x \\to x_0} g(x)\\)</p> <p>\u6ce8\u610f\uff1a\u56db\u5219\u8fd0\u7b97\u6cd5\u5219\uff08\u52a0\u51cf\u4e58\u9664\u62c6\u5f00\uff09\u6c42\u6781\u9650\u65f6\uff0c\u8981\u6c42\uff1a 1. \u6781\u9650\u5b58\u5728 2. \u6781\u9650\u503c\u6709\u610f\u4e49\uff08\u9664\u6570\u4e0d\u4e3a0\uff09</p> <p>$  \\lim_{x \\to \\infty}  \\frac{2x^3+3x-4}{3x^3-4x+3} \\overset{ \u540c\u9664x^3 }{=} \\lim_{x \\to \\infty} \\frac{2 + \\frac{3}{x^2} - \\frac{4}{x^3}}{3 - \\frac{4}{x^2} + \\frac{3}{x^3}} = \\frac{2}{3}$</p>"},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_27","title":"\u65e0\u7a77\u5c0f","text":"<p>\u65e0\u7a77\u5c0f\u6982\u5ff5</p> <p>\u5b9a\u4e49\uff1a$ \\lim_{x \\to x_0} f(x) = 0$\uff0c\u5219\u79f0 \\(f(x)\\) \u4e3a \\(x \\to x_0\\) \u65f6\u7684\u65e0\u7a77\u5c0f</p> <p>\u65e0\u7a77\u5c0f\u7684\u6027\u8d28</p> <ol> <li>\u6709\u9650\u4e2a\u65e0\u7a77\u5c0f\u7684\u548c\u662f\u65e0\u7a77\u5c0f\uff08\u6ce8\u610f\uff0c\u4e0d\u662f\u65e0\u7a77\uff09</li> <li>\u6709\u9650\u4e2a\u65e0\u7a77\u5c0f\u7684\u79ef\u662f\u65e0\u7a77\u5c0f</li> <li>\u65e0\u7a77\u5c0f\u4e58\u4ee5\u6709\u754c\u91cf\u662f\u65e0\u7a77\u5c0f</li> </ol> <p>\u6709\u754c\u91cf\uff1a\\(|f(x)| &lt;= M\\)\uff0c\\(M\\) \u662f\u5e38\u6570 $ \\lim_{x \\to {\\infty}} \\frac{sinx}{x} = \\lim_{x \\to {\\infty}} \\frac{1}{x} \\cdot sinx = 0 \\cdot sinx = 0$</p> <p>\u65e0\u7a77\u5c0f\u9636\u7684\u6bd4\u8f83</p> <p>$ \\lim_{x \\to x_0} f(x) = 0\\(\uff0c\\) \\lim_{x \\to x_0} g(x) = 0$\uff0c\u5219\uff1a</p> <ol> <li>$ \\lim_{x \\to x_0} \\frac{f(x)}{g(x)} = 0$\uff0c\u79f0 \\(f(x)\\) \u4e3a \\(g(x)\\) \u7684 \u9ad8\u9636 \u65e0\u7a77\u5c0f\uff0c\u8bb0\u4f5c \\(f(x) = o(g(x))\\)     \u7279\u522b\u7684\uff0c0\u662f\u4efb\u610f\u65e0\u7a77\u5c0f\u7684\u9ad8\u9636\u65e0\u7a77\u5c0f</li> </ol> <p>$ \\lim_{x \\to 0} \\frac{x^4}{x^3} = 0\\(\uff0c\\)x^4$ \u662f \\(x^3\\) \u7684\u9ad8\u9636\u65e0\u7a77\u5c0f\uff0c\u8bb0\u4f5c \\(x^4 = o(x^3)\\) \\(o\\) \u7684\u672c\u8d28\u662f\u9636\u6570\u9ad8\u7684\u4e00\u7c7b\u51fd\u6570\u7684\u96c6\u5408\uff0c\u6545\u6709 $ {{x^5, x^6, ...}} \u2208 o(x^3)$</p> <ol> <li> <p>$ \\lim_{x \\to x_0} \\frac{f(x)}{g(x)} = A \\neq 0$\uff0c\u79f0 \\(f(x)\\) \u4e3a \\(g(x)\\) \u7684 \u540c\u9636 \u65e0\u7a77\u5c0f     \u7279\u522b\u7684\uff0c\u5f53 \\(A = 1\\) \u65f6\uff0c\u79f0 \\(f(x)\\) \u4e3a \\(g(x)\\) \u7684 \u7b49\u4ef7 \u65e0\u7a77\u5c0f\uff0c\u8bb0\u4f5c \\(f(x) \\sim g(x)\\)</p> </li> <li> <p>$ \\lim_{x \\to x_0} \\frac{f(x)}{g^k(x)} = C \\neq 0$\uff0c\u79f0 \\(f(x)\\) \u4e3a \\(g(x)\\) \u7684 k\u9636 \u65e0\u7a77\u5c0f</p> </li> </ol> <p>\u9ad8\u9636\u65e0\u7a77\u5c0f\u7684\u6027\u8d28 \\(x \\to 0\\)</p> <ol> <li>\\(o(x^m) + o(x^n) = o(x^l)\\)\uff0c\u5176\u4e2d \\(l = min(m, n)\\)</li> </ol> <p>\\(o(x^3) + o(x^2) = o(x^2)\\)</p> <p>\\(o(x^2) - o(x^2) = o(x^2)\\) \u56e0\u4e3a \\(o(x^2.1) - o(x^2) = o(x^2)\\)\uff0c\\(o(x^2.1)\\) \u662f \\(o(x^2)\\) \u7684\u9ad8\u9636\u65e0\u7a77\u5c0f</p> <ol> <li>\\(k \\cdot o(x^n) = o(x^n)\\)</li> </ol> <p>\\(2 \\cdot o(x^3) = o(x^3)\\)</p> <ol> <li> <p>\\(x^m \\cdot o(x^n) = o(x^m) \\cdot x^n = o(x^m) \\cdot o(x^n) = o(x^{m+n})\\)</p> </li> <li> <p>\\(\\frac{o(x^m)}{x^n} = o(x^{m-n}) \\ \\ \u6761\u4ef6\uff1a(m&gt;n)\\)</p> </li> </ol>"},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_28","title":"\u65e0\u7a77\u5927","text":"<p>\u65e0\u7a77\u5927\u7684\u6982\u5ff5</p> <p>\u5b9a\u4e49\uff1a</p> <ol> <li> <p>$ \\lim_{x \\to x_0} f(x) = \\infty$\uff0c\u5219\u79f0 \\(f(x)\\) \u4e3a \\(x \\to x_0\\) \u65f6\u7684\u65e0\u7a77\u5927     \\(\\forall M&gt;0, \\exists \\delta &gt; 0\\)\uff0c\u5f53 $ 0&lt;|x-x_0|&lt; \\delta$ \u65f6\uff0c\u6709 \\(f(x) &gt; M\\)</p> </li> <li> <p>$ \\lim_{x \\to \\infty} f(x) = \\infty$\uff0c\u5219\u79f0 \\(f(x)\\) \u4e3a \\(x \\to \\infty\\) \u65f6\u7684\u65e0\u7a77\u5927     \\(\\forall M&gt;0, \\exists X &gt; 0\\)\uff0c\u5f53 $ |x| &gt; X$ \u65f6\uff0c\u6709 \\(|f(x)| &gt; M\\)</p> </li> </ol> <p>\u65e0\u7a77\u5927\u7684\u6027\u8d28</p> <ol> <li> <p>\u65e0\u7a77\u5927\u7684\u5012\u6570\u4e3a\u65e0\u7a77\u5c0f    \u975e\u96f6\u65e0\u7a77\u5c0f\u7684\u5012\u6570\u4e3a\u65e0\u7a77\u5927</p> </li> <li> <p>\u65e0\u7a77\u5927\u4e00\u5b9a\u662f\u65e0\u754c\u91cf\uff08$ \\forall M &gt; 0, \\exists x_0$\uff0c\u4f7f\u5f97 \\(|f(x)| &gt; M\\)\uff09    \u65e0\u754c\u91cf\u4e0d\u4e00\u5b9a\u662f\u65e0\u7a77\u5927</p> <p>\\(f(x) = x \\cdot sinx, x \\to \\infty\\) \u4ee4 \\(x_n = 2n\\pi + \\frac{\\pi}{x}\\)\uff0c\u5219 \\(f(x_n) = 2n\\pi + \\frac{\\pi}{2}\\)\uff0c\\(f(x_n) = (2n\\pi + \\frac{\\pi}{2}) \\cdot 1 \\to \\infty\\) \u4ee4 \\(x_n = 2n\\pi\\)\uff0c\u5219 \\(f(x_n) = 0\\)\uff0c\u6545\\(f(x)\\)\u4e3a\u65e0\u754c\u91cf\uff0c\u4f46\u4e0d\u662f\u65e0\u7a77\u5927</p> </li> </ol> <p>\u65e0\u7a77\u5927\u9636\u7684\u6bd4\u8f83</p> <ol> <li> <p>\\(x \\to +\\infty\\) \\(ln^\\alpha x \\ll x^\\beta \\ll a^x \\ll x^x\\)\uff0c\u5176\u4e2d\uff0c$ \\alpha $ \u548c \\(\\beta &gt; 0\\), \\(a&gt;1\\)    \u5bf9\u6570\u51fd\u6570\u4e5f\u53eb\u4f2a\u65e0\u7a77\u5927\uff08\u6700\u5f31\u7684\u65e0\u7a77\u5927\uff09</p> </li> <li> <p>\\(n \\to \\infty\\)  \u6570\u5217\u7684 n \u8d8b\u4e8e\u65e0\u7a77\uff0c\u90fd\u662f \\(\\to + \\infty\\) \\(ln^\\alpha n \\ll n^\\beta \\ll a^n \\ll n! \\ll n^n\\)\uff0c\u5176\u4e2d\uff0c$ \\alpha $ \u548c \\(\\beta &gt; 0\\), \\(a&gt;1\\)</p> <p>\\(\\lim_{n \\to \\infty} \\frac{a^n}{n!} = 0\\)</p> </li> </ol>"},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_29","title":"\u6d1b\u5fc5\u8fbe\u6cd5\u5219","text":"<p>\u82e5\uff1a</p> <ol> <li>\\(\\lim_{x \\to x_0} \\frac{f(x)}{g(x)} = \\frac{0}{0}\\) \u6216 $ = \\frac{\\infty}{\\infty}$</li> <li>\\(f(x), g(x) \u53ef\u5bfc\\)</li> <li>\\(\\lim_{x \\to x_0} \\frac{f^{'}(x)}{g^{'}(x)}\\) \u5b58\u5728 \u6216 \u65e0\u7a77</li> </ol> <p>\u5219\u53ef\u6d1b\u5fc5\u8fbe\uff1a</p> <p>$ \\lim_{x \\to x_0} \\frac{f(x)}{g(x)} = \\lim_{x \\to x_0} \\frac{f^{'}(x)}{g^{'}(x)}$</p> <p>$ \\lim_{x \\to \\infty} \\frac{x+sinx}{x} \\overset{\\frac{\\infty}{\\infty}} = \\lim_{x \\to \\infty}(1+cosx)$ \u9707\u8361\u3002\uff08\u4e0d\u5b58\u5728\u4e86\uff0c\u4e0d\u80fd\u4f7f\u7528\u6d1b\u5fc5\u8fbe\uff09</p> <p>\\(\\lim_{x \\to 0} \\frac{ \\sqrt{1+x} + \\sqrt{1-x} - 2}{x^2}\\) =$ \\lim_{x \\to 0} \\frac{ \\frac{1}{2 \\sqrt{1+x}} - \\frac{1}{2 \\sqrt{1-x}}}{2x} $ =$ \\frac{1}{4} \\lim_{x \\to 0} \\frac{\\sqrt{1-x} - \\sqrt{1+x}}{x \\sqrt{1+x} \\sqrt{1-x}}$</p>"},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#x-0","title":"\u7b49\u4ef7\u4ee3\u6362 x-&gt;0","text":"<ol> <li> <p>\\(x \\sim sinx \\sim tanx\\) \\(\\sim arcsinx \\sim arctanx\\) \\(\\sim ln(1+x) \\sim e^x-1\\)</p> </li> <li> <p>\\((1+x)^2-1 \\sim 2x\\)     \u7279\u522b\u7684\uff0c\\(\\sqrt{1+x}-1 \\sim \\frac{x}{2}\\)     \u6240\u4ee5\u6709\uff0c\\(\\sqrt[n]{1+x}-1 \\sim \\frac{x}{n}\\)</p> <p>\\(a^x-1 \\sim xlna\\)</p> <p>\\(x-ln(1+x) \\sim 1-cosx \\sim \\frac{x^2}{2}\\)</p> </li> <li> <p>\\(x-sinx \\sim arcsinx-x \\sim \\frac{x^3}{6}\\) \u5f26     \\(tanx-x \\sim x-arctanx \\sim \\frac{x^3}{3}\\) \u5207     \\(tanx-sinx \\sim arcsinx-arctanx \\sim \\frac{x^3}{2}\\) \u5f26+\u5207</p> </li> <li> <p>\u7b49\u4ef7\u4ee3\u6362\u6c42\u6781\u9650</p> <ol> <li>\u4e58\u9664\u53ef\u4ee5\u4ee3\u6362\uff0c\u52a0\u51cf\u6700\u7b80\u5f62\u5f0f \\((x, x^2...)\\) \u4e0d\u62b5\u6d88\u65f6\u53ef\u4ee5\u4ee3\u6362 <p>\\(ln(1+x) - sinx\\)  \u7ecf\u5178\u9519\u8bef\uff1a \\(\\sim x-x=0\\) \\(\\sim x-sinx \\sim \\frac{x^3}{6}\\) \u6cd51\uff1aTaylor \\(= x - \\frac{x^2}{2} + o(x^2) - [x-\\frac{x^3}{3!} + o(x^3)]\\) \\(= -\\frac{x^2}{2} + o(x^2) \\sim -\\frac{x^2}{2}\\) \u6cd52\uff1a\u62c6\u9879\u7b49\u4ef7 \\(ln(1+x) - x + x -sinx\\) \\(-\\frac{x^2}{2} + \\frac{x^3}{3!} \\sim -\\frac{x^2}{2}\\)</p> </li> </ol> <p>\\(1-cosx+x^2 \\sim \\frac{x^2}{2}+x^2 = \\frac{3x^2}{2}\\)</p> <ol> <li>\\(x \\to 0\\) \u53ef\u4ee5\u63a8\u5e7f\u4e3a $ \u25a2 \\to 0$</li> </ol> <p>\\(\u25a2 = x^2\\) \u968f\u4fbf\u88c5\uff0c\u4e0d\u8fc7\u8981\u8d8b\u4e8e0 \\(ln(1+\u25a2) \\sim \u25a2, \u25a2 \\to 0\\)</p> <p>\\(\u25a2 - sin\u25a2 \\sim \\frac{x^3}{6}, \u25a2 \\to 0\\)</p> <p>\\(\\lim_{x \\to 0} \\frac{(sinx - sinsinx)sinx}{x^4}\\) \\(= \\lim_{x \\to 0} \\frac{ \\frac{sin^3x}{6} sinx}{x^4}\\) \\(= \\lim_{x \\to 0} \\frac{ \\frac{sin^4x}{6}}{x^4}\\) \\(= \\frac{1}{6}\\)</p> <p>\\(\\lim_{x \\to 0} \\frac{arctanx - x}{ln(1+2x^3)}\\) \\(= \\lim_{x \\to 0} \\frac{- \\frac{x^3}{3}}{2x^3}\\) \\(= - \\frac{1}{6}\\)</p> <p>\\(\\lim_{x \\to 0} \\frac{arctanx -sinx}{x^3}\\) \\(= \\lim_{x \\to 0} \\frac{arctanx - x + x - sinx}{x^3}\\) \\(= \\lim_{x \\to 0} \\frac{- \\frac{x^3}{3} + \\frac{x^3}{6} }{x^3}\\) \\(= - \\frac{1}{6}\\)</p> </li> </ol>"},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_30","title":"\u6cf0\u52d2\u516c\u5f0f","text":"<p>Taylor</p> <p>\u6cf0\u52d2\u516c\u5f0f\uff1a\\(f(x)\\) \u5728 \\(x=x_0\\) \u7684\u67d0\u90bb\u57df\u5185 \\(n+1\\) \u9636\u53ef\u5bfc\uff0c\u5219\u6709\uff1a</p> <p>\\(f(x) = f(x_0) + f'(x_0)(x - x_0) + \\frac{f''(x_0)}{2!}(x - x_0)^2 + \\ldots + \\frac{f^{(n)}(x_0)}{n!}(x - x_0)^n + R_n(x)\\) </p> <p>\\(R_n(x)\\) \u6709\u4e24\u79cd\uff1a</p> <ul> <li> <p>\u62c9\u683c\u6717\u65e5\uff08Lagrange\uff09\u4f59\u9879\uff1a$ \\frac{f^{(n+1)}(\\xi)}{(n+1)!}(x-x_0)^{n+1}\\(\uff0c\\) \\xi $ \u5728 \\(x_0\\) \u4e0e \\(x\\) \u4e4b\u95f4</p> </li> <li> <p>\u4f69\u4e9a\u8bfa\uff08Peano\uff09\u4f59\u9879\uff1a$ o((x-x_0)^n)$</p> </li> </ul> <p>\u9ea6\u514b\u52b3\u6797\u516c\u5f0f Maclaurin\uff1a\\(f(x)\\) \u5728 \\(x=0\\) \u7684\u67d0\u90bb\u57df\u5185 \\(n+1\\) \u9636\u53ef\u5bfc\uff0c\u5219\u6709\uff1a</p> <p>\\(f(x) = f(0) + f'(0)x + \\frac{f''(0)}{2!}x^2 + \\ldots + \\frac{f^{(n)}(0)}{n!}x^n + R_n(x)\\)</p> <p>\u516b\u4e2a\u5e38\u89c1\u51fd\u6570\u7684\u6cf0\u52d2\u516c\u5f0f</p> <ol> <li> <p>\\(e^x = 1 + x + \\frac{x^2}{2!} + o(x^2)\\)</p> </li> <li> <p>\\(\\ln(1+x) = x - \\frac{x^2}{2} + \\frac{x^3}{3} + o(x^3)\\)</p> </li> <li> <p>\\((1+x)^\\alpha = 1 + \\alpha x + \\frac{\\alpha(\\alpha-1)}{2!} x^2 + o(x^2)\\)     \u7279\u522b\u5730\uff1a\\(\\sqrt{1+x} = 1 + \\frac{x}{2} - \\frac{x^2}{8} + o(x^2)\\)</p> </li> <li> <p>$ cosx = 1 - \\frac{x^2}{2!} + \\frac{x^4}{4!} + o(x^4)$     $ cosx = 1 - \\frac{x^2}{2!} + o(x^2)$</p> </li> </ol> <p></p> <ol> <li> <p>$ sinx = x - \\frac{x^3}{3!} + o(x^3)$</p> </li> <li> <p>$ arcsinx = x + \\frac{x^3}{3!} + o(x^3)$ \uff08\u6b63\u8d1f\u4e92\u6362\uff09</p> </li> <li> <p>$ tanx = x + \\frac{x^3}{3} + o(x^3)$ \uff08\u53bb\u6389\u9636\u4e58\uff09</p> </li> <li> <p>$ arctanx = x - \\frac{x^3}{3} + o(x^3)$ \uff08\u6b63\u8d1f\u4e92\u6362\uff09</p> </li> </ol> <p>\u6cf0\u52d2\u516c\u5f0f\u6c42\u6781\u9650</p> <ol> <li>\\(x \\to 0\\) \u53ef\u4ee5\u63a8\u5e7f\u4e3a \\(\u25a2 \\to 0\\)</li> </ol> <p>\\(e^{x^2} = 1 + x^2 + \\frac{(x^2)^2}{2!} + o((x^2)^2)\\)</p> <p>\\(\\lim_{x \\to 0} \\frac{ \\sqrt{1+x} + \\sqrt{1-x} - 2}{x^2}\\) \\(= \\lim_{x \\to 0} \\frac{1+ \\frac{x}{2} - \\frac{x^2}{8} + o(x^2) + 1 - \\frac{x}{2} - \\frac{x^2}{8} + o(x^2) - 2}{x^2}\\) \\(= \\lim_{x \\to 0} \\frac{- \\frac{x^2}{4} + o(x^2)}{x^2}\\) \\(= - \\frac{1}{4}\\)</p> <ol> <li>\u5206\u5b50\u5206\u6bcd\u540c\u9636\u539f\u5219\uff0c\u52a0\u51cf\u4e0d\u62b5\u6d88\u539f\u5219</li> </ol> <p>\\(\\lim_{x \\to 0} \\frac{cosx - e^{- \\frac{x^2}{2}}}{x^4}\\) \\(= \\lim_{x \\to 0} \\frac{1 - \\frac{x^2}{2} + \\frac{x^4}{4!} + o(x^4) - (1 - \\frac{x^2}{2} + \\frac{x^4}{2!} + o(x^4))}{x^4}\\)</p> <p>\\(\\lim_{x \\to 0} \\frac{cosx - e^{-\\frac{x^2}{2}}}{x^4}\\) \\(= \\lim_{x \\to 0} \\frac{1 - \\frac{x^2}{2} + \\frac{x^4}{4!} + o(x^4) - (1 - \\frac{x^2}{2} + \\frac{x^4}{2!*4} + o(x^4))}{x^4}\\) \\(= \\lim_{x \\to 0} \\frac{ \\frac{x^4}{4!} - \\frac{x^4}{2!*4} + o(x^4)}{x^4}\\) \\(= \\frac{1}{12}\\)</p>"},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_31","title":"\u4e03\u7c7b\u4e0d\u5b9a\u5f0f","text":"<ol> <li> <p>\\(\\frac{0}{0}\\)</p> <ul> <li>\u6d1b\u5fc5\u8fbe -&gt; \u7b49\u4ef7 -&gt; \u6cf0\u52d2</li> </ul> </li> <li> <p>\\(\\frac{\\infty}{\\infty}\\)</p> <ul> <li>\u6d1b\u5fc5\u8fbe -&gt; \u540c\u9664\uff08\u6700\u9ad8\u6b21\u5e42\uff09 -&gt; \u6293\u5927\u5934\uff08\u6bcf\u4e2a\u56e0\u5f0f\u4fdd\u7559\u9ad8\u9636\u65e0\u7a77\u5927\uff09</li> </ul> </li> <li> <p>\\(0 \\cdot \\infty\\)</p> <ul> <li>\u540c\u9664\u7b80\u5355\u56e0\u5f0f\uff08\u8f6c\u6362\u4e3a \\(\\frac{0}{0} \\frac{\\infty}{\\infty}\\)\uff09 -&gt; \u62c6\u9879\u7b49\u4ef7 -&gt; \u6d1b\u5fc5\u8fbe</li> </ul> </li> <li> <p>\\(\\infty - \\infty\\)</p> <ul> <li>\u901a\u5206\uff08\u6709\u5206\u6570\uff09 -&gt; \u6709\u7406\u5316\uff08\u6709\u6839\u5f0f\uff09 -&gt; \u5012\u5e26\u6362\uff08\u4ee4 \\(x = \\frac{1}{t}\\) \uff09</li> </ul> </li> <li> <p>\\(0^0\\)</p> </li> <li> <p>\\(\\infty^0\\)</p> <ul> <li>\\(\\lim_{x \\to \u25a2}u^v = \\lim_{x \\to \u25a2} e ^ {v \\ln u} \\overset{ \u6781\u9650\u4ea4\u6362, e^x\u8fde\u7eed }{=} e ^{\\lim_{x \\to \u25a2}v \\ln u}\\)</li> </ul> </li> </ol> <p>\\(\\lim_{x \\to 0^+} x^\\alpha \\ln ^ \\beta x = 0 (\\alpha, \\beta &gt; 0)\\)</p> <ol> <li> <p>\\(1^\\infty\\)</p> <ul> <li> <p>\\(\\lim_{x \\to \u25a2}(1 + u)^v = e ^ {\\lim_{x \\to \u25a2} v \\ln (1+u)} = e^{\\lim_{x \\to \u25a2} u v} (u \\to 0, v \\to \\infty)\\)</p> </li> <li> <p>\\(\\lim_{x \\to \u25a2}u^v = \\lim_{x \\to \u25a2}(1 + (u-1))^v = e^{\\lim_{x \\to \u25a2} (u-1) v} (u \\to 1, v \\to \\infty)\\)</p> </li> </ul> </li> </ol>"},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_32","title":"\u5355\u8c03\u6709\u754c\u5b9a\u7406","text":"<p>\\(\\{x_n\\} \\uparrow\\) \u6709\u4e0a\u754c\u6216 \\(\\{x_n\\} \\downarrow\\) \u6709\u4e0b\u754c\uff0c\u5219 \\(\\lim_{n \\to \\infty} x_n\\) \u5b58\u5728\u3002 \u6ce8\uff1a\u4e0a\u754c\u6216\u4e0b\u754c\u4e0d\u552f\u4e00</p>"},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_33","title":"\u5939\u903c\u5b9a\u7406","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_34","title":"\u5b9a\u79ef\u5206\u5b9a\u4e49","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_35","title":"\u7b2c\u4e8c\u8282 \u5bfc\u6570\u4e0e\u5fae\u5206","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_36","title":"\u5bfc\u6570","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_37","title":"\u8fde\u7eed","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_38","title":"\u95f4\u65ad","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_39","title":"\u5fae\u5206","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_40","title":"\u3010\u6c42\u5bfc\u516c\u5f0f\u3011\u57fa\u672c\u521d\u7b49\u51fd\u6570","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_41","title":"\u3010\u6c42\u5bfc\u516c\u5f0f\u3011\u56db\u5219\u8fd0\u7b97","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_42","title":"\u3010\u6c42\u5bfc\u516c\u5f0f\u3011\u590d\u5408\u51fd\u6570","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_43","title":"\u3010\u6c42\u5bfc\u516c\u5f0f\u3011\u9690\u51fd\u6570","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_44","title":"\u3010\u6c42\u5bfc\u516c\u5f0f\u3011\u53cd\u51fd\u6570","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_45","title":"\u3010\u6c42\u5bfc\u516c\u5f0f\u3011\u53c2\u6570\u65b9\u7a0b","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_46","title":"\u3010\u6c42\u5bfc\u516c\u5f0f\u3011\u5bf9\u6570","text":""},{"location":"src/cs/%E5%BE%AE%E7%A7%AF%E5%88%86/#_47","title":"\u3010\u6c42\u5bfc\u516c\u5f0f\u3011\u9ad8\u9636\u5bfc\u6570","text":""},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/","title":"\u6982\u7387\u8bba","text":""},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#_1","title":"\u5f15\u5b50","text":"<p>\u5982\u679c\u4e0d\u6302\u79d1\uff0c\u4e0d\u8003\u6570\u4e00\u3001\u4e09\uff0c\u5927\u62b5\u662f\u4e0d\u4f1a\u66f4\u65b0\u4e86</p> <p>**\uff0c\u6302\u4e86\u3002\u3002\u3002</p> <p>\u6982\u7387\u8bba\u7814\u7a76 \u4e0d\u786e\u5b9a \u4e8b\u4ef6\u53d1\u751f\u7684 \u53ef\u80fd\u6027</p> <p>\u4e8b\u4ef6\u53ef\u4ee5\u63a8\u5bfc\u51fa\u6982\u7387\uff0c\u6982\u7387 \u4e0d\u53ef\u4ee5 \u63a8\u5bfc\u51fa\u4e8b\u4ef6</p> <p></p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#_2","title":"\u4e00\u3001\u6982\u7387\u8bba\u7684\u57fa\u672c\u6982\u5ff5","text":""},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#0-1","title":"0\u3001\u5168\u6982\u7387\u4e0e\u8d1d\u53f6\u65af \\(^1\\)","text":"<p>\uff081\uff09\u6709 \\(10\\) \u7bb1\u4ea7\u54c1\uff0c\\(1, 2, 3\\) \u5206\u522b\u6709 \\(5, 3, 2\\) \u7bb1\uff0c\u6b21\u54c1\u7387\u4e3a \\(0.1, 0.2, 0.3\\)\uff0c\u4efb\u9009\u4e00\u7bb1\uff0c\u518d\u53d6\u4e00\u4e2a\u4ea7\u54c1\uff0c\u4e3a\u826f\u54c1\u7684\u6982\u7387</p> <p>\\(A\\) \u4e3a\u62bd\u5230\u67d0\u5bb6\u7684\u6982\u7387 \\(B\\) \u4e3a\u826f\u54c1\u7684\u6982\u7387</p> <p>\\(P(A_1) = 0.5, P(B | A_1) = 0.9\\) \\(P(A_2) = 0.3, P(B | A_2) = 0.8\\) \\(P(A_3) = 0.2, P(B | A_3) = 0.7\\)</p> <p>\u7531\u5168\u6982\u7387\u516c\u5f0f \\(P(B) = \\sum_{i=1}^n P(B|A_i) P(A_i)\\)</p> <p>\\(P(B) = 0.9*0.5 + 0.8*0.3 + 0.7*0.2 = 0.83\\)</p> <p>\u7b54\uff1a\u4efb\u9009\u4e00\u7bb1\uff0c\u518d\u53d6\u4e00\u4e2a\u4ea7\u54c1\uff0c\u4e3a\u826f\u54c1\u7684\u6982\u7387\u4e3a \\(0.83\\)</p> <p></p> <p>\uff082\uff09\\(1, 2, 3\\) \u4e09\u8f66\u95f4\u52a0\u5de5\u4e00\u4ea7\u54c1\uff0c\u52a0\u5de5\u91cf\u5360\u603b\u91cf\u7684 \\(0.25, 0.35, 0.40\\)\uff0c\u6b21\u54c1\u7387\u5206\u522b\u4e3a \\(0.03, 0.02, 0.01\\)\uff0c\u73b0\u4ece\u6240\u6709\u4ea7\u54c1\u4e2d\u62bd\u53d6\u4e00\u4e2a\u4ea7\u54c1\uff1a\uff081\uff09\u6c42\u4ea7\u54c1\u4e3a\u6b21\u54c1\u7684\u6982\u7387\uff1b\uff082\uff09\u662f\u6b21\u54c1\uff0c\u6b21\u54c1\u6765\u81ea \\(2\\) \u8f66\u95f4\u7684\u6982\u7387</p> <p>\\((1)\\)</p> <p>\\(A\\) \u4e3a\u62bd\u5230\u67d0\u5bb6\u7684\u6982\u7387 \\(B\\) \u4e3a\u6b21\u54c1\u7684\u6982\u7387</p> <p>\\(P(A_1) = 0.25, P(B_1 | A_1) = 0.03\\) \\(P(A_2) = 0.35, P(B_2 | A_2) = 0.02\\) \\(P(A_3) = 0.40, P(B_3 | A_3) = 0.01\\)</p> <p>\u7531\u5168\u6982\u7387\u516c\u5f0f \\(P(B) = \\sum_{i=1}^n P(B|A_i) P(A_i)\\)</p> <p>\\(P(B) = 0.03 * 0.25 + 0.02 * 0.35 + 0.01 * 0.40 = 0.0185\\)</p> <p>\u7b54\uff1a\u4ea7\u54c1\u4e3a\u6b21\u54c1\u7684\u6982\u7387\u4e3a \\(0.0185\\)</p> <p>\\((2)\\)</p> <p>\u7531\u8d1d\u53f6\u65af\u516c\u5f0f \\(P(A_j|B) = \\frac{P(B|A_j) P(A_j)}{\\sum_{i=1}^n P(B|A_i) P(A_i)}\\)</p> <p>\\(P(A_2|B) = \\frac{0.02*0.35}{0.0185} = 0.378\\)</p> <p>\u7b54\uff1a\u662f\u6b21\u54c1\uff0c\u6b21\u54c1\u6765\u81ea \\(2\\) \u8f66\u95f4\u7684\u6982\u7387\u4e3a \\(0.378\\)</p> <p></p> <p>\uff083\uff09\u4e09\u4e2a\u7bb1\u5b50\uff0c\u7b2c \\(1\\) \u7bb1\u6709 \\(7\\) \u4e2a\u9ed1\u7403\u548c \\(1\\) \u4e2a\u767d\u7403\uff0c\u7b2c \\(2\\) \u7bb1\u6709 \\(3\\) \u4e2a\u9ed1\u7403\u548c \\(3\\) \u4e2a\u767d\u7403\uff0c\u7b2c \\(3\\) \u7bb1\u6709 \\(5\\) \u4e2a\u9ed1\u7403\u548c \\(3\\) \u4e2a\u767d\u7403\uff0c\u73b0\u4efb\u53d6\u4e00\u7bb1\uff08\u53d6\u5230\u6bcf\u4e2a\u7bb1\u5b50\u662f\u7b49\u53ef\u80fd\u7684\uff09\uff0c\u518d\u4efb\u53d6\u4e00\u7403\uff1a\uff081\uff09\u6c42\u53d6\u5230\u7684\u662f\u767d\u7403\u7684\u6982\u7387\uff1b\uff082\uff09\u662f\u767d\u7403\uff0c\u5219\u5c5e\u4e8e\u7b2c \\(2\\) \u7bb1\u7684\u6982\u7387</p> <p>\\((1)\\)</p> <p>\\(A\\) \u4e3a\u62bd\u5230\u67d0\u7bb1\u7684\u6982\u7387 \\(B\\) \u4e3a\u62bd\u5230\u767d\u7403\u7684\u6982\u7387</p> <p>\\(P(A_1) = \\frac{1}{3}, P(B | A_1) = \\frac{1}{8}\\) \\(P(A_2) = \\frac{1}{3}, P(B | A_2) = \\frac{3}{6}\\) \\(P(A_3) = \\frac{1}{3}, P(B | A_3) = \\frac{3}{8}\\)</p> <p>\\(P(B) = \\frac{1}{8}*\\frac{1}{3} + \\frac{3}{6}*\\frac{1}{3} + \\frac{3}{8}*\\frac{1}{3} = \\frac{1}{3}\\)</p> <p>\u7531\u5168\u6982\u7387\u516c\u5f0f \\(P(B) = \\sum_{i=1}^n P(B|A_i) P(A_i)\\)</p> <p>\u7b54\uff1a\u53d6\u5230\u7684\u662f\u767d\u7403\u7684\u6982\u7387\u4e3a \\(\\frac{1}{3}\\)</p> <p>\\((2)\\)</p> <p>\u7531\u8d1d\u53f6\u65af\u516c\u5f0f \\(P(A_j|B) = \\frac{P(B|A_j) P(A_j)}{\\sum_{i=1}^n P(B|A_i) P(A_i)}\\)</p> <p>\\(P(A_2|B) = \\frac{\\frac{3}{6} * \\frac{1}{3}}{ \\frac{1}{3} } = \\frac{1}{2}\\)</p> <p>\u7b54\uff1a\u662f\u767d\u7403\uff0c\u5c5e\u4e8e\u7b2c \\(2\\) \u7bb1\u7684\u6982\u7387\u4e3a \\(\\frac{1}{2}\\)</p> <p></p> <p>\uff084\uff09\u7532\u4e59\u4e19\u4e09\u4eba\u540c\u65f6\u5411\u4e00\u67b6\u98de\u673a\u5c04\u51fb\uff0c\u8bbe\u51fb\u4e2d\u98de\u673a\u7684\u6982\u7387\u5206\u522b\u4e3a \\(0.4, 0.5, 0.7\\)\uff0c\u82e5\u53ea\u6709 \\(1\\) \u4eba\u51fb\u4e2d\u98de\u673a\uff0c\u5219\u98de\u673a\u88ab\u51fb\u843d\u7684\u6982\u7387\u4e3a \\(0.2\\)\uff0c\u82e5\u6709 \\(2\\) \u4eba\u51fb\u4e2d\u98de\u673a\uff0c\u5219\u98de\u673a\u88ab\u51fb\u843d\u7684\u6982\u7387\u4e3a \\(0.6\\)\uff0c\u82e5\u4e09\u4eba\u51fb\u4e2d\u98de\u673a\uff0c\u5219\u98de\u673a\u4e00\u5b9a\u88ab\u51fb\u843d\uff0c\u6c42\u98de\u673a\u88ab\u51fb\u843d\u7684\u6982\u7387</p> <p>\\(A\\) \u6709\u51e0\u4eba\u51fb\u4e2d\u98de\u673a\u7684\u6982\u7387 \\(B\\) \u98de\u673a\u88ab\u51fb\u843d\u7684\u6982\u7387</p> <p>\\(P(A_1) = 0.4(\u4e2d)*0.5*0.3 + 0.6*0.5(\u4e2d)*0.3 + 0.6*0.5*0.7(\u4e2d) = 0.36\\) \\(P(A_2) = 0.4(\u4e2d)*0.5(\u4e2d)*0.3 + 0.6*0.5(\u4e2d)*0.7(\u4e2d) + 0.4(\u4e2d)*0.5*0.7(\u4e2d) = 0.41\\) \\(P(A_3) = 0.4(\u4e2d)*0.5(\u4e2d)*0.7(\u4e2d) = 0.14\\)</p> <p>\\(P(B | A_1) = 0.2\\) \\(P(B | A_2) = 0.6\\) \\(P(B | A_3) = 1\\)</p> <p>\u7531\u5168\u6982\u7387\u516c\u5f0f \\(P(B) = \\sum_{i=1}^n P(B|A_i) P(A_i)\\)</p> <p>\\(P(B) = 0.2*0.36 + 0.6*0.41 + 1*0.14 = 0.458\\)</p> <p>\u7b54\uff1a\u98de\u673a\u88ab\u51fb\u843d\u7684\u6982\u7387\u4e3a \\(0.458\\)</p> <p></p> <p>\uff085\uff09\u67d0\u9053\u5355\u9879\u9009\u62e9\u9898\uff08\\(4\\) \u4e2a\u9009\u9879\uff09\uff0c\u4e0d\u4f1a\u505a\u7684\u5b66\u751f\u4ece\u4e2d\u968f\u673a\u9009\u62e9\uff0c\u5047\u5b9a\u5b66\u751f\u4f1a\u505a\u6b64\u9898\u7684\u6982\u7387\u4e3a \\(0.7\\)\uff1a\uff081\uff09\u5b66\u751f\u7b54\u5bf9\u6b64\u9898\u7684\u6982\u7387\uff1b\uff082\uff09\u7b54\u5bf9\u6b64\u9898\u7684\u5b66\u751f\u786e\u5b9e\u4f1a\u505a\u7684\u6982\u7387</p> <p>\\((1)\\)</p> <p>\\(A\\) \u4e3a\u786e\u5b9e\u4f1a\u505a\u7684\u6982\u7387 \\(B\\) \u4e3a\u7b54\u5bf9\u6b64\u9898\u7684\u6982\u7387</p> <p>\\(P(A) = 0.7, P(B|A) = 1\\) \\(P(\\bar A) = 0.3, P(B|\\bar A) = \\frac{1}{4}\\)</p> <p>\u7531\u5168\u6982\u7387\u516c\u5f0f \\(P(B) = \\sum_{i=1}^n P(B|A_i) P(A_i)\\)</p> <p>\\(P(B) = 1*0.7 + \\frac{1}{4}*0.3 = 0.775\\)</p> <p>\u7b54\uff1a\u5b66\u751f\u7b54\u5bf9\u6b64\u9898\u7684\u6982\u7387\u4e3a \\(0.775\\)</p> <p>\\((2)\\)</p> <p>\u7531\u8d1d\u53f6\u65af\u516c\u5f0f \\(P(A_j|B) = \\frac{P(B|A_j) P(A_j)}{\\sum_{i=1}^n P(B|A_i) P(A_i)}\\)</p> <p>\\(P(A|B) = \\frac{1*0.7}{0.775} = \\frac{28}{31}\\)</p> <p>\u7b54\uff1a\u7b54\u5bf9\u6b64\u9898\u7684\u5b66\u751f\u786e\u5b9e\u4f1a\u505a\u7684\u6982\u7387\u4e3a \\(\\frac{28}{31}\\)</p> <p></p> <p>\uff086\uff09\u67d0\u75c5\u4eba\u53d1\u70e7\uff0c\u8ba4\u4e3a\u75c5\u4eba\u60a3 \\(A, B, C\\) \u4e09\u79cd\u75c5\u7684\u6982\u7387\u5206\u522b\u4e3a \\(0.5, 0.2, 0.3\\)\uff0c\u5728\u8fd9\u4e09\u79cd\u75c5\u4e4b\u4e0b\uff0c\u53d1\u70e7\u7684\u6982\u7387\u5206\u522b\u4e3a \\(0.2, 0.5, 0.8\\)\uff0c\u8bf7\u63a8\u65ad\u8be5\u75c5\u4eba\u53d1\u70e7\u7531\u90a3\u4e00\u79cd\u75c5\u5f15\u8d77\u7684\u53ef\u80fd\u6027\u6bd4\u8f83\u5927</p> <p>\\(D\\) \u4e3a\u75c5\u4eba\u60a3\u67d0\u75c5\u7684\u6982\u7387 \\(E\\) \u4e3a\u75c5\u4eba\u53d1\u70e7\u7684\u6982\u7387</p> <p>\\(P(D_A)=0.5, P(E|D_A) = 0.2\\) \\(P(D_B)=0.2, P(E|D_B) = 0.5\\) \\(P(D_C)=0.3, P(E|D_C) = 0.8\\)</p> <p>\u7531\u5168\u6982\u7387\u516c\u5f0f \\(P(E) = \\sum_{i=1}^n P(E|D_i) P(D_i)\\)</p> <p>\\(P(E) = 0.2 * 0.5 + 0.5 * 0.2 + 0.8 * 0.3 = 0.44\\)</p> <p>\u7531\u8d1d\u53f6\u65af\u516c\u5f0f \\(P(D_j|E) = \\frac{P(E|D_j) P(D_j)}{\\sum_{i=1}^n P(E|D_i) P(D_i)}\\)</p> <p>\\(P(D_A|E) = \\frac{0.2 * 0.5}{0.44} = 0.227\\)</p> <p>\\(P(D_B|E) = \\frac{0.5 * 0.2}{0.44} = 0.227\\)</p> <p>\\(P(D_C|E) = \\frac{0.8 * 0.3}{0.44} = 0.545\\)</p> <p>\u7b54\uff1a\u75c5\u4eba\u53d1\u70e7\u7531 \\(C\\) \u75c5\u5f15\u53d1\u7684\u53ef\u80fd\u6027\u5927</p> <p></p> <p>\\(A\\) \u60a3\u8005\u5360 \\(0.35\\)\uff0c\\(B\\) \u60a3\u8005\u5360 \\(0.6\\)\uff0c\\(C\\) \u60a3\u8005\u5360 \\(0.05\\)\uff0c\u53c8\u77e5\u60a3 \\(A, B, C\\) \u4e09\u79cd\u75c5\u7684\u75c5\u4eba\u9633\u6027\u7684\u53ef\u80fd\u6027\u5206\u522b\u4e3a \\(0.8, 0.3, 0.85\\)\uff0c\u6bcf\u4f4d\u60a3\u8005\u53ea\u53ef\u80fd\u60a3\u4e00\u79cd\u75c5\uff0c\u73b0\u786e\u8ba4\u9633\u6027\uff0c\u6c42\u8be5\u75c5\u4eba\u786e\u5b9e\u6362 \\(A\\) \u75c5\u7684\u6982\u7387</p> <p>\\(A\\) \u4e3a\u60a3\u8005\u60a3\u75c5\u7684\u6982\u7387 \\(B\\) \u4e3a\u786e\u8ba4\u9633\u6027\u7684\u6982\u7387</p> <p>\\(P(A_A) = 0.35, P(B_A | A_A) = 0.8\\) \\(P(A_B) = 0.6, P(B_B | A_B) = 0.3\\) \\(P(A_C) = 0.05, P(B_C | A_C) = 0.85\\)</p> <p>\\(P(B) = 0.8*0.35 + 0.3*0.6 + 0.85*0.05 = 0.5025\\)</p> <p>\\(P(A_A|B) = \\frac{0.8*0.35}{0.5025} = 0.5572\\)</p> <p></p> <p>\u67d0\u5730\u533a\u80a5\u80d6\u8005\u5360 \\(0.1\\)\uff0c\u6b63\u5e38\u8005\u5360 \\(0.82\\)\uff0c\u7626\u8005\u5360 \\(0.08\\)\uff0c\u53c8\u77e5\u80a5\u80d6\u60a3\u8005\u9ad8\u8840\u538b\u7684\u6982\u7387\u4e3a \\(0.2\\)\uff0c\u6b63\u5e38\u8005\u4e3a \\(0.1\\)\uff0c\u7626\u8005\u4e3a \\(0.05\\)\uff1a\uff081\uff09\u6c42\u8be5\u5730\u533a\u9ad8\u8840\u538b\u7684\u6982\u7387\uff1b\uff082\uff09\u60a3\u9ad8\u8840\u538b\uff0c\u5c5e\u4e8e\u80a5\u80d6\u7684\u6982\u7387</p> <p>\u80a5\u80d6\uff1a\\(1\\) \u6b63\u5e38\uff1a\\(2\\) \u7626\u5f31\uff1a\\(3\\)</p> <p>\\(A\\) \u4e3a\u5404\u79cd\u4f53\u578b\u7684\u6982\u7387 \\(B\\) \u4e3a\u9ad8\u8840\u538b\u7684\u6982\u7387</p> <p>\\(P(A_1) = 0.1, P(B_1|A_1) = 0.2\\) \\(P(A_2) = 0.82, P(B_2|A_2) = 0.1\\) \\(P(A_3) = 0.08, P(B_3|A_3) = 0.05\\)</p> <p>\\(P(B) = 0.2*0.1 + 0.1*0.82 + 0.05*0.08 = 0.106\\)</p> <p>\\(P(A_1|B) = \\frac{0.2*0.1}{0.106} = 0.1886\\)</p> <p></p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#1","title":"1\u3001\u4e8b\u4ef6 \\(^*\\)","text":""},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#_3","title":"\u4e8b\u4ef6\u7684\u5173\u7cfb","text":"<ul> <li> <p>\u5305\u542b\uff1a\\(A \\subset B\\)\uff0c\uff0c\\(B\\) \u5305\u542b \\(A\\)\uff0c\u4e8b\u4ef6 \\(A\\) \u53d1\u751f\u5fc5\u7136\u5bfc\u81f4\u4e8b\u4ef6 \\(B\\) \u53d1\u751f</p> </li> <li> <p>\u5e76\uff1a\\(A \\cup B\\)\uff0c\u4e8b\u4ef6 \\(A\\) \u4e0e \\(B\\) \u81f3\u5c11\u53d1\u751f\u4e00\u4e2a\uff0c\u4e5f\u5199\u4f5c \\(A + B\\)</p> </li> <li> <p>\u4ea4\uff1a\\(A \\cap B\\)\uff0c\u4e8b\u4ef6 \\(A\\) \u4e0e \\(B\\) \u540c\u65f6\u53d1\u751f\uff0c\u4e5f\u5199\u4f5c \\(AB\\)</p> </li> <li> <p>\u5dee\uff1a\\(A - B\\)\uff0c\u4e8b\u4ef6 \\(A\\) \u53d1\u751f\u800c \\(B\\) \u4e0d\u53d1\u751f</p> </li> <li> <p>\u9006\uff08\u5bf9\u7acb\uff09\uff1a\\(\\bar{A}\\)\uff0c\u4e8b\u4ef6 \\(A\\) \u4e0d\u53d1\u751f</p> </li> <li> <p>\u4e92\u65a5\uff1a\\(A \\cap B = \\emptyset\\)\uff0c\u4e8b\u4ef6 \\(A\\) \u4e0e \\(B\\) \u4e0d\u53ef\u80fd\u540c\u65f6\u53d1\u751f</p> </li> <li> <p>\u4e92\u65a5\uff1a\\(A \\cap \\bar{A} = \\emptyset\\)\uff0c\\(A \\cup \\bar{A} = S\\)\uff0c\u4e8b\u4ef6 \\(A\\) \u4e0e \\(\\bar{A}\\) \u4e92\u65a5</p> </li> </ul> <p>\u5bf9\u7acb\uff08\u6982\u7387\u4e4b\u548c\u4e3a 1\uff09 -&gt; \u4e92\u65a5\uff08\u4e92\u4e0d\u76f8\u5bb9\uff09\uff08\u6982\u7387\u4e4b\u548c\u4e0d\u4e00\u5b9a\u4e3a 1\uff09 -&gt; \u72ec\u7acb\uff08\u8054\u5408\u6982\u7387\u4e3a\u5404\u81ea\u4e58\u79ef\uff09</p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#_4","title":"\u4e8b\u4ef6\u7684\u8fd0\u7b97","text":"<ul> <li>\u4ea4\u6362\u5f8b\uff1a\\(A \\cup B = B \\cup A\\)\uff0c\\(A \\cap B = B \\cap A\\)</li> <li>\u7ed3\u5408\u5f8b\uff1a\\((A \\cup B) \\cup C = A \\cup (B \\cup C)\\)\uff0c\\((A \\cap B) \\cap C = A \\cap (B \\cap C)\\)</li> <li>\u5206\u914d\u5f8b\uff1a\\(A \\cup (B \\cap C) = (A \\cup B) \\cap (A \\cup C)\\)\uff0c\\(A \\cap (B \\cup C) = (A \\cap B) \\cup (A \\cap C)\\)</li> <li>\u5fb7\u6469\u6839\u5f8b\uff1a\\(\\overline{A \\cup B} = \\bar{A} \\cap \\bar{B}\\)\uff0c\\(\\overline{A \\cap B} = \\bar{A} \\cup \\bar{B}\\)</li> </ul>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#_5","title":"\u6982\u7387","text":"<p>\u4e8b\u4ef6 \\(A\\) \u53d1\u751f\u7684\u53ef\u80fd\u6027\u5927\u5c0f\u7684\u5ea6\u91cf\uff0c\u8bb0\u4f5c \\(P(A)\\)</p> <p>\u6027\u8d28\uff1a</p> <ul> <li>\u975e\u8d1f\u6027\uff1a\\(P(A) \\geq 0\\)</li> <li>\u89c4\u8303\u6027\uff1a\\(P(S) = 1\\)</li> <li>\u53ef\u5217\u53ef\u52a0\u6027\uff1a\u82e5 \\(A_1, A_2, \\cdots\\) \u4e24\u4e24\u4e92\u65a5\uff0c\u5219 \\(P(\\bigcup_{i=1}^{\\infty} A_i) = \\sum_{i=1}^{\\infty} P(A_i)\\)</li> </ul> <p>\u6839\u636e\u6027\u8d28\u62d3\u5c55\uff1a</p> <ul> <li>\\(P(\\emptyset) = 0\\)</li> <li>\\(P(\\bar{A}) = 1 - P(A)\\)</li> <li>\u82e5 \\(A \\subset B\\)\uff0c\u5219 \\(P(A) \\leq P(B)\\)\uff0c\u6709 \\(P(B - A) = P(B) - P(A)\\)</li> <li>\\(P(A \\cup B) = P(A) + P(B) - P(A \\cap B)\\)</li> <li>\\(P(A-B) = P(A) - P(A \\cap B) = P(A \\cap \\bar B)\\)</li> <li>\\(P(A \\cap B) = P(A|B) P(B)\\)<ul> <li>\u82e5\u72ec\u7acb\uff0c\u5219 \\(P(A \\cap B) = P(A)P(B)\\)</li> </ul> </li> </ul> <p>\u6761\u4ef6\u6982\u7387\uff1a</p> <p>\u5728\u4e8b\u4ef6 \\(B\\) \u5df2\u7ecf\u53d1\u751f\u7684\u6761\u4ef6\u4e0b\uff0c\u4e8b\u4ef6 \\(A\\) \u53d1\u751f\u7684\u6982\u7387\uff0c\u8bb0\u4f5c \\(P(A|B)\\)</p> <ul> <li>\\(P(A|B) = \\frac{P(A \\cap B)}{P(B)}\\)</li> </ul> <p>\u53ef\u62d3\u5c55\uff1a</p> <ul> <li>\u5168\u6982\u7387\u516c\u5f0f\uff1a</li> </ul> <p>(\\(P(B) = \\sum_{i=1}^n P(B|A_i) P(A_i)\\)\\)</p> <ul> <li>\u8d1d\u53f6\u65af\u516c\u5f0f\uff1a</li> </ul> <p>(\\(P(A_j|B) = \\frac{P(B|A_j) P(A_j)}{\\sum_{i=1}^n P(B|A_i) P(A_i)}\\)\\)</p> <p> </p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#_6","title":"\u4e8c\u3001\u968f\u673a\u53d8\u91cf\u53ca\u5176\u5206\u5e03","text":""},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#0","title":"0\u3001\u9898","text":""},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#_7","title":"\u5206\u5e03\u5f8b\u6c42\u5206\u5e03\u51fd\u6570","text":"<p>\u8bbe\u968f\u673a\u53d8\u91cf \\(X\\) \u4e0e \\(Y\\) \u72ec\u7acb\u5206\u5e03\uff0c\u4e14\u4ed6\u4eec\u53d6 \\(-1, 0, 1\\) \u4e09\u4e2a\u503c\u7684\u6982\u7387\u5206\u522b\u4e3a \\(\\frac{1}{6}, \\frac{1}{3}, \\frac{1}{2}\\)\uff0c\u5219 \\(P\\{X + Y = 0\\}\\)</p> <p>\\(P\\{X + Y = 0\\} = P\\{X=-1, Y=1\\} + P\\{X=0, Y=0\\} + P\\{X=1, Y=-1\\}\\) \\(P\\{X + Y = 0\\} = \\frac{1}{6} * \\frac{1}{2} + \\frac{1}{3} * \\frac{1}{3} + \\frac{1}{2} * \\frac{1}{6}\\) \\(P\\{X + Y = 0\\} = \\frac{5}{18}\\)</p> <p></p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#2","title":"\u6982\u7387\u5bc6\u5ea6\u6c42\u5206\u5e03\u51fd\u6570 \\(^2\\)","text":"<p>\u8bbe\u968f\u673a\u53d8\u91cf \\(X\\) \u670d\u4ece \\((0, 2)\\) \u4e0a\u7684\u5747\u5300\u5206\u5e03\uff0c\u5219 \\(P\\{1 &lt; X &lt; 3\\}\\)</p> <p>\\(f(x) = \\begin{cases} \\frac{1}{b-a}, &amp; a &lt; x &lt; b \\\\ 0, &amp; else \\end{cases}\\)</p> <p>\\(f(x) = \\begin{cases} \\frac{1}{2}, &amp; 0 &lt; x &lt; 2 \\\\ 0, &amp; else \\end{cases}\\)</p> <p>\\(P\\{1 &lt; x &lt; 3\\} = \\int_1^2 \\frac{1}{2} \\text{d}x\\)</p> <p>\\(P\\{1 &lt; x &lt; 3\\} = \\frac{1}{2}x |_1^2 = 1 - \\frac{1}{2} = \\frac{1}{2}\\)</p> <p></p> <p>\\(f(x) = \\begin{cases} Ke^{-5x}, x&gt;0 \\\\ 0, x \\leq 0 \\end{cases}\\)\uff0c\uff081\uff09\u786e\u5b9a \\(K\\)\uff1b\uff082\uff09\u6c42 \\(P\\{X&gt;0.2\\}\\)\uff1b\uff083\uff09\u6c42\u5206\u5e03\u51fd\u6570 \\(F(x)\\)</p> <p>\\((1)\\)</p> <p>\\(\\int_{-\\infty}^{+\\infty}f(x) \\text{d} x = 1\\)</p> <p>\\(\\int_0^{+\\infty} Ke^{-5x} = \\int_0^{+\\infty} -\\frac{K}{5} e^{-5x} \\text{d}(-5x) = 1\\)</p> <p>\\(= -\\frac{K}{5}e^{-5x} |_0^{+\\infty} = \\frac{K}{5} = 1\\)</p> <p>\\(K = 5\\)</p> <p>\\((2)\\)</p> <p>\\(P\\{X&gt;0.2\\} = \\int_{0.2}^{+\\infty} 5e^{-5x} \\text{d}x = \\int_{0.2}^{+\\infty} -\\frac{5}{5} e^{-5x} \\text{d}(-5x) = -e^{-5x}|_{0.2}^{+\\infty} = e^{-1}\\)</p> <p>\\((3)\\)</p> <p>\\(F(x) = \\int_{-\\infty}^{+\\infty} f(x) \\text{d}x\\)</p> <p>\\(\\begin{cases} 0, &amp; x \\leq 0 \\\\ \\int_{0}^{+\\infty}5e^{-5x} \\text{d}x, &amp; x &gt; 0 \\end{cases} \\Rightarrow F(x) = \\begin{cases} 0, &amp; x \\leq 0 \\\\ 1, &amp; x &gt; 0 \\end{cases}\\)</p> <p></p> <p>\u8bbe\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf \\(X\\) \u7684\u5bc6\u5ea6\u51fd\u6570\u4e3a \\(f(x) = \\begin{cases} Ax, &amp; 0 \\leq x \\leq 1 \\\\ A(2-x), &amp; 1 &lt; x \\leq 2 \\\\ 0, &amp; else \\end{cases}\\)\uff0c\u6c42\uff081\uff09\u5e38\u6570 \\(A\\)\uff1b\uff082\uff09\\(X\\) \u7684\u5206\u5e03\u51fd\u6570 \\(F(x)\\)\uff1b\uff083\uff09\\(P\\{\\frac{1}{2} &lt; X &lt; \\frac{3}{2}\\}\\)</p> <p>\\((1)\\)</p> <p>\\(\\int_{-\\infty}^{+\\infty}f(x)\\text{d}x = 1\\)</p> <p>\\(\\int_{0}^{1} Ax \\text{d}x + \\int_{1}^{2} A(2-x) \\text{d}x = 1\\)</p> <p>\\(\\frac{A}{2} x^2 |_0^1 + (2Ax - \\frac{A}{2}x^2)|_1^2 = 1\\)</p> <p>\\(A = 1\\)</p> <p>\\((2)\\)</p> <p>\\(F(x) = \\int_{-\\infty}^{+\\infty} f(x) \\text{d}x\\)</p> <p>\\(\\begin{cases} 0, &amp; x &lt; 0 \\\\ \\int_{0}^{x} x \\text{d}x, &amp; 0 \\leq x &lt; 1 \\\\ \\int_0^1 x \\text{d}x + \\int_1^x (2-x) \\text{d}x, &amp; 1 \\leq x &lt; 2 \\\\ \\int_{0}^{1}x\\text{d}x + \\int_1^2 (2-x) \\text{d}x, &amp; x \\geq 2 \\end{cases} \\Rightarrow F(x) = \\begin{cases} 0, &amp; x &lt; 0 \\\\ \\frac{1}{2}x^2, &amp; 0 \\leq x &lt; 1 \\\\ 2x - \\frac{1}{2}x^2-1, &amp; 1 \\leq x &lt; 2 \\\\ 1, &amp; x \\geq 2 \\end{cases}\\)</p> <p>\\((3)\\)</p> <p>\\(P\\{\\frac{1}{2} &lt; X &lt; \\frac{3}{2}\\} = \\int_{\\frac{1}{2}}^{\\frac{3}{2}} f(x) \\text{d}x = \\int_{\\frac{1}{2}}^{1}x\\text{d}x + \\int_{1}^{\\frac{3}{2}} (2-x) \\text{d} x = \\frac{3}{4}\\)</p> <p></p> <p>\u8bbe\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf \\(X\\) \u7684\u5bc6\u5ea6\u4e3a \\(f(x) = \\begin{cases} A \\sin x ,&amp; 0&lt;x&lt; \\pi \\\\ 0, &amp; else\\end{cases}\\) \u6c42\uff081\uff09\\(A\\)\uff1b\uff082\uff09\\(X\\) \u7684\u5206\u5e03\u51fd\u6570 \\(F(x)\\)\uff1b\uff083\uff09\\(P\\{0&lt; x &lt; \\frac{\\pi}{4} \\}\\)</p> <p>\\((1)\\)</p> <p>\\(\\int_{-\\infty}^{+\\infty}f(x) \\text{d}x = 1\\)</p> <p>\\(\\int_0^\\pi A \\sin x \\text{d} x = 1\\)</p> <p>\\(-A \\cos x |_0^\\pi = 1\\)</p> <p>\\(2A = 1 \\Rightarrow A = \\frac{1}{2}\\)</p> <p>\\((2)\\)</p> <p>\\(F(x) = \\int_{-\\infty}^{+\\infty} f(x) \\text{d}x\\)</p> <p>\\(F(x) = \\begin{cases} 0, &amp; x &lt; 0 \\\\ \\int_0^x \\frac{1}{2} \\sin x \\text{d} x , &amp; 0 \\leq x &lt; \\pi \\\\ \\int_0^\\pi \\frac{1}{2} \\sin x \\text{d}x, &amp; x \\geq \\pi \\end{cases} \\Rightarrow \\begin{cases} 0, &amp; x &lt; 0  \\\\ 1-\\frac{1}{2} \\cos x , &amp; 0 \\leq x &lt; \\pi \\\\ 1 , &amp; x \\geq \\pi \\end{cases}\\)</p> <p>\\((3)\\)</p> <p>\\(P\\{ 0 &lt; x &lt; \\frac{\\pi}{4} \\} = \\int_0^{\\frac{\\pi}{4}} \\frac{1}{2} \\sin x \\text{d} x = \\frac{2 - \\sqrt{2}}{4}\\)</p> <p></p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#4","title":"\u6982\u7387\u5bc6\u5ea6\u6c42\u6982\u7387\u5bc6\u5ea6 \\(^4\\)","text":"<p>\u8bbe\u968f\u673a\u53d8\u91cf \\(X\\) \u7684\u5bc6\u5ea6\u4e3a \\(f(x) = \\begin{cases} x, &amp; 0 \\leq x \\leq 1 \\\\ 2-x , &amp; 1 &lt; x \\leq 2 \\\\ 0 , &amp; else\\end{cases}\\)\uff0c\u6c42\uff081\uff09\\(Y = -2X+1\\) \u7684\u5bc6\u5ea6\uff1b\uff082\uff09\\(Z=e^X\\) \u7684\u5bc6\u5ea6</p> <p>\\((1)\\)</p> <p>\\(F(y) = P\\{Y \\leq y\\} = P\\{-2X+1 \\leq y\\} = P\\{X \\geq \\frac{1-y}{2}\\} = \\int_{\\frac{1-y}{2}}^{+\\infty} f(x) \\text{d} x\\)</p> <p>\\(=\\begin{cases} 1, &amp; \\frac{1-y}{2} &lt; 0 \\\\ \\int_{\\frac{1-y}{2}}^{1} \\frac{1-y}{2} \\text{d} \\frac{1-y}{2} + \\int_{1}^{2} (2 - \\frac{1-y}{2}) \\text{d} \\frac{1-y}{2}, &amp; 0 \\leq \\frac{1-y}{2} &lt; 1 \\\\ \\int_{\\frac{1-y}{2}}^{2} ( 2 - \\frac{1-y}{2}) \\text{d} \\frac{1-y}{2}, &amp; 1 \\leq \\frac{1-y}{2} &lt; 2 \\\\ 0, &amp; \\frac{1-y}{2} \\geq 2 \\end{cases}\\)</p> <p>\\(=\\begin{cases} 1, &amp; \\frac{1-y}{2} &lt; 0 \\\\ 1-\\frac{1}{2} * (\\frac{1-y}{2})^2, &amp; 0 \\leq \\frac{1-y}{2} &lt; 1 \\\\ 2 - 2 * \\frac{1-y}{2} + \\frac{1}{2}(\\frac{1-y}{2})^2, &amp; 1 \\leq \\frac{1-y}{2} &lt; 2 \\\\ 0, &amp; \\frac{1-y}{2} \\geq 2 \\end{cases}\\)</p> <p>\\(f(y) = F^{'}(y) = \\begin{cases} \\frac{y}{4}-\\frac{1}{4}, &amp; -1 &lt; y &lt; 1 \\\\ \\frac{y}{4} + \\frac{3}{4} , &amp; -3 &lt; y &lt; -1 \\\\ 0, &amp; else \\end{cases}\\)</p> <p>\\((2)\\)</p> <p>\\(F(y) = P\\{Y \\leq y\\} = P\\{ e^X \\leq y\\} = P\\{ X \\leq \\ln y \\} = \\int_{-\\infty}^{\\ln y} f(x) \\text{d} x\\)</p> <p>$= \\begin{cases} 0, &amp; \\ln y &lt; 0\\ \\int_{0}^{\\ln y} (\\ln y)\\text{d} \\ln y , &amp; 0 \\leq \\ln y &lt; 1 \\ \\int_{0}^{1} (\\ln y) \\text{d}\\ln y + \\int_{1}^{\\ln y} (2-\\ln y) \\text{d}\\ln y , &amp; 1 \\leq \\ln y &lt; 2 \\ 1, &amp; \\ln y \\geq 2 \\end{cases} $</p> <p>\\(= \\begin{cases} 0, &amp; \\ln y &lt; 0 \\\\ \\frac{1}{2}(\\ln y)^2 , &amp; 0 \\leq \\ln y &lt; 1 \\\\ 2 \\ln y - \\frac{1}{2}(\\ln y)^2 - 1, &amp; 1 \\leq \\ln y &lt; 2 \\\\ 1, &amp; \\ln y \\geq 2 \\end{cases}\\)</p> <p>\\(f(y) = F^{'}(y) = \\begin{cases} \\frac{\\ln y}{y}, &amp; 0 &lt; y &lt; e \\\\ \\frac{2}{y} - \\frac{\\ln y}{y}, &amp; e &lt; y &lt; e^2 \\\\ 0 , &amp; else\\end{cases}\\)</p> <p></p> <p>\u8bbe \\(X \\sim f_X(x) = \\begin{cases} \\frac{x}{8}, &amp; 0&lt;x&lt;4\\\\ 0, &amp; else\\end{cases}\\)\uff0c\uff081\uff09\u6c42 \\(Y=2X+8\\) \u7684\u5bc6\u5ea6\u51fd\u6570 \\(f_Y(y)\\)\uff1b\uff082\uff09\u6c42 \\(Y=2X-1\\) \u7684\u5bc6\u5ea6\u51fd\u6570 \\(f_Y(y)\\)</p> <p>\\((1)\\)</p> <p>$F(y) = P{Y \\leq y} = P{2X + 8 \\leq y} = P{X \\leq \\frac{y-8}{2}}= \\int_{-\\infty}^{\\frac{y-8}{2}} f(x) \\text{d} x $</p> <p>\\(= \\begin{cases} 0, &amp; \\frac{y-8}{2} &lt; 0 \\\\ \\int_0^{\\frac{y-8}{2}} (\\frac{\\frac{y-8}{2}}{8}) \\text{d} \\frac{y-8}{2}, &amp; 0 \\leq \\frac{y-8}{2} &lt; 4 \\\\ 1, &amp; \\frac{y-8}{2} \\geq 4 \\end{cases}\\)</p> <p>\\(= \\begin{cases} 0, &amp; \\frac{y-8}{2} &lt; 0 \\\\ \\frac{1}{8} * \\frac{1}{2} * (\\frac{y-8}{2})^2 , &amp; 0 \\leq \\frac{y-8}{2} &lt; 4 \\\\ 1, &amp; \\frac{y-8}{2} \\geq 4 \\end{cases}\\)</p> <p>\\(f(y) = F^{'}(y) = \\begin{cases} \\frac{y-8}{32}, &amp; 8 &lt; y &lt; 16 \\\\ 0, &amp; else\\end{cases}\\)</p> <p>\\((2)\\)</p> <p>\\(F(y) = P\\{Y \\leq y\\} = P\\{2X-1 \\leq y\\} = P\\{X \\leq \\frac{y+1}{2}\\} = \\int_{-\\infty}^{\\frac{y+1}{2}} f(x) \\text{d} x\\)</p> <p>\\(= \\begin{cases} 0, &amp; \\frac{y+1}{2} &lt; 0 \\\\ \\int_{0}^{\\frac{y+1}{2}} \\frac{\\frac{y+1}{2}}{8} \\text{d} \\frac{y+1}{2}, &amp; 0 \\leq \\frac{y+1}{2} &lt; 4 \\\\ 1, &amp; \\frac{y+1}{2} \\geq 4 \\end{cases}\\)</p> <p>\\(= \\begin{cases} 0, &amp; \\frac{y+1}{2} &lt; 0 \\\\ \\frac{1}{8} * \\frac{1}{2} * (\\frac{y+1}{2})^2, &amp; 0 \\leq \\frac{y+1}{2} &lt; 4 \\\\ 1, &amp; \\frac{y+1}{2} \\geq 4 \\end{cases}\\)</p> <p>\\(f(y) = F^{'}(y) = \\begin{cases} \\frac{y+1}{32}, &amp; -1 &lt; y &lt; 7 \\\\ 0, &amp; else\\end{cases}\\)</p> <p></p> <p></p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#1_1","title":"1\u3001\u968f\u673a\u53d8\u91cf\u53ca\u5206\u5e03\u51fd\u6570","text":""},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#_8","title":"\u968f\u673a\u53d8\u91cf","text":"<p>\u968f\u673a\u53d8\u91cf\u5c31\u662f\u968f\u673a\u8bd5\u9a8c\u7ed3\u679c\u7684 \u6570\u503c\u5316</p> <p>\u4f8b\u5982\uff1a\u629b\u786c\u5e01\uff0c\u6b63\u9762\u4e3a 1\uff0c\u53cd\u9762\u4e3a 0 \u4f8b\u5982\uff1a\u9009\u7403\uff0c\u7ea2\u7403\u4e3a 1\uff0c\u767d\u7403\u4e3a 2\uff0c\u9ed1\u7403\u4e3a 3</p> <p>\u6570\u503c\u5316\u540e\uff0c\u66f4\u6709\u5229\u4e8e\u5efa\u7acb\u6570\u5b66\u6a21\u578b\uff0c\u8fdb\u884c\u6570\u5b66\u5206\u6790</p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#_9","title":"\u7d2f\u8ba1\u5206\u5e03\u51fd\u6570","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u968f\u673a\u53d8\u91cf \\(X\\)\uff0c\u5176\u5206\u5e03\u51fd\u6570 \\(F(x)\\) \u5b9a\u4e49\u4e3a\uff1a </p> <p>(\\(F(x) = P \\{X \\leq x\\}\\)\\)</p> <p>\\(F(x)\\) \u7b49\u4e8e \\(X\\) \u7684\u503c \\(\\leq x\\) \u7684 \u6982\u7387</p> <p>\u5177\u4f53\u7684\uff0c\u5047\u8bbe\u6211\u4eec\u5728\u629b\u4e00\u4e2a\u516d\u9762\u9ab0\u5b50\uff0c\u90a3\u4e48 \\(F(x)\\) \u5c31\u662f\uff1a</p> x 1 2 3 4 5 6 F(x) 1/6 2/6 3/6 4/6 5/6 6/6 <p>\\(F(3)\\) \u6307\uff0c\u629b\u51fa\u7684\u9ab0\u5b50\u7684\u70b9\u6570\u5c0f\u4e8e\u7b49\u4e8e \\(3\\) \u7684\u6982\u7387\uff0c\u5373 \\(1/2\\) \\(F(4)\\) \u6307\uff0c\u629b\u51fa\u7684\u9ab0\u5b50\u7684\u70b9\u6570\u5c0f\u4e8e\u7b49\u4e8e \\(4\\) \u7684\u6982\u7387\uff0c\u5373 \\(2/3\\)</p> <p>\u77e5\u4e4e \u4e0a\u6709\u4e00\u4e2a\u66f4\u52a0\u5f62\u8c61\u7684\u89e3\u91ca\uff1a</p> <p>\u5047\u8bbe\u73b0\u5728\u6709\u5168\u4e16\u754c\u6240\u6709\u4eba\u7684\u8eab\u9ad8\u7684\u5206\u5e03\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5206\u5e03\u51fd\u6570</p> <p>\u6211\u7684\u8eab\u9ad8 \\(180\\)\uff0c\u90a3\u4e48 \\(F(180)\\) =  \\(\\frac{\u8eab\u9ad8 &lt;= 180 \u7684\u4eba\u6570}{\u5168\u4e16\u754c\u4eba\u6570}\\)</p> <p>\u59da\u660e\u8eab\u9ad8 \\(226\\)\uff0c\u90a3\u4e48 \\(F(226)\\) =  \\(\\frac{\u8eab\u9ad8 &lt;= 226 \u7684\u4eba\u6570}{\u6240\u6709\u7684\u4eba\u6570}\\)</p> <p>\u5176\u5177\u6709\u4ee5\u4e0b\u6027\u8d28\uff1a</p> <ul> <li>\u5355\u8c03\u4e0d\u51cf\uff1a\\(x_1 &lt; x_2 \\Rightarrow F(x_1) \\leq F(x_2)\\)</li> <li>\u975e\u8d1f\u6027\uff1a\\(0 \\leq F(x) \\leq 1\\)</li> <li>\u89c4\u8303\u6027\uff1a\\(F(x)\\) \u662f\u4e00\u4e2a\u6982\u7387\uff0c\\(F(-\\infty) = 0\\)\uff0c\\(F(+\\infty) = 1\\)</li> </ul>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#_10","title":"\u6982\u7387\u5206\u5e03","text":"<p>\u6982\u7387\u5206\u5e03 \\(f\\)  * \u901a\u5e38\u662f\u6307 \u5206\u5e03\u5f8b\uff08\u79bb\u6563\uff09\u548c \u6982\u7387\u5bc6\u5ea6\u51fd\u6570\uff08\u8fde\u7eed\uff09</p> <p>\u7d2f\u8ba1\u5206\u5e03\u51fd\u6570 \\(F\\) * \u5373 \\(F(x) = P \\{X \\leq x\\}\\)</p> <p></p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#2_1","title":"2\u3001\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf / \u5206\u5e03\u5f8b","text":"<p>\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\uff1a * \u6307\u5176\u53d6\u503c\u4e3a \u6709\u9650\u4e2a \u6570\u503c\u7684\u968f\u673a\u53d8\u91cf * \u5728\u53d6\u503c\u4e0a\u662f\u6709\u95f4\u9694\u7684 * \u901a\u5e38\u63cf\u8ff0\u53ef\u4ee5\u6570\u51fa\u6765\u3001\u53ef\u4ee5\u5206\u9694\u7684\u968f\u673a\u73b0\u8c61</p> <p>\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u7684\u5206\u5e03\u5f8b\uff1a * \u4e00\u4e2a\u51fd\u6570\uff0c\u63cf\u8ff0\u4e86\u968f\u673a\u53d8\u91cf\u7684\u53d6\u503c\u548c\u5176\u6982\u7387\u7684\u5bf9\u5e94\u5173\u7cfb * \u8868\u793a\u4e3a\uff1a\\(P(X=x_i) = p_i\\)\uff0c\u6ee1\u8db3\uff1a     * \u5bf9\u4e8e\u6240\u6709\u7684 \\(i\\)\uff0c\\(p_i \\geq 0\\)\uff0c\u5373\u6982\u7387\u975e\u8d1f     * \\(\\sum p_i = 1\\)\uff0c\u5373\u6982\u7387\u548c\u4e3a \\(1\\)</p> <p>\u4f8b\u5982\uff0c\u629b\u4e00\u4e2a\u516d\u9762\u9ab0\u5b50\uff0c\u968f\u673a\u53d8\u91cf \\(X\\) \u8868\u793a\u629b\u51fa\u7684\u70b9\u6570\uff0c\u90a3\u4e48 \\(X\\) \u7684\u5206\u5e03\u5f8b\u4e3a\uff1a X | 1 | 2 | 3 | 4 | 5 | 6 :-:|:-:|:-:|:-:|:-:|:-:|:-: p(X) | 1/6 | 1/6 | 1/6 | 1/6 | 1/6 | 1/6</p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#0-1_1","title":"0-1\u5206\u5e03","text":"<p>\u8bbe\u968f\u673a\u53d8\u91cf \\(X\\) \u53ea\u80fd\u53d6 \\(0\\) \u6216 \\(1\\)\uff0c\u5176\u5206\u5e03\u5f8b\u4e3a\uff1a</p> X 0 1 p(X) 1-p p <p>\u5206\u5e03\u51fd\u6570\uff1a</p> \\[ P \\{ X=k \\} = p^k (1-p)^{1-k} $$ $$ \u5176\u4e2d (k=0,1), (0&lt;p&lt;1) \\] <p></p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#3","title":"3\u3001\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf / \u6982\u7387\u5bc6\u5ea6","text":"<p>\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\uff1a</p> <ul> <li>\u6307\u5176\u53d6\u503c\u4e3a \u65e0\u9650\u4e2a \u6570\u503c\u7684\u968f\u673a\u53d8\u91cf</li> <li>\u5728\u53d6\u503c\u4e0a\u662f\u65e0\u95f4\u9694\u7684</li> </ul> <p>\u4f8b\u5982\uff1a\u65f6\u95f4\uff0c\u957f\u5ea6\uff0c\u9762\u79ef</p> <p>\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\uff1a</p> <ul> <li>\u8ba1\u7b97\u968f\u673a\u53d8\u91cf\u843d\u5728\u67d0\u4e2a\u533a\u95f4\u5185\u7684\u6982\u7387</li> </ul> <p>\u5bf9\u4e8e\u968f\u673a\u53d8\u91cf \\(X\\)\uff0c\u5b58\u5728\u975e\u8d1f\u53ef\u79ef\u51fd\u6570 \\(f(x)\\)\uff0c\u4f7f\u5f97\u5bf9\u4e8e\u4efb\u610f\u5b9e\u6570 \\(x\\)\uff0c\u6709\uff1a</p> \\[F(x) = \\int_{-\\infty}^{x} f(t) dt$$ $$\u5176\u4e2d, -\\infty &lt; x &lt; +\\infty\\] <p>\\(x\\) \u4e3a\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\uff0c\\(f(x)\\) \u79f0\u4e3a \\(X\\) \u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570</p> <p></p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#_11","title":"\u4e09\u3001\u591a\u7ef4\u968f\u673a\u53d8\u91cf\u53ca\u5176\u5206\u5e03","text":""},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#0-3","title":"0\u3001\u8fb9\u7f18\u6982\u7387\u5bc6\u5ea6 \\(^3\\)","text":"<p>\u8bbe\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf \\((X, Y)\\) \u7684\u6982\u7387\u5bc6\u5ea6\u4e3a \\(f(x, y) = \\begin{cases} kx^2y , &amp; x^2 \\leq y \\leq 1 \\\\ 0 , &amp; else\\end{cases}\\) \u6c42 \uff081\uff09\u5e38\u6570 \\(k\\)\uff1b\uff082\uff09\u8fb9\u7f18\u6982\u7387\u5bc6\u5ea6\uff1b\uff083\uff09\\(X\\) \u4e0e \\(Y\\) \u662f\u5426\u72ec\u7acb</p> <ol> <li> <p>\u7531\u89c4\u8303\u6027 \\(\\int_{-\\infty}^{+\\infty} \\int_{-\\infty}^{+\\infty} f(x, y) \\text{d}x \\text{d}y = 1\\)</p> <p>\\(\\int_{-1}^{1} \\int_{x^2}^{1} kx^2y \\text{d}y \\text{d}x = 1\\)</p> <p>\\(k = \\frac{21}{4}\\)</p> </li> </ol> <p></p> <ol> <li> <p>\\(\\begin{cases}f_X(x) = \\int_{-\\infty}^{+\\infty} f(x,y) \\text{d}y \\\\ f_Y(y) = \\int_{-\\infty}^{+\\infty} f(x,y) \\text{d}x \\end{cases}\\)</p> <p>\\(f_X(x) = \\begin{cases} \\int_{x^2}^{1} \\frac{21}{4} x^2 y \\text{d}y, &amp; -1 \\leq x \\leq  1 \\\\ 0, &amp; else\\end{cases} = \\begin{cases} \\frac{21x^2-21x^6}{8}, &amp; -1 \\leq x \\leq 1 \\\\ 0, &amp; else\\end{cases}\\)</p> <p>\\(f_Y(y) = \\begin{cases} \\int_{-\\sqrt y}^{ \\sqrt y} \\frac{21}{4} x^2 y \\text{d}x, &amp; 0 \\leq y \\leq 1 \\\\ 0, &amp; else\\end{cases} = \\begin{cases} \\frac{21y^2 \\sqrt y}{6}, &amp; 0 \\leq y \\leq 1 \\\\ 0, &amp; else\\end{cases}\\)</p> </li> </ol> <p></p> <ol> <li>\u7531\u4e8e \\(f(x,y) \\neq f_X(x)f_Y(y)\\)\uff0c\u6240\u4ee5 \\(X\\) \u4e0e \\(Y\\) \u4e0d\u72ec\u7acb</li> </ol> <p></p> <p>\u8bbe\u4e8c\u7ef4\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf \\((X, Y)\\) \u7684\u8054\u5408\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a $ f(x,y) = \\begin{cases} 4xy, &amp; 0 &lt; x &lt; 1, 0 &lt; y &lt; 1 \\ 0 , &amp; else \\end{cases}$ \u6c42\uff081\uff09\u8fb9\u7f18\u5bc6\u5ea6\u51fd\u6570\uff1b\uff082\uff09\\(X, Y\\) \u662f\u5426\u72ec\u7acb\uff1b\uff083\uff09\u6c42 \\(P\\{Y \\leq X^2\\}\\)</p> <ol> <li> <p>\\(\\begin{cases}f_X(x) = \\int_{-\\infty}^{+\\infty} f(x,y) \\text{d}y \\\\ f_Y(y) = \\int_{-\\infty}^{+\\infty} f(x,y) \\text{d}x \\end{cases}\\)</p> <p>\\(f_X(x) = \\begin{cases} \\int_0^1 4xy \\text{d}y , &amp; 0 &lt; x &lt; 1 \\\\ 0 , &amp; else \\end{cases} = \\begin{cases} 2x, &amp; 0 &lt; x &lt; 1 \\\\ 0 , &amp; else \\end{cases}\\)</p> <p>\\(f_Y(y) = \\begin{cases} \\int_0^1 4xy \\text{d}x , &amp; 0 &lt; y &lt; 1 \\\\ 0 , &amp; else \\end{cases} = \\begin{cases} 2y, &amp; 0 &lt; y &lt; 1 \\\\ 0 , &amp; else \\end{cases}\\)</p> </li> </ol> <p></p> <ol> <li>\u7531\u4e8e \\(f(x,y) = f_X(x)f_Y(y)\\)\uff0c\u6240\u4ee5 \\(X\\) \u4e0e \\(Y\\) \u72ec\u7acb</li> </ol> <p></p> <ol> <li> <p>\\(P\\{Y \\leq X^2 \\} = \\underset{G^{'}}{\\int\\int} f(x, y) \\text{d} x \\text{d} y\\)</p> <p>\\(\\int_0^1 \\int_0^{x^2} 4xy \\text{d}y \\text{d}x = \\frac{1}{3}\\)</p> </li> </ol> <p></p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#_12","title":"\u56db\u3001\u968f\u673a\u53d8\u91cf\u7684\u6570\u5b57\u7279\u5f81","text":""},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#0-5","title":"0\u3001\u6c42\u671f\u671b\u65b9\u5dee \\(^5\\)","text":"<p>\uff081\uff09\u8bbe\u968f\u673a\u53d8\u91cf \\(X\\) \u7684\u5bc6\u5ea6\u51fd\u6570\u4e3a \\(f(x) = \\begin{cases} 2x, &amp; 0 \\leq x &lt; 1 \\\\ 0, &amp; else \\end{cases}\\)\uff1a\uff081\uff09\u6c42 \\(E(X)\\)\uff1b\uff082\uff09\u6c42 \\(D(X)\\)</p> <ol> <li> <p>\\(E(X) = \\int_{-\\infty}^{+\\infty} x f(x) \\text{d}x\\)</p> <p>\\(E(X) = \\int^1_0 x(2x) \\text{d}x = \\frac{2}{3} x^3 |^1_0 = \\frac{2}{3}\\)</p> </li> <li> <p>\\(D(X) = E(X^2) - E^2(X)\\)</p> <p>\\(E(X^2) = \\int^1_0 x^2(2x) \\text{d}x = \\frac{1}{2}x^4 |^1_0 = \\frac{1}{2}\\)</p> <p>\\(D(X) = \\frac{1}{2} - (\\frac{2}{3})^2 = \\frac{1}{18}\\)</p> </li> </ol> <p></p> <p>\uff082\uff09\u8bbe\u968f\u673a\u53d8\u91cf \\(X \\sim B(n, p), E(X)=1.8, D(X)=1.26\\)\uff0c\u5219\u53c2\u6570 \\(n, p\\) \u7684\u503c\u4e3a</p> <ol> <li> <p>\u7531\u4e8c\u9879\u5206\u5e03\u7684\u671f\u671b\u65b9\u5dee</p> <p>\\(E(X) = np = 1.8\\)</p> <p>\\(D(X) = np(1-p) = 1.26\\)</p> <p>\\(n = 6, p = 0.3\\)</p> </li> </ol> <p></p> <p>\uff083\uff09\u8bbe \\(X_i \\sim P(\\lambda)(i=1,2,3)\\)\uff0c\u4e14 \\(\\lambda = 3\\)\uff0c\\(X_1, X_2, X_3\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u5219 \\(D[\\frac{1}{3}(X_1 + X_2 + X_3)]\\)</p> <p>\\(D[\\frac{1}{3}(X_1 + X_2 + X_3)] = \\frac{1}{9} D(X_1 + X_2 + X_3)\\)</p> <p>\\(D(X_1 + X_2 + X_3) = D(X_1) + D(X_2) + D(X_3) + 2(E(X_1 X_2) - E(X_1)E(X_2)) + 2(E(X_1 X_3) - E(X_1)E(X_3)) + 2(E(X_2 X_3) - E(X_2)E(X_3))\\)</p> <p>\u56e0\u4e3a\u72ec\u7acb\uff0c\\(E(XY) = E(X)E(Y)\\)</p> <p>\u6240\u4ee5\u539f\u5f0f \\(= \\frac{1}{9}(D(X_1) + D(X_2) + D(X_3)) = 1\\)</p> <p></p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#1-ex","title":"1\u3001\u6570\u5b66\u671f\u671b \\(E(X)\\)","text":""},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#_13","title":"\u79bb\u6563\u578b","text":"<p>\u79bb\u6563\u671f\u671b = \u53d6\u503c\u4e58\u6982\u7387\u518d\u6c42\u548c</p> <p>\\(X\\)\uff1a</p> \\[E(X) = \\sum_{i=1}^{n} x_i p_i\\] <p>\\(X^2\\)\uff1a</p> \\[E(X^2) = \\sum_{i=1}^{n} x_i^2 p_i\\] <p>\\(Y=g(X)\\)\uff1a</p> \\[E(Y) = \\sum_{i=1}^{n} g(x_i) p_i\\] <p>\\(Z=g(X, Y)\\)\uff1a</p> \\[E(Z) = \\sum_{i=1}^{n} \\sum_{j=1}^{m} g(x_i, y_j) p_{ij}\\]"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#_14","title":"\u8fde\u7eed\u578b","text":"<p>\u8fde\u7eed\u671f\u671b = \u53d6\u503c\u4e58\u5bc6\u5ea6\u518d\u79ef\u5206</p> <p>\\(X\\)\uff1a</p> \\[E(X) = \\int_{-\\infty}^{+\\infty} x f(x) \\text{d}x\\] <p>\\(X^2\\)\uff1a</p> \\[E(X^2) = \\int_{-\\infty}^{+\\infty} x^2 f(x) \\text{d}x\\] <p>\\(Y=g(X)\\)\uff1a</p> \\[E(g(X)) = \\int_{-\\infty}^{+\\infty} g(x) f(x) dx\\] <p>\\(Z=g(X, Y)\\)\uff1a</p> \\[E(g(X,Y)) = \\int_{-\\infty}^{+\\infty} \\int_{-\\infty}^{+\\infty} g(x, y) f(x, y) dx dy\\] <p></p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#2-dx","title":"2\u3001\u65b9\u5dee \\(D(X)\\)","text":""},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#_15","title":"\u786c\u7b97","text":"<p>\u56fd\u5bb6\u7edf\u8ba1\u5c40\uff1a\u65b9\u5dee\u4e0e\u6807\u51c6\uff08\u5747\u65b9\uff09\u5dee</p> <p>\u603b\u4f53\u65b9\u5dee = \\(\\sigma^2 = \\frac{\\sum_{i=1}^n (x_i-\\bar x)^2}{n}\\)</p> <p>\u6837\u672c\u65b9\u5dee = \\(s^2 = \\frac{\\sum_{i=1}^n (x_i-\\bar x)^2}{n-1}\\)</p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#_16","title":"\u516c\u5f0f","text":"<p>(\\(D(X) = E(X^2) - E^2(X)\\)\\)</p> \\[E(X^2) = D(X) + E^2(X)\\] <p></p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#3-cov","title":"3\u3001\u534f\u65b9\u5dee\u4e0e\u76f8\u5173\u7cfb\u6570 \\(Cov\\)","text":""},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#_17","title":"\u516c\u5f0f","text":"\\[Cov(X,Y) = E(XY) - E(X)E(Y)\\] \\[Cov(X,X) = D(X)\\] \\[D(X+Y) = D(X) + D(Y) + 2Cov(X, Y)\\]"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#4_1","title":"4\u3001\u6027\u8d28 \\(^*\\)","text":"<p>\\(C\\) \u4e3a\u5e38\u6570</p> <p>\u671f\u671b\uff1a</p> <ul> <li> <p>\\(E(C)=C\\)</p> </li> <li> <p>\\(E(CX) = CE(X)\\)</p> </li> <li> <p>\\(E(X \\pm C) = E(X) \\pm C\\)</p> </li> <li> <p>\\(E(X \\pm Y) = E(X) \\pm E(Y)\\)</p> <ul> <li>\u72ec\u7acb\uff0c\u6709 \\(E(XY) = E(X)E(Y)\\)\uff08\u4e0d\u80fd\u53cd\u63a8\uff09</li> </ul> </li> </ul> <p>\u65b9\u5dee\uff1a</p> <ul> <li> <p>\\(D(C)=0\\)</p> </li> <li> <p>\\(D(CX) = C^2D(X)\\)</p> </li> <li> <p>\\(D(X \\pm C) = D(X)\\)</p> </li> <li> <p>\\(D(X \\pm Y) = D(X) + D(Y) \\pm 2(E(XY) - E(X)E(Y))\\)</p> <ul> <li>\u72ec\u7acb\uff0c\u6709 \\(D(X \\pm Y) = D(X) + D(Y)\\)\uff08\u4e0d\u80fd\u53cd\u63a8\uff09\uff08\u5c31\u662f \\(+\\)\uff0c\u6ca1\u5199\u9519\uff09</li> <li>\\(\\rho(X,Y) = \\frac{Cov(X,Y)}{\\sqrt{D(X)}\\sqrt{D(Y)}}\\)</li> <li>\\(Cov(X,Y) = E(XY) - E(X)(Y)\\)</li> </ul> </li> </ul> <p>\u659c\u65b9\u5dee\uff1a</p> <ul> <li> <p>\\(Cov(X,Y) = Cov(Y, X)\\)</p> </li> <li> <p>\\(Cov(aX,bY) = abCov(X, Y)\\)</p> </li> <li> <p>\\(Cov(X+Y,Z) = Cov(X,Z)+Cov(Y,Z)\\)</p> </li> </ul> <p></p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#_18","title":"\u4e03\u3001\u53c2\u6570\u4f30\u8ba1","text":""},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#0-6","title":"0\u3001\u6c42\u77e9\u6216\u6781\u5927\u4f3c\u7136\u4f30\u8ba1 \\(^6\\)","text":"<p>\uff081\uff09\u8bbe\u603b\u4f53 \\(X \\sim B(1, p)\\) \u5176\u4e2d \\(p\\) \u662f\u672a\u77e5\u53c2\u6570\uff0c\\(X_1, X_2, X_3, X_4, X_5\\) \u662f\u603b\u4f53\u7684\u6837\u672c\uff0c\u82e5\u6837\u672c\u89c2\u6d4b\u503c\u4e3a \\(1, 1, 0, 1, 0\\)\uff0c\u6c42 \\(p\\) \u7684\u77e9\u4f30\u8ba1\u91cf</p> <ol> <li> <p>\u6c42\u51fa\u603b\u4f53\u77e9 \\(E(X)\\)</p> <p>\\(E(X) = np = p\\)</p> </li> <li> <p>\u4ee4 \\(\\bar X = E(X)\\)</p> <p>\\(\\frac{\\sum_{i=1}^5 X_i}{5} = p\\)</p> </li> <li> <p>\u6c42\u89e3\u65b9\u7a0b     \\(\\hat p = \\frac{3}{5}\\)</p> </li> </ol> <p></p> <p>\uff082\uff09\u8bbe\u603b\u4f53 \\(X \\sim \\pi(\\lambda)\\)\uff0c\\(\\lambda\\) \u672a\u77e5\uff0c\\(X_1, X_2, ..., X_m\\) \u662f\u6765\u81ea\u603b\u4f53\u5f97\u7b80\u5355\u968f\u673a\u6837\u672c\uff0c\u8bd5\u6c42\u53c2\u6570 \\(\\lambda\\) \u7684\u77e9\u4f30\u8ba1\u91cf</p> <ol> <li> <p>\u6c42\u51fa\u603b\u4f53\u77e9 \\(E(X)\\)</p> <p>\\(E(X) = \\lambda\\)</p> </li> <li> <p>\u4ee4 \\(\\bar X = E(X)\\)</p> <p>\\(\\frac{\\sum_{i=1}^{m} X_i}{m} = \\lambda\\)</p> </li> <li> <p>\u6c42\u89e3\u65b9\u7a0b</p> <p>\\(\\hat \\lambda = \\frac{\\sum_{i=1}^{m} X_i}{m}\\)</p> </li> </ol> <p></p> <p>\uff083\uff09\u8bbe\u603b\u4f53 \\(X\\) \u7684\u5206\u5e03\u5f8b\u4e3a | \\(X\\) | \\(1\\) | \\(2\\) | \\(3\\) | |:-:|:-:|:-:|:-:| | \\(P\\) | \\(\\theta^2\\) | \\(2\\theta(1-\\theta)\\) | \\((1-\\theta)^2\\) |</p> <p>\u5176\u4e2d \\(\\theta ( 0 &lt; \\theta &lt; 1 )\\) \u662f\u672a\u77e5\u53c2\u6570\uff0c\u5229\u7528\u603b\u4f53 \\(X\\) \u7684\u5982\u4e0b\u6837\u672c\u503c\uff1a\\(1, 2, 1\\)\uff0c\u6c42 \\(\\theta\\) \u7684\u77e9\u4f30\u8ba1\u91cf\u548c\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\u91cf</p> <ol> <li> <p>\u6c42\u51fa\u603b\u4f53\u77e9 \\(E(X)\\)</p> <p>$E(X) = \\sum_{i=1}^k(X_i * P_i) $</p> <p>$= \\theta^2 + 4\\theta(1-\\theta) + 3(1-\\theta)^2 $</p> <p>\\(= 3 - 2\\theta\\)</p> </li> <li> <p>\u4ee4 \\(\\bar X = E(X)\\)</p> <p>\\(\\bar X = \\frac{1+2+1}{3} = \\frac{4}{3}\\)</p> <p>\\(\\frac{4}{3} = 3 - 2\\theta\\)</p> </li> <li> <p>\u6c42\u89e3\u65b9\u7a0b</p> <p>\\(\\hat \\theta = \\frac{5}{6}\\)</p> </li> </ol> <p></p> <ol> <li> <p>\u5199\u51fa\u6837\u672c\u4f3c\u7136\u51fd\u6570 \\(L (\\theta)\\)</p> <p>\\(L(x, \\theta) = \\prod_{i=1}^{3} P\\{X=x_i\\}\\)</p> <p>$ = \\theta^2 * 2\\theta(1-\\theta) *\\theta^2$</p> <p>$ = 2 \\theta^5  - 2 \\theta^6$</p> </li> <li> <p>\u6c42\u5bfc\u6570 \\(\\frac{\\text{d} L(\\theta) }{\\text{d} \\theta} = 0\\)</p> <p>\\(\\frac{\\text{d} L(x, \\theta) }{\\text{d} \\theta} = 10 \\theta^4 - 12\\theta^5 = 0\\)</p> <p>\\(\\hat \\theta = \\frac{5}{6}\\)</p> </li> </ol> <p></p> <p>\uff084\uff09\u8bbe\u603b\u4f53 \\(X\\) \u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a \\(f(x;\\theta) = \\begin{cases} \\theta e^{-\\theta x}, &amp; 0 &lt; x \\\\ 0 , &amp; else \\end{cases}\\)\uff0c\u8bbe \\(X_1, X_2, ... , X_n\\) \u4e3a\u603b\u4f53 \\(X\\) \u7684\u4e00\u4e2a\u6837\u672c\uff0c\u8bd5\u6c42\u53c2\u6570 \\(\\theta\\) \u7684\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\u91cf \\(\\hat \\theta\\)</p> <ol> <li> <p>\u5199\u51fa\u6837\u672c\u4f3c\u7136\u51fd\u6570 \\(L (\\theta)\\)</p> <p>\\(L(x, \\theta) = \\prod_{i=1}^{n} f(x_i)\\)</p> <p>\\(= \\prod_{i=1}^{\\theta} \\theta e^{-\\theta x_i}\\)</p> <p>\\(= \\theta ^ n e^{-\\theta \\sum_{i=1}^{n}x_i}\\)</p> </li> <li> <p>\u5bf9\u4f3c\u7136\u51fd\u6570\u53d6\u5bf9\u6570 \\(\\ln L(\\theta)\\)</p> <p>\\(\\ln L(x, \\theta) = \\ln \\theta^n + \\ln e^{-\\theta \\sum_{i=1}^{n} x_i}\\)</p> <p>\\(= n \\ln \\theta - \\theta \\sum_{i=1}^{n}x_i\\)</p> </li> <li> <p>\u6c42\u5bfc\u6570 \\(\\frac{\\text{d}\\ln L(\\theta) }{\\text{d} \\theta} = 0\\)</p> <p>\\(\\frac{\\text{d}\\ln L(x, \\theta) }{\\text{d} \\theta} = \\frac{n}{\\theta} - \\sum_{i=1}^{n}x_i = 0\\)</p> <p>\\(\\hat \\theta = \\frac{n}{\\sum_{n}^{i=1}x_i}\\)</p> </li> </ol> <p></p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#1_2","title":"1\u3001\u77e9\u4f30\u8ba1","text":""},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#_19","title":"\u57fa\u672c\u601d\u60f3","text":"<p>\u7528\u6837\u672c\u77e9 \\(A_k = \\frac{\\sum_{i=1}^n X_i^k}{n}\\) \u4ee3\u66ff\u603b\u4f53\u77e9 \\(\\mu_k = E(X^k)\\) \uff08\u5927\u6570\u5b9a\u7406\uff09</p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#_20","title":"\u57fa\u672c\u6b65\u9aa4","text":"<ol> <li> <p>\u6c42\u51fa\u603b\u4f53\u77e9\uff08\u671f\u671b\uff09 \\(E(X)\\)</p> </li> <li> <p>\u4ee4 \\(\\bar X\\) \uff08\u6837\u672c\u5747\u503c\uff09 \\(= E(X)\\)</p> </li> <li> <p>\u89e3\u5f97 \\(\\hat \\theta\\) \u5373\u4e3a\u77e9\u4f30\u8ba1\u91cf</p> </li> </ol> <p></p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#2_2","title":"2\u3001\u6781\u5927\u4f3c\u7136\u4f30\u8ba1","text":""},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#_21","title":"\u57fa\u672c\u601d\u60f3","text":"<p>\u4f7f\u5f97\u5f53\u524d\u6837\u672c \\(x_1, x_2, x_3, ... , x_n\\) \u51fa\u73b0\u7684\u6982\u7387\u6700\u5927\u7684\u53c2\u6570\u503c \\(\\hat \\theta\\) \u5373\u4e3a\u6781\u5927\u4f3c\u7136\u4f30\u8ba1</p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#_22","title":"\u57fa\u672c\u6b65\u9aa4","text":"<ol> <li> <p>\u8bbe \\(x_1, x_2, x_3, ... , x_n\\) \u4e3a\u4e00\u7ec4\u89c2\u6d4b\u503c</p> </li> <li> <p>\u6837\u672c\u4f3c\u7136\u51fd\u6570 \\(L(x, \\theta) = \\prod_{i=1}^n f(x_i)\\)</p> </li> <li> <p>\u53d6\u5bf9\u6570 \\(\\ln L(\\theta)\\)</p> </li> <li> <p>\u6c42\u5bfc\u6570 \\(\\frac{\\text{d}\\ln L(\\theta) }{\\text{d} \\theta} = 0\\)</p> </li> </ol> <p>\u90e8\u5206\u60c5\u51b5 0, 2 \u53ef\u4ee5\u7701\u7565</p> <p></p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#_23","title":"\u516b\u3001\u5047\u8bbe\u68c0\u9a8c","text":""},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#0-7","title":"0\u3001\u5047\u8bbe\u68c0\u9a8c \\(^7\\)","text":"<p>\uff081\uff09\u67d0\u5de5\u5382\u751f\u4ea7\u7684\u94dc\u4e1d\u7684\u6298\u65ad\u529b\u670d\u4ece\u6b63\u6001\u5206\u5e03 \\(N(\\mu, \\sigma^2)\\)\u3002\u4ece\u67d0\u5929\u6240\u751f\u4ea7\u7684\u94dc\u4e1d\u4e2d\u62bd\u53d6 \\(10\\) \u6839\uff0c\u8fdb\u884c\u6298\u65ad\u529b\u8bd5\u9a8c\uff0c\u6d4b\u5f97\u5176\u6837\u672c\u5747\u503c\u4e3a \\(572.2\\)\uff0c\u65b9\u5dee\u4e3a \\(75.7\\)\uff0c\u82e5 \\(\\mu\\) \u672a\u77e5\uff0c\u662f\u5426\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u4e00\u5929\u751f\u4ea7\u7684\u94dc\u4e1d\u6298\u65ad\u529b\u7684\u6807\u51c6\u5dee\u662f \\(8\\)\uff1f\uff08\u53d6\u663e\u8457\u6027\u6c34\u5e73 \\(\\alpha = 0.05\\)\uff09</p> <p>\u5df2\u77e5\uff1a\\(n = 10, \\bar X = 572.2, S^2 = 75.7\\)</p> <ol> <li> <p>\u63d0\u51fa\u5047\u8bbe \\(H_0: \\sigma_0 = 8\\) \\(H_1: \\sigma_0 \\neq 8\\)</p> </li> <li> <p>\u6784\u5efa\u68c0\u9a8c\u7edf\u8ba1\u91cf \\({\\chi^2} = \\frac{(n-1)S^2}{\\sigma_0^2} = 10.645\\)</p> </li> <li> <p>\u6c42\u51fa\u62d2\u7edd\u57df \\({\\chi^2}_{1-\\frac{\\alpha}{2}}(n-1) = 2.7\\) \\({\\chi^2}_{\\frac{\\alpha}{2}}(n-1) = 19.022\\) \u62d2\u7edd\u57df \\(M\\)\uff1a\\((-\\infty, 2.7) \\cup (19.022, +\\infty)\\)</p> </li> <li> <p>\u63a5\u6536\u6216\u62d2\u7edd \\(10.645 \\notin M\\) \uff0c\u63a5\u53d7\u539f\u5047\u8bbe \\(H_0\\)</p> </li> </ol> <p>\u7b54\uff1a\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u4e00\u5929\u751f\u4ea7\u7684\u94dc\u4e1d\u6298\u65ad\u529b\u7684\u6807\u51c6\u5dee\u662f \\(8\\)</p> <p></p> <p>\uff082\uff09\u67d0\u5207\u5272\u673a\u5728\u6b63\u5e38\u5de5\u4f5c\u65f6\uff0c\u5207\u5272\u6bcf\u6bb5\u91d1\u5c5e\u68d2\u7684\u5e73\u5747\u957f\u5ea6\u4e3a \\(10.5\\)\uff0c\u4eca\u4ece\u4e00\u6279\u4ea7\u54c1\u4e2d\u968f\u673a\u7684\u62bd\u53d6 \\(16\\) \u6bb5\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5f97\u6837\u672c\u5747\u503c\u548c\u6837\u672c\u65b9\u5dee\u5206\u522b\u4e3a \\(\\bar x, S^2 = 0.237^2\\)\uff0c\u5047\u5b9a\u5207\u5272\u7684\u957f\u5ea6\u670d\u4ece\u6b63\u6001\u5206\u5e03\uff0c\u8bd5\u95ee\u8be5\u673a\u5668\u5de5\u4f5c\u662f\u5426\u6b63\u5e38\uff1f\uff08\u53d6\u663e\u8457\u6027\u6c34\u5e73 \\(\\alpha = 0.05\\)\uff09\\(t_{0.025}(15) = 2.131\\)</p> <p>\u5df2\u77e5\uff1a\\(n = 16, \\bar X = 10.46, S^2 = 0.237^2\\)</p> <ol> <li> <p>\u63d0\u51fa\u5047\u8bbe \\(H_0: \\mu_0 = 10.5\\) \\(H_1: \\mu_0 \\neq 10.5\\)</p> </li> <li> <p>\u6784\u5efa\u68c0\u9a8c\u7edf\u8ba1\u91cf \\(T = \\frac{\\bar X - \\mu_0}{S / \\sqrt{n}} = -0.675\\)</p> </li> <li> <p>\u6c42\u51fa\u62d2\u7edd\u57df \\(T_{\\frac{\\alpha}{2}}(n-1) = 2.131\\) \u62d2\u7edd\u57df \\(M\\)\uff1a\\((-\\infty, -2.131) \\cup (2.131, +\\infty)\\)</p> </li> <li> <p>\u63a5\u53d7\u6216\u62d2\u7edd \\(-0.675 \\notin M\\)\uff0c\u63a5\u53d7\u539f\u5047\u8bbe \\(H_0\\)</p> </li> </ol> <p>\u7b54\uff1a\u53ef\u4ee5\u8ba4\u4e3a\u8be5\u673a\u5668\u6b63\u5e38</p> <p></p> <p>\uff083\uff09\u6d4b\u5b9a\u67d0\u79cd\u6eb6\u6db2\u4e2d\u7684\u786b\u9178\u94dc\uff0c\u8bbe\u786b\u9178\u94dc\u542b\u91cf\u7684\u603b\u4f53\u670d\u4ece\u6b63\u6001\u5206\u5e03 \\(N(\\mu, \\sigma^2)\\)\uff0c\u5f97\u5230\u7684 \\(10\\) \u4e2a\u6d4b\u5b9a\u503c\u7ed9\u51fa \\(\\bar X = 0.452, S = 0.037\\)\uff0c\u8bd5\u95ee\u53ef\u5426\u8ba4\u4e3a\u786b\u9178\u94dc\u542b\u91cf\u7684\u65b9\u5dee\u4e3a \\(\\sigma^2 = 0.04\\)\uff1f\uff08\u68c0\u9a8c\u6c34\u5e73 \\(\\alpha = 0.05\\)\uff09</p> <p>\u5df2\u77e5\uff1a\\(n = 10, \\bar X = 0.452, S = 0.037\\)</p> <ol> <li> <p>\u63d0\u51fa\u5047\u8bbe \\(H_0: \\sigma_0^2 = 0.04\\) \\(H_1: \\sigma_0^2 \\neq 0.04\\)</p> </li> <li> <p>\u6784\u5efa\u68c0\u9a8c\u7edf\u8ba1\u91cf \\({\\chi^2} = \\frac{(n-1)S^2}{\\sigma_0^2} = 0.308\\)</p> </li> <li> <p>\u6c42\u51fa\u62d2\u7edd\u57df \\({\\chi^2}_{1-\\frac{\\alpha}{2}}(n-1) = 2.7\\) \\({\\chi^2}_{\\frac{\\alpha}{2}}(n-1) = 19.022\\) \u62d2\u7edd\u57df \\(M\\)\uff1a\\((-\\infty, 2.7) \\cup (19.022, +\\infty)\\)</p> </li> <li> <p>\u63a5\u53d7\u6216\u62d2\u7edd \\(0.308 \\in M\\)\uff0c\u62d2\u7edd\u539f\u5047\u8bbe \\(H_0\\)</p> </li> </ol> <p>\u7b54\uff1a\u4e0d\u53ef\u4ee5\u8ba4\u4e3a\u786b\u9178\u94dc\u542b\u91cf\u7684\u65b9\u5dee\u4e3a \\(\\sigma^2 = 0.04\\)</p> <p></p> <p>\uff084\uff09\u8bbe\u67d0\u5473\u7cbe\u5382\u751f\u4ea7\u7684\u5473\u7cbe\u5728\u624b\u5de5\u5305\u88c5\u65f6\u7684\u6bcf\u888b\u91cd\u91cf \\(N(15, 0.05)\\)\u3002\u6280\u672f\u9769\u65b0\u540e\uff0c\u6539\u7528\u673a\u5668\u5305\u88c5\uff0c\u73b0\u62bd\u67e5 \\(8\\) \u4e2a\u6837\u54c1\u6d4b\u5f97\u91cd\u91cf\uff1a\\(14.7, 15.1, 14.8, 15, 15.3, 14.9, 15.2, 14.6\\)\uff0c\u5df2\u77e5\u65b9\u5dee\u4e0d\u53d8\uff0c\u95ee\u673a\u5668\u5305\u88c5\u7684\u5473\u7cbe\u6bcf\u888b\u5e73\u5747\u91cd\u91cf\u662f\u5426\u4ecd\u4e3a \\(15\\)\uff1f\uff08\u663e\u8457\u6027\u6c34\u5e73 \\(\\alpha = 0.05\\)\uff09</p> <p>\u5df2\u77e5\uff1a\\(n = 8, \\bar X = 14.95, \\sigma^2 = 0.05\\)</p> <ol> <li> <p>\u63d0\u51fa\u5047\u8bbe \\(H_0: \\mu_0 = 15\\) \\(H_1: \\mu_0 \\neq 15\\)</p> </li> <li> <p>\u6784\u5efa\u68c0\u9a8c\u7edf\u8ba1\u91cf \\(Z = \\frac{\\bar X - \\mu_0}{\\sigma / \\sqrt{n}} = -0.632\\)</p> </li> <li> <p>\u6c42\u51fa\u62d2\u7edd\u57df \\(Z_{\\frac{\\alpha}{2}} = 1.96\\) \u62d2\u7edd\u57df \\(M\\)\uff1a\\((-\\infty, -1.96) \\cup (1.96, +\\infty)\\)</p> </li> <li> <p>\u63a5\u53d7\u6216\u62d2\u7edd \\(-0.632 \\notin M\\)\uff0c\u63a5\u53d7\u539f\u5047\u8bbe \\(H_0\\)</p> </li> </ol> <p>\u7b54\uff1a\u53ef\u4ee5\u8ba4\u4e3a\u673a\u5668\u5305\u88c5\u7684\u5473\u7cbe\u6bcf\u888b\u5e73\u5747\u91cd\u91cf\u4ecd\u4e3a \\(15\\)</p> <p></p> <p>\uff085\uff09\u5df2\u77e5\u67d0\u70bc\u94c1\u5382\u94c1\u6c34\u542b\u91cf\u670d\u4ece\u6b63\u6001\u5206\u5e03 \\(N(4.55, 0.108^2)\\)\uff0c\u73b0\u6d4b\u5b9a\u4e86 \\(9\\) \u7089\u94c1\u6c34\uff0c\u5176\u4e2d\u5e73\u5747\u542b\u78b3\u91cf\u4e3a \\(4.484\\)\uff0c\u5982\u679c\u4f30\u8ba1\u65b9\u5dee\u6ca1\u6709\u53d8\u5316\uff0c\u53ef\u5426\u8ba4\u4e3a\u73b0\u5728\u751f\u4ea7\u7684\u94c1\u6c34\u5e73\u5747\u542b\u78b3\u91cf\u4ecd\u4e3a \\(4.55\\)\uff08\u53d6\u663e\u8457\u6027\u6c34\u5e73 \\(\\alpha = 0.05\\)\uff09</p> <p>\u5df2\u77e5\uff0c\\(\\sigma^2 = 0.108^2, n = 9, \\bar X = 4.484\\)</p> <ol> <li> <p>\u63d0\u51fa\u5047\u8bbe</p> <p>\\(H_0: \\mu_0 = 4.55\\) \\(H_1: \\mu_0 \\neq 4.55\\)</p> </li> <li> <p>\u6784\u5efa\u68c0\u9a8c\u7edf\u8ba1\u91cf</p> <p>\\(Z = \\frac{\\bar X - \\mu_0}{\\sigma / \\sqrt{n}} = -\\frac{11}{6} = -1.833\\)</p> </li> <li> <p>\u6c42\u51fa\u62d2\u7edd\u57df     \\(Z_{\\frac{\\alpha}{2}} = 1.96\\)     \u62d2\u7edd\u57df \\(M\\)\uff1a\\((-\\infty, -1.96) \\cup (1.96, +\\infty)\\)</p> </li> <li> <p>\u63a5\u53d7\u6216\u62d2\u7edd     \\(-1.833 \\notin M\\)\uff0c\u63a5\u53d7\u539f\u5047\u8bbe \\(H_0\\)</p> </li> </ol> <p>\u7b54\uff1a\u53ef\u4ee5\u8ba4\u4e3a\u73b0\u5728\u751f\u4ea7\u7684\u94c1\u6c34\u5e73\u5747\u542b\u78b3\u91cf\u4ecd\u4e3a \\(4.55\\)</p> <p></p> <p>\uff086\uff09\u5df2\u77e5\u67d0\u79cd\u98df\u54c1\u6bcf\u888b\u91cd\u91cf\u5e94\u4e3a \\(50\\) \u514b\uff0c\u73b0\u968f\u673a\u62bd\u67e5\u5e02\u552e\u7684\u8be5\u79cd\u98df\u54c1 \\(4\\) \u888b\u6d4b\u5f97\u91cd\u91cf\u5982\u4e0b\uff1a\\(45.0, 49.5, 50.5, 46.5\\)\uff0c\u8bbe\u6bcf\u888b\u91cd\u91cf\u670d\u4ece\u5747\u65b9\u5dee\u4e3a \\(3\\) \u514b\u7684\u6b63\u6001\u5206\u5e03\uff0c\u8bd5\u5728\u663e\u8457\u6027\u6c34\u5e73 \\(a = 0.05\\) \u4e0b\u68c0\u9a8c\u8be5\u98df\u54c1\u5e73\u5747\u888b\u91cd\u662f\u5426\u5408\u683c</p> <p>\u5df2\u77e5\uff1a\\(\\bar X = 47.875, \\sigma = 3, n = 4\\)</p> <ol> <li> <p>\u63d0\u51fa\u5047\u8bbe</p> <p>\\(H_0: \\mu_0 = 50\\) \\(H_1: \\mu_0 \\neq 50\\)</p> </li> <li> <p>\u6784\u5efa\u68c0\u9a8c\u7edf\u8ba1\u91cf</p> <p>\\(Z = \\frac{\\bar{X}-\\mu_0}{\\sigma / \\sqrt{n}} = 1.416666\\)</p> </li> <li> <p>\u6c42\u51fa\u62d2\u7edd\u57df</p> <p>\\(Z_{\\frac{\\alpha}{2}} = 1.96\\) \u62d2\u7edd\u57df \\(M\\)\uff1a\\((-\\infty, -1.96) \\cup (1.96, +\\infty)\\)</p> </li> <li> <p>\u63a5\u53d7\u6216\u62d2\u7edd</p> <p>\\(1.14 \\notin M\\)\uff0c\u63a5\u53d7\u539f\u5047\u8bbe \\(H_0\\)</p> </li> </ol> <p>\u7b54\uff1a\u53ef\u4ee5\u8ba4\u4e3a\u8be5\u98df\u54c1\u5e73\u5747\u888b\u91cd\u4e3a \\(50\\) \u514b</p> <p></p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#1_3","title":"1\u3001\u516c\u5f0f \\(^*\\)","text":"<p>\u68c0\u9a8c\u7edf\u8ba1\u91cf\uff1a</p> <p>(\\(Z = \\frac{\\bar X - \\mu_0}{\\sigma / \\sqrt{n}}\\)\\)</p> <p>(\\(T = \\frac{\\bar X - \\mu_0}{S / \\sqrt{n}}\\)\\)</p> <p>(\\({\\chi^2} = \\frac{(n-1)S^2}{\\sigma_0^2}\\)\\)</p> <p></p> <p>\u62d2\u7edd\u57df\uff1a</p> <p>(\\((-\\infty, -Z_\\frac{\\alpha}{2}) \\cup (Z_\\frac{\\alpha}{2}, +\\infty)\\)\\)</p> <p>(\\((-\\infty, -T_{\\frac{\\alpha}{2}}(n-1)) \\cup (T_{\\frac{\\alpha}{2}}(n-1), +\\infty)\\)\\)</p> <p>(\\(( -\\infty, {\\chi^2}_{1-\\frac{\\alpha}{2}}(n-1)) \\cup ({\\chi^2}_{\\frac{\\alpha}{2}}(n-1), +\\infty)\\)\\)</p> <p></p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#_24","title":"\u5e38\u89c1\u5206\u5e03 \\(^*\\)","text":""},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#b","title":"\u4e8c\u9879\u5206\u5e03 \\(B\\)","text":"<p>\u4e8c\u9879\u5206\u5e03\u662f \\(n\\) \u91cd\u4f2f\u52aa\u5229\u8bd5\u9a8c</p> <ul> <li>\u4f2f\u52aa\u5229\u8bd5\u9a8c   \u8bbe\u8bd5\u9a8c \\(E\\) \u53ea\u6709\u4e24\u4e2a\u53ef\u80fd\u7ed3\u679c\uff1a\\(A\\)\uff08\u4e8b\u4ef6 \\(A\\) \u53d1\u751f\uff09\u548c \\(B\\)\uff08\u4e8b\u4ef6 \\(A\\) \u4e0d\u53d1\u751f\uff0c\u4e5f\u79f0 \\(\\bar{A}\\)\uff09\uff0c\u4e14 \\(P(A) = p\\)\uff0c\\(P(B) = 1-p\\)\uff0c\u5219\u79f0 \\(E\\) \u4e3a\u4e00\u6b21\u4f2f\u52aa\u5229\u8bd5\u9a8c</li> <li>n\u91cd\u4f2f\u52aa\u5229\u8bd5\u9a8c \u5c06\u4e0a\u8ff0\u8bd5\u9a8c \\(E\\) \u91cd\u590d \\(n\\) \u6b21\uff0c\u79f0\u4e3a \\(n\\) \u91cd\u4f2f\u52aa\u5229\u8bd5\u9a8c</li> </ul> <p>\u8bbe \\(X\\) \u4e3a \\(n\\) \u91cd\u4f2f\u52aa\u5229\u8bd5\u9a8c\u4e2d\u4e8b\u4ef6 \\(A\\) \u53d1\u751f\u7684\u6b21\u6570\uff0c\u5219 \\(X\\) \u670d\u4ece\u53c2\u6570\u4e3a \\(n\\) \u548c \\(p\\) \u7684\u4e8c\u9879\u5206\u5e03\uff0c\u8bb0\u4f5c\uff1a</p> \\[X \\sim b(n,p)\\] <p>\u4e8c\u9879\u5206\u5e03\u7684\u5206\u5e03\u51fd\u6570\uff1a</p> \\[P \\{ X=k \\} = {C_n^k} p^k (1-p)^{n-k}$$ $$\u5176\u4e2d, k \u8868\u793a\u6210\u529f\u7684\u6b21\u6570, n \u8868\u793a\u8bd5\u9a8c\u7684\u603b\u6b21\u6570, p \u8868\u793a\u6bcf\u6b21\u8bd5\u9a8c\u6210\u529f\u7684\u6982\u7387(\u4e0d\u53d8)\\] <p>\u671f\u671b\u65b9\u5dee\uff1a</p> \\[E(X) = np$$ $$D(X) = np(1-p)\\] <p>\u7279\u6b8a\u7684\uff0c\u5f53 \\(n=1\\) \u65f6\uff0c\u4e8c\u9879\u5206\u5e03\u5c31\u662f 0-1 \u5206\u5e03</p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#p","title":"\u6cca\u677e\u5206\u5e03 \\(P\\)","text":"<p>\u6cca\u677e\u5206\u5e03\u7684\u5206\u5e03\u51fd\u6570\uff1a</p> \\[P \\{ X=k \\} = \\frac{\\lambda^k}{k!} e^{-\\lambda}$$ $$\u5176\u4e2d, k=0,1,2,..., \\lambda &gt; 0\\] <p>\u8bb0\u4f5c\uff1a</p> \\[ X \\sim P(\\lambda) \\] <p>\u5355\u4f4d\u65f6\u95f4\u5185\uff0c\u67d0\u4e00\u4ef6\u4e8b\u60c5\u53d1\u751f\u7684\u6b21\u6570 \u5e38\u89c1\u7684\uff1a\u5355\u4f4d\u65f6\u95f4\u5185\uff0c\u67d0\u4e00\u673a\u5668\u53d1\u751f\u6545\u969c\u7684\u6b21\u6570\uff0c\u5355\u4f4d\u65f6\u95f4\u5185\uff0c\u67d0\u4e00\u670d\u52a1\u53f0\u63a5\u5f85\u7684\u987e\u5ba2\u6570</p> <p>\u671f\u671b\u65b9\u5dee\uff1a</p> \\[E(X) = \\lambda$$ $$D(X) = \\lambda\\]"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#u","title":"\u5747\u5300\u5206\u5e03 \\(U\\)","text":"<p>\u82e5\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf \\(X\\) \u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a\uff1a</p> \\[f(x) = \\begin{cases} \\frac{1}{b-a}, &amp; a &lt; x &lt; b \\\\ 0, &amp; else \\end{cases}\\] <p>\u5219 \\(X\\) \u5728\u533a\u95f4 \\((a,b)\\) \u4e0a\u670d\u4ece \u5747\u5300\u5206\u5e03\uff0c\u8bb0\u4f5c\uff1a</p> \\[X \\sim U(a,b)\\] <p>\u671f\u671b\u65b9\u5dee\uff1a</p> \\[E(X) = \\frac{a+b}{2}$$ $$D(X) = \\frac{(b-a)^2}{12}\\] <p>\u5bf9\u4e8e\u968f\u673a\u53d8\u91cf \\(X\\)\uff0c\u843d\u5728\u533a\u95f4 \\(a,b\\) \u4e2d\u4efb\u610f \u7b49\u957f\u5ea6 \u7684\u5b50\u533a\u95f4\u7684\u6982\u7387\u76f8\u7b49</p> <p>\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a\u5e38\u6570\uff0c\u533a\u95f4\u5185\u6240\u6709\u70b9\u7684\u6982\u7387\u5bc6\u5ea6\u76f8\u7b49</p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#e","title":"\u6307\u6570\u5206\u5e03 \\(E\\)","text":"<p>\u82e5\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf \\(X\\) \u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a\uff1a</p> \\[f(x) = \\begin{cases} \\lambda e^{-\\lambda x}, &amp; x &gt; 0 \\\\ 0, &amp; x \\leq 0 \\end{cases}$$ $$\u5176\u4e2d, \\lambda &gt; 0\\] <p>\u5219 \\(X\\) \u670d\u4ece \u6307\u6570\u5206\u5e03\uff0c\u8bb0\u4f5c\uff1a</p> \\[X \\sim E(\\lambda)\\] <p>\u671f\u671b\u65b9\u5dee\uff1a</p> \\[E(X) = \\frac{1}{\\lambda}$$ $$D(X) = \\frac{1}{\\lambda^2}\\] <p>\u7535\u5b50\u539f\u4ef6\u7684\u5bff\u547d\u5206\u5e03\u90fd\u8fd1\u4f3c\u7684\u670d\u4ece\u6307\u6570\u5206\u5e03</p>"},{"location":"src/cs/%E6%A6%82%E7%8E%87%E8%AE%BA/#n","title":"\u6b63\u6001\u5206\u5e03 \\(N\\)","text":"<p>\u82e5\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf \\(X\\) \u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a\uff1a</p> \\[f(x) = \\frac{1}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}}$$ $$\u5176\u4e2d \\mu \u4e3a\u5747\u503c, \\sigma \u4e3a\u6807\u51c6\u5dee, -\\infty &lt; x &lt; +\\infty\\] <p>\u5219 \\(X\\) \u670d\u4ece \u6b63\u6001\u5206\u5e03\uff0c\u8bb0\u4f5c\uff1a \\(\\(X \\sim N(\\mu, \\sigma^2)\\)\\)</p> <p>\u671f\u671b\u65b9\u5dee\uff1a</p> \\[E(X) = \\mu$$ $$D(X) = \\sigma^2\\]"},{"location":"src/cs/dataStruct/list/","title":"2 \u7ebf\u6027\u8868","text":""},{"location":"src/cs/dataStruct/list/#21","title":"2.1 \u7ebf\u6027\u8868\u7684\u7c7b\u578b\u5b9a\u4e49","text":"<p><code>\u7ebf\u6027\u8868</code> * \u7531n\u4e2a<code>\u6570\u636e\u5143\u7d20</code>\u7ec4\u6210\u7684\u6709\u9650\u5e8f\u5217</p> <p><code>\u6570\u636e\u5143\u7d20</code> * \u7531n\u4e2a<code>\u6570\u636e\u9879</code>\u7ec4\u6210</p> <p>\u4ea6\u53ef\u79f0\u6570\u636e\u5143\u7d20\u4e3a\u8bb0\u5f55, \u7ebf\u6027\u8868\u4e3a\u6587\u4ef6, \u6587\u4ef6\u7531n\u6761\u8bb0\u5f55\u7ec4\u6210</p>"},{"location":"src/cs/dataStruct/list/#22","title":"2.2 \u7ebf\u6027\u8868\u7684\u987a\u5e8f\u8868\u793a\u548c\u5b9e\u73b0","text":"<p><code>\u7ebf\u6027\u8868\u7684\u987a\u5e8f\u8868\u793a</code>   * \u4e00\u7ec4\u8fde\u7eed\u7684\u5b58\u50a8\u5355\u5143\u4f9d\u6b21\u5b58\u50a8\u7ebf\u6027\u8868\u7684\u6570\u636e\u5143\u7d20       * \u903b\u8f91\u76f8\u90bb       * \u7269\u7406\u76f8\u90bb</p> \u521d\u59cb\u5316 C++<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef int ELEM;       // \u5b9a\u4e49\u6570\u636e\u5143\u7d20\u7c7b\u578b\n\nstruct List{            // \u7ebf\u6027\u8868\n    ELEM*   begin;      // \u7ebf\u6027\u8868\u7684\u8d77\u59cb\u5730\u5740\n    int     length;     // \u7ebf\u6027\u8868\u7684\u957f\u5ea6\n    int     listsize;   // \u7ebf\u6027\u8868\u7684\u5927\u5c0f\n};\n\nint InitList(List&amp; L, const int len){           // \u521d\u59cb\u5316\u7ebf\u6027\u8868\n    L.begin = (ELEM*)malloc(len * sizeof(ELEM));// \u7533\u8bf7\u5806\u7a7a\u95f4\n    if(!L.begin) return 0;                      // \u7533\u8bf7\u5931\u8d25\n    L.length    = 0;                            // \u521d\u59cb\u957f\u5ea6\n    L.listsize  = len;                          // \u7ebf\u6027\u8868\u5927\u5c0f(\u603b\u5171)\n    return 1;                                   // \u521d\u59cb\u5316\u7ebf\u6027\u8868\u6210\u529f\n}\n\nint main(){\n    List L;\n    InitList(L, 100);\n    return 0;\n}\n</code></pre> \u9500\u6bc1 C++<pre><code>int DestroyList(List&amp; L){   // \u9500\u6bc1\u7ebf\u6027\u8868\n    free(L.begin);          // \u91ca\u653e\u7a7a\u95f4\n    L.length=0;             // \u957f\u5ea6\u7f6e0\n    L.listsize=0;           // \u5927\u5c0f\u7f6e0\n    return 1;               // \u9500\u6bc1\u6210\u529f\n}\n</code></pre> \u5224\u65ad\u7a7a\u8868 C++<pre><code>int EmptyList(List&amp; L){ // \u5224\u65ad\u7ebf\u6027\u8868\u662f\u5426\u4e3a\u7a7a\n    return L.length==0; // \u5982\u679c\u4e3a\u7a7a,\u8fd4\u56de1,\u53cd\u4e4b\u8fd4\u56de0\n}\n</code></pre> \u83b7\u53d6\u5143\u7d20\u4e2a\u6570 C++<pre><code>int LenList(List&amp; L){   // \u83b7\u53d6\u8868\u4e2d\u5143\u7d20\u4e2a\u6570\n    return L.length;    // \u8fd4\u56de\u8868\u4e2d\u5143\u7d20\u4e2a\u6570\n}\n</code></pre> \u83b7\u53d6\u8868\u7684\u5927\u5c0f C++<pre><code>int SizeList(List&amp; L){  // \u83b7\u53d6\u8868\u7684\u5927\u5c0f\n    return L.listsize;  // \u8fd4\u56de\u8868\u7684\u5927\u5c0f\n}\n</code></pre> \u83b7\u53d6\u7b2ci\u4e2a\u5143\u7d20 C++<pre><code>int GetElem(List&amp; L, int i, ELEM&amp; e){   // \u83b7\u53d6\u7b2ci\u4e2a\u5143\u7d20\n    if(!EmptyList(L) &amp;&amp; i&lt;=LenList(L)){ // \u7b2ci\u4e2a\u5143\u7d20\u662f\u5408\u6cd5\u7684,\u5b58\u5728\u7684\n        e = *(L.begin+i-1);             // \u76f4\u63a5\u62ff\n        return 1;                       // \u6210\u529f\u83b7\u53d6\n    }\n    return 0;                           // \u83b7\u53d6\u5931\u8d25\n}\n</code></pre> \u83b7\u53d6\u7b2ci\u4e2a\u5143\u7d20\u7684\u524d\u9a71 C++<pre><code>int PriElem(List&amp; L, int i, ELEM&amp; e){   // \u83b7\u53d6\u7b2ci\u4e2a\u5143\u7d20\u7684\u524d\u9a71\n    if(GetElem(L, i-1, e)) return 1;\n    return 0;\n}\n</code></pre> \u83b7\u53d6\u7b2ci\u4e2a\u5143\u7d20\u7684\u540e\u7ee7 C++<pre><code>int NextElem(List&amp; L, int i, ELEM&amp; e){  // \u83b7\u53d6\u7b2ci\u4e2a\u5143\u7d20\u7684\u540e\u7ee7\n    if(GetElem(L, i+1, e)) return 1;\n    return 0;\n}\n</code></pre> \u5728\u7b2ci\u4e2a\u4f4d\u7f6e\u524d\u63d2\u5165\u5143\u7d20(\u4ee4\u7b2ci\u4e2a\u4f4d\u7f6e\u4e3a\u65b0\u5143\u7d20) C++<pre><code>int InsertElem(List&amp; L, int i, ELEM e){     // \u5728\u7b2ci\u4e2a\u4f4d\u7f6e\u524d\u63d2\u5165\u5143\u7d20e\n    if(LenList(L) &gt;= SizeList(L)) return 0; // \u7a7a\u95f4\u6ee1\n    for(int j=LenList(L); j&gt;=i; j--)        // \u6328\u4e2a\u540e\u79fb,\u4ece\u5c3e\u5143\u7d20\u5f00\u59cb\n        *(L.begin+j) = *(L.begin+j-1);      // L.begin+j-1 \u662f\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\n    *(L.begin+i-1) = e;                     // L.begin+i-1  \u662f\u7b2ci\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\n    L.length++;                             // \u8868\u7684\u957f\u5ea6\u589e\u52a0\n    return 1;                               // \u63d2\u5165\u6210\u529f\n}\n</code></pre> \u5220\u9664\u7b2ci\u4e2a\u4f4d\u7f6e\u7684\u5143\u7d20 C++<pre><code>int DeleteElem(List&amp; L, int i){\n    if(EmptyList(L) || i&gt;LenList(L)) return 0;  // \u7b2ci\u4e2a\u5143\u7d20\u662f\u4e0d\u5408\u6cd5\u7684,\u4e0d\u5b58\u5728\u7684\n    for(int j=i; j&lt;=LenList(L); j++)\n        *(L.begin+i-1) = *(L.begin+i);          // \u6328\u4e2a\u524d\u79fb\n    L.length--;                                 // \u957f\u5ea6\u51cf\u5c11\n    return 1;                                   // \u5220\u9664\u6210\u529f\n}\n</code></pre> \u5408\u5e76\u4e24\u8868 C++<pre><code>int MergeList(List&amp; A, List&amp; B, List&amp; C){               // \u5408\u5e76\u6709\u5e8f\u8868AB\u81f3C\u4e2d\n    for(int i=1, j=1; i&lt;=LenList(A) || j&lt;=LenList(B);){ // i\u6307\u5411A, j\u6307\u5411B\n        ELEM ai, bj;                                    \n        GetElem(A, i, ai), GetElem(B, j, bj);           // \u83b7\u53d6\u5143\u7d20\n        if(i&lt;=LenList(A) &amp;&amp; (ai&lt;=bj || j&gt;LenList(B)))   // \u80fd\u591f\u63d2\u5165\u5230C\u4e2d,\u4e00\u5b9a\u6ee1\u8db3\n            InsertElem(C, i+j-1, ai), i++;              // A\u4e2d\u8fd8\u6709\u5143\u7d20\n        if(j&lt;=LenList(B) &amp;&amp; (bj&lt;=ai || i&gt;LenList(A)))   // ai&lt;=bi \u6216 B\u4e2d\u6ca1\u6709\u5143\u7d20\n            InsertElem(C, i+j-1, bj), j++;              // B\u540c\u7406\n    }\n    return 1;                                           // \u5408\u5e76\u6210\u529f\n}\n</code></pre>"},{"location":"src/cs/dataStruct/list/#23","title":"2.3 \u7ebf\u6027\u8868\u7684\u94fe\u5f0f\u8868\u793a\u548c\u5b9e\u73b0","text":"<p><code>\u7ebf\u6027\u8868\u7684\u94fe\u5f0f\u8868\u793a</code>   * \u4e00\u7ec4\u4efb\u610f\u7684\u5b58\u50a8\u5355\u5143\u4f9d\u6b21\u5b58\u50a8\u7ebf\u6027\u8868\u7684\u6570\u636e\u5143\u7d20       * \u903b\u8f91\u76f8\u90bb       * \u7269\u7406\u4e0d\u76f8\u90bb</p> \u751f\u6210\u4e00\u4e2a\u7ed3\u70b9 C++<pre><code>node* MakeNode(ELEM e = 0) {    // \u521b\u5efa\u7ed3\u70b9\n    node* p = (node*)malloc(sizeof(node));\n    if (!p) return NULL;        // \u7533\u8bf7\u5931\u8d25\n    p-&gt;date = e;                \n    p-&gt;next = NULL;\n    return p;                   // \u7533\u8bf7\u6210\u529f\n}\n</code></pre> \u91ca\u653e\u4e00\u4e2a\u7ed3\u70b9 C++<pre><code>void FreeNode(node* p) {        // \u91ca\u653e\u7ed3\u70b9\n    free(p);\n}\n</code></pre> \u521d\u59cb\u5316 C++<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef int ELEM;\n\nstruct node {\n    ELEM    date;   // \u6570\u636e\n    node*   next;   // \u540e\u7ee7\n};\n\nstruct List {\n    int     len;    // \u957f\u5ea6\n    node*   head;   // \u5934\u7ed3\u70b9\n};\n\nint InitList(List&amp; L) {     // \u521d\u59cb\u5316\n    L.head = MakeNode();    // \u521b\u5efa\u5934\u7ed3\u70b9\n    L.len = 0;              // \u957f\u5ea6\n    if (L.head) return 1;   // \u521b\u5efa\u6210\u529f\n    return 0;               // \u521b\u5efa\u5931\u8d25\n}\n\nint main() {\n    List L;\n    InitList(L);    // L.head\u6307\u5411\u8868\u7684\u5934\u8282\u70b9\n\n    return 0;\n}\n</code></pre> \u9500\u6bc1 C++<pre><code>int DestroyList(List&amp; L) {  // \u9500\u6bc1\u8868\n    node* p = L.head;       // p\u6307\u5411 i\n    while (p) {             // i \u4e0d\u4e3a\u7a7a\n        L.head = p-&gt;next;   // i \u6307\u5411 i+1\n        free(p);            // \u5220\u9664 i\n        p = L.head;         // p\u6307\u5411 i+1\n    }                       // \u5f53p\u6307\u5411\u7a7a\u7684\u65f6\u5019,\u7ed3\u675f\n    return 1;               // \u9500\u6bc1\u6210\u529f\n}\n</code></pre> \u5224\u65ad\u7a7a\u8868 C++<pre><code>int EmptyList(List&amp; L) {    // \u5224\u65ad\u8868\u662f\u5426\u7a7a\n    return L.len == 0;\n}\n</code></pre> \u83b7\u53d6\u5143\u7d20\u4e2a\u6570 C++<pre><code>int LenList(List&amp; L) {      // \u83b7\u53d6\u5143\u7d20\u4e2a\u6570\n    return L.len;\n}\n</code></pre> \u83b7\u53d6\u7b2ci\u4e2a\u5143\u7d20 C++<pre><code>node* GetElem(List&amp; L, unsigned int i) {// \u83b7\u53d6\u7b2c i \u4e2a\u5143\u7d20\n    if (i &gt; LenList(L))                 // \u67e5\u627e\u8303\u56f4\u4e0d\u5408\u6cd5\n        return NULL;                    // \u83b7\u53d6\u5931\u8d25\n    node* p = L.head;                   // p \u6307\u5411\u5934\u8282\u70b9\n    for (int j = 1; j &lt;= i; j++)        // p\u4f1a\u6307\u5411\u540e\u9a71 i \u6b21\n        p = p-&gt;next;                        \n    return p;                           // \u83b7\u53d6\u6210\u529f\n}\n</code></pre> \u83b7\u53d6\u7b2ci\u4e2a\u5143\u7d20\u7684\u524d\u9a71 C++<pre><code>node* GetElemPri(List&amp; L, unsigned int i) { // \u83b7\u53d6\u7b2c i \u4e2a\u5143\u7d20\u7684\u524d\u9a71\n    return GetElem(L, i - 1);\n}\n</code></pre> \u83b7\u53d6\u7b2ci\u4e2a\u5143\u7d20\u7684\u540e\u7ee7 C++<pre><code>node* GetElemNext(List&amp; L, unsigned int i) {// \u83b7\u53d6\u7b2c i \u4e2a\u5143\u7d20\u7684\u540e\u7ee7\n    return GetElem(L, i + 1);\n}\n</code></pre> \u5728\u7b2ci\u4e2a\u4f4d\u7f6e\u524d\u63d2\u5165\u5143\u7d20 C++<pre><code>int InsertElemPri(List&amp; L, unsigned int i, ELEM e) {    // \u5728\u7b2c i \u4e2a\u5143\u7d20\u524d\u63d2\u5165\u5143\u7d20\n    if (i == 0 || i &gt; LenList(L)) return 0; // \u63d2\u5165\u4f4d\u7f6e\u4e0d\u5408\u6cd5\n    node* p = GetElemPri(L, i);             // \u7b2c i \u4e2a\u5143\u7d20\u7684\u524d\u9a71\n    node* elem = MakeNode(e);               // \u521b\u5efa\u7ed3\u70b9     \n    if (!p) return 0;                       // \u5931\u8d25\n    if (!elem) return 0;                    // \u5931\u8d25\n    elem-&gt;next = p-&gt;next;                   // \u65b0\u7ed3\u70b9\u6307\u5411 i\n    p-&gt;next = elem;                         // \u524d\u9a71\u6307\u5411\u65b0\u7ed3\u70b9\n    L.len++;\n    return 1;\n}\n</code></pre> \u5728\u7b2ci\u4e2a\u4f4d\u7f6e\u540e\u63d2\u5165\u5143\u7d20 C++<pre><code>int InsertElemNext(List&amp; L, unsigned int i, ELEM e) {   // \u5728\u7b2c i \u4e2a\u5143\u7d20\u540e\u63d2\u5165\u5143\u7d20\n    if (i &gt; LenList(L))return 0;            // \u63d2\u5165\u4f4d\u7f6e\u4e0d\u5408\u6cd5, \u5141\u8bb8\u5728\u7b2c0\u4e2a\u7ed3\u70b9\u540e\u63d2\u5165\n    node* p = GetElem(L, i);                // \u7b2c i \u4e2a\u5143\u7d20\n    node* elem = MakeNode(e);               // \u521b\u5efa\u7ed3\u70b9     \n    if (!p) return 0;                       // \u5931\u8d25\n    if (!elem) return 0;                    // \u5931\u8d25\n    elem-&gt;next = p-&gt;next;                   // \u65b0\u7ed3\u70b9\u6307\u5411 i\n    p-&gt;next = elem;                         // \u524d\u9a71\u6307\u5411\u65b0\u7ed3\u70b9\n    L.len++;\n    return 1;\n}\n</code></pre> \u5220\u9664\u7b2ci\u4e2a\u4f4d\u7f6e\u7684\u5143\u7d20 C++<pre><code>int DeleteElem(List&amp; L, int i) {                    // \u5220\u9664\u7b2c i \u4e2a\u5143\u7d20\n    if (EmptyList(L) || i &gt; LenList(L)) return 0;   // \u7b2ci\u4e2a\u5143\u7d20\u662f\u4e0d\u5408\u6cd5\u7684,\u4e0d\u5b58\u5728\u7684\n    node* p = L.head;                               // \u6307\u5411\u5934\n    for (int j = 1; j &lt; i; j++) p = p-&gt;next;        // \u6307\u5411\u540e\u9a71 i-1 \u6b21,\u6700\u7ec8\u6307\u5411\u7b2c i-1 \u4e2a\u5143\u7d20\n    node* bp = p-&gt;next;                             // \u6807\u8bb0\u4e00\u4e0b\u7b2ci\u4e2a\u7ed3\u70b9\n    p-&gt;next = p-&gt;next-&gt;next;                        // p \u6307\u5411 \u7b2ci\u4e2a\u7ed3\u70b9\u7684\u540e\u7ee7, \u76f4\u63a5\u8df3\u8fc7 i \n    FreeNode(bp);                                   // \u91ca\u653e\u7ed3\u70b9\n    return 1;                                       // \u5220\u9664\u6210\u529f\n}\n</code></pre> \u5408\u5e76\u4e24\u8868 C++<pre><code>int MergeList(List&amp; A, List&amp; B, List&amp; C) {  // \u5408\u5e76\u6709\u5e8f\u8868AB\u81f3C\u4e2d\n    node* pa = A.head-&gt;next;                // \u6307\u5411A\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\n    node* pb = B.head-&gt;next;                // \u6307\u5411B\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\n    while (pa || pb) {                      // \u5982\u679c\u8fd8\u5b58\u5728\n        ELEM ne = 0;\n        if (pa &amp;&amp; (!pb || pa-&gt;date &lt;= pb-&gt;date))\n            ne = pa-&gt;date, pa = pa-&gt;next;\n        else if (pb &amp;&amp; (!pa || pb-&gt;date &lt;= pa-&gt;date))\n            ne = pb-&gt;date, pb = pb-&gt;next;\n        InsertElemNext(C, LenList(C), ne);  // \u63d2\u5165\u65b0\u5143\u7d20\u5230C\u7684\u6700\u540e\n    }\n    return 1;\n}\n</code></pre>"},{"location":"src/cs/dataStruct/list/#24","title":"2.4 \u4e00\u5143\u591a\u9879\u5f0f\u7684\u8868\u793a\u53ca\u76f8\u52a0","text":""},{"location":"src/cs/dataStruct/list/#6","title":"6 \u6811\u548c\u4e8c\u53c9\u6811","text":""},{"location":"src/cs/dataStruct/list/#61","title":"6.1 \u6811\u7684\u5b9a\u4e49","text":"<p>\u6811 \u662f n\uff08n&gt;=0\uff09\u4e2a\u7ed3\u70b9\u7684\u6709\u9650\u96c6\u3002\u5f53n=0\u65f6\uff0c\u79f0\u4e3a\u7a7a\u6811\uff0c\u5728\u4efb\u610f\u4e00\u68f5\u975e\u7a7a\u6811\u4e2d\uff0c\u5b58\u5728\uff1a * \u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u7279\u5b9a\u7684\u79f0\u4e3a\u6839\uff08Root\uff09\u7684\u7ed3\u70b9     * \u6ca1\u6709\u7236\u8282\u70b9\u7684\u8282\u70b9\u79f0\u4e3a\u6839\u8282\u70b9 * \u4efb\u610f\u975e\u6839\u7ed3\u70b9 \u6709\u4e14\u4ec5\u6709\u4e00\u4e2a \u7236\u7ed3\u70b9 * \u9664\u4e86\u6839\u7ed3\u70b9\u5916\uff0c\u6bcf\u4e2a\u5b50\u7ed3\u70b9\u53ef\u4ee5\u5206\u4e3a\u591a\u4e2a\u4e0d\u76f8\u4ea4\u7684\u5b50\u6811 * \u6811\u4e2d\u6ca1\u6709\u73af\u8def</p>"},{"location":"src/cs/dataStruct/list/#_1","title":"\u57fa\u672c\u672f\u8bed","text":"<ul> <li>\u7ed3\u70b9\u7684\u5ea6\uff1a\u7ed3\u70b9\u62e5\u6709\u7684\u5b50\u6811\u7684\u4e2a\u6570</li> </ul>"},{"location":"src/cs/dataStruct/list/#6x","title":"6.x \u6811\u7684\u62d3\u5c55","text":""},{"location":"src/cs/dataStruct/list/#_2","title":"\u5206\u7c7b","text":""},{"location":"src/cs/dataStruct/list/#_3","title":"\u6709\u5e8f\u65e0\u5e8f\uff1a","text":"<ul> <li>\u65e0\u5e8f / \u81ea\u7531\u6811\uff1a\u7ed3\u70b9\u7684\u5404\u5b50\u8282\u70b9\u4e4b\u95f4 \u6ca1\u6709 \u987a\u5e8f\u5173\u7cfb</li> <li>\u6709\u5e8f / \u641c\u7d22 / \u67e5\u627e\u6811\uff1a\u7ed3\u70b9\u7684\u5404\u5b50\u8282\u70b9\u4e4b\u95f4 \u6709 \u987a\u5e8f\u5173\u7cfb</li> </ul>"},{"location":"src/cs/dataStruct/list/#_4","title":"\u5e73\u8861\u975e\u5e73\u8861\uff1a","text":"<ul> <li>\u975e\u5e73\u8861\u6811</li> <li>\u5e73\u8861\u6811\uff1a     \u4efb\u610f\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u4e0d\u8d85\u8fc7\u4e00\u4e2a\u56fa\u5b9a\u7684\u5e38\u6570<ul> <li>\u7edd\u5bf9\u5e73\u8861\u6811\uff1a<code>\u5e38\u6570 = 0</code>\uff0c\u5373\u4ece\u6839\u8282\u70b9\u5230\u4efb\u610f\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84\u957f\u5ea6\u76f8\u7b49</li> <li>\u76f8\u5bf9\u5e73\u8861\u6811\uff1a\u5f53\u6211\u4eec\u8bf4\u5230\u5e73\u8861\u6811\u65f6\uff0c\u4e00\u822c\u6307\u76f8\u5bf9\u5e73\u8861\u6811</li> </ul> </li> </ul>"},{"location":"src/cs/dataStruct/list/#_5","title":"\u5206\u53c9\u60c5\u51b5\uff1a","text":"<ul> <li>\u7b49\u53c9\u6811\uff1a\u5b50\u7ed3\u70b9\u4e2a\u6570\u76f8\u540c<ul> <li>\u4e8c\u53c9\u6811\uff1a\u6240\u6709\u7ed3\u70b9\u7684\u5ea6\u4e0d\u8d85\u8fc7  2<ul> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\uff1a\u53f6\u5b50\u7ed3\u70b9\u53ea\u80fd\u51fa\u73b0\u5728\u6700\u4e0b\u5c42\u548c\u6b21\u4e0b\u5c42\uff0c\u5e76\u4e14\u6700\u4e0b\u5c42\u7684\u7ed3\u70b9\u90fd\u96c6\u4e2d\u5728\u8be5\u5c42\u6700\u5de6\u8fb9\u7684\u82e5\u5e72\u4f4d\u7f6e\u7684\u4e8c\u53c9\u6811<ul> <li>\u6ee1\u4e8c\u53c9\u6811\uff1a\u6240\u6709\u53f6\u5b50\u7ed3\u70b9\u90fd\u5728\u6700\u4e0b\u5c42\u7684\u5b8c\u5168\u4e8c\u53c9\u6811</li> </ul> </li> </ul> </li> <li>n\u53c9\u6811\uff1a\u6240\u6709\u7ed3\u70b9\u7684\u5ea6\u4e0d\u8d85\u8fc7 n</li> <li>\u970d\u592b\u66fc\u6811\uff1a\u5e26\u6743\u8def\u5f84\u6700\u77ed\u7684\u4e8c\u53c9\u6811</li> </ul> </li> <li>\u4e0d\u7b49\u53c9\u6811\uff1a\u5b50\u7ed3\u70b9\u4e2a\u6570\u4e0d\u4e00\u5b9a\u76f8\u540c<ul> <li>B\u6811\uff1a</li> </ul> </li> </ul>"},{"location":"src/cs/dataStruct/list/#_6","title":"\u5e38\u89c1\u6811\uff1a","text":"<ul> <li> <p>\u4e8c\u53c9\u641c\u7d22\u6811 \\(BST\\)\uff0c\\(Binary ~ Sort ~ Tree\\)\uff0c\u53c8\u88ab\u7ffb\u8bd1\u4e3a \u4e8c\u53c9\u6392\u5e8f\u6811\u3001\u4e8c\u53c9\u67e5\u627e\u6811     \u4e8c\u53c9\u641c\u7d22\u6811\u671f\u671b\u590d\u6742\u5ea6\u4e3a \\(O(logn)\\)\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\u9000\u5316\u4e3a\u504f\u659c\u4e8c\u5143\u6811 \\(O(n)\\)     \u56e0\u6b64\u6539\u8fdb\u4e3a \u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\uff1a</p> <ul> <li>\u5e73\u8861\u4e8c\u53c9\u6811 \\(AVL\\)\uff0c\\(Adelson-Velsky ~ and ~ Landis ~ Tree\\)</li> <li>\u7ea2\u9ed1\u6811 \\(RB\\)\uff0c\\(Red ~ Black ~ Tree\\)</li> <li>[\u4f38\u5c55\u6811] \\(Splay\\)\uff0c\\(Splay ~ Tree\\)</li> <li>[\u66ff\u7f6a\u7f8a\u6811] \\(Scapegoat\\)\uff0c\\(Scapegoat ~ Tree\\)</li> </ul> </li> <li> <p>B\u6811 \\(B-Tree\\)</p> <ul> <li>B+\u6811 \\(B+Tree\\)</li> <li>B*\u6811 \\(B*Tree\\)</li> </ul> </li> </ul>"},{"location":"src/cs/dataStruct/list/#bst","title":"BST","text":"<p>\u4e8c\u53c9\u641c\u7d22\u6811\u5177\u6709\u5982\u4e0b\u6027\u8d28\uff1a</p> <ul> <li>\u82e5\u7ed3\u70b9\u5de6\u5b50\u6811\u4e0d\u7a7a\uff0c\u5219 \u5de6 \u5b50\u6811\u4e0a\u4efb\u610f\u7ed3\u70b9\u7684\u503c\u5747 \u5c0f\u4e8e \u5b83\u7684 \u6839 \u7ed3\u70b9\u7684\u503c</li> <li>\u82e5\u7ed3\u70b9\u53f3\u5b50\u6811\u4e0d\u7a7a\uff0c\u5219 \u53f3 \u5b50\u6811\u4e0a\u4efb\u610f\u7ed3\u70b9\u7684\u503c\u5747 \u5927\u4e8e \u5b83\u7684 \u6839 \u7ed3\u70b9\u7684\u503c</li> <li>\u4efb\u610f\u7ed3\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u4e5f\u5206\u522b\u4e3a \u4e8c\u53c9\u641c\u7d22\u6811</li> </ul> <p>\u663e\u7136\uff0c\u5728\u6b64\u6811\u4e2d\u67e5\u627e\u67d0\u4e2a\u7ed3\u70b9\u7684\u82b1\u8d39\u4e3a\u6811\u7684\u9ad8\u5ea6\uff0c\u56e0\u6b64\uff1a</p> <ul> <li>\u67e5\u627e\uff1a\\(O(logn)\\)</li> <li>\u63d2\u5165\uff1a\\(O(logn)\\)</li> <li>\u5220\u9664\uff1a\\(O(logn)\\)</li> </ul>"},{"location":"src/cs/dataStruct/queue/","title":"\u961f\u5217","text":""},{"location":"src/cs/dataStruct/queue/#_1","title":"\u53c2\u8003","text":""},{"location":"src/cs/dataStruct/queue/#_2","title":"\u5b89\u5168\u961f\u5217","text":"C++<pre><code>#pragma once\n#include &lt;mutex&gt;\n#include &lt;optional&gt;\n#include &lt;queue&gt;\n\ntemplate &lt;typename T&gt;\nclass queue_safe {\n   public:\n    queue_safe() = default;\n    ~queue_safe() = default;\n    queue_safe(const queue_safe&amp;) = delete;\n    queue_safe&amp; operator=(const queue_safe&amp;) = delete;\n    queue_safe(queue_safe&amp;&amp;) = delete;\n    queue_safe&amp; operator=(queue_safe&amp;&amp;) = delete;\n\n    void push(T&amp;&amp; value) {\n        std::lock_guard&lt;std::mutex&gt; lock(_mutex);\n        _queue.push(std::move(value));\n    }\n\n    std::optional&lt;T&gt; pop() {\n        std::lock_guard&lt;std::mutex&gt; lock(_mutex);\n        if (_queue.empty()) {\n            return std::nullopt;\n        }\n        T result = std::move(_queue.front());\n        _queue.pop();\n        return result;\n    }\n\n   private:\n    std::queue&lt;T&gt; _queue;\n    std::mutex _mutex;\n};\n</code></pre>"},{"location":"src/cs/designPattern/designPattern/","title":"\u8bbe\u8ba1\u6a21\u5f0f","text":""},{"location":"src/cs/designPattern/designPattern/#_1","title":"\u53c2\u8003","text":"<ul> <li>\u6211\u5e38\u7528\u7684\u516d\u79cd\u8bbe\u8ba1\u6a21\u5f0f-C++\u7a0b\u5e8f\u5458\u660a\u5929</li> </ul>"},{"location":"src/cs/designPattern/designPattern/#_2","title":"\u8bbe\u8ba1\u539f\u5219","text":"<ol> <li><code>SRP</code> \u5355\u4e00\u804c\u8d23     \u4e00\u4e2a\u7c7b\u53ea\u8d1f\u8d23\u4e00\u4e2a\u529f\u80fd\uff0c\u804c\u8d23\u5355\u4e00\u3002</li> <li><code>OCP</code> \u5f00\u95ed     \u5bf9\u6269\u5c55\u5f00\u653e\uff0c\u5bf9\u4fee\u6539\u5173\u95ed\uff08\u5c01\u88c5\u5e94\u5f53\u9075\u5b88\u7684\u539f\u5219\uff09\u3002</li> <li><code>LSP</code> \u91cc\u5f0f\u66ff\u6362     \u5b50\u7c7b\u53ef\u4ee5\u6269\u5c55\u7236\u7c7b\u7684\u529f\u80fd\uff0c\u4f46\u4e0d\u80fd\u4fee\u6539\u7236\u7c7b\u539f\u6709\u7684\u529f\u80fd\uff08\u7ee7\u627f\u5e94\u5f53\u9075\u5b88\u7684\u539f\u5219\uff09\u3002</li> <li><code>*DIP</code> \u4f9d\u8d56\u5012\u7f6e     \u9ad8\u5c42\u6a21\u5757\u4e0d\u4f9d\u8d56\u4f4e\u5c42\u6a21\u5757\uff0c\u5b83\u4eec\u5171\u540c\u4f9d\u8d56\u540c\u4e00\u4e2a\u62bd\u8c61\u3002\u62bd\u8c61\u4e0d\u8981\u4f9d\u8d56\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\uff0c\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\u4f9d\u8d56\u62bd\u8c61\u3002</li> <li> <p><code>ISP</code> \u63a5\u53e3\u9694\u79bb     \u5ba2\u6237\u7aef\u4e0d\u5e94\u8be5\u4f9d\u8d56\u90a3\u4e9b\u5b83\u4e0d\u9700\u8981\u7684\u63a5\u53e3\uff08\u5c01\u88c5\u5e94\u5f53\u9075\u5b88\u7684\u539f\u5219\uff09\u3002</p> </li> <li> <p><code>CRP</code> \u5408\u6210\u590d\u7528</p> </li> <li><code>LoD</code> \u8fea\u7c73\u7279</li> </ol> <p></p>"},{"location":"src/cs/designPattern/designPattern/#_3","title":"\u5355\u4f8b\u6a21\u5f0f","text":"<p>\u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e2a\u5168\u5c40\u8bbf\u95ee\u70b9\u3002\u9002\u7528\u4e8e\u65e5\u5fd7\u3001\u516c\u5171\u6570\u636e\u7b49\u5168\u5c40\u6027\u8d28\u7684\u5bf9\u8c61\u3002</p> <ul> <li> <p>Meyers\u2019 Singleton</p> C++<pre><code>class Singleton {\n   public:\n    static Singleton&amp; getInstance() {\n        static Singleton inst;\n        return inst;\n    };\n\n    Singleton(const Singleton&amp;) = delete;             // \u7981\u6b62\u62f7\u8d1d\u6784\u9020\u51fd\u6570\n    Singleton&amp; operator=(const Singleton&amp;) = delete;  // \u7981\u6b62\u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26\n    Singleton(Singleton&amp;&amp;) = delete;                  // \u7981\u6b62\u79fb\u52a8\u6784\u9020\u51fd\u6570\n    Singleton&amp; operator=(Singleton&amp;&amp;) = delete;       // \u7981\u6b62\u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26\n\n   private:\n    Singleton() = default;\n};\n</code></pre> </li> <li> <p>\u997f\u6c49\u5f0f\uff1a\u7c7b\u52a0\u8f7d\u65f6\u521d\u59cb\u5316\u5b9e\u4f8b</p> </li> <li>\u61d2\u6c49\u5f0f\uff1a\u7b2c\u4e00\u6b21\u4f7f\u7528\u65f6\u521d\u59cb\u5316\u5b9e\u4f8b</li> <li>\u61d2\u6c49\u5f0f-\u7ebf\u7a0b\u5b89\u5168\uff1a\u6bcf\u6b21\u4f7f\u7528\u65f6\u901a\u8fc7\u9501\u673a\u5236\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168</li> <li>\u61d2\u6c49\u5f0f-DCL\uff1a\u68c0\u67e5\u6307\u9488\uff0c\u6307\u9488\u4e3a\u7a7a\u518d\u52a0\u9501\uff0c\u53cc\u91cd\u68c0\u67e5\u9501\u5b9a</li> </ul> <p></p>"},{"location":"src/cs/designPattern/designPattern/#_4","title":"\u89c2\u5bdf\u8005\u6a21\u5f0f","text":"Text Only<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510               \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502         \u2502 -- attach --&gt; \u2502           \u2502\n\u2502         \u2502               \u2502 Observer1 \u2502\n\u2502         \u2502 -- notify --&gt; \u2502           \u2502\n\u2502 Subject \u2502               \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u2502         \u2502\n\u2502         \u2502               \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502         \u2502 ------------- \u2502 Observer2 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518               \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <ul> <li><code>Subject</code> \u88ab\u89c2\u5bdf\u8005\uff0c\u7ef4\u62a4\u4e00\u7ec4 <code>Observer</code> \u5bf9\u8c61\uff0c\u63d0\u4f9b\u6dfb\u52a0\u3001\u5220\u9664\u3001\u901a\u77e5\u65b9\u6cd5</li> <li><code>Observer</code> \u89c2\u5bdf\u8005\uff0c\u5b9a\u4e49\u4e00\u4e2a <code>update</code> \u63a5\u53e3\uff0c\u5f53\u6536\u5230\u901a\u77e5\u65f6\u8c03\u7528 <code>update</code> \u66f4\u65b0\u72b6\u6001</li> </ul>"},{"location":"src/cs/designPattern/designPattern/#_5","title":"\u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f","text":"Text Only<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Publisher1 \u2502 -- publish --&gt; \u2502         \u2502 &lt;-- subscribe -- \u2502 Subscriber1 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                \u2502  Event  \u2502                  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                \u2502 Channel \u2502                  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Publisher2 \u2502 -- publish --&gt; \u2502         \u2502 &lt;-- subscribe -- \u2502 Subscriber2 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <ul> <li> <p><code>Publisher</code> \u53d1\u5e03\u8005\uff0c\u5411 <code>Event Channel</code> \u53d1\u5e03\u6d88\u606f</p> </li> <li> <p><code>Subscriber</code> \u8ba2\u9605\u8005\uff0c\u5411 <code>Event Channel</code> \u8ba2\u9605\u6d88\u606f</p> </li> </ul> <p></p>"},{"location":"src/cs/designPattern/designPattern/#_6","title":"\u8bbe\u8ba1\u6a21\u5f0f","text":"<ul> <li>UML\u7c7b\u56fe\u548c\u65f6\u5e8f\u56fe</li> <li>[\u521b\u5efa\u578b\u6a21\u5f0f ( \u603b\u7ed3 )]<ol> <li>[\u7b80\u5355\u5de5\u5382\u6a21\u5f0f ( Simple Factory Pattern )]</li> <li>[\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f ( Factory Method Pattern )]</li> <li>[\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f ( Abstract Factory Pattern )]</li> <li>[\u5efa\u9020\u8005\u6a21\u5f0f()]</li> <li>[\u5355\u4f8b\u6a21\u5f0f()]</li> </ol> </li> <li>\u7ed3\u6784\u578b\u6a21\u5f0f<ol> <li>[\u9002\u914d\u5668\u6a21\u5f0f]</li> <li>[\u6865\u63a5\u6a21\u5f0f]</li> <li>[\u88c5\u9970\u6a21\u5f0f]</li> <li>[\u5916\u89c2\u6a21\u5f0f]</li> <li>[\u4eab\u5143\u6a21\u5f0f]</li> <li>[\u4ee3\u7406\u6a21\u5f0f]</li> </ol> </li> <li>\u884c\u4e3a\u578b\u6a21\u5f0f<ol> <li>[\u547d\u4ee4\u6a21\u5f0f]</li> <li>[\u4e2d\u4ecb\u8005\u6a21\u5f0f]</li> <li>[\u89c2\u5bdf\u8005\u6a21\u5f0f]</li> <li>[\u72b6\u6001\u6a21\u5f0f]</li> <li>[\u7b56\u7565\u6a21\u5f0f]</li> </ol> </li> </ul> <p>\u7b80\u5355\u5de5\u5382\uff1a\u552f\u4e00\u5de5\u5382\u7c7b\uff0c\u4e00\u4e2a\u4ea7\u54c1\u62bd\u8c61\u7c7b\uff0c\u5de5\u5382\u7c7b\u7684\u521b\u5efa\u65b9\u6cd5\u4f9d\u636e\u5165\u53c2\u5224\u65ad\u5e76\u521b\u5efa\u5177\u4f53\u4ea7\u54c1\u5bf9\u8c61\u3002</p> <p>\u5de5\u5382\u65b9\u6cd5\uff1a\u591a\u4e2a\u5de5\u5382\u7c7b\uff0c\u4e00\u4e2a\u4ea7\u54c1\u62bd\u8c61\u7c7b\uff0c\u5229\u7528\u591a\u6001\u521b\u5efa\u4e0d\u540c\u7684\u4ea7\u54c1\u5bf9\u8c61\uff0c\u907f\u514d\u4e86\u5927\u91cf\u7684if-else\u5224\u65ad\u3002</p> <p>\u62bd\u8c61\u5de5\u5382\uff1a\u591a\u4e2a\u5de5\u5382\u7c7b\uff0c\u591a\u4e2a\u4ea7\u54c1\u62bd\u8c61\u7c7b\uff0c\u4ea7\u54c1\u5b50\u7c7b\u5206\u7ec4\uff0c\u540c\u4e00\u4e2a\u5de5\u5382\u5b9e\u73b0\u7c7b\u521b\u5efa\u540c\u7ec4\u4e2d\u7684\u4e0d\u540c\u4ea7\u54c1\uff0c\u51cf\u5c11\u4e86\u5de5\u5382\u5b50\u7c7b\u7684\u6570\u91cf</p>"},{"location":"src/cs/designPattern/designPattern/#_7","title":"\u542b\u4e49","text":"<ul> <li>\u7b80\u5355\u5de5\u5382\u6a21\u5f0f(Simple Factory Pattern): \u53c8\u79f0\u4e3a\u9759\u6001\u5de5\u5382\u65b9\u6cd5(Static Factory Method)\u6a21\u5f0f, \u5b83\u5c5e\u4e8e\u7c7b\u521b\u5efa\u578b\u6a21\u5f0f</li> <li>\u5728\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u4e2d, \u53ef\u4ee5\u6839\u636e\u53c2\u6570\u7684\u4e0d\u540c\u8fd4\u56de\u4e0d\u540c\u7c7b\u7684\u5b9e\u4f8b</li> <li>\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u4e13\u95e8\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u6765\u8d1f\u8d23\u521b\u5efa\u5176\u4ed6\u7c7b\u7684\u5b9e\u4f8b, \u88ab\u521b\u5efa\u7684\u5b9e\u4f8b\u901a\u5e38\u90fd\u5177\u6709\u5171\u540c\u7684\u7236\u7c7b</li> </ul>"},{"location":"src/cs/designPattern/designPattern/#_8","title":"\u89e3\u51b3\u7684\u95ee\u9898","text":"<p>\u5c06\u201c\u7c7b\u5b9e\u4f8b\u5316\u7684\u64cd\u4f5c\u201d\u4e0e\u201c\u4f7f\u7528\u5bf9\u8c61\u7684\u64cd\u4f5c\u201d\u5206\u5f00, \u8ba9\u4f7f\u7528\u8005\u4e0d\u7528\u77e5\u9053\u521b\u5efa\u903b\u8f91\u5c31\u53ef\u4ee5\u5b9e\u4f8b\u5316\u51fa\u6240\u9700\u8981\u7684\u201c\u4ea7\u54c1\u201d\u7c7b, \u4ece\u800c\u907f\u514d\u4e86\u5728\u5ba2\u6237\u7aef\u4ee3\u7801\u4e2d\u663e\u5f0f\u6307\u5b9a, \u5b9e\u73b0\u4e86\u89e3\u8026</p>"},{"location":"src/cs/designPattern/designPattern/#uml","title":"UML\u7c7b\u56fe\u53ca\u65f6\u5e8f\u56fe","text":""},{"location":"src/cs/designPattern/designPattern/#_9","title":"\u4ee3\u7801\u5b9e\u4f8b","text":"<p>\u62bd\u8c61\u4ea7\u54c1 C++<pre><code>class \u4ea7\u54c1\n{\npublic:\n    // \u63d0\u4f9b\u63a5\u53e3\u6846\u67b6\u7684\u7eaf\u865a\u51fd\u6570\n    virtual std::string \u4ea7\u54c1\u540d\u5b57() = 0;\n    \u4ea7\u54c1() {};\n    ~\u4ea7\u54c1() {};\n};\n</code></pre></p> <p>\u5177\u4f53\u4ea7\u54c1 C++<pre><code>// \u4e09\u4e2a\u5b9e\u9645\u4ea7\u54c1\nclass \u7535\u8111 : public \u4ea7\u54c1 {\npublic:\n    \u7535\u8111() {};\n    ~\u7535\u8111() {};\n    std::string \u4ea7\u54c1\u540d\u5b57() {\n        return \"\u7535\u8111\";\n    };\n};\n\nclass \u624b\u673a : public \u4ea7\u54c1 {\npublic:\n    \u624b\u673a() {};\n    ~\u624b\u673a() {};\n    std::string \u4ea7\u54c1\u540d\u5b57() {\n        return \"\u624b\u673a\";\n    };\n};\n\nclass \u5e73\u677f : public \u4ea7\u54c1 {\npublic:\n    \u5e73\u677f() {};\n    ~\u5e73\u677f() {};\n    std::string \u4ea7\u54c1\u540d\u5b57() {\n        return \"\u5e73\u677f\";\n    };\n};\n</code></pre></p> <p>\u5177\u4f53\u5de5\u5382 C++<pre><code>class \u5de5\u5382\n{\npublic:\n    \u5de5\u5382() {};\n    ~\u5de5\u5382() {};\n    \u4ea7\u54c1* \u5236\u9020\u4ea7\u54c1(std::string \u4ea7\u54c1\u540d) {\n        if (\u4ea7\u54c1\u540d == \"\u7535\u8111\")\n            return new \u7535\u8111;\n        if (\u4ea7\u54c1\u540d == \"\u624b\u673a\")\n            return new \u624b\u673a;\n        if (\u4ea7\u54c1\u540d == \"\u5e73\u677f\")\n            return new \u5e73\u677f;\n        return NULL;\n    };\n};\n</code></pre></p> C++<pre><code>int main() {\n    \u5de5\u5382* \u9f99\u9f99\u7684\u8840\u6c57\u5de5\u5382 = new \u5de5\u5382();\n    \u4ea7\u54c1* \u4f73\u4f73\u7684\u7535\u8111 = \u9f99\u9f99\u7684\u8840\u6c57\u5de5\u5382-&gt;\u5236\u9020\u4ea7\u54c1(\"\u7535\u8111\");\n\n    std::cout &lt;&lt; \u4f73\u4f73\u7684\u7535\u8111-&gt;\u4ea7\u54c1\u540d\u5b57();\n\n    return 0;\n}\n</code></pre>"},{"location":"src/cs/designPattern/designPattern/#_10","title":"\u4f18\u70b9","text":"<ul> <li> <p>\u5de5\u5382\u7c7b\u542b\u6709\u5fc5\u8981\u7684\u5224\u65ad\u903b\u8f91, \u53ef\u4ee5\u51b3\u5b9a\u5728\u4ec0\u4e48\u65f6\u5019\u521b\u5efa\u54ea\u4e00\u4e2a\u4ea7\u54c1\u7c7b\u7684\u5b9e\u4f8b, \u5ba2\u6237\u7aef\u53ef\u4ee5\u514d\u9664\u76f4\u63a5\u521b\u5efa\u4ea7\u54c1\u5bf9\u8c61\u7684\u8d23\u4efb, \u800c\u4ec5\u4ec5\u201c\u6d88\u8d39\u201d\u4ea7\u54c1; \u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u901a\u8fc7\u8fd9\u79cd\u505a\u6cd5\u5b9e\u73b0\u4e86\u5bf9\u8d23\u4efb\u7684\u5206\u5272, \u5b83\u63d0\u4f9b\u4e86\u4e13\u95e8\u7684\u5de5\u5382\u7c7b\u7528\u4e8e\u521b\u5efa\u5bf9\u8c61</p> </li> <li> <p>\u5ba2\u6237\u7aef\u65e0\u987b\u77e5\u9053\u6240\u521b\u5efa\u7684\u5177\u4f53\u4ea7\u54c1\u7c7b\u7684<code>\u7c7b\u540d</code>, \u53ea\u9700\u8981\u77e5\u9053\u5177\u4f53\u4ea7\u54c1\u7c7b\u6240\u5bf9\u5e94\u7684\u53c2\u6570\u5373\u53ef, \u5bf9\u4e8e\u4e00\u4e9b\u590d\u6742\u7684\u7c7b\u540d, \u901a\u8fc7\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u53ef\u4ee5\u51cf\u5c11\u4f7f\u7528\u8005\u7684\u8bb0\u5fc6\u91cf</p> </li> <li> <p>\u901a\u8fc7\u5f15\u5165\u914d\u7f6e\u6587\u4ef6, \u53ef\u4ee5\u5728\u4e0d\u4fee\u6539\u4efb\u4f55\u5ba2\u6237\u7aef\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\u66f4\u6362\u548c\u589e\u52a0\u65b0\u7684\u5177\u4f53\u4ea7\u54c1\u7c7b, \u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u63d0\u9ad8\u4e86\u7cfb\u7edf\u7684\u7075\u6d3b\u6027</p> </li> </ul>"},{"location":"src/cs/designPattern/designPattern/#_11","title":"\u7f3a\u70b9","text":"<ul> <li> <p>\u7531\u4e8e\u5de5\u5382\u7c7b\u96c6\u4e2d\u4e86\u6240\u6709\u4ea7\u54c1\u521b\u5efa\u903b\u8f91\uff0c\u4e00\u65e6\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u6574\u4e2a\u7cfb\u7edf\u90fd\u8981\u53d7\u5230\u5f71\u54cd</p> </li> <li> <p>\u4f7f\u7528\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u5c06\u4f1a\u589e\u52a0\u7cfb\u7edf\u4e2d\u7c7b\u7684\u4e2a\u6570, \u5728\u4e00\u5b9a\u7a0b\u5e8f\u4e0a\u589e\u52a0\u4e86\u7cfb\u7edf\u7684\u590d\u6742\u5ea6\u548c\u7406\u89e3\u96be\u5ea6</p> </li> <li> <p>\u7cfb\u7edf\u6269\u5c55\u56f0\u96be, \u4e00\u65e6\u6dfb\u52a0\u65b0\u4ea7\u54c1\u5c31\u4e0d\u5f97\u4e0d\u4fee\u6539\u5de5\u5382\u903b\u8f91, \u5728\u4ea7\u54c1\u7c7b\u578b\u8f83\u591a\u65f6, \u6709\u53ef\u80fd\u9020\u6210\u5de5\u5382\u903b\u8f91\u8fc7\u4e8e\u590d\u6742, \u4e0d\u5229\u4e8e\u7cfb\u7edf\u7684\u6269\u5c55\u548c\u7ef4\u62a4</p> </li> <li> <p>\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u7531\u4e8e\u4f7f\u7528\u4e86\u9759\u6001\u5de5\u5382\u65b9\u6cd5, \u9020\u6210\u5de5\u5382\u89d2\u8272\u65e0\u6cd5\u5f62\u6210\u57fa\u4e8e\u7ee7\u627f\u7684\u7b49\u7ea7\u7ed3\u6784</p> </li> </ul>"},{"location":"src/cs/designPattern/designPattern/#_12","title":"\u5178\u578b\u5e94\u7528","text":""},{"location":"src/cs/designPattern/designPattern/#_13","title":"\u542b\u4e49","text":"<ul> <li> <p>\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f(Factory Method Pattern)\u53c8\u79f0\u4e3a\u5de5\u5382\u6a21\u5f0f, \u4e5f\u53eb\u865a\u62df\u6784\u9020\u5668(Virtual Constructor)\u6a21\u5f0f\u6216\u8005\u591a\u6001\u5de5\u5382(Polymorphic Factory)\u6a21\u5f0f, \u5b83\u5c5e\u4e8e\u7c7b\u521b\u5efa\u578b\u6a21\u5f0f</p> </li> <li> <p>\u5728\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u4e2d, \u5de5\u5382\u7236\u7c7b\u8d1f\u8d23\u5b9a\u4e49\u521b\u5efa\u4ea7\u54c1\u5bf9\u8c61\u7684\u516c\u5171\u63a5\u53e3, \u800c\u5de5\u5382\u5b50\u7c7b\u5219\u8d1f\u8d23\u751f\u6210\u5177\u4f53\u7684\u4ea7\u54c1\u5bf9\u8c61</p> </li> <li> <p>\u76ee\u7684\u662f\u5c06\u4ea7\u54c1\u7c7b\u7684\u5b9e\u4f8b\u5316\u64cd\u4f5c<code>\u5ef6\u8fdf</code>\u5230\u5de5\u5382\u5b50\u7c7b\u4e2d\u5b8c\u6210, \u5373\u901a\u8fc7\u5de5\u5382\u5b50\u7c7b\u6765\u786e\u5b9a\u7a76\u7adf\u5e94\u8be5\u5b9e\u4f8b\u5316\u54ea\u4e00\u4e2a\u5177\u4f53\u4ea7\u54c1\u7c7b</p> </li> </ul>"},{"location":"src/cs/designPattern/designPattern/#_14","title":"\u89e3\u51b3\u7684\u95ee\u9898","text":"<p>\u8fd9\u79cd\u62bd\u8c61\u5316\u7684\u7ed3\u679c\u4f7f\u8fd9\u79cd\u7ed3\u6784\u53ef\u4ee5\u5728\u4e0d\u4fee\u6539\u5177\u4f53\u5de5\u5382\u7c7b\u7684\u60c5\u51b5\u4e0b\u5f15\u8fdb\u65b0\u7684\u4ea7\u54c1; \u5f53\u6709\u65b0\u4ea7\u54c1\u52a0\u5165\u65f6, \u65b0\u5efa\u5177\u4f53\u5de5\u5382\u7ee7\u627f\u62bd\u8c61\u5de5\u5382, \u800c\u4e0d\u7528\u4fee\u6539\u4efb\u4f55\u4e00\u4e2a\u7c7b <code>\u6709\u6548\u907f\u514d\u7b80\u5355\u5de5\u5382\u5728\u5de5\u5382\u7c7b\u4e2d\u53c8\u81ed\u53c8\u957f\u7684if...else</code></p>"},{"location":"src/cs/designPattern/designPattern/#uml_1","title":"UML\u7c7b\u56fe\u53ca\u65f6\u5e8f\u56fe","text":""},{"location":"src/cs/designPattern/designPattern/#_15","title":"\u4ee3\u7801\u5b9e\u4f8b","text":"<p>\u62bd\u8c61\u4ea7\u54c1 C++<pre><code>class \u4ea7\u54c1 {\npublic:\n    virtual std::string \u4ea7\u54c1\u540d\u5b57() = 0;\n    \u4ea7\u54c1() {};\n    ~\u4ea7\u54c1() {};\n};\n</code></pre></p> <p>\u5177\u4f53\u4ea7\u54c1 C++<pre><code>class \u624b\u673a : public \u4ea7\u54c1 {\npublic:\n    std::string \u4ea7\u54c1\u540d\u5b57() {\n        return \"\u624b\u673a\";\n    }\n    \u624b\u673a() {};\n    ~\u624b\u673a() {};\n};\n</code></pre></p> <p>\u62bd\u8c61\u5de5\u5382 C++<pre><code>class \u5de5\u5382 {\npublic:\n    virtual \u4ea7\u54c1* \u5236\u9020\u4ea7\u54c1() = 0;\n    \u5de5\u5382() {};\n    ~\u5de5\u5382() {};\n};\n</code></pre></p> <p>\u5177\u4f53\u5de5\u5382 C++<pre><code>class \u624b\u673a\u5382 :public \u5de5\u5382 {\npublic:\n    \u624b\u673a* \u5236\u9020\u4ea7\u54c1() {\n        return new \u624b\u673a();\n    }\n    \u624b\u673a\u5382() {};\n    ~\u624b\u673a\u5382() {};\n};\n</code></pre></p> C++<pre><code>int main() {\n    \u5de5\u5382* \u9f99\u9f99\u7684\u624b\u673a\u5de5\u5382 = new \u624b\u673a\u5382();\n    \u4ea7\u54c1* \u4f73\u4f73\u7684\u5c0f\u624b\u673a = \u9f99\u9f99\u7684\u624b\u673a\u5de5\u5382-&gt;\u5236\u9020\u4ea7\u54c1();\n\n    std::cout &lt;&lt; \u4f73\u4f73\u7684\u5c0f\u624b\u673a-&gt;\u4ea7\u54c1\u540d\u5b57();\n\n    delete \u9f99\u9f99\u7684\u624b\u673a\u5de5\u5382;\n    delete \u4f73\u4f73\u7684\u5c0f\u624b\u673a;\n    return 0;\n}\n</code></pre>"},{"location":"src/cs/designPattern/designPattern/#_16","title":"\u4f18\u70b9","text":"<ul> <li>\u53ea\u9700\u8981\u5173\u5fc3\u5de5\u5382, \u65e0\u9700\u5173\u5fc3\u521b\u5efa\u7ec6\u8282</li> </ul>"},{"location":"src/cs/designPattern/designPattern/#_17","title":"\u7f3a\u70b9","text":"<ul> <li> <p>\u589e\u52a0\u4e86\u7c7b\u7684\u6570\u91cf, \u589e\u52a0\u4e86\u7cfb\u7edf\u590d\u6742\u5ea6</p> </li> <li> <p>\u5f15\u5165\u4e86\u62bd\u8c61\u5c42, \u589e\u52a0\u4e86\u7cfb\u7edf\u7684\u62bd\u8c61\u6027\u548c\u7406\u89e3\u96be\u5ea6</p> </li> </ul>"},{"location":"src/cs/designPattern/designPattern/#_18","title":"\u5178\u578b\u5e94\u7528","text":"<p>\u65e5\u5fd7\u8bb0\u5f55\u5668</p> <p>\u652f\u6301\u6587\u4ef6\u8bb0\u5f55\u3001\u6570\u636e\u5e93\u8bb0\u5f55\u7b49\u4e0d\u540c\u8bb0\u5f55\u65b9\u5f0f</p>"},{"location":"src/cs/designPattern/designPattern/#_19","title":"\u542b\u4e49","text":"<p>\u63d0\u4f9b\u4e00\u4e2a\u521b\u5efa\u4e00\u7cfb\u5217\u76f8\u5173\u6216\u76f8\u4e92\u4f9d\u8d56\u5bf9\u8c61\u7684\u63a5\u53e3, \u800c\u65e0\u987b\u6307\u5b9a\u5b83\u4eec\u5177\u4f53\u7684\u7c7b</p>"},{"location":"src/cs/designPattern/designPattern/#_20","title":"\u89e3\u51b3\u7684\u95ee\u9898","text":"<p>\u5f53\u9700\u8981\u4e00\u4e2a\u5de5\u5382\u63d0\u4f9b\u591a\u79cd\u4ea7\u54c1, \u800c\u4e0d\u662f\u5355\u4e00\u7684\u4ea7\u54c1\u5bf9\u8c61(\u76f8\u8f83\u4e8e\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f)</p> <ul> <li>\u4ea7\u54c1\u7b49\u7ea7\u7ed3\u6784: \u5982 <code>\u7535\u89c6</code> \u548c <code>\u7535\u89c6\u7684\u5b50\u7c7b</code>(\u5c0f\u7c73\u7535\u89c6, \u4e09\u661f\u7535\u89c6, \u7d22\u5c3c\u7535\u89c6) </li> <li>\u4ea7\u54c1\u65cf: \u540c\u4e00\u4e2a\u5de5\u5382\u751f\u6210\u7684 <code>\u5c0f\u7c73\u7535\u89c6</code>, <code>\u5c0f\u7c73\u624b\u673a</code>, <code>\u5c0f\u7c73\u7535\u8111</code></li> </ul> <p></p>"},{"location":"src/cs/designPattern/designPattern/#uml_2","title":"UML\u7c7b\u56fe\u53ca\u65f6\u5e8f\u56fe","text":""},{"location":"src/cs/designPattern/designPattern/#_21","title":"\u4ee3\u7801\u5b9e\u4f8b","text":"<p>\u4ea7\u54c1\u7b49\u7ea7\u7ed3\u6784 <code>\u7535\u89c6</code> \u548c <code>\u5404\u4e2a\u54c1\u724c\u7684\u7535\u89c6</code> C++<pre><code>// \u62bd\u8c61\u7c7b\nclass \u7535\u89c6 {\npublic:\n    virtual std::string \u5c3a\u5bf8() = 0;\n    \u7535\u89c6() {};\n    ~\u7535\u89c6() {};\n};\n\n// \u5177\u4f53\u7c7b\nclass oppo\u7535\u89c6 : public \u7535\u89c6 {\npublic:\n    std::string \u5c3a\u5bf8() {\n        return \"88\u5bf8\";\n    }\n    oppo\u7535\u89c6() {};\n    ~oppo\u7535\u89c6() {};\n};\n\nclass \u4e09\u661f\u7535\u89c6 : public \u7535\u89c6 {\npublic:\n    std::string \u5c3a\u5bf8() {\n        return \"32\u5bf8\";\n    }\n    \u4e09\u661f\u7535\u89c6() {};\n    ~\u4e09\u661f\u7535\u89c6() {};\n};\n</code></pre></p> <p>\u4ea7\u54c1\u7b49\u7ea7\u7ed3\u6784 <code>\u624b\u673a</code> \u548c <code>\u5404\u4e2a\u54c1\u724c\u7684\u624b\u673a</code> C++<pre><code>// \u62bd\u8c61\u7c7b\nclass \u624b\u673a {\npublic:\n    virtual std::string \u82af\u7247() = 0;\n    \u624b\u673a() {};\n    ~\u624b\u673a() {};\n};\n\n// \u5177\u4f53\u7c7b\nclass oppo\u624b\u673a : public \u624b\u673a {\npublic:\n    std::string \u82af\u7247() {\n        return \"\u9a6c\u91cc\u4e9a\u7eb3\u6d77\u6c9f\";\n    }\n    oppo\u624b\u673a() {};\n    ~oppo\u624b\u673a() {};\n};\nclass \u4e09\u661f\u624b\u673a : public \u624b\u673a {\npublic:\n    std::string \u82af\u7247(){\n        return \"\u730e\u6237\u5ea7\";\n    }\n    \u4e09\u661f\u624b\u673a() {};\n    ~\u4e09\u661f\u624b\u673a() {};\n};\n</code></pre></p> <p>\u4ea7\u54c1\u65cf \u540c\u4e00\u4e2a\u5de5\u5382\u751f\u4ea7\u7684 C++<pre><code>// \u62bd\u8c61\u7c7b\nclass \u54c1\u724c {\npublic:\n    virtual \u7535\u89c6* \u5236\u9020\u7535\u89c6() = 0;\n    virtual \u624b\u673a* \u5236\u9020\u624b\u673a() = 0;\n    \u54c1\u724c() {};\n    ~\u54c1\u724c() {};\n};\n\n// \u5177\u4f53\u7c7b\nclass oppo : public \u54c1\u724c {\npublic:\n    \u7535\u89c6* \u5236\u9020\u7535\u89c6() {\n        return new oppo\u7535\u89c6();\n    }\n    \u624b\u673a* \u5236\u9020\u624b\u673a() {\n        return new oppo\u624b\u673a();\n    }\n    oppo() {};\n    ~oppo() {};\n};\nclass \u4e09\u661f : public \u54c1\u724c {\npublic:\n    \u7535\u89c6* \u5236\u9020\u7535\u89c6() {\n        return new \u4e09\u661f\u7535\u89c6();\n    }\n    \u624b\u673a* \u5236\u9020\u624b\u673a() {\n        return new \u4e09\u661f\u624b\u673a();\n    }\n    \u4e09\u661f() {};\n    ~\u4e09\u661f() {};\n};\n</code></pre></p> C++<pre><code>int main() {\n    \u4e09\u661f* \u4e09\u661f\u91cd\u5e86\u5206\u5382 = new \u4e09\u661f();\n    oppo* oppo\u91cd\u5e86\u5206\u5382 = new oppo();\n\n    \u624b\u673a* \u5c0f\u7cbe\u7075\u7684\u5c0f\u624b\u673a = oppo\u91cd\u5e86\u5206\u5382-&gt;\u5236\u9020\u624b\u673a();\n    \u7535\u89c6* \u4f73\u4f73\u7684\u5927\u7535\u89c6 = \u4e09\u661f\u91cd\u5e86\u5206\u5382-&gt;\u5236\u9020\u7535\u89c6();\n\n    std::cout &lt;&lt; \u5c0f\u7cbe\u7075\u7684\u5c0f\u624b\u673a-&gt;\u82af\u7247() &lt;&lt; \"\\n\";\n    std::cout &lt;&lt; \u4f73\u4f73\u7684\u5927\u7535\u89c6-&gt;\u5c3a\u5bf8();\n    return 0;\n}\n</code></pre>"},{"location":"src/cs/designPattern/designPattern/#_22","title":"\u4f18\u70b9","text":"<p>\u5f53\u4e00\u4e2a\u4ea7\u54c1\u65cf\u4e2d\u7684\u591a\u4e2a\u5bf9\u8c61\u88ab\u8bbe\u8ba1\u6210\u4e00\u8d77\u5de5\u4f5c\u65f6, \u5b83\u80fd\u4fdd\u8bc1\u5ba2\u6237\u7aef\u59cb\u7ec8\u53ea\u4f7f\u7528\u540c\u4e00\u4e2a\u4ea7\u54c1\u65cf\u4e2d\u7684\u5bf9\u8c61</p>"},{"location":"src/cs/designPattern/designPattern/#_23","title":"\u7f3a\u70b9","text":"<p>\u4ea7\u54c1\u65cf\u6269\u5c55\u975e\u5e38\u56f0\u96be, \u8981\u589e\u52a0\u4e00\u4e2a\u7cfb\u5217\u7684\u67d0\u4e00\u4ea7\u54c1, \u65e2\u8981\u5728\u62bd\u8c61\u7c7b\u91cc\u52a0\u4ee3\u7801, \u53c8\u8981\u5728\u5177\u4f53\u7684\u7c7b\u91cc\u52a0\u4ee3\u7801</p>"},{"location":"src/cs/designPattern/designPattern/#_24","title":"\u5178\u578b\u5e94\u7528","text":""},{"location":"src/cs/designPattern/designPattern/#_25","title":"\u542b\u4e49","text":"<ul> <li>\u9002\u914d\u5668\u6a21\u5f0f(Adapter Pattern): \u5c06\u4e00\u4e2a\u63a5\u53e3\u8f6c\u6362\u6210\u5ba2\u6237\u5e0c\u671b\u7684\u53e6\u4e00\u4e2a\u63a5\u53e3, \u9002\u914d\u5668\u6a21\u5f0f\u4f7f\u63a5\u53e3\u4e0d\u517c\u5bb9\u7684\u90a3\u4e9b\u7c7b\u53ef\u4ee5\u4e00\u8d77\u5de5\u4f5c, \u5176\u522b\u540d\u4e3a\u5305\u88c5\u5668(Wrapper)</li> <li>\u9002\u914d\u5668\u6a21\u5f0f\u65e2\u53ef\u4ee5\u4f5c\u4e3a\u7c7b\u7ed3\u6784\u578b\u6a21\u5f0f, \u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u5bf9\u8c61\u7ed3\u6784\u578b\u6a21\u5f0f</li> </ul>"},{"location":"src/cs/designPattern/designPattern/#_26","title":"\u89e3\u51b3\u7684\u95ee\u9898","text":"<ul> <li>\u7cfb\u7edf\u9700\u8981\u4f7f\u7528\u73b0\u6709\u7684\u7c7b, \u800c\u8fd9\u4e9b\u7c7b\u7684\u63a5\u53e3\u4e0d\u7b26\u5408\u7cfb\u7edf\u7684\u9700\u8981</li> <li>\u60f3\u8981\u5efa\u7acb\u4e00\u4e2a\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u7684\u7c7b, \u7528\u4e8e\u4e0e\u4e00\u4e9b ( \u5f7c\u6b64\u4e4b\u95f4\u6ca1\u6709\u592a\u5927\u5173\u8054\u7684\u4e00\u4e9b\u7c7b,\u53ef\u80fd\u5728\u5c06\u6765\u5f15\u8fdb\u7684\u7c7b ) \u4e00\u8d77\u5de5\u4f5c</li> </ul>"},{"location":"src/cs/designPattern/designPattern/#uml_3","title":"UML\u7c7b\u56fe\u53ca\u65f6\u5e8f\u56fe","text":""},{"location":"src/cs/designPattern/designPattern/#_27","title":"\u4ee3\u7801\u5b9e\u4f8b","text":"C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nclass \u4e0d\u517c\u5bb9\u7c7b {\npublic:\n    \u4e0d\u517c\u5bb9\u7c7b() {};\n    ~\u4e0d\u517c\u5bb9\u7c7b() {};\n    std::string \u529f\u80fd() {\n        return \"\u4e00\u4e2a\u63a5\u53e3\u4e0d\u517c\u5bb9\u7684\u529f\u80fd\";\n    }\n};\n\nclass \u9002\u914d\u5668 {\nprivate:\n    \u4e0d\u517c\u5bb9\u7c7b* \u65e7;\npublic:\n    \u9002\u914d\u5668() {};\n    ~\u9002\u914d\u5668() {};\n\n    std::string \u7edf\u4e00\u63a5\u53e3(\u4e0d\u517c\u5bb9\u7c7b* \u65e7) {\n        return \u65e7-&gt;\u529f\u80fd();\n    };\n};\n\nint main() {\n    \u4e0d\u517c\u5bb9\u7c7b* \u65e7 = new \u4e0d\u517c\u5bb9\u7c7b();\n    \u9002\u914d\u5668* \u76ee\u6807 = new \u9002\u914d\u5668();\n\n    std::cout &lt;&lt; \u76ee\u6807-&gt;\u7edf\u4e00\u63a5\u53e3(\u65e7);\n\n    return 0;\n}\n</code></pre>"},{"location":"src/cs/designPattern/designPattern/#_28","title":"\u4f18\u70b9","text":""},{"location":"src/cs/designPattern/designPattern/#_29","title":"\u7f3a\u70b9","text":""},{"location":"src/cs/designPattern/designPattern/#_30","title":"\u5178\u578b\u5e94\u7528","text":""},{"location":"src/cs/engineer/engineer/","title":"\u5f15\u5b50","text":"<p>\u5185\u5bb9\u786e\u5b9e\u592a\u591a\uff0c\u628a\u63e1\u4e0d\u4e86\u91cd\u70b9</p> <p>\u6bcf\u5929\u51e0\u9053\u9898\uff0c\u6839\u636e\u9898\u76ee\u6240\u6d89\u53ca\u7684\u77e5\u8bc6\u70b9\u53bb\u5b8c\u5584\u77e5\u8bc6\u70b9</p> <p>\u4e3b\u8981\u662f\u5185\u5bb9\u4e0d\u6df1\uff0c\u8d35\u5728\u5168\u9762</p>"},{"location":"src/cs/engineer/engineer/#2","title":"2 \u57fa\u7840","text":""},{"location":"src/cs/engineer/engineer/#25","title":"2.5 \u8ba1\u7b97\u673a\u7f51\u7edc","text":"<p>\u7f51\u7edc\u5ef6\u8fdf</p> <p>\u670d\u52a1\u5668\u5ef6\u8fdf\u7684\u4e3b\u8981\u5f71\u54cd\u56e0\u7d20\u662f\u961f\u5217\u5ef6\u8fdf\u548c\u78c1\u76d8IO\u5ef6\u8fdf \u5bf9\u7b49\u7f51\u7edc\u4e2d\uff0c\u7ec8\u7aef\u6570\u91cf\u8d8a\u591a\uff0c\u5ef6\u8fdf\u8d8a\u5927 \u4ea4\u6362\u673a\uff08\u76f4\u63a5\u8f6c\u53d1\uff09\u7684\u5ef6\u8fdf\u4f4e\u4e8e\u8def\u7531\u5668\uff08\u5b58\u50a8\u8f6c\u53d1\uff09</p> <p></p> <p></p>"},{"location":"src/cs/engineer/engineer/#3","title":"3 \u4fe1\u606f\u7cfb\u7edf","text":"<p>\u4f01\u4e1a\u6570\u5b57\u5316\u7684\u4e94\u4e2a\u9636\u6bb5</p> <ol> <li>\u521d\u59cb\uff08\u5f15\u5165\u4fe1\u606f\u6280\u672f\uff0c\u4f46\u6ca1\u6709\u53d1\u6325\u5bf9\u4e3b\u8425\u4e1a\u52a1\u7684\u652f\u6301\u4f5c\u7528\uff09</li> <li>\u5355\u5143\uff08\u90e8\u5206\u4e1a\u52a1\u901a\u8fc7\u4fe1\u606f\u6280\u672f\u5f97\u5230\u4e86\u6548\u7387\u63d0\u5347\uff09</li> <li>\u6d41\u7a0b\uff08\u6574\u4e2a\u4e1a\u52a1\u6d41\u7a0b\u901a\u8fc7\u4fe1\u606f\u6280\u672f\u5f97\u5230\u4e86\u96c6\u6210\u4f18\u5316\uff09</li> <li>\u7f51\u7edc\uff08\u4f01\u4e1a\u5185\u5b9e\u73b0\u4ee5\u6570\u636e\u4e3a\u9a71\u52a8\u6a21\u5f0f\u521b\u65b0\uff09</li> <li>\u751f\u6001\uff08\u4f01\u4e1a\u4e0e\u5916\u90e8\u5408\u4f5c\u4f19\u4f34\u3001\u5ba2\u6237\u3001\u4f9b\u5e94\u5546\u7b49\u5f62\u6210\u751f\u6001\u5708\uff09</li> </ol> <p></p>"},{"location":"src/cs/engineer/engineer/#37-erp","title":"3.7 \u4f01\u4e1a\u8d44\u6e90\u89c4\u5212 ERP","text":"<p>ERP </p> <p>\u5bf9\u7269\u6d41\u3001\u8d44\u91d1\u6d41\u3001\u4fe1\u606f\u6d41\u8fdb\u884c\u5168\u9762\u7ba1\u7406\u7684\u4e00\u79cd\u4fe1\u606f\u7cfb\u7edf</p> <p></p> <p>\u4f01\u4e1a\u8d44\u6e90\u89c4\u5212\u7ed3\u6784</p> <ol> <li>\u751f\u4ea7\u9884\u6d4b\uff08\u5e02\u573a\u7684\u9700\u6c42\uff09</li> <li>\u9500\u552e\u8ba1\u5212</li> <li>\u751f\u4ea7\u8ba1\u5212\u5927\u7eb2\uff08\u6839\u636e\u7ecf\u8425\u8ba1\u5212\u7684\u751f\u4ea7\u76ee\u6807\u5236\u5b9a\uff09</li> <li>\u4e3b\u751f\u4ea7\u8ba1\u5212\uff08\u5bf9\u5927\u7eb2\u7684\u7ec6\u5316\uff0c\u4e00\u5b9a\u65f6\u671f\u7684\u4ea7\u91cf\u8ba1\u5212\uff09</li> <li>\u7269\u6599\u9700\u6c42\u8ba1\u5212</li> <li>\u80fd\u529b\u9700\u6c42\u8ba1\u5212\uff08\u80fd\u591f\u53ca\u65f6\u53d1\u73b0\u80fd\u529b\u7684\u74f6\u9888\uff09</li> <li>\u8f66\u95f4\u4f5c\u4e1a\u8ba1\u5212\uff08\u6839\u636e\u751f\u4ea7\u4f18\u5148\u7ea7\u5236\u5b9a\uff09</li> <li>\u91c7\u8d2d\u4e0e\u5e93\u5b58\u7ba1\u7406</li> <li>\u8d28\u91cf\u4e0e\u8bbe\u5907\u7ba1\u7406</li> <li>\u8d22\u52a1\u7ba1\u7406</li> <li>\u6269\u5c55\u6a21\u5757\uff08\u5ba2\u6237\u5173\u7cfb\u7ba1\u7406\u3001\u5206\u9500\u8d44\u6e90\u7ba1\u7406\u3001\u4f9b\u5e94\u94fe\u7ba1\u7406\uff09</li> </ol> <p></p> <p>CRM \u5ba2\u6237\u5173\u7cfb\u7ba1\u7406</p> <ul> <li>\u9500\u552e\u81ea\u52a8\u5316\u662f CRM \u4e2d\u7684\u57fa\u7840\u6a21\u5757</li> <li>\u8425\u9500\u81ea\u52a8\u5316\u662f\u9500\u552e\u81ea\u52a8\u5316\u7684\u8865\u5145\uff0c\u542b\u8425\u9500\u8ba1\u5212\u7684\u7f16\u5236\u4e0e\u6267\u884c\uff0c\u8ba1\u5212\u7ed3\u679c\u5206\u6790\u7b49</li> <li>CRM \u53ef\u4ee5\u4e0e ERP\uff08\u8d22\u52a1\uff0c\u5236\u9020\uff0c\u5e93\u5b58\uff09\u7b49\u8fde\u63a5\u5f62\u6210\u4e00\u5b9a\u7684\u95ed\u73af</li> <li>\u5ba2\u6237\u670d\u52a1\u4e0e\u652f\u6301\u662fCRM\u7684\u91cd\u8981\u529f\u80fd\uff0c\u901a\u8fc7\u547c\u53eb\u4e2d\u5fc3\u4e0e\u4e92\u8054\u7f51\u5b9e\u73b0</li> </ul> <p></p>"},{"location":"src/cs/engineer/engineer/#4","title":"4 \u4fe1\u606f\u5b89\u5168","text":"<p>\u8bc1\u4e66\u9881\u53d1\u3001\u9a8c\u8bc1\u673a\u6784</p> <ul> <li>CA\uff08\u8bc1\u4e66\u9881\u53d1\uff0c\u8d1f\u8d23\u751f\u6210\u548c\u7b7e\u7f72\u6570\u5b57\u8bc1\u4e66\uff09</li> <li>RA\uff08\u8d1f\u8d23\u7528\u6237\u8eab\u4efd\u7684\u9a8c\u8bc1\uff09</li> </ul> <p></p>"},{"location":"src/cs/engineer/engineer/#5","title":"5 \u8f6f\u4ef6\u5de5\u7a0b","text":"<p>\u9057\u7559\u7cfb\u7edf</p> <ul> <li>\u6dd8\u6c70\uff08\u4f4e\u6280\u672f\u6c34\u5e73\uff0c\u4f4e\u4e1a\u52a1\u4ef7\u503c\uff09</li> <li>\u7ee7\u627f\uff08\u4f4e\u6280\u672f\u6c34\u5e73\uff0c\u9ad8\u4e1a\u52a1\u4ef7\u503c\uff09</li> <li>\u96c6\u6210\uff08\u9ad8\u6280\u672f\u6c34\u5e73\uff0c\u4f4e\u4e1a\u52a1\u4ef7\u503c\uff09</li> <li>\u6539\u9020\uff08\u9ad8\u6280\u672f\u6c34\u5e73\uff0c\u9ad8\u4e1a\u52a1\u4ef7\u503c\uff09</li> </ul>"},{"location":"src/cs/engineer/engineer/#51","title":"5.1 \u8f6f\u4ef6\u5de5\u7a0b","text":"<p>\u7011\u5e03\u6a21\u578b</p> <ol> <li>\u987a\u5e8f\u6027\uff0c\u5de5\u4f5c\u6d41\u7a0b\u81ea\u9876\u5411\u4e0b</li> <li>\u9636\u6bb5\u6027\uff0c\u6bcf\u4e2a\u9636\u6bb5\u6709\u660e\u786e\u7684\u4efb\u52a1\u548c\u6210\u679c</li> </ol> <p>\u7f3a\u70b9\uff1a</p> <ol> <li>\u8f6f\u4ef6\u9700\u6c42\u7684\u5b8c\u6574\u6027\u3001\u6b63\u786e\u6027\u96be\u4ee5\u786e\u5b9a</li> <li>\u5f53\u51fa\u73b0\u9700\u6c42\u53d8\u66f4\u65f6\uff0c\u7011\u5e03\u6a21\u578b\u96be\u4ee5\u9002\u5e94</li> </ol> <p></p> <p>\u539f\u578b\u5316\u6a21\u578b</p> <p>\u8fc7\u7a0b\uff1a</p> <ol> <li>\u539f\u578b\u5f00\u53d1\u9636\u6bb5\uff08\u5b9e\u73b0\u6838\u5fc3\u529f\u80fd\uff0c\u9700\u6c42\u786e\u8ba4\u9636\u6bb5\uff09</li> <li>\u76ee\u6807\u8f6f\u4ef6\u5f00\u53d1\u9636\u6bb5\uff08\u660e\u786e\u9700\u6c42\uff0c\u539f\u578b\u5927\u6982\u7387\u629b\u5f03\uff09</li> </ol> <p></p> <p>\u87ba\u65cb\u6a21\u578b</p> <p>\u6574\u4e2a\u5f00\u53d1\u8fc7\u7a0b\u5206\u4e3a\u591a\u4e2a\u8fed\u4ee3\u5468\u671f\uff0c\u6bcf\u4e2a\u5468\u671f\u5305\u62ec\u56db\u4e2a\u9636\u6bb5\uff1a</p> <ol> <li>\u76ee\u6807\u8bbe\u5b9a\uff08\u660e\u786e\u8fd9\u4e00\u5468\u671f\u7684\u76ee\u6807\uff09</li> <li>\u98ce\u9669\u5206\u6790</li> <li>\u5f00\u53d1\u548c\u6709\u6548\u6027\u9a8c\u8bc1\uff08\u8fdb\u884c\u539f\u578b\u5f00\u53d1\uff0c\u5f00\u53d1\u5177\u4f53\u7684\u8f6f\u4ef6\uff09</li> <li>\u8bc4\u5ba1\uff08\u603b\u7ed3\uff0c\u5c55\u671b\uff09</li> </ol> <p></p>"},{"location":"src/cs/engineer/engineer/#52","title":"5.2 \u9700\u6c42\u5de5\u7a0b","text":"<p>\u8f6f\u4ef6\u9700\u6c42\u4e09\u4e2a\u5c42\u6b21</p> <ol> <li>\u4e1a\u52a1\u9700\u6c42\uff08\u7528\u6237\u8981\u4f7f\u7528\u6b64\u8f6f\u4ef6\u8fbe\u5230\u4ec0\u4e48\u76ee\u7684\uff09</li> <li>\u7528\u6237\u9700\u6c42\uff08\u7528\u6237\u4f7f\u7528\u6b64\u8f6f\u4ef6\u7684\u5177\u4f53\u529f\u80fd\uff09</li> <li>\u529f\u80fd\u9700\u6c42\uff08\u8f6f\u4ef6\u7684\u5177\u4f53\u529f\u80fd\uff09</li> </ol> <p></p> <p>\u9700\u6c42\u5de5\u7a0b\u7684\u4e3b\u8981\u9636\u6bb5</p> <ol> <li>\u9700\u6c42\u83b7\u53d6</li> <li>\u9700\u6c42\u5206\u6790</li> <li>\u5f62\u6210\u9700\u6c42\u89c4\u683c</li> <li>\u9700\u6c42\u786e\u8ba4\u4e0e\u9a8c\u8bc1</li> <li>\u9700\u6c42\u7ba1\u7406</li> </ol> <p></p> <p>\u9700\u6c42\u7ba1\u7406\u7684\u4e3b\u8981\u6d3b\u52a8</p> <ol> <li>\u53d8\u66f4\u63a7\u5236</li> <li>\u7248\u672c\u63a7\u5236</li> <li>\u9700\u6c42\u8ddf\u8e2a</li> <li>\u9700\u6c42\u72b6\u6001\u8ddf\u8e2a</li> </ol> <p></p> <p>\u7ef4\u62a4\u6d3b\u52a8</p> <ul> <li>\u6539\u6b63\u6027\u7ef4\u62a4\uff08\u4fee\u590dbug\uff09</li> <li>\u9002\u5e94\u6027\u7ef4\u62a4\uff08\u5916\u90e8\u73af\u5883\u3001\u6570\u636e\u73af\u5883\u53d1\u751f\u53d8\u5316\uff09</li> <li>\u5b8c\u5584\u6027\u7ef4\u62a4\uff08\u6269\u5145\u529f\u80fd\uff0c\u6539\u5584\u6027\u80fd\uff09</li> <li>\u9884\u9632\u6027\u7ef4\u62a4\uff08\u4f8b\u4e13\u7528\u6539\u4e3a\u901a\u7528\uff0c\u9632\u6b62\u88ab\u6dd8\u6c70\uff09</li> </ul> <p></p>"},{"location":"src/cs/engineer/engineer/#57","title":"5.7 \u8f6f\u4ef6\u9879\u76ee\u7ba1\u7406","text":"<p>\u8f6f\u4ef6\u9879\u76ee\u7ba1\u7406\u7684\u4e3b\u8981\u5185\u5bb9</p> <p>\u5bf9\u4eba\u5458\u3001\u4ea7\u54c1\u3001\u8fc7\u7a0b\u3001\u9879\u76ee\u8fdb\u884c\u5206\u6790\u548c\u7ba1\u7406</p> <p>\u4ea7\u54c1\u9879\u76ee\u8303\u56f4</p> <p>\u4ea7\u54c1\u9879\u76ee\u8303\u56f4\u662f\u503c\u4fe1\u606f\u7cfb\u7edf\u4ea7\u54c1\u6216\u8005\u670d\u52a1\u6240\u5e94\u5305\u542b\u7684\u6240\u6709\u529f\u80fd\u548c\u7279\u6027</p> <p>\u9879\u76ee\u8303\u56f4</p> <p>\u9879\u76ee\u8303\u56f4\u662f\u751f\u4ea7\u9879\u76ee\u8ba1\u5212\u7684\u57fa\u7840</p> <p>\u9879\u76ee\u8303\u56f4\u7ba1\u7406\u4e2d\uff0c\u8303\u56f4\u5b9a\u4e49\u7684\u8f93\u5165</p> <ol> <li>\u9879\u76ee\u7ae0\u7a0b</li> <li>\u9879\u76ee\u8303\u56f4\u8bf4\u660e\u4e66</li> <li>\u7ec4\u7ec7\u8fc7\u7a0b\u8d44\u4ea7</li> <li>\u6279\u51c6\u7684\u53d8\u66f4\u7533\u8bf7</li> </ol> <p></p>"},{"location":"src/cs/engineer/engineer/#6","title":"6 \u6570\u636e\u5e93","text":"<p>\u6570\u636e\u6316\u6398\u7684\u65b9\u6cd5</p> <ul> <li>\u5173\u8054\u5206\u6790</li> <li>\u5e8f\u5217\u5206\u6790</li> <li>\u805a\u7c7b\u5206\u6790</li> <li>\u5206\u7c7b\u5206\u6790</li> <li>\u9884\u6d4b</li> <li>\u65f6\u95f4\u5e8f\u5217\u5206\u6790</li> </ul> <p></p> <ul> <li>\u5f02\u5e38\u5206\u6790</li> <li>\u7279\u5f02\u7fa4\u7ec4\u5206\u6790</li> <li>\u6f14\u53d8\u5206\u6790</li> </ul> <p></p>"},{"location":"src/cs/engineer/engineer/#7","title":"7 \u7cfb\u7edf\u67b6\u6784","text":""},{"location":"src/cs/engineer/engineer/#72","title":"7.2 \u57fa\u4e8e\u67b6\u6784\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u65b9\u6cd5","text":"<p>\u57fa\u4e8e\u4f53\u7cfb\u7ed3\u6784\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u65b9\u6cd5</p> <ul> <li>\u89c6\u89d2\u548c\u89c6\u56fe\u63cf\u8ff0\u8f6f\u4ef6\u67b6\u6784</li> <li>\u7528\u4f8b\u63cf\u8ff0\u529f\u80fd\u9700\u6c42</li> <li>\u8d28\u91cf\u573a\u666f\u63cf\u8ff0\u8d28\u91cf\u9700\u6c42</li> </ul> <p></p>"},{"location":"src/cs/engineer/engineer/#73","title":"7.3 \u67b6\u6784\u98ce\u683c","text":"<p>\u98ce\u683c</p> <p>\u4e00\u4e2a\u4f53\u7cfb\u7ed3\u6784\u5b9a\u4e49\u4e00\u4e2a\u8bcd\u6c47\u8868\u548c\u4e00\u7ec4\u7ea6\u675f\uff0c\u8bcd\u6c47\u8868\u4e2d\u5305\u542b\u4e00\u4e9b\u6784\u4ef6\u548c\u8fde\u63a5\u4ef6\u7c7b\u578b\uff0c\u7ea6\u675f\u6307\u51fa\u6784\u4ef6\u548c\u8fde\u63a5\u4ef6\u7684\u7ec4\u5408\u65b9\u5f0f\uff0c\u53cd\u5e94\u4e86\u4f17\u591a\u7cfb\u7edf\u6240\u5171\u6709\u7684\u7ed3\u6784\u548c\u8bed\u4e49\u7279\u6027</p> <p></p>"},{"location":"src/cs/engineer/engineer/#_2","title":"\u6570\u636e\u6d41\u4f53\u7cfb","text":"<p>\u6279\u5904\u7406</p> <p>\u4e00\u6b65\u4e00\u6b65\u7684\u8d70\u5b8c\u6574\u4e2a\u6d41\u7a0b</p> <p>\u6784\u4ef6\uff1a\u72ec\u7acb\u7684\u5e94\u7528\u7a0b\u5e8f \u8fde\u63a5\u4ef6\uff1a\u6587\u4ef6</p> <p>\u7ba1\u9053-\u8fc7\u6ee4\u5668</p> <p>\u6570\u636e\u6d41\u7ecf\u8fc7\u4e00\u7cfb\u5217\u7684\u8fc7\u6ee4\u5668\uff0c\u6bcf\u4e2a\u8fc7\u6ee4\u5668\u90fd\u5bf9\u6570\u636e\u8fdb\u884c\u5904\u7406</p> <p>\u6784\u4ef6\uff1a\u8fc7\u6ee4\u5668 \u8fde\u63a5\u4ef6\uff1a\u7ba1\u9053</p> <p></p>"},{"location":"src/cs/engineer/engineer/#_3","title":"\u8c03\u7528/\u8fd4\u56de","text":"<p>\u4e3b\u7a0b\u5e8f/\u5b50\u7a0b\u5e8f</p> <p>\u9762\u5411\u5bf9\u8c61</p> <p>\u5c42\u6b21</p> <p>\u5ba2\u6237\u7aef/\u670d\u52a1\u5668</p> <p></p>"},{"location":"src/cs/engineer/engineer/#_4","title":"\u6570\u636e\u4e3a\u4e2d\u5fc3","text":"<p>\u4ed3\u5e93\u4f53\u7cfb</p> <p>\u9ed1\u677f\u4f53\u7cfb</p> <p>\u8bed\u97f3\u8bc6\u522b\u3001\u77e5\u8bc6\u63a8\u7406\u3001\u89e3\u7a7a\u95f4\u5927\u3001\u6c42\u89e3\u8fc7\u7a0b\u4e0d\u786e\u5b9a</p> <p></p>"},{"location":"src/cs/engineer/engineer/#_5","title":"\u865a\u62df\u673a","text":""},{"location":"src/cs/engineer/engineer/#_6","title":"\u72ec\u7acb\u6784\u4ef6","text":""},{"location":"src/cs/engineer/engineer/#8","title":"8 \u8d28\u91cf\u5c5e\u6027\u4e0e\u67b6\u6784\u8bc4\u4f30","text":"<p>\u673a\u5668\u6027\u80fd\u8bc4\u4ef7\u51c6\u786e\u5ea6</p> <ol> <li>\u771f\u5b9e\u7a0b\u5e8f</li> <li>\u6838\u5fc3\u7a0b\u5e8f</li> <li>\u5c0f\u578b\u57fa\u51c6\u7a0b\u5e8f</li> <li>\u5408\u6210\u57fa\u51c6\u7a0b\u5e8f\uff08\u4e3a\u4e86\u8986\u76d6\u9762\u5e7f\uff0c\u6240\u4ee5\u51c6\u786e\u5ea6\u964d\u4f4e\uff09</li> </ol>"},{"location":"src/cs/net/ethernet/","title":"Ethernet Protocol","text":""},{"location":"src/cs/net/ethernet/#_1","title":"\u662f\u4ec0\u4e48","text":"<ul> <li> <p>\u4ee5\u592a\u7f51\u534f\u8bae\uff08IEEE 802.3\uff09</p> </li> <li> <p>\u4f4d\u4e8e OSI \u6a21\u578b\u7684\u6570\u636e\u94fe\u8def\u5c42\uff08\u7b2c 2 \u5c42\uff09\u548c\u7269\u7406\u5c42\uff08\u7b2c 1 \u5c42\uff09</p> </li> <li> <p>\u5728 OSI \u6570\u636e\u94fe\u8def\u5c42 \u4e2d\uff0c\u5b9a\u4e49\u4e86\u5e27\u7684\u57fa\u672c\u7ed3\u6784\u3001MAC \u5730\u5740\u7b49\uff0c\u4ee5\u53ca\u5982\u4f55\u5728 \u540c\u4e00\u7f51\u7edc \u4e2d\u4f20\u8f93\u6570\u636e\u7b49</p> </li> <li> <p>\u5728 OSI \u7269\u7406\u5c42 \u4e2d\uff0c\u5b9a\u4e49\u4e86\u4f20\u8f93\u4ecb\u8d28\u548c\u63a5\u53e3\u6807\u51c6\uff0c\u5305\u62ec\u4ee5\u592a\u7f51\u7ebf\u7f06\u7684\u7c7b\u578b\u548c\u4f20\u8f93\u901f\u7387</p> </li> <li> <p>\u5e38\u89c1\u4e8e\u4ea4\u6362\u673a\uff0c\u7f51\u5361</p> </li> </ul>"},{"location":"src/cs/net/ethernet/#_2","title":"\u4e0d\u662f\u4ec0\u4e48","text":"<ul> <li> <p>\u4e0d\u662f Ethernet II framing\uff0c\u8fd9\u662f\u4e00\u4e2a\u5177\u4f53\u5e27\u683c\u5f0f\uff0cIEEE 802.3 \u7684\u5177\u4f53\u5b9e\u73b0</p> </li> <li> <p>\u4e0d\u662f Wi-Fi\uff08IEEE 802.11\uff09</p> <p>\u503c\u5f97\u4e00\u63d0\uff0cIEEE 802.11 \u89c4\u8303\u4e86\u65e0\u7ebf\u5c40\u57df\u7f51\u7684\u5177\u4f53\u5e27\u683c\u5f0f\uff0c\u8fd9\u4e0e IEEE 802.3 \u4e0d\u540c</p> </li> <li> <p>\u4e0d\u662f \u4e92\u8054\u7f51\u534f\u8bae\uff08IP\uff09</p> </li> </ul> <p></p>"},{"location":"src/cs/net/ethernet/#ethernet-ii-framing","title":"Ethernet II framing","text":"<p>\u53c2\u8003\uff1a\u4ee5\u592a\u7f51\u5e27</p>   | \u76ee\u6807 MAC \u5730\u5740 | \u6e90 MAC \u5730\u5740 | \u4ee5\u592a\u7c7b\u578b | \u6709\u6548\u8f7d\u8377 | \u5e27\u68c0\u9a8c\u5e8f\u5217 | |:-:|:-:|:-:|:-:|:-:| | 6 | 6 | 2 | 46-1500 | 4 |   <ul> <li> <p>\u76ee\u6807 MAC \u5730\u5740</p> <ul> <li>\u63a5\u6536\u5e27\u7684\u7f51\u7edc\u9002\u914d\u5668\u7684\u7269\u7406\u5730\u5740\uff0c6 \u4e2a\u5b57\u8282\uff0848 bit\uff09</li> <li>\u5f53\u63a5\u6536\u5230\u4e00\u4e2a\u4ee5\u592a\u5e27\u65f6\uff0c\u9996\u5148\u4f1a\u68c0\u67e5\u8be5\u5e27\u7684\u76ee\u7684\u5730\u5740\uff0c\u662f\u5426\u4e0e\u5f53\u524d\u9002\u914d\u5668\u7684\u7269\u7406\u5730\u5740\u76f8\u540c\uff0c\u76f8\u540c\uff0c\u8fdb\u4e00\u6b65\u5904\u7406\uff0c\u4e0d\u540c\uff0c\u76f4\u63a5\u4e22\u5f03</li> </ul> </li> <li> <p>\u6e90 MAC \u5730\u5740</p> <ul> <li>\u53d1\u9001\u5e27\u7684\u7f51\u7edc\u9002\u914d\u5668\u7684\u7269\u7406\u5730\u5740\uff0c6 \u4e2a\u5b57\u8282\uff0848 bit\uff09</li> </ul> </li> <li> <p>\u4ee5\u592a\u7c7b\u578b</p> <ul> <li>\u4e0a\u5c42\u534f\u8bae\u7684\u7c7b\u578b\uff0c2 \u4e2a\u5b57\u8282\uff0816 bit\uff09</li> <li> <p>\u7531\u4e8e\u4e0a\u5c42\u534f\u8bae\u4f17\u591a\uff0c\u6240\u4ee5\u5728\u5904\u7406\u6570\u636e\u7684\u65f6\u5019\u5fc5\u987b\u8bbe\u7f6e\u8be5\u5b57\u6bb5\uff0c\u6807\u8bc6\u6570\u636e\u4ea4\u4ed8\u54ea\u4e2a\u534f\u8bae\u5904\u7406</p> <p>\u5b57\u6bb5\u4e3a <code>0x0800</code> \u65f6\uff0c\u5c06\u6570\u636e\u4ea4\u4ed8\u7ed9 \u7f51\u7edc\u5c42\u7684 IP \u534f\u8bae</p> </li> <li> <p>\u5e38\u89c1\u4ee5\u592a\u7c7b\u578b</p> </li> </ul> </li> <li> <p>\u6709\u6548\u8f7d\u8377</p> <ul> <li>\u4ea4\u4ed8\u7ed9\u4e0a\u5c42\u7684\u6570\u636e\uff0c\u6700\u5c0f\u4e3a 46 \u5b57\u8282\uff08\u4e0d\u8db3\u586b\u5145\uff09\uff0c\u6700\u5927\u4e3a 1500 \u5b57\u8282\uff0c\u6700\u5927\u503c\u4e5f\u53eb\u6700\u5927\u4f20\u8f93\u5355\u5143\uff08MTU\uff09</li> </ul> </li> <li> <p>\u5e27\u68c0\u9a8c\u5e8f\u5217 </p> <ul> <li>FCS\uff0c\u68c0\u6d4b\u8be5\u5e27\u662f\u5426\u51fa\u73b0\u5dee\u9519\uff0c4 \u4e2a\u5b57\u8282\uff0832 bit\uff09</li> <li>\u53d1\u9001\u65b9\u8ba1\u7b97\u5e27\u7684 \u5faa\u73af\u5197\u4f59\u7801\u6821\u9a8c\uff08CRC\uff09\uff0c\u628a\u8fd9\u4e2a\u503c\u5199\u5230 FCS \u91cc\uff0c\u63a5\u6536\u65b9\u91cd\u65b0\u8ba1\u7b97 CRC\uff0c\u5982\u679c\u4e24\u4e2a\u503c\u4e0d\u76f8\u540c\uff0c\u5219\u8868\u793a\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u53d1\u751f\u4e86\u6570\u636e\u4e22\u5931\u6216\u6539\u53d8\uff0c\u6b64\u65f6\uff0c\u9700\u8981\u91cd\u65b0\u4f20\u8f93\u8fd9\u4e00\u5e27     &gt; \u7f51\u5361\u5728\u6821\u9a8c\u6b63\u786e\u540e\uff0c\u4f1a\u4e22\u5f03 FCS</li> </ul> </li> </ul>"},{"location":"src/cs/net/ipv4/","title":"Internet Protocol","text":""},{"location":"src/cs/net/ipv4/#_1","title":"\u662f\u4ec0\u4e48","text":"<ul> <li>\u4e92\u8054\u7f51\u534f\u8bae\uff0c\u63d0\u4f9b\u4e0d\u53ef\u9760\u7684\u3001\u65e0\u8fde\u63a5\u7684\u3001\u5c3d\u529b\u800c\u4e3a\u7684\u6570\u636e\u62a5\u4f20\u8f93\u670d\u52a1</li> </ul>"},{"location":"src/cs/net/ipv4/#_2","title":"\u4e0d\u662f\u4ec0\u4e48","text":""},{"location":"src/cs/net/ipv4/#internet-protocol-version-4","title":"Internet Protocol version 4","text":"<p>\u53c2\u8003\uff1aIP \u62a5\u6587</p>"},{"location":"src/cs/net/mtu/","title":"Maximum Transmission Unit","text":"<p>\u53c2\u8003\uff1a</p> <ul> <li> <p>\u534e\u4e3a\uff1a\u4ec0\u4e48\u662f MTU</p> </li> <li> <p>\u9510\u6377\uff1aMTU \u662f\u4ec0\u4e48</p> </li> <li> <p>cloudflare\uff1a\u4ec0\u4e48\u662f MTU</p> </li> </ul> <p>MTU \u5b9a\u4e49\u5e76\u4e0d\u552f\u4e00\uff0c\u6211\u4e2a\u4eba\u503e\u5411\u4e8e IP MTU\uff0c\u5373 \u4ee5\u592a\u7f51\u5e27 \u4e2d\u7684\u6709\u6548\u8f7d\u8377</p> <p>\u4e0b\u6587\u6240\u6709\u7684 MTU == IP MTU\uff0c\u5355\u4f4d\u5747\u4e3a byte\uff088 bit\uff09</p> <p></p>"},{"location":"src/cs/net/mtu/#1480","title":"1480","text":"<p>\u4e2d\u95f4\u6709\u4e00\u4e2a PPPoE\uff0c\u636e\u8bf4\u8fd8\u4f1a\u51fa\u73b0\u4e8c\u6b21\u62e8\u53f7</p>   | \u76ee\u6807 MAC  | \u6e90 MAC  | \u4ee5\u592a\u7c7b\u578b | PPPoE | \u4e8c\u6b21\u62e8\u53f7 | MTU | \u5e27\u68c0\u9a8c\u5e8f\u5217 | |:-:|:-:|:-:|:-:|:-:|:-:|:-:| | 6 | 6 | 2 | **8** | **12** | **1480** | 4 |  \u4ee5\u592a\u7f51\u5e27\uff1a1518   <p></p>"},{"location":"src/cs/net/mtu/#1492","title":"1492","text":"<p>\u4e2d\u95f4\u6709\u4e00\u4e2a PPPoE\uff0c\u5176\u4ecb\u4e8e\u4ee5\u592a\u7f51\u548c IP \u4e4b\u95f4\uff0c\u5927\u5c0f\u4e3a 8</p>   | \u76ee\u6807 MAC  | \u6e90 MAC  | \u4ee5\u592a\u7c7b\u578b | PPPoE | MTU | \u5e27\u68c0\u9a8c\u5e8f\u5217 | |:-:|:-:|:-:|:-:|:-:|:-:| | 6 | 6 | 2 | **8** | **1492** | 4 |  \u4ee5\u592a\u7f51\u5e27\uff1a1518   <p></p>"},{"location":"src/cs/net/mtu/#1500","title":"1500","text":"<p>\u6700\u6b63\u5e38\u7684 MTU\uff0c\u5982\u679c\u90fd\u8fd9\u6837\u5b9a\u662f\u6781\u597d\u7684</p>   | \u76ee\u6807 MAC  | \u6e90 MAC  | \u4ee5\u592a\u7c7b\u578b | MTU | \u5e27\u68c0\u9a8c\u5e8f\u5217 | |:-:|:-:|:-:|:-:|:-:| | 6 | 6 | 2 | **1500** | 4 |  \u4ee5\u592a\u7f51\u5e27\uff1a1518   <p></p>"},{"location":"src/cs/net/mtu/#1518","title":"1518","text":"<p>\u4ee5\u592a\u7f51\u5e27\u7684\u5927\u5c0f\u4e3a 1518\uff0cMTU \u4ecd\u7136\u4e3a 1500</p>"},{"location":"src/cs/net/tcp/","title":"Transmission Control Protocol","text":""},{"location":"src/cs/net/%E5%86%B2%E6%B5%AA/","title":"\u51b2\u6d6a","text":""},{"location":"src/cs/net/%E5%86%B2%E6%B5%AA/#_1","title":"\u53c2\u8003","text":"<ul> <li>\u534e\u4e3a IP \u77e5\u8bc6\u767e\u79d1</li> <li>\u534e\u4e3a IP \u62a5\u6587\u683c\u5f0f\u5927\u5168</li> <li>cloudflare \u5b66\u4e60\u4e2d\u5fc3</li> </ul>"},{"location":"src/cs/net/%E5%86%B2%E6%B5%AA/#as","title":"AS\u53f7\u7801","text":"<p><code>curl https://raw.githubusercontent.com/zhucaidan/mtr_trace/main/mtr_trace.sh|bash  # \u68c0\u6d4b\u670d\u52a1\u5668\u56de\u7a0b\u811a\u672c</code></p> <p>\u7535\u4fe1</p> <ul> <li> <p><code>AS4809</code> <code>59.43.x.x</code> <code>CN2</code> \u4e2d\u56fd\u7535\u4fe1\u4e0b\u4e00\u4ee3\u627f\u8f7d\u7f51</p> <ul> <li> <p>\ud83d\udc4d <code>CN2 GIA</code> \u5168\u7a0b\u8d70 <code>CN2</code></p> </li> <li> <p><code>CN2 GT</code> \u53ea\u6709\u51fa\u53e3\u8d70 <code>CN2</code></p> </li> </ul> </li> <li> <p><code>AS4134</code> <code>202.97.x.x</code> 163 \u9aa8\u5e72\u7f51</p> </li> </ul> <p>\u8054\u901a</p> <ul> <li> <p>\ud83d\udc4d <code>AS9929</code> <code>CU PM</code> \u8054\u901aA\u7f51</p> </li> <li> <p><code>AS10099</code> \u51fa\u53e3\u8d70\u8fd9\u6761</p> </li> <li> <p><code>AS4837</code> <code>CU VIP</code> 169 \u7f51</p> </li> </ul>"},{"location":"src/cs/net/%E5%86%B2%E6%B5%AA/#_2","title":"\u5404\u79cd\u7f51\u7edc","text":"<ul> <li> <p>LAN\uff08\u5c40\u57df\u7f51\uff09</p> <ul> <li> <p>\u4ee5\u592a\u7f51\uff08Ethernet\uff0c802.3\uff09\u534f\u8bae\u662f\u6709\u7ebf LAN \u7684\u6807\u51c6</p> </li> <li> <p>\u592a\u725b\u903c\u4e86\uff0c\u51e0\u4e4e\u53d6\u4ee3\u4e86\u6240\u6709\u6709\u7ebf\u5c40\u57df\u7f51\u6807\u51c6</p> </li> </ul> </li> <li> <p>WAN\uff08\u5e7f\u57df\u7f51\uff09</p> <ul> <li>\u563b\u563b</li> </ul> </li> <li> <p>MAN\uff08\u57ce\u57df\u7f51\uff09</p> <ul> <li>\u563b\u563b</li> </ul> </li> </ul> <p></p> <ul> <li> <p>WLAN\uff08\u65e0\u7ebf\u5c40\u57df\u7f51\uff09</p> <ul> <li> <p>Wi-Fi \u662f\u57fa\u4e8e 802.11 \u6807\u51c6\u7684\u65e0\u7ebf\u7f51\u7edc\u6280\u672f\uff0c\u5e7f\u6cdb\u7528\u4e8e\u5b9e\u73b0 WLAN</p> </li> <li> <p>\u4e0d\u540c\u7684 Wi-Fi \u534f\u8bae\u548c\u6570\u636e\u901f\u7387</p> </li> </ul> </li> <li> <p>WWAN\uff08\u65e0\u7ebf\u5e7f\u57df\u7f51\uff09</p> <ul> <li>\u5982 5G\uff08NR\uff09\u4e0e 4G\uff08LTE\uff09 </li> </ul> </li> <li> <p>WPAN\uff08\u65e0\u7ebf\u4e2a\u57df\u7f51\uff09</p> <ul> <li>\u5982\u84dd\u7259\uff08\u4e4b\u524d 802.15.1\uff09 </li> </ul> </li> </ul>"},{"location":"src/cs/os/os/","title":"OS","text":""},{"location":"src/cs/os/os/#_1","title":"\u53c2\u8003","text":""},{"location":"src/cs/os/os/#_2","title":"\u8fdb\u7a0b","text":""},{"location":"src/cs/os/os/#ipc","title":"IPC","text":""},{"location":"src/cs/os/os/#_3","title":"\u7ba1\u9053","text":""},{"location":"src/cs/os/os/#share-memory","title":"\u5171\u4eab\u5185\u5b58 Share Memory","text":"<ol> <li> <p>\u5728\u7269\u7406\u5185\u5b58\u4e2d\u76f4\u63a5\u5f00\u8f9f\u4e00\u7247\u7a7a\u95f4</p> </li> <li> <p>\u5c06\u7a7a\u95f4\u6620\u5c04\u5230\u5404\u4e2a\u8fdb\u7a0b\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u7684\u5171\u4eab\u533a</p> </li> <li> <p>\u8fdb\u7a0b\u901a\u8fc7\u865a\u62df\u5730\u5740\u76f4\u63a5\u5bf9\u5171\u4eab\u5185\u5b58\u8fdb\u884c\u64cd\u4f5c</p> </li> </ol> C<pre><code>// write.c\n#include &lt;errno.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;sys/mman.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;unistd.h&gt;\n\n#define MAXSIZE 1024 * 4  // \u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u7684\u5927\u5c0f\uff0c\u7528\u4e8e\u6620\u5c04\n\nint main() {\n    // \u521b\u5efa\u4e00\u4e2a\u5171\u4eab\u5185\u5b58\u5bf9\u8c61 /dev/shm\n    // __name: \u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u7684\u540d\u79f0\uff0c\u5728 /dev/shm \u76ee\u5f55\u4e0b\n    // __oflag: \u6253\u5f00\u6a21\u5f0f: \u4e0d\u5b58\u5728\u5c31\u521b\u5efa | \u5b58\u5728\u5c31\u6e05\u7a7a | \u8bfb\u5199\n    // __mode: \u6743\u9650\n    int fd = shm_open(\"shm.test\", O_CREAT | O_TRUNC | O_RDWR, 0664);\n    if (fd == -1) {\n        fprintf(stderr, \"shm_open failed: %s\\n\", strerror(errno));\n        return -1;\n    }\n\n    // \u8c03\u6574\u5927\u5c0f\n    if (ftruncate(fd, MAXSIZE) == -1) {\n        fprintf(stderr, \"ftruncate failed: %s\\n\", strerror(errno));\n        return -1;\n    }\n\n    // \u5efa\u7acb\u6620\u5c04\u5173\u7cfb\n    // __addr: \u6620\u5c04\u8d77\u59cb\u5730\u5740\uff0cNULL \u8868\u793a\u7531\u7cfb\u7edf\u51b3\u5b9a\n    // __len: \u6620\u5c04\u957f\u5ea6\n    // __prot: \u8bbf\u95ee\u6743\u9650: \u53ef\u8bfb | \u53ef\u5199\n    // __flags: \u6807\u5fd7\u4f4d: \u591a\u4e2a\u8fdb\u7a0b\u5171\u4eab\n    // __fd: \u6587\u4ef6\u63cf\u8ff0\u7b26\n    // __offset: \u504f\u79fb\u91cf\n    char* ptr =\n        (char*)mmap(NULL, MAXSIZE, PROT_READ | PROT_WRITE, MAP_SHARED, fd, 0);\n    if (ptr == MAP_FAILED) {\n        fprintf(stderr, \"mmap failed: %s\\n\", strerror(errno));\n        return -1;\n    }\n\n    // \u5173\u95ed\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u6620\u5c04\u5173\u7cfb\u4e0d\u4f1a\u88ab\u5220\u9664\n    // \u76f4\u5230\u6240\u6709\u8fdb\u7a0b\u90fd\u89e3\u9664\u6620\u5c04\u6216\u8fdb\u7a0b\u7ec8\u6b62\n    close(fd);\n\n    // \u5199\u5165\u6570\u636e\n    char data_buf = '0';\n    char* data = &amp;data_buf;  // \u4f7f\u7528\u6307\u9488\u6307\u5411\u5b57\u7b26\u53d8\u91cf\n    while (1) {\n        printf(\"writing %c\\n\", *data);\n        *ptr = *data;  // \u5199\u5165\u6570\u636e\u5230\u5171\u4eab\u5185\u5b58\n        (*data)++;\n        sleep(1);\n    }\n\n    return 0;\n}\n</code></pre> C<pre><code>// read.c\n#include &lt;errno.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;sys/mman.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;unistd.h&gt;\n\nint main() {\n    // \u521b\u5efa\u4e00\u4e2a\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\n    int fd = shm_open(\"shm.test\", O_RDONLY, 0);\n    if (fd == -1) {\n        fprintf(stderr, \"shm_open failed: %s\\n\", strerror(errno));\n        return -1;  // \u6253\u5f00\u5171\u4eab\u5185\u5b58\u5931\u8d25\n    }\n\n    // \u83b7\u53d6\u5171\u4eab\u5185\u5b58\u7684\u5c5e\u6027\n    struct stat buf;\n    int ret = fstat(fd, &amp;buf);\n    if (ret == -1) {\n        fprintf(stderr, \"fstat failed: %s\\n\", strerror(errno));\n        return -1;  // \u83b7\u53d6\u5171\u4eab\u5185\u5b58\u5c5e\u6027\u5931\u8d25\n    }\n\n    // \u5efa\u7acb\u6620\u5c04\u5173\u7cfb\n    char* ptr = (char*)mmap(NULL, buf.st_size, PROT_READ, MAP_SHARED, fd, 0);\n    if (ptr == MAP_FAILED) {\n        fprintf(stderr, \"mmap failed: %s\\n\", strerror(errno));\n        return -1;  // \u6620\u5c04\u5931\u8d25\n    }\n\n    // \u5173\u95ed\u6587\u4ef6\u63cf\u8ff0\u7b26\n    close(fd);\n\n    while (1) {\n        printf(\"reading %c\\n\", *ptr);  // \u8bfb\u53d6\u5171\u4eab\u5185\u5b58\u4e2d\u7684\u6570\u636e\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"src/cs/os/os/#message-queue","title":"\u6d88\u606f\u961f\u5217 Message Queue","text":"<p>\u6d88\u606f\u961f\u5217\u72ec\u7acb\u4e8e\u53d1\u9001\u548c\u63a5\u6536\u8fdb\u7a0b\u800c\u5b58\u5728\uff0c</p> <ol> <li> <p>\u521b\u5efa\u6d88\u606f\u961f\u5217</p> </li> <li> <p>\u5411\u6d88\u606f\u961f\u5217\u53d1\u9001/\u63a5\u6536\u6d88\u606f</p> </li> </ol> C<pre><code>// sender.c\n#include &lt;errno.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;mqueue.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;unistd.h&gt;\n\nint main(int argc, char** argv) {\n    // \u521b\u5efa\u6d88\u606f\u961f\u5217\n    // __name: \u6d88\u606f\u961f\u5217\u7684\u540d\u79f0\uff0c\u5fc5\u987b\u4ee5 / \u5f00\u5934\uff0c\u4fdd\u5b58\u5728 /dev/mqueue \u76ee\u5f55\u4e0b\n    // __oflag: \u6253\u5f00\u6807\u5fd7\uff0cO_WRONLY \u8868\u793a\u53ea\u5199\uff0cO_CREAT \u8868\u793a\u5982\u679c\u4e0d\u5b58\u5728\u5219\u521b\u5efa\n    mqd_t mq = mq_open(\"/t-mq\", O_WRONLY | O_CREAT);\n    if (mq == -1) {\n        fprintf(stderr, \"mq_open failed: %s\\n\", strerror(errno));\n        return -1;\n    }\n\n    // \u53d1\u9001\u7684\u6d88\u606f\u5185\u5bb9\n    char* data;\n    *data = '0';\n\n    // \u5411\u6d88\u606f\u961f\u5217\u53d1\u9001\u6d88\u606f\n    while (1) {\n        int mq_status = mq_send(mq, data, sizeof(char), 0);\n        if (mq_status == -1) {\n            fprintf(stderr, \"mq_send failed: %s\\n\", strerror(errno));\n            return -1;\n        }\n        (*data)++;\n        sleep(1);  // \u6bcf\u9694\u4e00\u79d2\u53d1\u9001\u4e00\u6b21\u6d88\u606f\n    }\n\n    return 0;\n}\n</code></pre> C<pre><code>// receiver.c\n#include &lt;errno.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;mqueue.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;unistd.h&gt;\n\nint main(int argc, char** argv) {\n    // \u6253\u5f00\u6d88\u606f\u961f\u5217\n    mqd_t mq = mq_open(\"/t-mq\", O_RDONLY);\n    if (mq == -1) {\n        fprintf(stderr, \"mq_open failed: %s\\n\", strerror(errno));\n        return -1;\n    }\n\n    // \u83b7\u53d6\u6d88\u606f\u961f\u5217\u5c5e\u6027\n    struct mq_attr attr;\n    if (mq_getattr(mq, &amp;attr) == -1) {\n        fprintf(stderr, \"mq_getattr failed: %s\\n\", strerror(errno));\n        return -1;\n    }\n\n    // \u5206\u914d\u5185\u5b58\u5b58\u50a8\u6d88\u606f\u5185\u5bb9\n    // attr.mq_msgsize \u662f\u6d88\u606f\u961f\u5217\u4e2d\u6bcf\u4e2a\u6d88\u606f\u7684\u6700\u5927\u957f\u5ea6\n    // \u63a5\u6536\u6d88\u606f\u7684\u7f13\u51b2\u533a\u5927\u5c0f\u5e94\u8be5\u81f3\u5c11\u4e3a attr.mq_msgsize \u5b57\u8282\n    char* data = (char*)malloc(attr.mq_msgsize);  // \u5206\u914d\u5185\u5b58\u5b58\u50a8\u5b57\u7b26\u6570\u636e\n    if (data == NULL) {\n        fprintf(stderr, \"malloc failed: %s\\n\", strerror(errno));\n        mq_close(mq);\n        return -1;\n    }\n\n    // \u4ece\u6d88\u606f\u961f\u5217\u4e2d\u63a5\u6536\u6d88\u606f\n    while (1) {\n        ssize_t bytes_received = mq_receive(mq, data, attr.mq_msgsize, NULL);\n        if (bytes_received == -1) {\n            fprintf(stderr, \"mq_receive failed: %s\\n\", strerror(errno));\n            return -1;\n        }\n        printf(\"Received message: %s\\n\", data);  // \u6253\u5370\u63a5\u6536\u5230\u7684\u6d88\u606f\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"src/cs/os/os/#_4","title":"\u672c\u5730\u5957\u63a5\u5b57","text":""},{"location":"src/cs/os/os/#_5","title":"\u7ebf\u7a0b","text":""},{"location":"src/cs/os/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/","title":"\u64cd\u4f5c\u7cfb\u7edf\u7ed3\u6784","text":"<p>\u5168\u6587\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206\uff1a</p> <ol> <li>Linux \u5e38\u7528\u64cd\u4f5c</li> <li>\u9ed1\u4e66\u7684\u5b9e\u9a8c\u9898</li> <li>\u64cd\u4f5c\u7cfb\u7edf\u7684\u7b14\u8bb0 / \u738b\u9053\u4e60\u9898</li> </ol> <p>\u4e66\u7c4d\u53c2\u8003\uff1a</p> <ul> <li>\u300a\u64cd\u4f5c\u7cfb\u7edf\u6982\u5ff5/\u539f\u4e66\u7b2c10\u7248\u300b\u673a\u68b0\u5de5\u4e1a\u51fa\u7248\u793e</li> <li>\u300a\u64cd\u4f5c\u7cfb\u7edf \u738b\u90532025\u300b</li> </ul> <p>\u7f16\u7a0b\u73af\u5883\uff1a</p> <ul> <li><code>Ubuntu 22.04 LTS</code></li> <li><code>gcc 11.4.0</code></li> </ul> <p>\u6e90\u7801\u53c2\u8003\uff1a</p> <ul> <li>osc10e</li> <li>[\u6b64\u6587\u6e90\u7801]</li> </ul>"},{"location":"src/cs/os/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/#_1","title":"\u7f16\u7a0b\u9898","text":""},{"location":"src/cs/os/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/#224","title":"2.24","text":"C++<pre><code>// FileCopy.cpp\n#include &lt;fcntl.h&gt;  // open\n#include &lt;unistd.h&gt; // read write\n#include &lt;string.h&gt; // memset\n#include &lt;iostream&gt; // std::cerr\n\nint main(int argc, char *argv[]) {\n    if(argc != 3){\n        std::cerr &lt;&lt; \"\u8bf7\u8f93\u5165\u6e90\u6587\u4ef6\u548c\u76ee\u6807\u6587\u4ef6\u7684\u540d\u79f0\" &lt;&lt; std::endl;\n        return 1;\n    }\n\n    // \u4ee5\u53ea\u8bfb\u7684\u65b9\u5f0f\u6253\u5f00\n    int fd1 = open(argv[1], O_RDONLY);\n    if(fd1 == -1){\n        std::cerr &lt;&lt; \"\u6253\u5f00\u6e90\u6587\u4ef6\u5931\u8d25\" &lt;&lt; std::endl;\n        return 1;\n    }\n\n    // \u4ee5\u53ea\u5199\u7684\u65b9\u5f0f\u6253\u5f00\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u521b\u5efa\uff0c\u5982\u679c\u5b58\u5728\u5219\u6e05\u7a7a\uff0c\u6743\u9650\u4e3a 666\n    int fd2 = open(argv[2], O_WRONLY | O_CREAT | O_TRUNC, 0666);\n    if(fd2 == -1){\n        std::cerr &lt;&lt; \"\u6253\u5f00\u76ee\u6807\u6587\u4ef6\u5931\u8d25\" &lt;&lt; std::endl;\n        return 1;\n    }\n\n    char buffer[64];\n    while(true){\n        memset(buffer, '\\0', sizeof buffer);\n        int len = read(fd1, buffer, sizeof buffer);\n\n        if(len == -1){\n            std::cerr &lt;&lt; \"\u8bfb\u53d6\u6587\u4ef6\u5931\u8d25\" &lt;&lt; std::endl;\n            return 1;\n        }\n\n        if(len == 0) break;\n\n        if(write(fd2, buffer, len) == -1){\n            std::cerr &lt;&lt; \"\u5199\u5165\u6587\u4ef6\u5931\u8d25\" &lt;&lt; std::endl;\n            return 1;\n        }\n    };\n\n    return 0;\n}\n</code></pre> <ul> <li>\u53ef\u4ee5\u901a\u8fc7 <code>man open</code>\uff0c<code>man read</code> \u7b49\u547d\u4ee4\u67e5\u770b\u51fd\u6570\u7684\u4f7f\u7528\u65b9\u6cd5</li> </ul> <p>\u8fd0\u884c\uff1a</p> <ol> <li>\u7f16\u8bd1\u6e90\u6587\u4ef6 <code>g++ FileCopy.cpp -o FileCopy</code></li> <li>\u8fd0\u884c <code>./FileCopy FileCopy.cpp FileCopy.cpp.bak</code></li> <li>\u67e5\u770b\u6587\u4ef6 <code>cat FileCopy.cpp.bak</code><ul> <li>\u4e0e <code>FileCopy.cpp</code> \u4e00\u81f4</li> </ul> </li> <li>\u4f7f\u7528\u7cfb\u7edf\u8c03\u7528\u8ddf\u8e2a\u5de5\u5177 <code>strace ./FileCopy FileCopy.cpp FileCopy.cpp.bak</code><ul> <li>\u53ef\u4ee5\u770b\u5230\u7cfb\u7edf\u8c03\u7528\u7684\u8be6\u7ec6\u4fe1\u606f</li> </ul> </li> </ol> <p></p>"},{"location":"src/cs/os/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/#_2","title":"\u7f16\u7a0b\u9879\u76ee","text":""},{"location":"src/cs/os/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/#217","title":"2.17","text":"<p>\u52a0\u8f7d\u4e0e\u5378\u8f7d\u5185\u6838\u6a21\u5757</p> <p>\u8fdb\u5165 <code>ch2</code> \u76ee\u5f55</p> <p>\u6211\u5c06 <code>simple.c</code> \u4e2d\u7684 <code>printk</code> \u7684\u8f93\u51fa\u5206\u522b\u6539\u4e3a <code>\u5185\u6838\u52a0\u8f7d</code>\uff0c<code>\u5185\u6838\u5378\u8f7d</code>\uff0c\u4ee5\u4fbf\u533a\u5206</p> <ol> <li> <p>\u7f16\u8bd1 <code>make</code></p> <ul> <li>\u751f\u6210 <code>simple.ko</code> \u5185\u6838\u6a21\u5757</li> </ul> </li> <li> <p>\u52a0\u8f7d\u5185\u6838\u6a21\u5757 <code>sudo insmod simple.ko</code></p> <ul> <li>\u67e5\u770b\u5185\u6838\u6a21\u5757 <code>lsmod</code></li> <li>\u53ef\u4ee5\u770b\u5230 <code>simple</code> \u6a21\u5757</li> </ul> </li> <li> <p>\u67e5\u770b\u5185\u6838\u65e5\u5fd7\u7f13\u51b2\u533a <code>sudo dmesg</code></p> <ul> <li>\u53ef\u4ee5\u770b\u5230 <code>\u5185\u6838\u52a0\u8f7d</code></li> <li>\u5220\u9664\u5185\u6838\u65e5\u5fd7\u7f13\u51b2\u533a <code>sudo dmesg -c</code></li> </ul> </li> <li> <p>\u5378\u8f7d\u5185\u6838\u6a21\u5757 <code>sudo rmmod simple</code></p> <ul> <li>\u67e5\u770b\u5185\u6838\u6a21\u5757 <code>lsmod</code></li> <li>\u65e0 <code>simple</code> \u6a21\u5757</li> </ul> </li> <li> <p>\u67e5\u770b\u5185\u6838\u65e5\u5fd7\u7f13\u51b2\u533a <code>dmesg</code></p> <ul> <li>\u53ef\u4ee5\u770b\u5230 <code>\u5185\u6838\u5378\u8f7d</code></li> </ul> </li> </ol> <p></p> <p>\u8f93\u51fa\u5185\u6838\u6a21\u5757\u4ece\u52a0\u8f7d\u5230\u5378\u8f7d\u7684\u65f6\u95f4</p> C++<pre><code>// simple.c\n#include &lt;linux/init.h&gt;\n#include &lt;linux/module.h&gt;\n#include &lt;linux/kernel.h&gt;\n\n#include &lt;linux/jiffies.h&gt;\nunsigned long cnt=0;\n\n/* This function is called when the module is loaded. */\nstatic int simple_init(void)\n{\n       cnt = jiffies;\n       printk(KERN_INFO \"\u52a0\u8f7d\u5185\u6838:%lu %d\\n\", cnt, HZ);\n       return 0;\n}\n\n/* This function is called when the module is removed. */\nstatic void simple_exit(void) {\n        cnt = (jiffies-cnt)/HZ;\n        printk(KERN_INFO \"\u5378\u8f7d\u5185\u6838:%lu\\n\", cnt);\n}\n\n/* Macros for registering module entry and exit points. */\nmodule_init( simple_init );\nmodule_exit( simple_exit );\n\nMODULE_LICENSE(\"GPL\");\nMODULE_DESCRIPTION(\"Simple Module\");\nMODULE_AUTHOR(\"SGG\");\n</code></pre> <p></p>"},{"location":"src/cs/os/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/#217-1","title":"2.17 - 1","text":""},{"location":"src/cs/os/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/#217-2","title":"2.17 - 2","text":""},{"location":"src/cs/systemArchitecture/systemArchitecture/","title":"\u7cfb\u7edf\u67b6\u6784","text":"<p>\u67b6\u6784\u4e3a\u9053\uff0c\u6a21\u5f0f\u4e3a\u672f\u3002</p> <p>\u8bbe\u8ba1\u6a21\u5f0f\u662f\u786e\u5b9a\u67b6\u6784\u4e0b\u7684\u6700\u4f73\u5b9e\u8df5\u3002</p> <p>\u63a8\u8350\u9605\u8bfb\uff1a\u6280\u672f\u67b6\u6784\u6db5\u76d6\u5185\u5bb9\u548c\u6f14\u53d8\u8fc7\u7a0b\u603b\u7ed3</p> <p></p>"},{"location":"src/cs/systemArchitecture/systemArchitecture/#_1","title":"\u5355\u4f53\u67b6\u6784","text":"<p>\u6211\u4eec\u4ee5\u6700\u559c\u95fb\u4e50\u89c1\u7684\u300axx\u7ba1\u7406\u7cfb\u7edf\u300b\u4e3a\u4f8b\uff0c\u6765\u4ecb\u7ecd\u5355\u4f53\u67b6\u6784\uff0c\u9996\u5148\u660e\u786e\u4e00\u4e0b\u5355\u4f53\u67b6\u6784\u7684\u7279\u70b9\uff1a</p> <ul> <li>\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5305\u542b\uff1a\u7528\u6237\u754c\u9762\u3001\u4e1a\u52a1\u903b\u8f91\u3001\u6587\u4ef6\u5b58\u50a8\uff1b</li> <li>\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u90e8\u7f72\u5728\u4e00\u4e2a\u5e94\u7528\u670d\u52a1\u5668\u4e0a\uff1b</li> </ul> <p>\u4f8b\uff1a \u6211\u5728\u7ba1\u7406\u7cfb\u7edf\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u7528\u6237\uff0c\u90a3\u4e48\u6211\u5c31\u4f1a\u5728 \u7528\u6237\u754c\u9762 \u4e2d\u70b9\u51fb\u6dfb\u52a0\u7528\u6237\u6309\u94ae\uff0c\u7528\u6237\u754c\u9762 \u5c31\u4f1a\u53d1\u9001\u4e00\u4e2a\u8bf7\u6c42\u7ed9 \u4e1a\u52a1\u903b\u8f91\uff0c\u4e1a\u52a1\u903b\u8f91 \u5c31\u4f1a\u89e3\u6790\u51fa\u6dfb\u52a0\u7528\u6237\u7684\u53c2\u6570\uff08\u59d3\u540d\uff0c\u5e74\u9f84\uff0c\u6027\u522b\uff09\uff0c\u7136\u540e\u8bf7\u6c42 \u6587\u4ef6\u5b58\u50a8\uff08<code>openfile write</code>\uff09\uff0c\u4e1a\u52a1\u903b\u8f91 \u83b7\u53d6\u63d2\u5165\u7ed3\u679c\uff0c\u518d\u5c06\u7ed3\u679c\u4ea4\u7ed9 \u7528\u6237\u754c\u9762 \u5c55\u793a\u3002</p> <p></p> <p>\u5f88\u5bb9\u6613\u53d1\u73b0\uff0c\u5355\u4f53\u67b6\u6784\u7684\u7f3a\u70b9\uff1a</p> <ul> <li>\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5305\u542b\u4e86\u6240\u6709\u7684\u529f\u80fd\uff0c\u6240\u4ee5\u5e94\u7528\u7a0b\u5e8f\u4f1a\u53d8\u5f97\u8d8a\u6765\u8d8a\u5927\uff1b</li> <li>\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u90e8\u7f72\u5728\u4e00\u4e2a\u5e94\u7528\u670d\u52a1\u5668\u4e0a\uff0c\u6240\u4ee5\u5e94\u7528\u7a0b\u5e8f\u7684\u5e76\u53d1\u80fd\u529b\u6709\u9650\uff1b</li> </ul> <p></p>"},{"location":"src/cs/systemArchitecture/systemArchitecture/#_2","title":"\u4e09\u5c42\u67b6\u6784","text":"<p>\u5206\u5c42\u67b6\u6784\u662f\u5c06\u5e94\u7528\u7a0b\u5e8f\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u903b\u8f91\u5c42\uff0c\u6bcf\u4e2a\u5c42\u6b21\u90fd\u5efa\u7acb\u5728\u524d\u4e00\u5c42\u7684\u57fa\u7840\u4e0a\uff1a</p> <ul> <li>\u6bcf\u4e00\u5c42\u90fd\u6709\u81ea\u5df1\u7684\u804c\u8d23\u548c\u4efb\u52a1\uff1b</li> <li>\u6bcf\u4e00\u5c42\u90fd\u53ef\u4ee5\u72ec\u7acb\u5f00\u53d1\u548c\u6d4b\u8bd5\uff1b</li> <li>\u6bcf\u4e00\u5c42\u90fd\u53ef\u4ee5\u88ab\u66ff\u6362\u3002</li> </ul> <p>\u4e09\u5c42\uff1a</p> <ul> <li>\u7528\u6237\u754c\u9762\u5c42\uff08Presentation Layer\uff09\uff1a\u8d1f\u8d23\u5411\u7528\u6237\u663e\u793a\u4fe1\u606f\u548c\u89e3\u91ca\u7528\u6237\u547d\u4ee4\uff08\u5c06\u7528\u6237\u7684\u547d\u4ee4\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7528\u7a0b\u5e8f\u7684\u8bf7\u6c42\uff09\uff1b</li> <li>\u4e1a\u52a1\u903b\u8f91\u5c42\uff08Business Logic Layer\uff09\uff1a\u8d1f\u8d23\u5904\u7406\u5e94\u7528\u7a0b\u5e8f\u7684\u4e1a\u52a1\u903b\u8f91\uff1b</li> <li>\u6570\u636e\u8bbf\u95ee\u5c42\uff08Data Access Layer\uff09\uff1a\u8d1f\u8d23\u8bbf\u95ee\u6570\u636e\u5e93\u6216\u8005\u6587\u4ef6\u7cfb\u7edf\u7b49\u7b49\u3002</li> </ul> <p>\u4f8b\uff1a \u6211\u5728\u7ba1\u7406\u7cfb\u7edf\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u7528\u6237\uff0c\u90a3\u4e48\u6211\u5c31\u4f1a\u5728 \u7528\u6237\u754c\u9762\u5c42 \u4e2d\u70b9\u51fb\u6dfb\u52a0\u7528\u6237\u6309\u94ae\u3002 \u6ce8\u610f\uff01 \u6b64\u65f6\u7684 \u7528\u6237\u754c\u9762\u5c42 \u662f\u4e00\u4e2a\u5355\u72ec\u7684\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u662f\u6d4f\u89c8\u5668\u3001\u5b89\u5353\u5e94\u7528\u3001\u82f9\u679c\u5e94\u7528\u3001\u7535\u8111\u5e94\u7528\u3002 \u7528\u6237\u754c\u9762\u5c42 \u4e2d\u4e0d\u540c\u7684\u8f6f\u4ef6\uff0c\u5bf9\u4e8e\u540c\u4e00\u4e2a\u64cd\u4f5c\uff0c\u5c06\u4f1a\u53d1\u51fa\u540c\u4e00\u79cd\u8bf7\u6c42\u5230 \u4e1a\u52a1\u903b\u8f91\u5c42\u3002</p> <p>\u4e1a\u52a1\u903b\u8f91\u5c42 \u5c31\u4f1a\u89e3\u6790\u51fa\u6dfb\u52a0\u7528\u6237\u7684\u53c2\u6570\uff08\u59d3\u540d\uff0c\u5e74\u9f84\uff0c\u6027\u522b\uff09\uff0c\u7136\u540e\u8bf7\u6c42 \u6570\u636e\u8bbf\u95ee\u5c42\u3002</p> <p>\u5982\u679c \u6570\u636e\u8bbf\u95ee\u5c42 \u7684\u670d\u52a1\u662f\u7531 MySQL \u63d0\u4f9b\u7684\uff0c\u90a3\u4e48 \u6570\u636e\u8bbf\u95ee\u5c42 \u5c31\u4f1a\u5c06\u8bf7\u6c42\u8f6c\u6362\u4e3a <code>insert into users (name, age)</code>\uff0c\u7136\u540e\u8bf7\u6c42 MySQL\u3002 </p> <p>\u6570\u636e\u8bbf\u95ee\u5c42 \u83b7\u53d6\u8bf7\u6c42\u7ed3\u679c\uff0c\u518d\u5c06\u7ed3\u679c\u4ea4\u7ed9 \u4e1a\u52a1\u903b\u8f91\u5c42\uff0c\u4e1a\u52a1\u903b\u8f91\u5c42 \u83b7\u53d6\u63d2\u5165\u7ed3\u679c\uff0c\u518d\u5c06\u7ed3\u679c\u4ea4\u7ed9 \u7528\u6237\u754c\u9762\u5c42 \u5c55\u793a\u3002</p> <p></p> <p></p>"},{"location":"src/cs/systemArchitecture/systemArchitecture/#soa","title":"SOA","text":"<p>\u9886\u57df\u9a71\u52a8\u8bbe\u8ba1\uff08DDD\uff09\uff0c\u5b83\u5f3a\u8c03\u8f6f\u4ef6\u5f00\u53d1\u5e94\u8be5\u4ee5\u4e1a\u52a1\u9700\u6c42\u4e3a\u6838\u5fc3\uff0c\u800c\u4e0d\u662f\u4ee5\u6280\u672f\u4e3a\u6838\u5fc3\u3002</p> <p></p>"},{"location":"src/cs/systemArchitecture/systemArchitecture/#_3","title":"\u5fae\u670d\u52a1\u67b6\u6784","text":""},{"location":"src/cs/systemArchitecture/systemArchitecture/#_4","title":"\u4e8b\u4ef6\u9a71\u52a8\u67b6\u6784","text":""},{"location":"src/dev/containerd/","title":"\ud83d\ude80 Containerd","text":""},{"location":"src/dev/containerd/#_1","title":"\u53c2\u8003","text":""},{"location":"src/dev/containerd/#containerd","title":"\u5b89\u88c5 containerd","text":"<p><code>apt</code> \u5b89\u88c5</p> Bash<pre><code>sudo apt install containerd\n</code></pre> <p>\u624b\u52a8\u5b89\u88c5</p> Bash<pre><code>wget https://github.com/containerd/containerd/releases/download/v2.0.0/containerd-2.0.0-linux-amd64.tar.gz\nsudo tar -C /usr/local -zxvf containerd-2.0.0-linux-amd64.tar.gz\nwget https://raw.githubusercontent.com/containerd/containerd/main/containerd.service\nsudo mkdir -p /usr/local/lib/systemd/system/\nsudo mv containerd.service /usr/local/lib/systemd/system/containerd.service\nsudo systemctl daemon-reload\nsudo systemctl enable --now containerd\n\nwget https://github.com/opencontainers/runc/releases/download/v1.2.1/runc.amd64\nsudo install -m 755 runc.amd64 /usr/local/sbin/runc\n\nwget https://github.com/containernetworking/plugins/releases/download/v1.6.0/cni-plugins-linux-amd64-v1.6.0.tgz\nsudo mkdir -p /opt/cni/bin\nsudo tar -C /opt/cni/bin -zxvf cni-plugins-linux-amd64-v1.6.0.tgz\n\nsudo systemctl enable containerd\n</code></pre>"},{"location":"src/dev/containerd/#_2","title":"\u5bb9\u5668","text":""},{"location":"src/dev/containerd/#_3","title":"\u67e5\u770b\u5bb9\u5668","text":"Bash<pre><code>sudo crictl ps\n</code></pre>"},{"location":"src/dev/coturn/","title":"\ud83d\udcaa\ud83c\udffb Coturn","text":"<p>github</p> <p>\u6d4b\u8bd5</p> <p>docker\u642d\u5efa</p>"},{"location":"src/dev/coturn/#stun","title":"STUN","text":"<ul> <li>Session Traversal Utilities for NAT\uff0c\u7528\u4e8e NAT \u7684\u4f1a\u8bdd\u7a7f\u8d8a\u534f\u8bae</li> <li>\u529f\u80fd: STUN \u534f\u8bae\u7528\u4e8e\u5e2e\u52a9\u5ba2\u6237\u7aef\u786e\u5b9a\u5176\u5728 NAT \u73af\u5883\u4e2d\u7684\u516c\u5171 IP \u5730\u5740\u548c\u7aef\u53e3\uff0c\u8fd9\u5bf9\u4e8e\u7a7f\u8d8a NAT \u6216\u9632\u706b\u5899\u5e76\u5efa\u7acb\u5bf9\u7b49\u8fde\u63a5\u662f\u5fc5\u8981\u7684</li> <li>\u539f\u7406: \u5ba2\u6237\u7aef\u5411 STUN \u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\uff0cSTUN \u670d\u52a1\u5668\u8fd4\u56de\u5ba2\u6237\u7aef\u7684\u516c\u5171 IP \u5730\u5740\u548c\u7aef\u53e3\u3002\u5ba2\u6237\u7aef\u7136\u540e\u4f7f\u7528\u8fd9\u4e9b\u4fe1\u606f\u4e0e\u5176\u4ed6\u5ba2\u6237\u7aef\u5efa\u7acb\u8fde\u63a5</li> </ul>"},{"location":"src/dev/coturn/#turn","title":"TURN","text":"<ul> <li>Traversal Using Relays around NAT\uff0c\u4f7f\u7528\u4e2d\u7ee7\u670d\u52a1\u5668\u7ed5\u8fc7 NAT</li> <li>\u529f\u80fd: TURN \u534f\u8bae\u5728 STUN \u65e0\u6cd5\u76f4\u63a5\u5efa\u7acb\u5bf9\u7b49\u8fde\u63a5\u65f6\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e2d\u7ee7\u670d\u52a1\uff0c\u5b83\u5141\u8bb8\u5ba2\u6237\u7aef\u5c06\u5176\u6570\u636e\u901a\u8fc7 TURN \u670d\u52a1\u5668\u4e2d\u7ee7\u5230\u5176\u4ed6\u5ba2\u6237\u7aef\uff0c\u4ece\u800c\u907f\u514d NAT \u6216\u9632\u706b\u5899\u963b\u585e</li> <li>\u539f\u7406: \u5ba2\u6237\u7aef\u8fde\u63a5\u5230 TURN \u670d\u52a1\u5668\uff0cTURN \u670d\u52a1\u5668\u5206\u914d\u4e00\u4e2a\u516c\u5171 IP \u5730\u5740\u548c\u7aef\u53e3\uff0c\u5ba2\u6237\u7aef\u5c06\u6570\u636e\u53d1\u9001\u5230 TURN \u670d\u52a1\u5668\uff0cTURN \u670d\u52a1\u5668\u518d\u5c06\u6570\u636e\u8f6c\u53d1\u5230\u76ee\u6807\u5ba2\u6237\u7aef</li> </ul> <p>\u7b80\u5355\u6765\u8bf4\uff0cSTUN \u662f\u7528\u6765\u5e2e\u52a9\u53d1\u73b0\u548c\u914d\u7f6e NAT \u73af\u5883\u7684\uff0c\u800c TURN \u5219\u662f\u5728 STUN \u65e0\u6cd5\u5efa\u7acb\u76f4\u63a5\u8fde\u63a5\u65f6\u63d0\u4f9b\u6570\u636e\u4e2d\u7ee7\u670d\u52a1</p>"},{"location":"src/dev/ddns/","title":"\ud83d\udcaa\ud83c\udffb DDNS","text":"noip \u7ba1\u7406\u9762\u677f \u2502 \u5b98\u65b9\u6587\u6863 \u2502  Linux IPv6 \u4f7f\u7528\u65b9\u6cd5 <ol> <li> \u4e0b\u8f7d </li> <li> \u89e3\u538b <code>tar -zxvf noip*.tar.gz</code> </li> <li> \u5b89\u88c5 <code>cd binaries &amp;&amp; apt install ./noip-duc_3.0.0-beta.5_amd64.deb</code> </li> <li> \u8fd0\u884c noip-duc --username \u8d26\u53f7 --password \u5bc6\u7801 -g \u57df\u540d --ip-method http://ip1.dynupdate6.no-ip.com/<code></code> </li> </ol>"},{"location":"src/dev/docker/","title":"\ud83d\ude80 Docker","text":""},{"location":"src/dev/docker/#_1","title":"\u53c2\u8003","text":"<ul> <li>docker manuals</li> </ul>"},{"location":"src/dev/docker/#_2","title":"\u5f15\u5b50","text":"<p>Virtual Machines </p> <ul> <li>\u66f4\u5f3a\u7684\u9694\u79bb\u6027\uff1a\u5728\u786c\u4ef6\u5c42\u9762\u4e0a\u5b9e\u73b0\u865a\u62df\u5316</li> <li>\u6587\u4ef6\u7279\u6027\uff1a\u786c\u76d8\u6587\u4ef6\u3001\u5feb\u7167\u90fd\u662f\u6587\u4ef6\uff0c\u53ef\u4ee5\u6301\u4e45\u5316</li> </ul> <p>Docker</p> <ul> <li>\u8f7b\u91cf\u5316\uff1a\u5728\u64cd\u4f5c\u7cfb\u7edf\u5c42\u9762\u4e0a\u5b9e\u73b0\u865a\u62df\u5316</li> <li>\u5206\u5e03\u5f0f\uff1a\u53ef\u4ee5\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\u8fd0\u884c\u591a\u4e2a\u5bb9\u5668\uff0c\u6bcf\u4e2a\u5bb9\u5668\u4e4b\u95f4\u76f8\u4e92\u9694\u79bb</li> <li>\u65e0\u72b6\u6001\uff1a\u5bb9\u5668\u6bcf\u6b21\u521b\u5efa\u90fd\u662f\u5168\u65b0\u7684\uff0c\u5bb9\u5668\u5185\u7684\u8fdb\u7a0b\u4e5f\u662f\u5168\u65b0\u7684\uff0c\u5bb9\u5668\u5185\u7684\u5185\u5bb9\u4e0d\u53ef\u6301\u4e45\u5316</li> </ul> <p></p>"},{"location":"src/dev/docker/#install-docker","title":"Install Docker","text":"<ol> <li> <p>\u4f7f\u7528 apt \u5b89\u88c5 docker engine</p> </li> <li> <p>\u5b89\u88c5\u5e76\u914d\u7f6e NVIDIA CTK</p> </li> <li> <p>\u9a8c\u8bc1</p> Bash<pre><code>sudo docker run --rm --gpus all nvidia/cuda:12.3.0-base-ubuntu22.04 nvidia-smi\n</code></pre> </li> </ol> <p></p>"},{"location":"src/dev/docker/#image","title":"\u955c\u50cf IMAGE","text":"<p>\u662f\u4e00\u4e2a\u53ea\u8bfb\u6a21\u677f\uff0c\u7528\u6765\u521b\u5efa\u5bb9\u5668\uff0c\u7c7b\u4f3c\u4e8e\uff1a</p> <ul> <li>\u9762\u5411\u5bf9\u8c61\u4e2d\u7684\u7c7b\uff0c\u5bb9\u5668\u662f\u5bf9\u8c61</li> <li>\u865a\u62df\u673a\u4e2d\u7684 <code>.iso</code>\uff0c\u5bb9\u5668\u662f\u865a\u62df\u673a</li> </ul>"},{"location":"src/dev/docker/#_3","title":"\u4e0b\u8f7d\u955c\u50cf","text":"<p>Docker Hub</p> Bash<pre><code>sudo docker pull IMAGE_NAME[:TAG]\n</code></pre> <ul> <li><code>IMAGE_NAME</code> \u955c\u50cf\u540d\u79f0</li> <li><code>TAG</code> \u53ef\u9009\uff0c\u955c\u50cf\u7248\u672c\u6216\u6807\u7b7e\uff0c\u9ed8\u8ba4\u4e3a <code>latest</code></li> </ul> <p>\u4ee3\u7406\u52a0\u901f\uff08\u53c2\u8003\u6587\u6863\uff09:</p> <ul> <li> <p><code>sudo mkdir -p /etc/systemd/system/docker.service.d</code></p> </li> <li> <p><code>sudo vim /etc/systemd/system/docker.service.d/http-proxy.conf</code></p> Bash<pre><code>[Service]\nEnvironment=\"HTTP_PROXY=http://127.0.0.1:7897\"\nEnvironment=\"HTTPS_PROXY=http://127.0.0.1:7897\"\n</code></pre> </li> <li> <p><code>sudo systemctl daemon-reload &amp;&amp; sudo systemctl restart docker</code></p> </li> <li> <p><code>sudo systemctl show --property=Environment docker</code></p> </li> </ul>"},{"location":"src/dev/docker/#_4","title":"\u67e5\u770b\u955c\u50cf","text":"Bash<pre><code>sudo docker images\n</code></pre> <ul> <li><code>REPOSITORY</code> \u955c\u50cf\u540d\u79f0</li> <li><code>TAG</code> \u955c\u50cf\u7248\u672c\u6216\u6807\u7b7e</li> <li><code>IMAGE ID</code> \u955c\u50cf ID\uff1a\u552f\u4e00\u6807\u8bc6</li> <li><code>CREATED</code> \u521b\u5efa\u65f6\u95f4</li> <li><code>SIZE</code> \u955c\u50cf\u5927\u5c0f</li> </ul>"},{"location":"src/dev/docker/#_5","title":"\u5220\u9664\u955c\u50cf","text":"Bash<pre><code>sudo docker rmi IMAGE_NAME[:TAG]\n</code></pre>"},{"location":"src/dev/docker/#_6","title":"\u5bfc\u51fa\u955c\u50cf","text":"Bash<pre><code>sudo docker image save -o \u955c\u50cf.tar \u955c\u50cf:tag\n</code></pre>"},{"location":"src/dev/docker/#_7","title":"\u5bfc\u5165\u955c\u50cf","text":"Bash<pre><code>sudo docker image load -i \u955c\u50cf.tar\n</code></pre>"},{"location":"src/dev/docker/#container","title":"\u5bb9\u5668 CONTAINER","text":""},{"location":"src/dev/docker/#_8","title":"\u67e5\u770b\u5bb9\u5668","text":"Bash<pre><code>sudo docker ps [-a]\n</code></pre>"},{"location":"src/dev/docker/#_9","title":"\u589e\u5220\u5bb9\u5668","text":"<p>\u5220\u9664\u5bb9\u5668</p> <ul> <li>\u5220\u9664\u5bb9\u5668\u524d\u9700\u8981\u5148\u505c\u6b62\u5bb9\u5668</li> </ul> Bash<pre><code>sudo docker rm [CONTAINER_ID]\n</code></pre> <ul> <li>\u5220\u9664\u6240\u6709\u5df2\u505c\u6b62\u5bb9\u5668</li> </ul> Bash<pre><code>sudo docker container prune\n</code></pre> <p>\u521b\u5efa\u5bb9\u5668</p> Bash<pre><code>docker run [OPTIONS] IMAGE [COMMAND] [ARG...]\n</code></pre> Bash<pre><code>docker run \\ \n    --name [c_name] \\           # \u5bb9\u5668\u540d\n    --rm \\                      # \u9000\u51fa\u65f6\u5220\u9664\u5bb9\u5668\n\n    -it \\                       # \u53f0\u524d\u8fd0\u884c\uff0c\u5bb9\u5668\u5728\u6ca1\u6709\u6307\u5b9a\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u8fdb\u7a0b\u65f6\u4f1a\u7acb\u5373\u9000\u51fa\n    -d, --detach \\              # \u540e\u53f0\u8fd0\u884c\n    --restart=unless-stopped \\  # \u975e\u624b\u52a8\u505c\u6b62\u81ea\u52a8\u91cd\u542f\n\n    --privileged \\              # root \u6743\u9650\n\n    --net=host \\                # \u4f7f\u7528\u4e3b\u673a\u7f51\u7edc\n    --ipc=host \\                # \u4f7f\u7528\u4e3b\u673a\u7684 IPC\n\n    -p 10086:80 \\               # \u4e3b\u673a 10086 &lt;- \u5bb9\u5668\u5185 80\n    -P \\                        # \u5bb9\u5668\u516c\u5f00\u7684\u6240\u6709\u7aef\u53e3\u968f\u673a\u6620\u5c04\u5230\u4e3b\u673a\u7684\u53ef\u7528\u7aef\u53e3\n\n    -v /host/path:/c/path \\     # \u6620\u5c04\u76ee\u5f55\n    -v /host/file:/c/file:ro \\  # \u6620\u5c04\u6587\u4ef6 [:ro] \u53ea\u8bfb\n\n    -w /c/path \\                # \u5de5\u4f5c\u76ee\u5f55\n\n    [image_name]                # \u955c\u50cf\u540d\n</code></pre>"},{"location":"src/dev/docker/#_10","title":"\u8fdb\u51fa\u5bb9\u5668","text":"<p>\u8fdb\u5165\u5bb9\u5668</p> Bash<pre><code>sudo docker exec -it [CONTAINER_ID] /bin/bash\n</code></pre> <p>\u6267\u884c\u547d\u4ee4</p> Bash<pre><code>sudo docker exec [CONTAINER_ID] [COMMAND] [ARG...]\n</code></pre> <p>\u9000\u51fa\u5bb9\u5668</p> Bash<pre><code>exit\n</code></pre>"},{"location":"src/dev/docker/#_11","title":"\u542f\u505c\u5bb9\u5668","text":"<p>\u91cd\u542f\u5bb9\u5668</p> Bash<pre><code>sudo docker restart [CONTAINER_ID]\n</code></pre> <p>\u542f\u52a8\u5bb9\u5668</p> Bash<pre><code>sudo docker start [CONTAINER_ID]\n</code></pre> <p>\u505c\u6b62\u5bb9\u5668</p> Bash<pre><code>sudo docker stop [CONTAINER_ID]\n</code></pre> <p></p>"},{"location":"src/dev/docker/#_12","title":"\u81ea\u5efa\u955c\u50cf","text":""},{"location":"src/dev/docker/#0","title":"0 \u51c6\u5907","text":"Text Only<pre><code>myapp/\n\u251c\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 go.mod\n\u251c\u2500\u2500 main.go\n\u2514\u2500\u2500 static/\n    \u2514\u2500\u2500 index.html\n</code></pre> code Bash<pre><code>go mod init web_server\n</code></pre> Go<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"net/http\"\n)\n\nfunc main() {\n    http.Handle(\"/\", http.FileServer(http.Dir(\"./static\")))\n    fmt.Println(\"Server is running on port 80...\")\n    http.ListenAndServe(\":80\", nil)\n}\n</code></pre> HTML<pre><code>hello docker\n</code></pre>"},{"location":"src/dev/docker/#1-dockerfile","title":"1 \u7f16\u5199 Dockerfile","text":"Docker<pre><code># \u7b2c\u4e00\u9636\u6bb5\uff1a\u6784\u5efa\u9636\u6bb5\nFROM golang AS builder\n# \u8bbe\u7f6e\u5de5\u4f5c\u76ee\u5f55\nWORKDIR /web_server\n\n# \u590d\u5236 go.mod \u548c go.sum \u6587\u4ef6\u5e76\u4e0b\u8f7d\u4f9d\u8d56\nCOPY go.mod go.sum ./\nRUN go mod download\n# \u590d\u5236\u6e90\u4ee3\u7801\nCOPY . .\n# \u7f16\u8bd1 Go \u4ee3\u7801\nRUN go build -o web_server .\n\n# \u7b2c\u4e8c\u9636\u6bb5\uff1a\u751f\u4ea7\u9636\u6bb5\nFROM ubuntu\n# \u8bbe\u7f6e\u5de5\u4f5c\u76ee\u5f55\nWORKDIR /root/\n\n# \u4ece\u6784\u5efa\u9636\u6bb5\u590d\u5236\u7f16\u8bd1\u597d\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\nCOPY --from=builder /web_server/web_server .\nCOPY --from=builder /web_server/static ./static\n\n# \u66b4\u9732\u7aef\u53e3\nEXPOSE 8080\n# \u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\nCMD [\"./web_server\"]\n</code></pre>"},{"location":"src/dev/docker/#2","title":"2 \u6784\u5efa\u955c\u50cf","text":"Bash<pre><code>sudo docker buildx build -t dxlcq/web_server .\n</code></pre> <ul> <li><code>-t</code> \u6307\u5b9a\u540d\u79f0</li> <li><code>.</code> \u5728\u5f53\u524d\u76ee\u5f55\u6784\u5efa</li> </ul>"},{"location":"src/dev/docker/#3-dockerhub","title":"3 \u63a8\u9001\u5230 dockerhub","text":"Bash<pre><code>sudo docker login\nsudo docker push dxlcq/web_server\n</code></pre>"},{"location":"src/dev/docker/#docker-compose","title":"docker compose","text":""},{"location":"src/dev/docker/#_13","title":"\ud83d\ude80 Docker","text":""},{"location":"src/dev/docker/#_14","title":"\u5e38\u7528\u547d\u4ee4","text":"<ul> <li> <p>\u542f\u52a8\u5bb9\u5668\u7ec4</p> Bash<pre><code>sudo docker compose up -d\n</code></pre> <ul> <li><code>-d</code> \u540e\u53f0\u8fd0\u884c</li> </ul> </li> <li> <p>\u505c\u6b62\u5bb9\u5668\u7ec4</p> Bash<pre><code>sudo docker compose down\n</code></pre> </li> <li> <p>\u67e5\u770b\u5bb9\u5668\u7ec4</p> Bash<pre><code>sudo docker compose ps\n</code></pre> </li> <li> <p>\u67e5\u770b\u65e5\u5fd7</p> Bash<pre><code>sudo docker compose logs -f\n</code></pre> <ul> <li><code>-f</code> \u5b9e\u65f6\u67e5\u770b</li> </ul> </li> </ul> <p></p>"},{"location":"src/dev/docker/#_15","title":"\u7f51\u7edc","text":""},{"location":"src/dev/docker/#_16","title":"\u67e5\u770b\u6240\u6709\u7684","text":""},{"location":"src/dev/frp/","title":"\ud83d\udcaa\ud83c\udffb FRP","text":"<p>frp + \u5185\u7f51 IPv4</p> \u5c0f\u9e21\u7a7f\u900f \u7ba1\u7406\u9762\u677f \u2502 \u5b98\u65b9\u6587\u6863 \u2502 \u56fa\u5b9aip\uff0c\u9ad8\u5e26\u5bbd\uff081.25MB/s\uff09\uff0c\u9ad8\u6d41\u91cf\uff085GB\uff09  <ol> <li> \u4e0b\u8f7d <code>wget https://chickfrp.com/download/frp045/linux/frp_0.45.0_linux_amd64.tar.gz</code> </li> <li> \u89e3\u538b <code>tar -zxvf frp*.tar.gz</code> </li> <li> \u590d\u5236 \u7ba1\u7406\u9762\u677f\u4e2d\u7684\u914d\u7f6e\u6587\u4ef6\u4ee3\u7801 </li> <li> \u66ff\u6362 <code>frpc.ini</code> \u6587\u4ef6 </li> <li> \u7a7f\u900f <code>./frpc</code> </li> </ol> cpolar \u7ba1\u7406\u9762\u677f \u2502 \u5b98\u65b9\u6587\u6863 \u2502 \u65e0\u56fa\u5b9aip\uff0c\u4f4e\u5e26\u5bbd\uff08128K/s\uff09\uff0c\u6d41\u91cf\u65e0\u9650  <ol> <li> \u5b89\u88c5 <code>curl -L https://www.cpolar.com/static/downloads/install-release-cpolar.sh \u2502 sudo bash</code> </li> <li> \u67e5\u770b <code>token</code> \u5728\u7ba1\u7406\u9762\u677f</li> <li> \u811a\u672c <code>vim /home/jiao/.cpolar/cpolar.yml</code> </li> YAML<pre><code>authtoken: xxxxxxxxxxxxxxxx\ntunnels:\n    a:         \n        addr: 80        \n        proto: http     \n    b:             \n        addr: 3001\n        proto: http\n</code></pre> <li> \u7a7f\u900f <code>sudo cpolar start-all -config /home/jiao/.cpolar/cpolar.yml</code> </li> </ol> \u82b1\u751f\u58f3 \u7ba1\u7406\u9762\u677f \u2502 \u5b98\u65b9\u6587\u6863 \u2502 \u4e24\u4e2a\u56fa\u5b9aip  <ol> <li> \u5b89\u88c5 <code>dpkg -i phddns-5.0.0-amd64.deb</code> </li> <li> \u8fd0\u884c <code>phddns start</code> </li> <li> \u67e5\u770b <code>phddns status</code> </li> <li> \u767b\u5f55 <code>sn\u7801</code> + <code>admin</code> \u767b\u5f55\u7ba1\u7406\u9762\u677f</li> <li> \u7a7f\u900f \u7ba1\u7406\u9762\u677f\u6dfb\u52a0\u6620\u5c04 </li> </ol>"},{"location":"src/dev/git/","title":"\ud83d\udcbb Git","text":""},{"location":"src/dev/git/#_1","title":"\u53c2\u8003","text":"<ul> <li> <p>\u5ed6\u96ea\u5cf0\u7684git\u6559\u7a0b</p> </li> <li> <p>License</p> </li> </ul> <p></p>"},{"location":"src/dev/git/#license","title":"License","text":""},{"location":"src/dev/git/#mit","title":"MIT","text":"<p><code>Massachusetts Institute of Technology License</code></p> <p>\u6211\u53ea\u60f3\u5b89\u5b89\u9759\u9759\u5199\u4ee3\u7801\uff0c\u4f60\u5e72\u561b\u90fd\u4e0e\u6211\u65e0\u5173</p> <ol> <li> <p>\u7248\u6743\u7533\u660e</p> <ul> <li>\u6587\u6863\u548c\u8f6f\u4ef6\u4e2d\u9700\u4fdd\u7559\u539f\u59cb\u7248\u6743\u4fe1\u606f</li> </ul> </li> <li> <p>\u514d\u8d23\u6761\u6b3e</p> <ul> <li>\u539f\u59cb\u4f5c\u8005\u5bf9\u8f6f\u4ef6\u4f7f\u7528\u5f15\u53d1\u7684\u4efb\u4f55\u635f\u5bb3\u4e0d\u8d1f\u8d23</li> </ul> </li> <li> <p>\u4f7f\u7528</p> <ul> <li>\u968f\u4fbf\u7528</li> </ul> </li> <li> <p>\u4fee\u6539</p> <ul> <li>\u968f\u4fbf\u6539</li> </ul> </li> <li> <p>\u518d\u5206\u53d1</p> <ul> <li>\u968f\u610f</li> </ul> </li> </ol> <p></p>"},{"location":"src/dev/git/#bsd","title":"BSD","text":"<p><code>Berkeley Software Distribution License</code></p> <p>\u6253\u5e7f\u544a\u7684\u65f6\u5019\uff0c\u522b\u8bf4\u4f60\u662f\u57fa\u4e8e\u6211\u7684\uff0c\u4e22\u8138</p> <ol> <li> <p>\u7248\u6743\u7533\u660e</p> <ul> <li>\u6587\u6863\u548c\u8f6f\u4ef6\u4e2d\u9700\u4fdd\u7559\u539f\u59cb\u7248\u6743\u4fe1\u606f</li> </ul> </li> <li> <p>\u514d\u8d23\u6761\u6b3e</p> <ul> <li>\u539f\u59cb\u4f5c\u8005\u5bf9\u8f6f\u4ef6\u4f7f\u7528\u5f15\u53d1\u7684\u4efb\u4f55\u635f\u5bb3\u4e0d\u8d1f\u8d23</li> </ul> </li> <li> <p>\u4f7f\u7528</p> <ul> <li>\u968f\u4fbf\u7528\uff0c\u4f46\u662f\u5ba3\u4f20\u8f6f\u4ef6\u7684\u65f6\u5019\uff0c\u4e0d\u8981\u5e26\u4e0a\u6211</li> </ul> </li> <li> <p>\u4fee\u6539</p> <ul> <li>\u968f\u4fbf\u6539</li> </ul> </li> <li> <p>\u518d\u5206\u53d1</p> <ul> <li>\u968f\u610f</li> </ul> </li> </ol> <p></p>"},{"location":"src/dev/git/#gpl","title":"GPL","text":"<p><code>GNU General Public License</code></p> <p>\u4e00\u65e5GPL\uff0c\u4e00\u751fGPL</p> <ol> <li> <p>\u7248\u6743\u7533\u660e</p> <ul> <li>\u6587\u6863\u548c\u8f6f\u4ef6\u4e2d\u9700\u4fdd\u7559\u539f\u59cb\u7248\u6743\u4fe1\u606f</li> </ul> </li> <li> <p>\u514d\u8d23\u6761\u6b3e</p> <ul> <li>\u539f\u59cb\u4f5c\u8005\u5bf9\u8f6f\u4ef6\u4f7f\u7528\u5f15\u53d1\u7684\u4efb\u4f55\u635f\u5bb3\u4e0d\u8d1f\u8d23</li> </ul> </li> <li> <p>\u4f7f\u7528</p> <ul> <li>\u968f\u4fbf\u7528</li> </ul> </li> <li> <p>\u4fee\u6539</p> <ul> <li>\u968f\u4fbf\u6539\uff0c\u4f46\u662f\u6539\u4e86\u4e4b\u540e\u7684\u4ee3\u7801\u4e0d\u80fd\u95ed\u6e90</li> </ul> </li> <li> <p>\u518d\u5206\u53d1</p> <ul> <li>\u4f9d\u65e7\u9075\u5faa GPL</li> </ul> </li> </ol> <p></p>"},{"location":"src/dev/git/#lgpl","title":"LGPL","text":"<p><code>GNU Lesser General Public License</code></p> <p>\u66f4\u7075\u6d3b\u7684GPL</p> <ul> <li> <p>\u5141\u8bb8\u52a8\u6001\u8fde\u63a5\u95ed\u6e90\u5e93</p> </li> <li> <p>\u867d\u7136\u7075\u6d3b\uff0c\u4f46\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u95ed\u6e90</p> </li> </ul> <p></p>"},{"location":"src/dev/git/#apache","title":"Apache","text":"<ol> <li> <p>\u7248\u6743\u7533\u660e</p> <ul> <li>\u6587\u6863\u548c\u8f6f\u4ef6\u4e2d\u9700\u4fdd\u7559\u539f\u59cb\u7248\u6743\u4fe1\u606f</li> </ul> </li> <li> <p>\u514d\u8d23\u6761\u6b3e</p> <ul> <li>\u539f\u59cb\u4f5c\u8005\u5bf9\u8f6f\u4ef6\u4f7f\u7528\u5f15\u53d1\u7684\u4efb\u4f55\u635f\u5bb3\u4e0d\u8d1f\u8d23</li> </ul> </li> <li> <p>\u4f7f\u7528</p> <ul> <li>\u968f\u4fbf\u7528</li> </ul> </li> <li> <p>\u4fee\u6539</p> <ul> <li>\u968f\u4fbf\u6539</li> </ul> </li> <li> <p>\u518d\u5206\u53d1</p> <ul> <li>\u4fee\u6539\u540e\u7684\u8f6f\u4ef6\uff0c\u5206\u53d1\u65f6\u9700\u8981\u5e26\u4e0a\u539f\u59cb\u7248\u6743\u4fe1\u606f</li> </ul> </li> </ol> <p></p>"},{"location":"src/dev/git/#_2","title":"\u5b89\u88c5","text":""},{"location":"src/dev/git/#linux","title":"Linux","text":"Bash<pre><code>sudo apt install git # \u5b89\u88c5 git\ngit --version        # \u9a8c\u8bc1 git \u5b89\u88c5\u6210\u529f\n</code></pre>"},{"location":"src/dev/git/#windows","title":"Windows","text":"<p>git \u5b98\u7f51</p> <p></p>"},{"location":"src/dev/git/#_3","title":"\u9996\u6b21\u4f7f\u7528","text":""},{"location":"src/dev/git/#_4","title":"\u521d\u59cb\u5316\u4ed3\u5e93","text":"<p>\u5728\u9700\u8981\u7ba1\u7406\u7684\u76ee\u5f55\uff08\u5de5\u4f5c\u533a\uff09\u4e0b\uff0c\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> Bash<pre><code>git init\n</code></pre> <p>\u5c06\u76ee\u6807\u76ee\u5f55\u521d\u59cb\u5316\u6210 git \u53ef\u4ee5\u7ba1\u7406\u7684\u4ed3\u5e93\uff0c\u4f1a\u751f\u6210\u4e00\u4e2a <code>.git</code> \u76ee\u5f55</p> <p>\u540c\u65f6\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a <code>master</code> \u5206\u652f\uff0c\u770b\u4e0d\u89c1\uff0c\u4f46\u662f\u5b58\u5728</p> <p></p>"},{"location":"src/dev/git/#_5","title":"\u8bbe\u7f6e\u540d\u5b57\u548c\u90ae\u7bb1","text":"<p>\u6b64\u64cd\u4f5c\u7684\u76ee\u7684\uff0c\u662f\u4e3a\u4e86\u8ffd\u8e2a\u6bcf\u6b21\u64cd\u4f5c\uff0c\u7a76\u7adf\u662f\u8c01\u505a\u7684\uff0c\u6211\u4eec\u4e00\u822c\u5c06\u5176\u5b58\u50a8\u5728 <code>config</code> \u4e2d\uff0c\u914d\u7f6e\u6587\u4ef6\u6709\u4e09\u4e2a\u7ea7\u522b\uff0c\u6743\u91cd\u4ece\u9ad8\u5230\u5e95\uff1a</p> <ol> <li> <p>\u4ed3\u5e93 <code>local</code>\uff0c\u6b64\u914d\u7f6e\u6587\u4ef6\u53ea\u5bf9 \u5f53\u524d\u4ed3\u5e93 \u6709\u6548</p> </li> <li> <p>\u5168\u5c40 <code>global</code>\uff0c\u6b64\u914d\u7f6e\u6587\u4ef6\u5bf9 \u5f53\u524d\u7528\u6237 \u6709\u6548</p> </li> <li> <p>\u7cfb\u7edf <code>system</code>\uff0c\u6b64\u914d\u7f6e\u6587\u4ef6\u5bf9 \u5168\u5c40 \u6709\u6548</p> </li> </ol> <p>\u6240\u5728\u4f4d\u7f6e\uff1a</p> <p>Windows\uff1a</p> <ol> <li> <p><code>local</code>\uff1a <code>.git/config</code></p> </li> <li> <p><code>global</code>\uff1a<code>C:\\Users\\username\\.gitconfig</code></p> </li> <li> <p><code>system</code>\uff1a<code>C:\\Program Files\\Git\\etc\\gitconfig</code></p> </li> </ol> <p>Linux\uff1a</p> <ol> <li> <p><code>local</code>\uff1a<code>.git/config</code> </p> </li> <li> <p><code>global</code>\uff1a<code>~/.gitconfig</code></p> </li> <li> <p><code>system</code>\uff1a<code>/etc/gitconfig</code></p> </li> </ol> <p></p>"},{"location":"src/dev/git/#_6","title":"\u6587\u4ef6\u8ffd\u8e2a / \u79fb\u52a8\u5230\u6682\u5b58\u533a","text":"Bash<pre><code>git add \u76ee\u6807\u6587\u4ef6\n</code></pre> <p>\u6216\u8005\u8ffd\u8e2a\u6240\u6709\u6587\u4ef6\uff1a</p> Bash<pre><code>git add .\n</code></pre> <p></p>"},{"location":"src/dev/git/#_7","title":"\u5c06\u6682\u5b58\u533a\u63d0\u4ea4\u5230\u672c\u5730\u4ed3\u5e93","text":"<p>\u76ee\u6807\u6587\u4ef6\u63d0\u4ea4\u5230\u672c\u5730\u4ed3\u5e93\u7684\u5f53\u524d\u5206\u652f\uff1a</p> Bash<pre><code>git commit -m \"\u63d0\u4ea4\u8bf4\u660e\"\n</code></pre> <p></p>"},{"location":"src/dev/git/#_8","title":"\u5c06\u672c\u5730\u4ed3\u5e93\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93","text":"<p>\u5c06\u672c\u5730\u4ed3\u5e93\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u9700\u8981\u4f7f\u7528 <code>SSH key</code> \u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\uff1b\u79c1\u94a5\u5b58\u50a8\u5728\u672c\u5730\uff0c\u516c\u94a5\u5b58\u50a8\u5728\u8fdc\u7a0b\u4ed3\u5e93\uff1b\u5f53\u4f60\u63a8\u9001\u7684\u65f6\u5019\uff0c\u8fdc\u7a0b\u4ed3\u5e93\u4f1a\u9a8c\u8bc1\u4f60\u7684\u8eab\u4efd\uff0c\u5982\u679c\u9a8c\u8bc1\u901a\u8fc7\uff0c\u5219\u53ef\u4ee5\u63a8\u9001</p> <ol> <li> <p>\u751f\u6210 <code>SSH key</code></p> <p>\u5728\u7ebf\u751f\u6210</p> </li> <li> <p>\u5c06\u516c\u94a5\u6dfb\u52a0\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff08github or gitee\uff09</p> <p>Windows\uff1a<code>C:\\Users\\username\\.ssh\\id_rsa.pub</code></p> <p>Linux\uff1a<code>~/.ssh/id_rsa.pub</code></p> <p>\u767b\u5f55\u8fdc\u7a0b\u4ed3\u5e93\uff0c<code>setting</code> -&gt; <code>SSH keys</code> -&gt; <code>New SSH key</code></p> <p><code>title</code>\uff1a\u586b\u5199\u516c\u94a5\u7684\u540d\u5b57</p> <p><code>key</code>\uff1a\u586b\u5199\u516c\u94a5\u7684\u5185\u5bb9</p> </li> <li> <p>\u5728\u8fdc\u7a0b\u4ed3\u5e93\u4e2d\u65b0\u5efa\u4ed3\u5e93</p> </li> <li> <p>\u6dfb\u52a0\u8fdc\u7a0b\u4ed3\u5e93</p> Bash<pre><code>git remote add origin \u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740\n</code></pre> <p><code>origin</code> \u662f\u8fdc\u7a0b\u4ed3\u5e93\u7684\u522b\u540d\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49</p> </li> <li> <p>\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93</p> Bash<pre><code>git push origin master\n</code></pre> <p>\u5982\u679c\u8fdc\u7a0b\u4ed3\u5e93\u6ca1\u6709 <code>master</code> \u5206\u652f\uff0c\u5219\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a <code>master</code> \u5206\u652f</p> </li> </ol> <p></p>"},{"location":"src/dev/git/#_9","title":"\u5c06\u8fdc\u7a0b\u4ed3\u5e93\u62c9\u53d6\u5230\u672c\u5730\u4ed3\u5e93","text":"<ul> <li> <p><code>git fetch origin</code></p> <p>\u4e0b\u8f7d\u4f46\u4e0d\u5408\u5e76</p> </li> <li> <p><code>git merge origin/master</code></p> <p>\u5408\u5e76\u5206\u652f</p> </li> <li> <p><code>git pull origin</code></p> <p>\u4e0b\u8f7d\u5e76\u5408\u5e76</p> </li> <li> <p><code>git clone \u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740</code></p> <p>\u5728\u672c\u5730\u521b\u5efa\u4e00\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\u7684\u514b\u9686\uff08\u526f\u672c\uff09</p> </li> </ul> <p></p>"},{"location":"src/dev/git/#123","title":"123","text":""},{"location":"src/dev/git/#_10","title":"\u521b\u5efa\u5206\u652f","text":"Bash<pre><code>git branch \u5206\u652f\u540d\n</code></pre>"},{"location":"src/dev/git/#_11","title":"\u8bbe\u7f6e\u9ed8\u8ba4\u7f16\u8f91\u5668","text":"Bash<pre><code>git config --local core.editor \"vim\"\n</code></pre>"},{"location":"src/dev/git/#_12","title":"\u67e5\u770b\u72b6\u6001","text":""},{"location":"src/dev/git/#_13","title":"\u4ed3\u5e93","text":"Bash<pre><code>git status\n</code></pre> <ul> <li> <p>\u663e\u793a\u4f4d\u4e8e\u54ea\u4e2a \u5206\u652f</p> </li> <li> <p>\u663e\u793a \u6682\u5b58\u533a \u7684\u4fe1\u606f</p> </li> <li> <p>\u663e\u793a \u672a\u8ddf\u8e2a \u7684\u6587\u4ef6</p> </li> </ul> <p></p>"},{"location":"src/dev/git/#_14","title":"\u8bbe\u7f6e","text":"Bash<pre><code>git config --\u7ea7\u522b -l\n</code></pre> <p><code>--\u7ea7\u522b</code> \u53ef\u4ee5\u7701\u7565\uff0c\u4f1a\u663e\u793a\u6700\u7ec8\u4e09\u4e2a\u914d\u7f6e\u6587\u4ef6\u8ba1\u7b97\u540e\u7684\u914d\u7f6e\u4fe1\u606f</p> <p></p>"},{"location":"src/dev/git/#_15","title":"\u6240\u6709\u5206\u652f","text":"Bash<pre><code>git branch\n</code></pre> <p><code>*</code> \u8868\u793a\u5f53\u524d\u5206\u652f</p> <p></p>"},{"location":"src/dev/git/#_16","title":"\u8fdc\u7a0b\u4ed3\u5e93","text":"Bash<pre><code>git remote -v\n</code></pre> <ul> <li>\u8fdc\u7a0b\u4ed3\u5e93\u7684\u522b\u540d\u548c\u5730\u5740</li> </ul>"},{"location":"src/dev/git/#_17","title":"\u67e5\u770b\u63d0\u4ea4\u5386\u53f2","text":"Bash<pre><code>git log\n</code></pre> <p>\u663e\u793a\u4ece\u6700\u8fd1\u5230\u6700\u8fdc\u7684\u63d0\u4ea4\u65e5\u5fd7</p> <p>\u7b80\u5316\u8f93\u51fa\uff1a<code>git log --pretty=oneline</code></p> <p></p>"},{"location":"src/dev/git/#_18","title":"\u67e5\u770b\u547d\u4ee4\u5386\u53f2","text":"Bash<pre><code>git reflog\n</code></pre> <p>\u663e\u793a\u4ece\u6700\u8fd1\u5230\u6700\u8fdc\u7684\u547d\u4ee4\u65e5\u5fd7</p> <p>\u53ef\u4ee5\u770b\u5230\u6bcf\u4e00\u6b21\u547d\u4ee4\u7684 <code>commit id</code></p> <p></p>"},{"location":"src/dev/git/#_19","title":"\u4fee\u6539","text":""},{"location":"src/dev/git/#_20","title":"\u66f4\u6539\u540d\u5b57\u548c\u90ae\u7bb1","text":"Bash<pre><code>git config --\u7ea7\u522b user.name \"\u65b0\u540d\u5b57\"\ngit config --\u7ea7\u522b user.email \"\u65b0\u90ae\u7bb1\"\n</code></pre>"},{"location":"src/dev/git/#_21","title":"\u4fee\u6539\u4e0a\u4e00\u6b21\u63d0\u4ea4\u7684\u4fe1\u606f","text":"Bash<pre><code>git commit --amend\n</code></pre> <p>\u5982\u679c\u4f7f\u7528\u7684\u662f <code>nano</code> \u7f16\u8f91\u5668\uff0c\u6309 <code>Ctrl + X</code> \u9000\u51fa\uff0c\u7136\u540e\u8f93\u5165 <code>Y</code> \u4fdd\u5b58\uff0c\u6700\u540e\u6309 <code>Enter</code> \u9000\u51fa</p> <p></p>"},{"location":"src/dev/git/#_22","title":"\u4ece\u6682\u5b58\u533a\u79fb\u9664\u6587\u4ef6","text":"Bash<pre><code>git reset \u76ee\u6807\u6587\u4ef6\n</code></pre> <p>\u8fd9\u4e2a\u547d\u4ee4\u672c\u8d28\u4e0a\u662f</p> Bash<pre><code>git reset --mixed commit_id\n</code></pre> <p>\u4ece\u6682\u5b58\u533a\u79fb\u9664\u6587\u4ef6\uff0c\u4f46\u662f\u4e0d\u4f1a\u5220\u9664\u6587\u4ef6</p> <p><code>commit_id</code> \u53ef\u4ee5\u7701\u7565\uff0c\u9ed8\u8ba4\u662f <code>HEAD</code></p> <p>\u610f\u601d\u662f\u5c06\u6682\u5b58\u533a\u7684\u6587\u4ef6\u6062\u590d\u5230 <code>commit_id</code> \u7684\u72b6\u6001</p> <p></p>"},{"location":"src/dev/git/#_23","title":"\u64a4\u9500\u672c\u6b21\u63d0\u4ea4","text":"<ol> <li> <p>\u4fdd\u7559\u5de5\u4f5c\u533a\u7684\u4fee\u6539     Bash<pre><code>git reset --soft HEAD^\n</code></pre>     &gt; \u64a4\u9500\u672c\u6b21\u63d0\u4ea4\uff0c\u4f46\u662f\u4fdd\u7559\u5de5\u4f5c\u533a\u7684\u4fee\u6539</p> <p><code>HEAD^</code> \u8868\u793a\u4e0a\u4e00\u6b21\u63d0\u4ea4\uff0c<code>HEAD^^</code> \u8868\u793a\u4e0a\u4e0a\u6b21\u63d0\u4ea4\uff0c\u4ee5\u6b64\u7c7b\u63a8</p> </li> <li> <p>\u5220\u9664\u5de5\u4f5c\u533a\u7684\u4fee\u6539</p> Bash<pre><code>git reset --hard HEAD^\n</code></pre> <p>\u64a4\u9500\u672c\u6b21\u63d0\u4ea4\uff0c\u540c\u65f6\u5220\u9664\u5de5\u4f5c\u533a\u7684\u4fee\u6539</p> </li> </ol> <p></p>"},{"location":"src/dev/git/#_24","title":"\u5220\u9664\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740","text":"Bash<pre><code>git remote rm origin\n</code></pre> <p>\u5220\u9664\u8fdc\u7a0b\u4ed3\u5e93\u7684\u522b\u540d\u4e3a <code>origin</code> \u7684\u4ed3\u5e93\uff08\u5730\u5740\uff09 \u4ec5\u4ec5\u662f\u5220\u9664\u4e86\u522b\u540d\uff0c\u8fdc\u7a0b\u4ed3\u5e93\u5e76\u6ca1\u6709\u88ab\u5220\u9664</p> <p> </p>"},{"location":"src/dev/git/#_25","title":"\u5207\u6362\u5206\u652f","text":"<ul> <li> <p>\u5207\u6362\u5230\u6307\u5b9a\u5206\u652f</p> Bash<pre><code>git checkout \u5206\u652f\u540d\n</code></pre> </li> </ul> <p> </p>"},{"location":"src/dev/git/#_26","title":"\u56fd\u533a\u64cd\u4f5c","text":""},{"location":"src/dev/git/#_27","title":"\u4ee3\u7406","text":"<p>\u8bbe\u7f6e\u4ee3\u7406</p> Text Only<pre><code>```shell\ngit config --local http.proxy http://192.168.19.19:7890\ngit config --local https.proxy http://192.168.19.19:7890\n```\n</code></pre> <ul> <li> <p>\u53d6\u6d88\u4ee3\u7406</p> Bash<pre><code>git config --local --unset http.proxy\ngit config --local --unset https.proxy\n</code></pre> </li> </ul>"},{"location":"src/dev/git/#_28","title":"\u540c\u65f6\u63a8\u9001\u5230\u591a\u4e2a\u8fdc\u7a0b\u4ed3\u5e93","text":"<ol> <li> <p>\u518d\u6dfb\u52a0\u4e00\u4e2a\u9700\u8981\u63a8\u9001\u7684\u8fdc\u7a0b\u4ed3\u5e93</p> Bash<pre><code>git remote set-url --add origin \u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740\n</code></pre> </li> <li> <p>\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93</p> Bash<pre><code>git push origin\n</code></pre> </li> </ol> <p>\u6ce8\u610f\uff0c\u6b64\u65b9\u6848\u53ea\u9002\u7528\u4e8e\u591a\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\u7684\u4ee3\u7801\u5b8c\u5168\u4e00\u81f4\u7684\u60c5\u51b5</p> <p>\u56e0\u4e3a\u6211\u4eec\u53ea\u662f\u7ed9 <code>origin</code> \u6dfb\u52a0\u4e86\u591a\u4e2a <code>URL</code></p> <p>\u867d\u7136\u6548\u679c\u4e0a\u770b\u8d77\u6765\u662f\u63a8\u9001\u5230\u4e86\u591a\u4e2a\u4ed3\u5e93\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u53ea\u662f\u63a8\u9001\u5230\u4e86\u4e00\u4e2a\u4ed3\u5e93</p>"},{"location":"src/dev/git/#gitee","title":"gitee \u8bb0\u4f4f\u8d26\u53f7\u5bc6\u7801","text":"Bash<pre><code>git config --local credential.helper store\n</code></pre>"},{"location":"src/dev/git/#gitignore","title":".gitignore","text":"<p>\u5ffd\u7565\u67d0\u4e9b\u6587\u4ef6\u548c\u76ee\u5f55</p>"},{"location":"src/dev/git/#_29","title":"\u5ffd\u7565\u6587\u4ef6\u6216\u76ee\u5f55","text":"Text Only<pre><code>a.txt\na/\n</code></pre>"},{"location":"src/dev/git/#_30","title":"\u5ffd\u7565\u67d0\u7c7b\u6587\u4ef6","text":"Text Only<pre><code>*.txt\n</code></pre>"},{"location":"src/dev/git/#_31","title":"\u4f8b\u5916\u89c4\u5219","text":"Text Only<pre><code>!a.txt\n</code></pre>"},{"location":"src/dev/grpc/","title":"\ud83d\udea1 gRPC","text":""},{"location":"src/dev/grpc/#_1","title":"\u53c2\u8003","text":"<ul> <li>grpc</li> </ul>"},{"location":"src/dev/grpc/#_2","title":"\ud83d\udea1 gRPC","text":""},{"location":"src/dev/kafka/","title":"\ud83d\udea1 Kafka","text":""},{"location":"src/dev/kafka/#_1","title":"\u53c2\u8003","text":"<ul> <li> <p>kafka \u5bb9\u5668</p> </li> <li> <p>kafka get started</p> </li> </ul> <p></p>"},{"location":"src/dev/kafka/#mq","title":"MQ","text":"<ul> <li>\u6d88\u606f\u961f\u5217\uff0c\u7a0b\u5e8f\u95f4\u901a\u4fe1\u7684\u4e00\u79cd\u65b9\u5f0f</li> </ul>"},{"location":"src/dev/kafka/#why","title":"why","text":"<ul> <li> <p>\u89e3\u8026</p> </li> <li> <p>\u5f02\u6b65</p> </li> <li> <p>\u524a\u5cf0</p> </li> </ul>"},{"location":"src/dev/kafka/#how","title":"how","text":""},{"location":"src/dev/kafka/#waht","title":"waht","text":""},{"location":"src/dev/kafka/#_2","title":"\u5b89\u88c5","text":"<ol> <li> <p>\u4f7f\u7528 docker \u542f\u52a8</p> Bash<pre><code>sudo docker run -d --rm -p 9092:9092 apache/kafka\n</code></pre> </li> <li> <p>\u521b\u5efa\u4e00\u4e2a\u4e3b\u9898</p> Bash<pre><code>sudo docker exec -it &lt;container_id&gt; /opt/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --create --topic test-topic\n</code></pre> </li> <li> <p>\u751f\u4ea7\u8005</p> Bash<pre><code>sudo docker exec -it &lt;container_id&gt; /opt/kafka/bin/kafka-console-producer.sh --bootstrap-server localhost:9092 --topic test-topic\n</code></pre> <p>\u8f93\u5165\u6d88\u606f\u540e\u6309 <code>Ctrl+C</code> \u7ed3\u675f</p> </li> <li> <p>\u6d88\u8d39\u8005</p> Bash<pre><code>sudo docker exec -it &lt;container_id&gt; /opt/kafka/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test-topic --from-beginning\n</code></pre> </li> </ol> <p></p>"},{"location":"src/dev/kafka/#c","title":"C++","text":"Docker<pre><code>FROM ubuntu:latest AS builder\n\nRUN apt update &amp;&amp; apt install -y \\\n    build-essential cmake pkg-config \\\n    librdkafka-dev libglib2.0-dev\n</code></pre> <p>\u751f\u6210\u955c\u50cf\uff1a</p> Bash<pre><code>sudo docker build -t dxlcq/kafka_builder_cpp .\n</code></pre> <p>\u7f16\u8bd1\uff1a</p> Bash<pre><code>sudo docker run --rm -v /kafka-c-getting-started:/kafka-c-getting-started -w /kafka-c-getting-started/build dxlcq/kafka_builder_cpp cmake ..\nsudo docker run --rm -v /kafka-c-getting-started:/kafka-c-getting-started -w /kafka-c-getting-started/build dxlcq/kafka_builder_cpp cmake --build .\n</code></pre> <p>\u6d88\u8d39\u8005\uff1a</p> Bash<pre><code>sudo docker run --rm --net=host -v /kafka-c-getting-started:/kafka-c-getting-started -w /kafka-c-getting-started/build dxlcq/kafka_builder_cpp ./consumer\n</code></pre> <p>\u751f\u4ea7\u8005\uff1a</p> Bash<pre><code>sudo docker run --rm --net=host -v /kafka-c-getting-started:/kafka-c-getting-started -w /kafka-c-getting-started/build dxlcq/kafka_builder_cpp ./producer\n</code></pre>"},{"location":"src/dev/kubernetes/","title":"\ud83d\ude80 Kubernetes","text":""},{"location":"src/dev/kubernetes/#_1","title":"\u53c2\u8003","text":"<ul> <li> <p>Kubernetes\u4e00\u5c0f\u65f6\u8f7b\u677e\u5165\u95e8</p> </li> <li> <p>Kubernetes \u8fdb\u9636\u8bad\u7ec3\u8425(\u7b2c3\u671f)</p> </li> <li> <p>Kubernetes \u57fa\u7840\u6559\u7a0b</p> </li> <li> <p>Kubernetes \u4e2d\u6587\u793e\u533a</p> </li> <li> <p>Kubernetes \u5b98\u65b9\u6559\u7a0b</p> </li> <li> <p>k8s 1.29 \u6559\u7a0b</p> </li> </ul> <ul> <li> <p>k8s scheduler-plugins</p> </li> <li> <p>\u8c03\u5ea6\u6846\u67b6</p> </li> <li> <p>\u8c03\u5ea6\u5668\u914d\u7f6e</p> </li> <li> <p>\u914d\u7f6e\u591a\u4e2a\u8c03\u5ea6\u5668</p> </li> <li> <p>k8s \u8c03\u5ea6\u5668\u5f00\u53d1\u6559\u7a0b</p> </li> <li> <p>\u540c\u4e0a</p> </li> <li> <p>\u540c\u4e0a</p> </li> </ul> <p></p>"},{"location":"src/dev/kubernetes/#getting-started","title":"Getting Started","text":"<p><code>sudo su</code></p> <ol> <li> <p>\u7981\u7528\u4ea4\u6362\u7a7a\u95f4\uff0c\u4ee5\u63d0\u9ad8\u6027\u80fd\uff0c\u542f\u7528 IPv4 \u8f6c\u53d1\uff0c\u4ee5\u4fbf <code>kubeadm</code> \u53ef\u4ee5\u6b63\u786e\u7684\u914d\u7f6e <code>iptables</code> \u94fe</p> Bash<pre><code># \u5728 /etc/fstab \u6587\u4ef6\u4e2d\u67e5\u627e\u6240\u6709\u5305\u542b swap \u7684\u884c\uff0c\u5c06\u8fd9\u4e9b\u884c\u6ce8\u91ca\u6389\uff0c\u7136\u540e\u5173\u95ed\u4ea4\u6362\u7a7a\u95f4\nsed -i '/\\bswap\\b/ s/^/#/' /etc/fstab\nswapoff -a\n# \u5728 /etc/sysctl.d/ \u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a k8s.conf \u6587\u4ef6\uff0c\u5199\u5165 net.ipv4.ip_forward = 1\ncat &lt;&lt;EOF | sudo tee /etc/sysctl.d/k8s.conf\nnet.ipv4.ip_forward = 1\nEOF\n# \u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\nsysctl --system\n# \u4ea4\u6362\u7a7a\u95f4\u6210\u529f\u5173\u95ed\u540e\uff0c\u5e94\u8be5\u662f 0\nfree -h\n# IP \u8f6c\u53d1\u542f\u7528\u6210\u529f\u540e\uff0c\u5e94\u8be5\u662f 1\nsysctl net.ipv4.ip_forward\n</code></pre> </li> <li> <p>\u5b89\u88c5\u5e76\u914d\u7f6e\u5bb9\u5668\u8fd0\u884c\u65f6</p> <ul> <li> <p>\u4f7f\u7528 Docker\uff0c\u6ce8\u610f\uff0c\u521d\u59cb\u5316\u548c\u52a0\u5165\u96c6\u7fa4\u65f6\uff0c\u90fd\u9700\u8981\u6307\u5b9a <code>--cri-socket=unix:///var/run/cri-dockerd.sock</code></p> Bash<pre><code># \u4e0b\u8f7d\u5bb9\u5668\u8fd0\u884c\u65f6\napt install docker.io unzip -y\n# \u4e0b\u8f7d\u57ab\u7247\uff0c\u7528\u4e8e\u5c06 cri-dockerd \u4f5c\u4e3a CRI \u8fd0\u884c\u65f6\uff0c\u4e0b\u8f7d\u57ab\u7247\u6e90\u7801\uff0c\u7528\u4e8e\u5b89\u88c5\u670d\u52a1\nwget https://github.com/Mirantis/cri-dockerd/archive/refs/tags/v0.3.18.zip\nwget https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.18/cri-dockerd-0.3.18.amd64.tgz\n# \u89e3\u538b\u57ab\u7247\uff0c\u89e3\u538b\u6e90\u7801\nunzip v0.3.18.zip\ntar -zxvf cri-dockerd-0.3.18.amd64.tgz\n# \u590d\u5236\u4e8c\u8fdb\u5236\u6587\u4ef6\u5230 /usr/bin \u76ee\u5f55\u4e0b\ncp cri-dockerd/cri-dockerd /usr/bin\n# \u5b89\u88c5 systemd \u670d\u52a1\uff0c\u91cd\u65b0\u52a0\u8f7d systemd\uff0c\u542f\u7528 cri-docker \u670d\u52a1\ninstall cri-dockerd-0.3.18/packaging/systemd/* /etc/systemd/system\nsystemctl daemon-reload\nsystemctl enable --now cri-docker.socket\n</code></pre> </li> <li> <p>\u4f7f\u7528 Containerd</p> Bash<pre><code>apt install containerd -y\nmkdir -p /etc/containerd\ncontainerd config default | sudo tee /etc/containerd/config.toml\nvim /etc/containerd/config.toml\nsystemctl restart containerd\n</code></pre> TOML<pre><code>[plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runc]\n  runtime_type = \"io.containerd.runc.v2\"\n  [plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runc.options]\n    SystemdCgroup = true\n</code></pre> <ol> <li>\u786e\u4fdd <code>SystemdCgroup</code> \u4e3a <code>true</code></li> </ol> TOML<pre><code>disabled_plugins = []\n</code></pre> <ol> <li>\u786e\u4fdd <code>disabled_plugins</code> \u4e2d\u6ca1\u6709 <code>cri</code> \u63d2\u4ef6</li> </ol> <p>\u91cd\u542f <code>containerd</code> \u670d\u52a1</p> </li> </ul> </li> <li> <p>\u5b89\u88c5 <code>NVIDIA CTK</code></p> <p>NVIDIA Container Toolkit</p> Bash<pre><code>sudo apt install curl -y\n# \u6dfb\u52a0 nv \u7684 apt \u4ed3\u5e93\ncurl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \\\n&amp;&amp; curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \\\nsed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \\\nsudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list\n# \u5b89\u88c5 ctk\nsudo apt-get update\nsudo apt-get install -y nvidia-container-toolkit\n</code></pre> <ul> <li> <p>docker</p> Bash<pre><code># \u5c06 nv \u7684\u5bb9\u5668\u8fd0\u884c\u65f6\u96c6\u6210\u5230 docker \u4e2d\uff0c\u5e76\u8bbe\u7f6e\u4e3a docker \u7684\u9ed8\u8ba4\u8fd0\u884c\u65f6\nsudo nvidia-ctk runtime configure --runtime=docker --set-as-default\n</code></pre> </li> </ul> </li> <li> <p>\u5b89\u88c5 <code>kubeadm</code> <code>kubelet</code> \u548c <code>kubectl</code></p> <p>kubeadm</p> Bash<pre><code># \u6dfb\u52a0 k8s \u7684 apt \u4ed3\u5e93\ncurl -fsSL https://pkgs.k8s.io/core:/stable:/v1.33/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg\necho 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.33/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list\n# \u5b89\u88c5\u5e76\u9501\u5b9a\u7248\u672c\nsudo apt-get update\nsudo apt-get install -y kubelet kubeadm kubectl\nsudo apt-mark hold kubelet kubeadm kubectl\n# \u5f00\u673a\u542f\u52a8 kubelet\nsudo systemctl enable --now kubelet\n</code></pre> </li> <li> <p>\u521d\u59cb\u5316 / \u52a0\u5165\u96c6\u7fa4</p> <ul> <li> <p>\u63a7\u5236\u5e73\u9762</p> Bash<pre><code># \u521d\u59cb\u5316\u96c6\u7fa4\nkubeadm init\n# \nmkdir -p $HOME/.kube\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\n</code></pre> Bash<pre><code># \u518d\u770b\u4e00\u773c join\nkubeadm token create --print-join-command\n</code></pre> </li> <li> <p>\u5de5\u4f5c\u8282\u70b9</p> Bash<pre><code># \u52a0\u5165\u96c6\u7fa4\nkubeadm join &lt;control-plane-host&gt;:&lt;control-plane-port&gt; --token &lt;token&gt; --discovery-token-ca-cert-hash sha256:&lt;hash&gt;\n</code></pre> </li> </ul> </li> <li> <p>\u5b89\u88c5 <code>CNI</code> \u7f51\u7edc\u63d2\u4ef6</p> <p>calico</p> Bash<pre><code># \u53ea\u9700\u8981\u5728\u63a7\u5236\u5e73\u9762\u90e8\u7f72\nkubectl create -f https://raw.githubusercontent.com/projectcalico/calico/refs/tags/v3.30.2/manifests/calico.yaml\n</code></pre> </li> <li> <p>\u5b89\u88c5 <code>NVIDIA</code> \u63d2\u4ef6</p> <p>NVIDIA device plugin for Kubernetes</p> Bash<pre><code># \u53ea\u9700\u8981\u5728\u63a7\u5236\u5e73\u9762\u90e8\u7f72\nkubectl create -f https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/refs/tags/v0.17.0/deployments/static/nvidia-device-plugin.yml\n</code></pre> </li> <li> <p>\u67e5\u770b\u96c6\u7fa4\u72b6\u6001</p> Bash<pre><code>kubectl get nodes\nkubectl get pod -A\nkubectl get nodes -o jsonpath=\"{range .items[*]}{.metadata.name}{': '}{.status.allocatable.nvidia\\.com/gpu}{'\\n'}{end}\"\n</code></pre> <p>\u67e5\u770b\u8282\u70b9\u72b6\u6001\uff0c\u4ee5\u53ca\u8282\u70b9\u4e0a GPU \u7684\u6570\u91cf</p> </li> <li> <p>\u521b\u5efa\u4e00\u4e2a <code>vim nginx-deployment.yaml</code></p> YAML<pre><code>apiVersion: apps/v1         # \u7248\u672c             Kubernetes API \u7248\u672c\nkind: Deployment            # \u8d44\u6e90\u7c7b\u578b         \u8d44\u6e90\u7c7b\u578b\u662f Deployment\nmetadata:                   # \u5143\u6570\u636e           \u5305\u542b\u8d44\u6e90\u7684\u540d\u79f0\u548c\u6807\u7b7e\n  name: nginx-deployment\nspec:                       # \u89c4\u8303             \u5b9a\u4e49\u8d44\u6e90\u7684\u89c4\u8303\n  replicas: 2               #   \u526f\u672c\u6570\u91cf        \u6307\u5b9a\u8fd0\u884c\u591a\u5c11\u4e2a Pod \u5b9e\u4f8b\n  selector:                 #   \u9009\u62e9\u5668          \u7528\u4e8e\u9009\u62e9\u8981\u7ba1\u7406\u7684 Pod\n    matchLabels:            #       \u5339\u914d\u6807\u7b7e    \u9009\u62e9\u5177\u6709\u6307\u5b9a\u6807\u7b7e\u7684 Pod\n      app: nginx\n  template:                 #   \u6a21\u677f            \u5b9a\u4e49\u521b\u5efa\u7684 Pod \u7684\u5143\u6570\u636e\u548c\u89c4\u8303\n    metadata:               #       \u5143\u6570\u636e      \u5b9a\u4e49 Pod \u7684\u5143\u6570\u636e\n      labels:               #           \u6807\u7b7e    \u7ed9 Pod \u6dfb\u52a0\u6807\u7b7e\n        app: nginx\n    spec:                   #       \u89c4\u8303        \u5b9a\u4e49 Pod \u7684\u89c4\u8303\n      containers:           #           \u5bb9\u5668    \u5b9a\u4e49 Pod \u4e2d\u7684\u5bb9\u5668\n      - name: nginx\n        image: nginx:latest\n        ports:\n        - containerPort: 80\n</code></pre> Bash<pre><code>kubectl apply -f nginx-deployment.yaml\n</code></pre> </li> <li> <p>\u521b\u5efa\u4e00\u4e2a <code>vim nginx-service.yaml</code></p> YAML<pre><code>apiVersion: v1              # \u7248\u672c\nkind: Service               # \u8d44\u6e90\u7c7b\u578b\nmetadata:                   # \u5143\u6570\u636e\n  name: nginx-service       #   \u540d\u79f0\nspec:                       # \u89c4\u8303\n  selector:                 #   \u9009\u62e9\u5668          \u9009\u62e9\u8981\u66b4\u9732\u7684 Pod\n    app: nginx              #       \u5339\u914d\u6807\u7b7e\n  ports:                    #   \u7aef\u53e3\n    - protocol: TCP         #       \u534f\u8bae\n      port: 80              #       \u7aef\u53e3        Service \u7aef\u53e3\n      targetPort: 80        #       \u76ee\u6807\u7aef\u53e3     Pod \u7aef\u53e3\n  externalIPs:              #   \u5916\u90e8 IP         \u66b4\u9732\u5230\u5916\u90e8\u7684 IP\n    - 10.0.0.31\n</code></pre> Bash<pre><code>kubectl apply -f nginx-service.yaml\n</code></pre> </li> <li> <p>\u67e5\u770b\u670d\u52a1</p> Bash<pre><code>kubectl get service nginx-service\n</code></pre> </li> <li> <p>\u8bbf\u95ee\u670d\u52a1</p> Bash<pre><code>curl 10.0.0.31\n</code></pre> </li> </ol> <p></p>"},{"location":"src/dev/kubernetes/#node","title":"node","text":"Bash<pre><code>kubectl describe node &lt;node-name&gt;  # \u67e5\u770b\u8282\u70b9\u8be6\u7ec6\u4fe1\u606f\n\nkubectl label node &lt;node-name&gt; &lt;key&gt;=&lt;value&gt;              # \u6dfb\u52a0\u6807\u7b7e\nkubectl label node &lt;node-name&gt; &lt;key&gt;-                     # \u5220\u9664\u6807\u7b7e\nkubectl label node &lt;node-name&gt; &lt;key&gt;=&lt;value&gt; --overwrite  # \u8986\u5199\u6807\u7b7e\nkubectl get nodes --show-labels                           # \u67e5\u770b\u6807\u7b7e\n</code></pre>"},{"location":"src/dev/kubernetes/#namespace","title":"namespace","text":"Bash<pre><code>kubectl get namespaces              # \u67e5\u770b\u6240\u6709\u547d\u540d\u7a7a\u95f4\nkubectl create namespace &lt;ns-name&gt;  # \u521b\u5efa\u547d\u540d\u7a7a\u95f4\n</code></pre>"},{"location":"src/dev/kubernetes/#pod","title":"pod","text":"YAML<pre><code>apiVersion: v1\nkind: Pod\n\nmetadata:\n  name: po-ubuntu\n  namespace: carla\n\nspec:\n  containers:\n  - name: c-ubuntu\n    image: ubuntu:latest\n    command: [\"sleep\", \"infinity\"]\n    volumeMounts:\n      - name: v-nfs           # \u4f7f\u7528\u7684 volume \u540d\u79f0\n        mountPath: /mnt/nfs   # \u6302\u8f7d\u8def\u5f84\n\n  volumes:\n    - name: v-nfs             # volume \u540d\u79f0\n      persistentVolumeClaim:\n        claimName: pvc-nfs    # \u5f15\u7528 PVC \u540d\u79f0\n\n# kubectl -n carla exec -it po-ubuntu -c c-ubuntu -- /bin/bash\n</code></pre> <p>pause</p> <p>1 \u53f7\u5bb9\u5668\uff0c\u5176\u4ed6\u5bb9\u5668\u5171\u4eab\u5176 <code>PID</code>\uff0c<code>IPC</code>\uff0c<code>Network</code>\uff0c</p> <ul> <li> <p><code>PID</code>\uff1a\u53ef\u4ee5\u901a\u8fc7 <code>ps</code> \u547d\u4ee4\u67e5\u770b\u5230\u5176\u4ed6\u5bb9\u5668\u7684\u8fdb\u7a0b\uff0c\u56de\u6536\u50f5\u5c38\u8fdb\u7a0b</p> </li> <li> <p><code>IPC</code>\uff1a\u53ef\u4ee5\u901a\u8fc7\u5171\u4eab\u5185\u5b58\u8fdb\u884c\u901a\u4fe1</p> </li> <li> <p><code>Network</code>\uff1a\u53ef\u4ee5\u901a\u8fc7\u56de\u73af\u5730\u5740 <code>localhost</code> \u76f8\u4e92\u901a\u4fe1</p> </li> </ul> <p>initC</p> <p>\u521d\u59cb\u5316\u5bb9\u5668\uff0c\u7528\u4e8e\u521d\u59cb\u5316\u73af\u5883\uff0c\u5982\u914d\u7f6e\u6587\u4ef6\uff0c\u6570\u636e\u5e93\u7b49</p> <ul> <li> <p>\u7ebf\u6027\u542f\u52a8</p> </li> <li> <p>\u8fd4\u56de 0 \u65f6\uff0c\u5f00\u59cb mainC \u5bb9\u5668</p> </li> </ul> <p>mainC</p> <p>\u4e3b\u5bb9\u5668\uff0c\u7528\u4e8e\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f</p> <p>\u94a9\u5b50</p> <ul> <li> <p><code>postStart</code>\uff1a\u5728\u5bb9\u5668\u542f\u52a8\u540e\u6267\u884c</p> </li> <li> <p><code>preStop</code>\uff1a\u5728\u5bb9\u5668\u505c\u6b62\u524d\u6267\u884c</p> </li> </ul> <p>\u63a2\u9488</p> <p>\u7531\u5f53\u524d pod \u6240\u5728\u7684 node \u8282\u70b9\u7684 kubelet \u8fdb\u884c\u68c0\u67e5</p> <ul> <li> <p><code>startupProbe</code>\uff1a\u68c0\u67e5\u5bb9\u5668\u662f\u5426\u542f\u52a8</p> </li> <li> <p><code>livenessProbe</code>\uff1a\u68c0\u67e5\u5bb9\u5668\u662f\u5426\u5b58\u6d3b</p> </li> <li> <p><code>readinessProbe</code>\uff1a\u68c0\u67e5\u5bb9\u5668\u662f\u5426\u5c31\u7eea</p> </li> </ul> <p></p>"},{"location":"src/dev/kubernetes/#network","title":"Network","text":""},{"location":"src/dev/kubernetes/#calico","title":"Calico","text":"<p>BGP \u5bf9\u7b49\u521b\u5efa\u5931\u8d25</p> <p>\u6dfb\u52a0\u73af\u5883\u53d8\u91cf\uff0c\u505a CIDR \u5339\u914d</p> Bash<pre><code>kubectl set env daemonset/calico-node -n kube-system \\\n  IP_AUTODETECTION_METHOD=\"cidr=180.85.206.0/23\"\n</code></pre> <p>\u5220\u9664</p> Bash<pre><code>kubectl set env daemonset/calico-node -n kube-system \\\n  IP_AUTODETECTION_METHOD-\n</code></pre> <p>\u67e5\u770b</p> Bash<pre><code>kubectl describe daemonset/calico-node -n kube-system\n</code></pre> <p></p>"},{"location":"src/dev/kubernetes/#controller","title":"Controller","text":""},{"location":"src/dev/kubernetes/#deployment","title":"deployment","text":"YAML<pre><code>apiVersion: apps/v1\nkind: Deployment\n\nmetadata:\n  name: deployment-carla\n  namespace: carla\n\nspec:\n  replicas: 2     # \u526f\u672c\u6570\u91cf\n\n  selector:       # \u9009\u62e9\u5668\n    matchLabels:\n      app: po-carla\n\n  template:       # \u6a21\u677f\uff0c\u8d77 pod\n    metadata:\n      labels:     # \u8bbe\u7f6e\u6807\u7b7e\n        app: po-carla\n\n    spec:\n      containers:\n        - name: c-carla\n          image: carlasim/carla:0.9.15\n          command: [\"/bin/bash\", \"./CarlaUE4.sh\", \"-RenderOffScreen\"]\n          securityContext:          # \u542f\u7528\u7279\u6743\u6a21\u5f0f\n            privileged: true\n          resources:                # \u8bbe\u7f6e\u8d44\u6e90\u9650\u5236\n            limits:\n              nvidia.com/gpu: 1\n          ports:\n            - containerPort: 2000\n            - containerPort: 2001\n</code></pre>"},{"location":"src/dev/kubernetes/#job","title":"job","text":"Bash<pre><code>kubectl apply -f &lt;job.yaml&gt;\nkubectl get jobs\nkubectl get pods\nkubectl logs &lt;pod-name&gt;\nkubectl delete job &lt;job-name&gt;\n</code></pre>"},{"location":"src/dev/kubernetes/#service","title":"Service","text":"Bash<pre><code>kubectl get service -A          # \u67e5\u770b\u6240\u6709 service\nkubectl get service -n &lt;ns&gt;     # \u67e5\u770b &lt;ns&gt; \u547d\u540d\u7a7a\u95f4\u4e0b\u7684 service\n</code></pre>"},{"location":"src/dev/kubernetes/#clusterip","title":"ClusterIP","text":"YAML<pre><code>apiVersion: v1\nkind: Service\n\nmetadata:\n  name: service-carla\n  namespace: carla\n\nspec:\n  type: ClusterIP       # \u96c6\u7fa4\u5185\u90e8\u8bbf\u95ee\n\n  selector:\n    app: po-carla\n\n  ports:\n    - name: carla2000\n      targetPort: 2000  # Pod \u7aef\u53e3\n      port: 2000        # Service \u7aef\u53e3\n\n    - name: carla2001\n      port: 2001\n      targetPort: 2001\n</code></pre>"},{"location":"src/dev/kubernetes/#nodeport","title":"NodePort","text":"YAML<pre><code>apiVersion: v1\nkind: Service\n\nmetadata:\n  name: service-carla\n  namespace: carla\n\nspec:\n  type: NodePort        # \u96c6\u7fa4\u5916\u90e8\u8bbf\u95ee\n\n  selector:\n    app: po-carla\n\n  ports:\n    - name: carla32000\n      targetPort: 32000 # Pod \u7aef\u53e3\n      port: 32000       # Service \u7aef\u53e3\n      nodePort: 32000   # Node \u7aef\u53e3\n\n    - name: carla32001\n      port: 32001\n      targetPort: 32001\n      nodePort: 32001\n</code></pre>"},{"location":"src/dev/kubernetes/#persistence","title":"Persistence","text":""},{"location":"src/dev/kubernetes/#persistentvolume","title":"PersistentVolume","text":"YAML<pre><code>apiVersion: v1\nkind: PersistentVolume\n\nmetadata:\n  name: pv-nfs\n\nspec:\n  capacity:\n    storage: 500Gi\n  volumeMode: Filesystem\n  accessModes:\n    - ReadWriteMany # \u591a\u4e2a Pod \u53ef\u4ee5\u540c\u65f6\u8bfb\u5199\n  nfs:\n    server: 180.85.207.45\n    path: \"/home/jiao/Public\"\n</code></pre>"},{"location":"src/dev/kubernetes/#persistentvolumeclaim","title":"PersistentVolumeClaim","text":"YAML<pre><code>apiVersion: v1\nkind: PersistentVolumeClaim\n\nmetadata:\n  name: pvc-nfs\n  namespace: carla\n\nspec:\n  accessModes:\n    - ReadWriteMany\n  resources:\n    requests:\n      storage: 500Gi\n  volumeName: pv-nfs # \u6307\u5b9a PersistentVolume \u7684\u540d\u79f0\n</code></pre>"},{"location":"src/dev/kubernetes/#scheduler","title":"Scheduler","text":"<p>\u4e3a pod \u5206\u914d node\uff0c\u6d41\u7a0b\uff1a</p> <ul> <li> <p>\u9884\u9009\uff08Filtering\uff09\uff0c\u8fc7\u6ee4</p> </li> <li> <p>\u8d44\u6e90\uff08CPU\uff0c\u5185\u5b58\uff09</p> </li> <li> <p>\u4eb2\u548c\u6027\u548c\u53cd\u4eb2\u548c\u6027</p> </li> <li> <p>\u6c61\u70b9\u4e0e\u5bb9\u5fcd</p> </li> <li> <p>\u4f18\u9009\uff08Scoring\uff09\uff0c\u6253\u5206</p> </li> <li> <p>\u8d44\u6e90\u5747\u8861\uff08\u5c06 pod \u5206\u914d\u5230\u8d1f\u8f7d\u66f4\u4f4e\u7684 node\uff09</p> </li> </ul>"},{"location":"src/dev/kubernetes/#affinity","title":"Affinity","text":""},{"location":"src/dev/kubernetes/#nodeaffinity","title":"NodeAffinity","text":"<ul> <li> <p>\u8f6f\u4eb2\u548c\u6027\uff1a\u503e\u5411\u4e8e\u8c03\u5ea6\u5230\u6ee1\u8db3\u6761\u4ef6\u7684 node</p> </li> <li> <p>\u786c\u4eb2\u548c\u6027\uff1a\u5fc5\u987b\u8c03\u5ea6\u5230\u6ee1\u8db3\u6761\u4ef6\u7684 node</p> </li> <li> <p>\u8f6f\u53cd\u4eb2\u548c\u6027\uff1a\u503e\u5411\u4e8e\u4e0d\u8c03\u5ea6\u5230\u6ee1\u8db3\u6761\u4ef6\u7684 node</p> </li> <li> <p>\u786c\u53cd\u4eb2\u548c\u6027\uff1a\u7edd\u5bf9\u4e0d\u80fd\u8c03\u5ea6\u5230\u6ee1\u8db3\u6761\u4ef6\u7684 node</p> </li> </ul> <p>\u8f6f\u4eb2\u548c\u6027</p> YAML<pre><code>apiVersion: v1\nkind: Pod\n\nmetadata:\n  name: pod-nginx\n  namespace: tmp\n\nspec:\n  affinity:                                             # \u4eb2\u548c\n    nodeAffinity:                                       # \u8282\u70b9\u4eb2\u548c\n      preferredDuringSchedulingIgnoredDuringExecution:  # \u8f6f\u4eb2\u548c\n      - weight: 66          # \u8bbe\u7f6e\u8282\u70b9\u7684\u4f18\u5148\u7ea7\u6743\u91cd\n        preference:\n          matchExpressions:\n          - key: dddd\n            operator: In    # \u8282\u70b9\u4e2d\u5b58\u5728 key:value\n            values:\n              - bdzd\n\n  containers:\n  - name: nginx\n    image: nginx:latest\n</code></pre> <p>\u786c\u4eb2\u548c\u6027</p> YAML<pre><code>apiVersion: v1\nkind: Pod\n\nmetadata:\n  name: pod-nginx\n  namespace: tmp\n\nspec:\n  affinity:                                           # \u4eb2\u548c\n    nodeAffinity:                                     # \u8282\u70b9\u4eb2\u548c\n      requiredDuringSchedulingIgnoredDuringExecution: # \u786c\u4eb2\u548c\n        nodeSelectorTerms:\n        - matchExpressions:\n          - key: dddd\n            operator: In    # \u8282\u70b9\u4e2d\u5b58\u5728 key:value\n            values:\n            - bdzd\n\n  containers:\n  - name: nginx\n    image: nginx:latest\n</code></pre> <p>\u53cd\u4eb2\u548c\u6027</p> YAML<pre><code>...\n  operator: NotIn\n...\n</code></pre>"},{"location":"src/dev/kubernetes/#podaffinity","title":"PodAffinity","text":"<ul> <li>\u8f6f\u4eb2\u548c\u6027\uff1a\u503e\u5411\u4e8e\u8c03\u5ea6\u5230\u6ee1\u8db3\u6761\u4ef6\u7684 pod \u9644\u8fd1</li> </ul> YAML<pre><code>apiVersion: v1\nkind: Pod\n\nmetadata:\n  name: pod2-nginx\n  namespace: tmp\n\nspec:\n  affinity:\n    podAffinity:                                        # pod \u4eb2\u548c\n      preferredDuringSchedulingIgnoredDuringExecution:  # \u8f6f\u4eb2\u548c\n      - weight: 66\n        podAffinityTerm:        \n          labelSelector:\n            matchExpressions:\n            - key: bdzd\n              operator: In    # \u8282\u70b9\u4e2d\u5b58\u5728 key:value\n              values:\n              - dddd\n          topologyKey: \"kubernetes.io/hostname\"\n  containers:\n  - name: nginx\n    image: nginx:latest\n</code></pre> <ul> <li>\u786c\u4eb2\u548c\u6027\uff1a\u5fc5\u987b\u8c03\u5ea6\u5230\u6ee1\u8db3\u6761\u4ef6\u7684 pod \u9644\u8fd1</li> </ul> YAML<pre><code>apiVersion: v1\nkind: Pod\n\nmetadata:\n  name: pod2-nginx\n  namespace: tmp\n\nspec:\n  affinity:\n    podAffinity:                                      # pod \u4eb2\u548c\n      requiredDuringSchedulingIgnoredDuringExecution: # \u786c\u4eb2\u548c\n      - labelSelector:\n          matchExpressions:\n          - key: bdzd\n            operator: In    # \u8282\u70b9\u4e2d\u5b58\u5728 key:value\n            values:\n            - dddd\n        topologyKey: \"kubernetes.io/hostname\"\n  containers:\n  - name: nginx\n    image: nginx:latest\n</code></pre>"},{"location":"src/dev/kubernetes/#podantiaffinity","title":"PodAntiAffinity","text":"<ul> <li>\u8f6f\u53cd\u4eb2\u548c\u6027\uff1a\u503e\u5411\u4e8e\u4e0d\u8c03\u5ea6\u5230\u6ee1\u8db3\u6761\u4ef6\u7684 pod \u9644\u8fd1</li> </ul> YAML<pre><code>apiVersion: v1\nkind: Pod\n\nmetadata:\n  name: pod2-nginx\n  namespace: tmp\n\nspec:\n  affinity:\n    podAntiAffinity:                                    # pod \u53cd\u4eb2\u548c\n      preferredDuringSchedulingIgnoredDuringExecution:  # \u8f6f\u4eb2\u548c\n      - weight: 66\n        podAffinityTerm:        \n          labelSelector:\n            matchExpressions:\n            - key: bdzd\n              operator: In    # \u8282\u70b9\u4e2d\u5b58\u5728 key:value\n              values:\n              - dddd\n          topologyKey: \"kubernetes.io/hostname\"\n  containers:\n  - name: nginx\n    image: nginx:latest\n</code></pre> <ul> <li>\u786c\u53cd\u4eb2\u548c\u6027\uff1a\u7edd\u5bf9\u4e0d\u80fd\u8c03\u5ea6\u5230\u6ee1\u8db3\u6761\u4ef6\u7684 pod \u9644\u8fd1</li> </ul> YAML<pre><code>apiVersion: v1\nkind: Pod\n\nmetadata:\n  name: pod2-nginx\n  namespace: tmp\n\nspec:\n  affinity:\n    podAntiAffinity:                                  # pod \u53cd\u4eb2\u548c\n      requiredDuringSchedulingIgnoredDuringExecution: # \u786c\u4eb2\u548c\n      - labelSelector:\n          matchExpressions:\n          - key: bdzd\n            operator: In    # \u8282\u70b9\u4e2d\u5b58\u5728 key:value\n            values:\n            - dddd\n        topologyKey: \"kubernetes.io/hostname\"\n  containers:\n  - name: nginx\n    image: nginx:latest\n</code></pre>"},{"location":"src/dev/kubernetes/#taints-tolerations","title":"Taints &amp; Tolerations","text":""},{"location":"src/dev/kubernetes/#taint","title":"Taint","text":"<p>\u5f53 pod \u65e0\u6cd5\u5bb9\u5fcd node \u4e0a\u7684\u6c61\u70b9\u65f6\uff1a</p> <ul> <li> <p><code>NoSchedule</code>\uff1a\u4e0d\u8c03\u5ea6\u5230\u8be5 node</p> </li> <li> <p><code>PreferNoSchedule</code> \u5c3d\u91cf\u522b\u8c03\u5ea6\u5230 \u8be5 node</p> </li> <li> <p><code>NoExecute</code>\uff1a\u4e0d\u8c03\u5ea6\u5230\u8be5 node\uff0c\u4e14\u9a71\u79bb\u6b63\u5728\u8fd0\u884c\u7684 pod</p> </li> </ul> Bash<pre><code>kubectl describe node &lt;node-name&gt; | grep Taints       # \u67e5\u770b\u6c61\u70b9\nkubectl taint node &lt;node-name&gt; key=value:NoSchedule   # \u6dfb\u52a0\u6c61\u70b9\nkubectl taint node &lt;node-name&gt; key=value:NoSchedule-  # \u5220\u9664\u6c61\u70b9\n</code></pre>"},{"location":"src/dev/kubernetes/#toleration","title":"Toleration","text":"<p>pod \u53ef\u4ee5\u9009\u62e9\u5bb9\u5fcd\u6c61\u70b9</p> <ul> <li>\u4e00\u822c\u5bb9\u5fcd</li> </ul> YAML<pre><code>tolerations:\n- key: \"key\"\n  operator: \"Equal\"\n  value: \"value\"\n  effect: \"NoSchedule\"\n</code></pre> <ul> <li>\u5bb9\u5fcd\u6240\u6709\u6c61\u70b9</li> </ul> YAML<pre><code>tolerations:\n- operator: \"Exists\"\n</code></pre>"},{"location":"src/dev/kubernetes/#_2","title":"\u4e8c\u5f00","text":"<p>\u6309\u7167\u5b98\u65b9\u7684\u8bf4\u6cd5\uff0c\u8c03\u5ea6\u5668\u5f00\u53d1\u6709\u4e00\u79cd\u975e\u5e38\u7b80\u5355\u7684\u505a\u6cd5\uff1a</p> <ol> <li> <p>\u4fee\u6539\u9ed8\u8ba4\u8c03\u5ea6\u5668\u7684\u542f\u52a8\u6587\u4ef6 <code>/etc/kubernetes/manifests/kube-schdueler.yaml</code></p> YAML<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    component: kube-scheduler\n    tier: control-plane\n  name: kube-scheduler\n  namespace: kube-system\nspec:\n  containers:\n  - command:\n    - kube-scheduler\n    - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf\n    - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf\n    - --bind-address=127.0.0.1\n    - --kubeconfig=/etc/kubernetes/scheduler.conf\n    - --leader-elect=true\n    image: registry.k8s.io/kube-scheduler:v1.31.4\n    imagePullPolicy: IfNotPresent\n    livenessProbe:\n      failureThreshold: 8\n      httpGet:\n        host: 127.0.0.1\n        path: /healthz\n        port: 10259\n        scheme: HTTPS\n      initialDelaySeconds: 10\n      periodSeconds: 10\n      timeoutSeconds: 15\n    name: kube-scheduler\n    resources:\n      requests:\n        cpu: 100m\n    startupProbe:\n      failureThreshold: 24\n      httpGet:\n        host: 127.0.0.1\n        path: /healthz\n        port: 10259\n        scheme: HTTPS\n      initialDelaySeconds: 10\n      periodSeconds: 10\n      timeoutSeconds: 15\n    volumeMounts:\n    - mountPath: /etc/kubernetes/scheduler.conf\n      name: kubeconfig\n      readOnly: true\n  hostNetwork: true\n  priority: 2000001000\n  priorityClassName: system-node-critical\n  securityContext:\n    seccompProfile:\n      type: RuntimeDefault\n  volumes:\n  - hostPath:\n      path: /etc/kubernetes/scheduler.conf\n      type: FileOrCreate\n    name: kubeconfig\nstatus: {}\n</code></pre> </li> </ol>"},{"location":"src/dev/linux/","title":"\ud83d\udc27 Linux","text":"<p>\u53c2\u8003\uff1aLinux \u547d\u4ee4\u5927\u5168</p>"},{"location":"src/dev/linux/#for-me","title":"for me","text":"Bash<pre><code>sudo apt update &amp;&amp; sudo apt full-upgrade -y &amp;&amp; sudo apt autoremove &amp;&amp; sudo mkdir -p /root/.ssh\nsudo apt install -y openssh-server wget apt-transport-https ca-certificates curl gpg\nsudo wget -O /root/.ssh/authorized_keys \"https://dxlcq.cn/public/authorized_keys\"\nsudo echo \"PasswordAuthentication no\" | sudo tee -a /etc/ssh/sshd_config\nsudo systemctl restart ssh\n</code></pre>"},{"location":"src/dev/linux/#_1","title":"\u57fa\u7840","text":""},{"location":"src/dev/linux/#_2","title":"\u914d\u7f6e\u901f\u67e5","text":"<ul> <li> <p>cpu</p> Bash<pre><code>lscpu\n</code></pre> </li> <li> <p>\u5185\u5b58</p> Bash<pre><code>free -h\n</code></pre> </li> <li> <p>\u786c\u76d8</p> Bash<pre><code>lsblk -d -o NAME,SIZE,VENDOR,MODEL\n</code></pre> </li> <li> <p>\u7f51\u7edc</p> Bash<pre><code>ip a\n</code></pre> </li> </ul>"},{"location":"src/dev/linux/#_3","title":"\u76ee\u5f55\u7ed3\u6784","text":"Bash<pre><code>\u2514\u2500\u2500 /\n    \u251c\u2500\u2500 bin     # binaries \u7cfb\u7edf\u8fd0\u884c\u7684\u57fa\u672c\u547d\u4ee4 \n    \u251c\u2500\u2500 sbin    # system binaries \u7cfb\u7edf\u7ba1\u7406\u5458\u4f7f\u7528\u7684\u57fa\u672c\u547d\u4ee4\n    \u251c\u2500\u2500 lib     # libraries \u4e0a\u9762\u4fe9\u7684\u5171\u4eab\u5e93\n    \u251c\u2500\u2500 usr     # unix system resource \u7cfb\u7edf\u8d44\u6e90\uff08\u5305\u7ba1\u7406\u7684\u8f6f\u4ef6\uff09\n    \u2502    \u251c\u2500\u2500 bin\n    \u2502    \u251c\u2500\u2500 sbin\n    \u2502    \u251c\u2500\u2500 lib\n    \u2502    \u2514\u2500\u2500 local  # \u624b\u52a8\u5b89\u88c5\u7684\u8f6f\u4ef6\uff0c\u907f\u514d\u4e0e\u5305\u7ba1\u7406\u5668\u51b2\u7a81\n    \u251c\u2500\u2500 etc     # editable text config \u914d\u7f6e\u6587\u4ef6\uff08/etc/netplan\uff09\n    \u251c\u2500\u2500 dev     # \u67e5\u770b\u4f60\u7684\u8bbe\u5907\n    \u251c\u2500\u2500 boot    #   \n    \u251c\u2500\u2500 var     # /var/www\n    \u2514\u2500\u2500 s\n</code></pre>"},{"location":"src/dev/linux/#_4","title":"\u8f6f\u4ef6","text":""},{"location":"src/dev/linux/#apt","title":"apt","text":"<p>\u53c2\u8003\uff1aapt \u7ec8\u6781\u6307\u5357</p> <ul> <li> <p>\u66f4\u65b0\u8f6f\u4ef6\u6e90\u3001\u8f6f\u4ef6\uff0c\u81ea\u52a8\u5220\u9664\u65e0\u5173\u4f9d\u8d56</p> Bash<pre><code>sudo apt update &amp;&amp; sudo apt full-upgrade &amp;&amp; sudo apt autoremove\n</code></pre> </li> <li> <p>\u4f7f\u7528\u4ee3\u7406</p> Bash<pre><code>-o Acquire::http::proxy=\"http://192.168.19.19:7890/\"\n</code></pre> </li> <li> <p>\u5220\u9664\u8f6f\u4ef6</p> Bash<pre><code>sudo apt purge \u8f6f\u4ef6\u540d\n</code></pre> </li> <li> <p>\u67e5\u627e\u8f6f\u4ef6</p> Bash<pre><code>sudo apt-cache search \u8f6f\u4ef6\u540d\n</code></pre> </li> <li> <p>\u67e5\u770b\u5df2\u5b89\u88c5\u7684\u8f6f\u4ef6</p> Bash<pre><code>sudo apt list --installed | grep \u8f6f\u4ef6\u540d\n</code></pre> </li> <li> <p>\u53ea\u4e0b\u8f7d\u4e0d\u5b89\u88c5</p> Bash<pre><code>sudo apt install --download-only \u8f6f\u4ef6\u540d\n</code></pre> <p>\u4e0b\u8f7d\u7684\u8f6f\u4ef6\u5305\u4f1a\u4fdd\u5b58\u5728 <code>/var/cache/apt/archives</code></p> <p>\u5168\u90e8\u5b89\u88c5 <code>sudo dpkg -i *.deb</code></p> <p>\u6e05\u7406\u4e0b\u8f7d\u7684\u8f6f\u4ef6\u5305 <code>sudo apt clean</code></p> </li> <li> <p>\u6dfb\u52a0\u8f6f\u4ef6\u6e90</p> </li> <li> <p>\u67e5\u770b\u8f6f\u4ef6\u6e90</p> </li> <li> <p>\u5220\u9664\u8f6f\u4ef6\u6e90</p> </li> </ul> <p></p>"},{"location":"src/dev/linux/#snap","title":"snap","text":"<p>\u4e00\u6258</p> <p></p>"},{"location":"src/dev/linux/#_5","title":"\u6587\u4ef6","text":""},{"location":"src/dev/linux/#_6","title":"\u6587\u4ef6\u67e5\u627e","text":"<p>find\uff0cgrep</p> <p></p>"},{"location":"src/dev/linux/#_7","title":"\u6587\u4ef6\u7ba1\u7406","text":"<ul> <li> <p><code>ls</code> \u67e5\u770b</p> <ul> <li> <p><code>ls -a</code> \u5217\u51fa\u5168\u90e8\u6587\u4ef6\uff08\u542b\u9690\u85cf\uff09</p> </li> <li> <p><code>ls -l</code> <code>\u6587\u4ef6\u7c7b\u578b[\u6240\u5c5e\u4eba\u6743\u9650][\u6240\u5c5e\u7ec4\u6743\u9650][\u5176\u4ed6\u4eba\u6743\u9650] \u786c\u8fde\u63a5\u6570\u91cf \u6240\u5c5e\u4eba \u6240\u5c5e\u7ec4 \u6587\u4ef6\u5927\u5c0f \u4fee\u6539 \u65e5\u671f\u548c\u65f6\u95f4 \u6587\u4ef6\u540d</code>     \u6587\u4ef6\u7c7b\u578b\uff1a</p> <ul> <li><code>-</code> \u666e\u901a\u6587\u4ef6</li> <li><code>d</code> \u76ee\u5f55</li> <li><code>l</code> \u8f6f\u94fe\u63a5</li> <li><code>b</code> \u5757\u8bbe\u5907</li> <li><code>c</code> \u5b57\u7b26\u8bbe\u5907</li> <li><code>s</code> \u5957\u63a5\u5b57</li> <li><code>p</code> \u7ba1\u9053</li> </ul> </li> </ul> </li> <li> <p><code>cd</code> \u5207\u6362\u76ee\u5f55</p> </li> <li> <p><code>pwd</code> \u8f93\u51fa\u5f53\u524d\u76ee\u5f55</p> </li> <li> <p><code>mkdir</code> \u521b\u5efa\u76ee\u5f55</p> <ul> <li><code>mkdir -m 711 dir</code> \u521b\u5efa\u76ee\u5f55\uff0c\u6743\u9650\u4e3a <code>711</code></li> <li><code>mkdir -p dir/dir/dir</code> \u521b\u5efa\u591a\u5c42\u76ee\u5f55</li> </ul> </li> <li> <p><code>cp</code> \u590d\u5236\u6587\u4ef6</p> <ul> <li><code>cp -r dir/ dir.bak/</code> \u9012\u5f52\u590d\u5236</li> <li><code>cp -p file file.bak</code> \u540c\u65f6\u590d\u5236\u6587\u4ef6\u5c5e\u6027</li> </ul> </li> <li> <p><code>mv</code> \u79fb\u52a8\u6587\u4ef6</p> <ul> <li>\u5982\u679c\u79fb\u52a8\u76ee\u5f55\uff0c\u5efa\u8bae\u4f7f\u7528 <code>cp</code>\uff0c\u786e\u8ba4\u540e\u518d\u5220\u9664</li> <li><code>mv dirOld/ dirNew/</code>\uff0c\u4ece\u65e7\u7684\u76ee\u5f55\u79fb\u52a8\u5230\u65b0\u7684\u76ee\u5f55</li> </ul> </li> <li> <p><code>rm</code>\u5220\u9664\u6587\u4ef6</p> <ul> <li><code>rm -r dir/</code> \u9012\u5f52\u5220\u9664</li> <li><code>rm -f dir/</code> \u5ffd\u7565\u4e0d\u5b58\u5728\u7684\u6587\u4ef6</li> </ul> </li> </ul> <p></p>"},{"location":"src/dev/linux/#_8","title":"\u6587\u4ef6\u6743\u9650","text":"<p>\u6bcf\u4e2a\u6587\u4ef6\u6709\u4e09\u79cd\u7c92\u5ea6</p> \u6240\u5c5e\u4eba \u6240\u5c5e\u7ec4 \u5176\u4ed6\u4eba <code>u</code> <code>g</code> <code>o</code> <p>\u5404\u81ea\u6709\u4e09\u79cd\u6743\u9650</p> \u8bfb \u5199 \u884c <code>r</code> <code>4</code> <code>w</code> <code>2</code> <code>x</code> <code>1</code> <p>\u4fee\u6539</p> <ul> <li> <p><code>chown</code> \u4fee\u6539\u6240\u5c5e\u4eba <code>u</code> </p> <ul> <li><code>chmod jiao:jiao file</code> \u4fee\u6539\u6240\u5c5e\u4eba\u548c\u6240\u5c5e\u7ec4</li> </ul> </li> <li> <p><code>chgrp</code> \u4fee\u6539\u6240\u5c5e\u7ec4 <code>g</code></p> </li> <li> <p><code>chmod</code> \u4fee\u6539\u6743\u9650</p> <ul> <li> <p><code>chmod +x</code>\uff0c\u7ed9 \u5168\u90e8\u4eba <code>a</code> \u6dfb\u52a0\u6267\u884c\u6743\u9650\uff0c\u7b49\u4ef7\u4e8e <code>chmod a+x</code></p> </li> <li> <p><code>chmod +r</code>\uff0c\u7ed9 \u5168\u90e8\u4eba <code>a</code> \u6dfb\u52a0\u8bfb\u6743\u9650\uff0c\u7b49\u4ef7\u4e8e <code>chmod a+r</code></p> </li> <li> <p><code>chmod +w</code>\uff0c\u7ed9 \u6240\u5c5e\u4eba <code>u</code> \u6dfb\u52a0\u5199\u6743\u9650\uff0c\u82e5\u60f3\u7ed9\u5168\u90e8\u4eba\uff0c<code>chmod a+w</code></p> </li> </ul> <p></p> <ul> <li> <p><code>chmod u+x</code>\uff0c\u7ed9 \u6240\u5c5e\u4eba \u6dfb\u52a0\u6267\u884c\u6743\u9650</p> </li> <li> <p><code>chmod g+r</code>\uff0c\u7ed9 \u6240\u5c5e\u7ec4 \u6dfb\u52a0\u8bfb\u6743\u9650</p> </li> <li> <p><code>chmod o+w</code>\uff0c\u7ed9 \u5176\u4ed6\u4eba \u6dfb\u52a0\u5199\u6743\u9650</p> </li> </ul> <p></p> <ul> <li> <p><code>chmod 777</code>\uff0c\u7ed9 \u5168\u90e8\u4eba \u6dfb\u52a0\u5168\u90e8\u6743\u9650</p> </li> <li> <p><code>chmod 755</code>\uff0c\u7ed9 \u6240\u5c5e\u4eba \u6dfb\u52a0\u5168\u90e8\u6743\u9650\uff0c\u7ed9 \u6240\u5c5e\u7ec4 \u548c \u5176\u4ed6\u4eba \u6dfb\u52a0\u8bfb\u548c\u6267\u884c\u6743\u9650</p> </li> <li> <p><code>chmod -R</code>\uff0c\u9012\u5f52\u4fee\u6539</p> </li> </ul> </li> </ul> <p></p>"},{"location":"src/dev/linux/#_9","title":"\u6587\u4ef6\u89e3\u538b\u7f29","text":"<p>tar\uff0czip</p> <ul> <li> <p><code>tar -zxvf *.tar.gz</code></p> <ul> <li><code>-z</code> \u89e3\u538b\u7f29\uff08gz\uff09\uff08\u6709\u65f6\u53ef\u4ee5\u7701\u7565\uff09</li> <li><code>-x</code> \u89e3\u5305\uff08tar\uff09</li> <li><code>-v</code> \u663e\u793a\u8be6\u7ec6\u7684\u89e3\u538b\u8fc7\u7a0b\u4fe1\u606f</li> <li><code>-f</code> \u6307\u5b9a\u540d\u79f0</li> <li><code>-C</code> \u6307\u5b9a\u8def\u5f84</li> </ul> </li> <li> <p><code>tar -zcvf *.tar.gz *</code></p> <ul> <li><code>-c</code> \u6253\u5305\uff08tar\uff09</li> </ul> </li> </ul> <p></p>"},{"location":"src/dev/linux/#_10","title":"\u6587\u4ef6\u5907\u4efd","text":"<p>dump\uff0crsync</p> <p></p>"},{"location":"src/dev/linux/#scp","title":"scp","text":""},{"location":"src/dev/linux/#_11","title":"\u78c1\u76d8","text":""},{"location":"src/dev/linux/#_12","title":"\u78c1\u76d8\u6027\u80fd","text":"<ul> <li>\u6d4b\u8bd5\u78c1\u76d8\u7684\u5199\u5165\u901f\u5ea6</li> </ul> Bash<pre><code>time dd if=/dev/zero of=test.t bs=4k count=200000\n</code></pre> <ul> <li>\u6e05\u9664\u7f13\u5b58</li> </ul> Bash<pre><code>sudo sync &amp;&amp; sudo sh -c 'echo 3 &gt; /proc/sys/vm/drop_caches'\n</code></pre> <ul> <li>\u6d4b\u8bd5\u78c1\u76d8\u7684\u8bfb\u53d6\u901f\u5ea6</li> </ul> Bash<pre><code>time dd if=test.t of=/dev/null bs=4k\n</code></pre>"},{"location":"src/dev/linux/#_13","title":"\u78c1\u76d8\u7ba1\u7406","text":""},{"location":"src/dev/linux/#_14","title":"\u6302\u8f7d\u666e\u901a\u78c1\u76d8","text":"<p><code>mount</code> \u78c1\u76d8\u6302\u8f7d</p> <ul> <li>\u6302\u8f7d     <code>mount -t ntfs /dev/sda1 /mnt</code><ul> <li><code>-t</code> \u6307\u5b9a\u6587\u4ef6\u7cfb\u7edf\u7c7b\u578b</li> <li><code>/dev/sda1</code> \u78c1\u76d8\u5206\u533a</li> <li><code>/mnt</code> \u6302\u8f7d\u70b9</li> </ul> </li> </ul> <p><code>umount</code> \u78c1\u76d8\u5378\u8f7d</p> <p></p>"},{"location":"src/dev/linux/#smb","title":"SMB \u670d\u52a1\u7aef","text":"<p>samba \u662f SMB \u7684 linux \u5b9e\u73b0</p> <ol> <li> <p>\u4e0b\u8f7d <code>sudo apt install samba</code></p> </li> <li> <p>\u914d\u7f6e\u5171\u4eab\u76ee\u5f55 <code>chmod 777 /home/user/Public/ -R</code></p> </li> <li> <p>\u6dfb\u52a0samba\u7528\u6237 <code>sudo smbpasswd -a \u7528\u6237\u540d</code></p> </li> <li> <p>\u63d0\u793a\u8f93\u5165\u5bc6\u7801 x2</p> </li> <li> <p>\u914d\u7f6esamba <code>sudo vim /etc/samba/smb.conf</code></p> Bash<pre><code>[share name]            # \u5171\u4eab\u540d\n    path = /home/user/Public/# \u5171\u4eab\u8def\u5f84\n    writable = yes      # \u53ef\u5199\n</code></pre> </li> <li> <p>\u91cd\u542fsamba <code>sudo samba restart</code></p> <ul> <li>\u53ef\u80fd\u8fd8\u9700\u8981\u91cd\u542f\u4e00\u4e0b\u7535\u8111</li> </ul> </li> <li> <p>\u5f00\u542f\u7aef\u53e3 <code>sudo ufw allow 445</code></p> </li> </ol>"},{"location":"src/dev/linux/#smb_1","title":"SMB \u5ba2\u6237\u7aef","text":"<p>\u53c2\u8003\uff1a\u7cfb\u7edf\u542f\u52a8\u65f6\u81ea\u52a8\u6302\u8f7d SMB \u5171\u4eab</p> <ol> <li> <p>\u4e0b\u8f7d <code>sudo apt install cifs-utils</code></p> </li> <li> <p>\u6dfb\u52a0\u5171\u4eab\u6761\u76ee <code>sudo vim /etc/fstab</code></p> Text Only<pre><code>//ip/public /mnt/public cifs credentials=/root/smb.cred,uid=1000,gid=1000,iocharset=utf8 0 0\n</code></pre> <ul> <li><code>//ip/public</code> \u7f51\u7edc\u8def\u5f84</li> <li><code>/mnt/public</code> \u672c\u5730\u6302\u8f7d\u8def\u5f84</li> <li><code>cifs</code> \u6587\u4ef6\u7cfb\u7edf\u7c7b\u578b</li> <li><code>credentials=/root/smb.cred</code> \u6307\u5b9a\u4e86\u4e00\u4e2a\u5305\u542b\u767b\u5f55\u51ed\u636e\uff08\u7528\u6237\u540d\u548c\u5bc6\u7801\uff09\u7684\u6587\u4ef6</li> <li><code>uid=1000,gid=1000</code> \u7528\u6237\u548c\u7ec4 ID\uff0c\u786e\u4fdd\u6302\u8f7d\u540e\u7684\u6587\u4ef6\u6743\u9650\u6b63\u786e</li> <li><code>iocharset=utf8</code> \u8bbe\u7f6e\u5b57\u7b26\u96c6\u4e3a UTF-8\uff0c\u4ee5\u652f\u6301\u4e2d\u6587\u7b49\u975e ASCII \u5b57\u7b26</li> <li><code>0 0</code> \u4e0d\u8981\u8fdb\u884c dump \u5907\u4efd\uff0c\u542f\u52a8\u65f6\u4e0d\u9700\u8981\u68c0\u67e5</li> </ul> </li> <li> <p>\u521b\u5efa\u767b\u9646\u51ed\u636e <code>sudo vim /root/smb.cred</code></p> Text Only<pre><code>username=admin\npassword=admin\n</code></pre> </li> <li> <p>\u4fee\u6539\u51ed\u636e\u6743\u9650 <code>sudo chmod 600 /root/smb.cred</code></p> </li> <li> <p>\u91cd\u542f\u9a8c\u8bc1</p> </li> </ol>"},{"location":"src/dev/linux/#nfs","title":"NFS \u670d\u52a1\u7aef","text":"<ol> <li> <p>\u4e0b\u8f7d <code>sudo apt install nfs-kernel-server</code></p> </li> <li> <p>\u6dfb\u52a0\u5171\u4eab\u76ee\u5f55 </p> <ul> <li> <p><code>sudo mkdir -p /mnt/nfs</code></p> </li> <li> <p><code>sudo vim /etc/exports</code></p> Text Only<pre><code>/mnt/nfs *(rw,async,no_subtree_check,all_squash,insecure)\n</code></pre> <p>\u670d\u52a1\u7aef\u4e0d\u8981\u81ea\u5df1\u6dfb\u52a0\u6587\u4ef6\uff0c\u5ba2\u6237\u7aef\u65e0\u6cd5\u8bbf\u95ee</p> <p>\u6b64\u914d\u7f6e\u4e0b\uff0c\u6240\u6709\u7528\u6237\uff08nobody\uff09\u90fd\u53ef\u4ee5\u8bbf\u95ee\u5171\u4eab\u76ee\u5f55</p> <p><code>rw</code> \u8bfb\u5199\u6743\u9650</p> <p><code>async</code> \u5f02\u6b65\u5199\u5165</p> <p><code>no_subtree_check</code> \u7981\u6b62\u5b50\u76ee\u5f55\u68c0\u67e5</p> <p><code>all_squash</code> \u6240\u6709\u7528\u6237\u90fd\u6620\u5c04\u4e3a nobody \u7528\u6237</p> <p><code>insecure</code> \u5141\u8bb8\u975e\u7279\u6743\u7aef\u53e3\u8bbf\u95ee</p> </li> <li> <p><code>sudo chown nobody:nogroup /mnt/nfs -R</code></p> </li> <li> <p><code>sudo chmod 700 /mnt/nfs -R</code></p> </li> </ul> </li> <li> <p>\u91cd\u542fnfs <code>sudo systemctl restart nfs-kernel-server</code></p> </li> </ol>"},{"location":"src/dev/linux/#nfs_1","title":"NFS \u5ba2\u6237\u7aef","text":"<ol> <li> <p>\u4e0b\u8f7d <code>sudo apt install nfs-common</code></p> Text Only<pre><code>service rpcbind start\nservice nfs-common start\n</code></pre> </li> <li> <p>\u6302\u8f7d <code>sudo mount 10.0.0.15:/mnt/nfs /mnt/nfs</code></p> </li> <li> <p>\u6301\u4e45\u5316</p> Bash<pre><code>10.0.0.15:/mnt/nfs /mnt/nfs nfs nfsvers=4.1,noresvport 0 0\n</code></pre> </li> <li> <p>\u5f3a\u884c\u5378\u8f7d</p> Bash<pre><code>sudo umount -f -l /mnt/nfs\n</code></pre> </li> <li> <p>\u6d4b\u8bd5</p> Bash<pre><code>sudo docker run --rm -it --privileged ubuntu:latest bash -c \"\n    export DEBIAN_FRONTEND=noninteractive &amp;&amp;\n    ln -fs /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp;\n    apt update &amp;&amp; apt install -y nfs-common &amp;&amp; mkdir -p /mnt/nfs &amp;&amp;\n    mount -t nfs 10.0.0.15:/mnt/nfs /mnt/nfs &amp;&amp;\n    ls -la /mnt/nfs\"\n</code></pre> </li> </ol> <p></p>"},{"location":"src/dev/linux/#_15","title":"\u7cfb\u7edf","text":"<p><code>btop</code> \u72b6\u6001\u603b\u89c8</p> <p><code>screenfetch</code> \u914d\u7f6e</p>"},{"location":"src/dev/linux/#process","title":"Process","text":"<p><code>ps -aux</code> \u67e5\u770b\u6240\u6709\u8fdb\u7a0b</p> <p><code>ps -aux | grep [\u5173\u952e\u5b57]</code> \u67e5\u770b\u5305\u542b\u5173\u952e\u5b57\u7684\u8fdb\u7a0b</p> <p><code>ps -p [PID]</code> \u67e5\u770b\u6307\u5b9a\u8fdb\u7a0b</p> <p><code>ps -u [USER]</code> \u67e5\u770b\u6307\u5b9a\u7528\u6237\u7684\u8fdb\u7a0b</p> USER PID %CPU %MEM VSZ(KB) RSS(KB) TTY STAT START TIME COMMAND \u8fdb\u7a0b\u6240\u6709\u8005\u7684\u7528\u6237\u540d \u8fdb\u7a0b ID CPU \u4f7f\u7528\u7387 \u5185\u5b58\u4f7f\u7528\u7387 \u865a\u62df\u5185\u5b58\u5927\u5c0f \u5e38\u9a7b\u5185\u5b58\u96c6\u5927\u5c0f \u7ec8\u7aef\u7c7b\u578b \u8fdb\u7a0b\u72b6\u6001 \u542f\u52a8\u65f6\u95f4 \u8fdb\u7a0b\u4f7f\u7528\u7684 CPU \u65f6\u95f4 \u542f\u52a8\u8be5\u8fdb\u7a0b\u7684\u547d\u4ee4\u884c <ul> <li> <p><code>STAT</code>\uff1a</p> <ul> <li> <p><code>S</code> \u7761\u7720\uff1a\u7b49\u5f85\u4e8b\u4ef6\uff08\u7b49\u5f85 I/O \uff09</p> </li> <li> <p><code>s</code> \u9886\u5bfc\uff1a\u5177\u6709\u5b50\u8fdb\u7a0b</p> </li> <li> <p><code>+</code> \u524d\u53f0\u8fdb\u7a0b</p> </li> <li> <p><code>R</code> \u8fd0\u884c</p> </li> <li> <p><code>l</code> \u591a\u7ebf\u7a0b\uff0c\u514b\u9686\u7ebf\u7a0b</p> </li> <li> <p><code>L</code> \u6709\u4e9b\u9875\u88ab\u56fa\u5b9a\u5728\u5185\u5b58\u4e2d\uff0c\u4e0d\u5141\u8bb8\u4ea4\u6362\u5230\u78c1\u76d8</p> </li> <li> <p><code>D</code> \u4e0d\u53ef\u4e2d\u65ad\u7684\u7761\u7720\uff1a\u7b49\u5f85\u4e8b\u4ef6\u5b8c\u6210\uff08\u6b63\u5728\u8fdb\u884c I/O \uff09</p> </li> <li> <p><code>Z</code> \u50f5\u5c38\uff1a\u8fdb\u7a0b\u5df2\u7ecf\u7ec8\u6b62\uff0c\u4f46\u662f\u7236\u8fdb\u7a0b\u8fd8\u6ca1\u6709\u56de\u6536</p> </li> </ul> </li> </ul> <p><code>ps -ef</code> \u591a\u4e86\u4e00\u4e2a <code>ppid</code> \u7236\u8fdb\u7a0b ID</p> <p><code>ps -ef --forest</code> \u67e5\u770b\u8fdb\u7a0b\u6811</p> <p><code>pstree</code> \u67e5\u770b\u8fdb\u7a0b\u6811</p> <p><code>kill -9 [PID]</code> \u6740\u6b7b\u8fdb\u7a0b\uff0c<code>-9</code> \u662f\u5f3a\u5236\u6740\u6b7b</p> <p><code>pkill -9 [\u8fdb\u7a0b\u540d]</code> \u6740\u6b7b\u8fdb\u7a0b</p> <p><code>killall -9 [\u8fdb\u7a0b\u540d]</code> \u6740\u6b7b\u540c\u540d\u8fdb\u7a0b</p> <p></p>"},{"location":"src/dev/linux/#mem","title":"MEM","text":""},{"location":"src/dev/linux/#io","title":"IO","text":""},{"location":"src/dev/linux/#_16","title":"\u5176\u4ed6","text":"<p>\u67e5\u770b\u65f6\u95f4 <code>date</code>\uff0c\u4fee\u6539\u65f6\u533a</p> Bash<pre><code>sudo cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n</code></pre> <p>\u6821\u51c6\u65f6\u95f4</p> Bash<pre><code>sudo date -s \"$(wget -S  \"https://www.google.com/\" 2&gt;&amp;1 | grep -E '^[[:space:]]*[dD]ate:' | sed 's/^[[:space:]]*[dD]ate:[[:space:]]*//' | head -1l | awk '{print $1, $3, $2,  $5 ,\"GMT\", $4 }' | sed 's/,//')\"\n</code></pre> <p></p>"},{"location":"src/dev/linux/#_17","title":"\u7f51\u7edc","text":""},{"location":"src/dev/linux/#net","title":"net","text":"Bash<pre><code>sudo vi /etc/netplan/00-installer-config.yaml\n</code></pre> <ul> <li>\u9759\u6001 IP</li> </ul> YAML<pre><code>network:\n  ethernets:\n      eth0:\n        dhcp4: false\n        addresses:\n          - 10.0.0.2/24\n        routes:\n          - to: default\n            via: 10.0.0.1\n        nameservers:\n          addresses: [10.0.0.1,8.8.8.8]\n  version: 2\n</code></pre>"},{"location":"src/dev/linux/#port","title":"port","text":"<ul> <li> <p>\u67e5\u770b\u67d0\u8fdb\u7a0b\u5360\u7528\u7684\u7aef\u53e3</p> Bash<pre><code>watch -n 1 'lsof -i -nP | grep \u8fdb\u7a0b'\n</code></pre> </li> </ul>"},{"location":"src/dev/linux/#ping","title":"ping","text":""},{"location":"src/dev/linux/#traceroute","title":"traceroute","text":""},{"location":"src/dev/linux/#nextroute","title":"nextroute","text":""},{"location":"src/dev/linux/#ip-route","title":"ip route","text":"<p><code>ip route show</code> \u67e5\u770b\u8def\u7531\u8868</p> <ul> <li> <p>[destination network]</p> <ul> <li>ip/mask\uff1a\u76ee\u6807\u7f51\u7edc\uff0c\u4f8b\u5982 <code>10.0.1.0/24</code></li> <li>default\uff1a\u9ed8\u8ba4\u8def\u7531\uff0c\u7528 <code>\"default\"</code> \u8868\u793a</li> </ul> </li> <li> <p><code>via</code> [gateway ip]</p> <ul> <li>gateway ip\uff1a\u7ecf\u8fc7\u7684\u7f51\u5173 IP \u5730\u5740\u3002\u5982\u679c\u6ca1\u6709\u7f51\u5173\uff0c\u8be5\u5b57\u6bb5\u4e3a\u7a7a\u3002</li> </ul> </li> <li> <p><code>dev</code> [interface]</p> <ul> <li>interface\uff1a\u51fa\u53e3\u63a5\u53e3\uff0c\u901a\u8fc7\u54ea\u4e2a\u63a5\u53e3\u53d1\u9001\u6570\u636e\u5305\uff08\u5982 <code>eth0</code>\u3001<code>br-lan</code>\u3001<code>tun0</code> \u7b49\uff09</li> </ul> </li> <li> <p><code>proto</code> [protocol]</p> <ul> <li>static\uff1a\u9759\u6001\u8def\u7531</li> <li>kernel\uff1a\u5185\u6838\u8def\u7531\uff08\u7cfb\u7edf\u81ea\u52a8\u751f\u6210\uff09</li> </ul> </li> <li> <p><code>scope</code> [scope type]</p> <ul> <li>link\uff1a\u4f5c\u7528\u8303\u56f4\u4e3a\u672c\u5730\u94fe\u8def\uff0c\u6570\u636e\u5305\u4e0d\u4f1a\u88ab\u8f6c\u53d1</li> </ul> </li> <li> <p><code>src</code> [source ip]</p> <ul> <li>source ip\uff1a\u6307\u5b9a\u6e90\u5730\u5740\uff0c\u7528\u4e8e\u53d1\u9001\u5230\u8be5\u76ee\u6807\u7f51\u7edc\u7684\u6570\u636e\u5305</li> </ul> </li> </ul> Bash<pre><code># \uff08\u5907\u4efd\u8def\u7531\uff09\u5982\u679c\u6ca1\u6709\u5339\u914d\u7684\u8def\u7531\uff0c\u5c31\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u8def\u7531\uff0c\u4ece eth0 \u53d1\u9001\ndefault via 180.85.207.254 dev eth0 proto static src 180.85.207.68\n# 180.85.206.0/23 \u662f\u672c\u5730\u7f51\u7edc\uff0c\u901a\u8fc7 eth0 \u53d1\u9001\n180.85.206.0/23 dev eth0 proto kernel scope link src 180.85.207.68\n# DHCP \u5206\u914d\u7684\u672c\u5730\u7f51\u7edc\uff0c\u901a\u8fc7 br-lan \u53d1\u9001\n10.0.9.0/24 dev br-lan proto kernel scope link src 10.0.9.1\n\n# \u6240\u6709\u6d41\u91cf\u901a\u8fc7 tun0\n0.0.0.0/1 via 10.0.1.1 dev tun0\n128.0.0.0/1 via 10.0.1.1 dev tun0\n# \u5230\u8fbe 27.15.165.202 \u7684\u6d41\u91cf\uff0c\u901a\u8fc7 eth0\uff08\u5bf9\u7aef VPN \u7f51\u7edc\u7684\u516c\u7f51 IP\uff09\n27.15.165.202 via 180.85.207.254 dev eth0 \n# VPN \u7f51\u7edc\uff0c\u901a\u8fc7 tun0 \u53d1\u9001\n10.0.1.0/24 dev tun0 proto kernel scope link src 10.0.1.3\n# \u5230\u8fbe 10.0.0.0/24\uff08\u5bf9\u7aef\u7f51\u7edc\uff09\u7684\u6d41\u91cf\uff0c\u901a\u8fc7 tun0 \u53d1\u9001\n10.0.0.0/24 via 10.0.1.1 dev tun0\n\n# \u5230\u8fbe 10.10.8.162 \u7684\u6d41\u91cf\uff0c\u901a\u8fc7 eth0 \u53d1\u9001\n10.10.8.162 via 180.85.207.254 dev eth0 proto static\n</code></pre> <p></p>"},{"location":"src/dev/linux/#iptables","title":"iptables","text":""},{"location":"src/dev/linux/#curl","title":"curl","text":"<ul> <li>\u4ee3\u7406\u8bf7\u6c42 <code>curl -x http://192.168.19.19:7890</code></li> </ul>"},{"location":"src/dev/linux/#wget","title":"wget","text":"<ul> <li> <p>\u5e26\u5bc6\u7801\u4e0b\u8f7d <code>wget --http-user=\u7528\u6237\u540d --http-password=\u5bc6\u7801 http://url</code></p> </li> <li> <p>\u4ee3\u7406\u4e0b\u8f7d <code>wget -e \"https_proxy=http://192.168.19.19:7890\"</code></p> </li> </ul> <p></p>"},{"location":"src/dev/linux/#nmap","title":"nmap","text":"<p>\u5b98\u65b9\u4e2d\u6587\u6587\u6863</p> <p><code>nmap [ &lt;\u626b\u63cf\u7c7b\u578b&gt; ...] [ &lt;\u9009\u9879&gt; ] { &lt;\u626b\u63cf\u76ee\u6807\u8bf4\u660e&gt; }</code></p>"},{"location":"src/dev/linux/#nmap_1","title":"nmap \u7aef\u53e3\u72b6\u6001","text":""},{"location":"src/dev/linux/#open","title":"open\uff08\u5f00\u653e\u7684\uff09","text":"<p>\u5e94\u7528\u7a0b\u5e8f\u6b63\u5728\u76d1\u542c\u7aef\u53e3\uff0c\u6216\u8005\u54cd\u5e94\u4e00\u4e2a\u8bf7\u6c42\u6765\u81ea\u5df2\u8fde\u63a5\u7684\u5ba2\u6237\u7aef\u3002\u63a5\u6536TCP\u8fde\u63a5\u6216\u8005UDP\u62a5\u6587\u3002</p>"},{"location":"src/dev/linux/#closed","title":"closed\uff08\u5173\u95ed\u7684\uff09","text":"<p>\u6ca1\u6709\u5e94\u7528\u7a0b\u5e8f\u76d1\u542c\u7aef\u53e3\u3002\u4f46\u662f\u6b64\u7aef\u53e3\u53ef\u4ee5\u88ab\u63a2\u6d4b\u5230\uff0c\u56e0\u4e3a\u6ca1\u6709\u5e94\u7528\u7a0b\u5e8f\u76d1\u542c\uff0c\u6240\u4ee5\u4f1a\u8fd4\u56de\u4e00\u4e2a RST \u5305\u6216\u8005 ICMP \u7aef\u53e3\u4e0d\u53ef\u8fbe\u6d88\u606f\u3002</p>"},{"location":"src/dev/linux/#filtered","title":"filtered\uff08\u5c4f\u853d\u7684\uff09","text":"<p>\u9632\u706b\u5899\u6216\u8005 ACL \u5c4f\u853d\u4e86\u7aef\u53e3\uff0c\u6240\u4ee5\u65e0\u6cd5\u786e\u5b9a\u7aef\u53e3\u662f\u5426\u5f00\u653e\u3002\u76ee\u6807\u7aef\u53e3\u53ef\u80fd\u6709\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\uff1a * \u672a\u54cd\u5e94\uff0c\u5c4f\u853d\u5668\u4e22\u5f03\u4e86\u63a2\u6d4b\u5305\uff0c\u6b64\u4e3e\u4f1a\u8ba9 nmap \u8bef\u8ba4\u4e3a\u63a2\u6d4b\u5305\u4e22\u5931\uff0c\u5bfc\u81f4\u626b\u63cf\u65f6\u95f4\u53d8\u957f\u3002 * \u4e22\u5f03\u4e86\u63a2\u6d4b\u5305\uff0c\u4f46\u662f\u8fd4\u56de\u4e86 ICMP \u9519\u8bef\u6d88\u606f\u3002</p>"},{"location":"src/dev/linux/#unfiltered","title":"unfiltered\uff08\u672a\u5c4f\u853d\u7684\uff09","text":"<p>\u9632\u706b\u5899\u6216\u8005 ACL \u6ca1\u6709\u5c4f\u853d\u7aef\u53e3\uff0c\u4f46\u662f nmap \u65e0\u6cd5\u786e\u5b9a\u7aef\u53e3\u5f00\u653e\u6216\u8005\u5173\u95ed\u3002\u7528\u5176\u5b83\u7c7b\u578b\u7684\u626b\u63cf\uff0c\u5982\u7a97\u53e3\u626b\u63cf\uff0cSYN \u626b\u63cf\uff0c\u6216\u8005 FIN \u626b\u63cf\u53ef\u4ee5\u5e2e\u52a9\u786e\u5b9a\u7aef\u53e3\u662f\u5426\u5f00\u653e\u3002</p>"},{"location":"src/dev/linux/#openfiltered","title":"open|filtered\uff08\u5f00\u653e\u6216\u8005\u5c4f\u853d\u7684\uff09","text":"<p>\u5f00\u653e\u7684\u7aef\u53e3\u4e0d\u54cd\u5e94\u63a2\u6d4b\u5305\uff0c\u5c4f\u853d\u7684\u7aef\u53e3\u4e5f\u4e0d\u54cd\u5e94\u63a2\u6d4b\u5305\u3002\u6240\u4ee5\u65e0\u6cd5\u786e\u5b9a\u7aef\u53e3\u662f\u5426\u5f00\u653e\u3002</p>"},{"location":"src/dev/linux/#closedfiltered","title":"closed|filtered\uff08\u5173\u95ed\u6216\u8005\u5c4f\u853d\u7684\uff09","text":"<p>\u53ea\u53ef\u80fd\u51fa\u73b0\u5728 IPID Idle \u626b\u63cf\u4e2d\uff0c\u56e0\u4e3a\u6b64\u626b\u63cf\u7c7b\u578b\u9700\u8981\u53d1\u9001\u4e24\u4e2a\u63a2\u6d4b\u5305\uff0c\u5982\u679c\u4e24\u4e2a\u63a2\u6d4b\u5305\u90fd\u6ca1\u6709\u54cd\u5e94\uff0c\u90a3\u4e48\u5c31\u65e0\u6cd5\u786e\u5b9a\u7aef\u53e3\u662f\u5426\u5f00\u653e\u3002</p>"},{"location":"src/dev/linux/#nmap_2","title":"nmap \u626b\u63cf\u6280\u672f","text":""},{"location":"src/dev/linux/#1","title":"1 \u9ed8\u8ba4\u626b\u63cf","text":"<p><code>nmap dxll.love</code></p> <p>\u9ed8\u8ba4\u626b\u63cf\u662f nmap \u7684\u6700\u57fa\u672c\u7684\u626b\u63cf\u65b9\u5f0f\uff0c\u5b83\u4f1a\u626b\u63cf 1000 \u4e2a\u6700\u5e38\u7528\u7684\u7aef\u53e3\uff0c\u626b\u63cf\u65b9\u5f0f\u662f SYN \u626b\u63cf\u3002</p> Bash<pre><code>nmap -T0 dxll.love\nnmap -T1 dxll.love\nnmap -T2 dxll.love\nnmap -T3 dxll.love\nnmap -T4 dxll.love\nnmap -T5 dxll.love\n</code></pre> <p><code>-T0</code> \u662f\u6700\u6162\u7684\u626b\u63cf\u65b9\u5f0f\uff0c<code>-T5</code> \u662f\u6700\u5feb\u7684\u626b\u63cf\u65b9\u5f0f\uff0c<code>-T3</code> \u662f\u9ed8\u8ba4\u7684\u626b\u63cf\u65b9\u5f0f\uff0c<code>-T4</code> \u662f\u5e38\u7528\u7684\u626b\u63cf\u65b9\u5f0f\u3002</p> <p><code>nmap -6 dxll.love</code></p> <p>\u5f00\u542f IPv6 \u626b\u63cf\u3002</p> <p><code>nmap -v dxll.love</code></p> <p>\u5f00\u542f\u8be6\u7ec6\u6a21\u5f0f\uff0c\u663e\u793a\u626b\u63cf\u8fc7\u7a0b\u3002</p> <p><code>nmap -A dxll.love</code></p> <p>\u5168\u9762\u626b\u63cf\uff0c\u5305\u62ec 1-10000 \u7aef\u53e3\u626b\u63cf\uff0c\u670d\u52a1\u7248\u672c\u63a2\u6d4b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u63a2\u6d4b\uff0c\u811a\u672c\u626b\u63cf\u7b49\u3002</p>"},{"location":"src/dev/linux/#2-ip","title":"2 \u626b\u63cf\u591a\u4e2a IP","text":"Bash<pre><code>nmap spacex.com dxll.love   # \u626b\u63cf\u591a\u4e2a\u57df\u540d\nnmap 192.168.31.100,101,102 # \u626b\u63cf\u540c\u4e00\u7f51\u6bb5\u7684\u591a\u4e2a IP\uff0c\u53ef\u4ee5\u7528\u9017\u53f7\u5206\u9694\nnmap 192.168.31.*           # \u626b\u63cf\u540c\u4e00\u7f51\u6bb5\u7684\u591a\u4e2a IP\uff0c\u53ef\u4ee5\u7528\u901a\u914d\u7b26\nnmap 192.168.31.1/24        # \u626b\u63cf\u540c\u4e00\u7f51\u6bb5\u7684\u591a\u4e2a IP\uff0c\u53ef\u4ee5\u7528 CIDR \u8868\u793a\u6cd5\n</code></pre>"},{"location":"src/dev/linux/#3","title":"3 \u626b\u63cf\u6307\u5b9a\u7aef\u53e3","text":"Bash<pre><code>nmap -p 80 dxll.love        # \u626b\u63cf\u5355\u4e2a\u7aef\u53e3\nnmap -p 80,443 dxll.love    # \u626b\u63cf\u591a\u4e2a\u7aef\u53e3\nnmap -p 1-100 dxll.love     # \u626b\u63cf\u7aef\u53e3\u8303\u56f4\nnmap -p-                    # \u626b\u63cf\u6240\u6709\u7aef\u53e3 \u7b49\u4ef7\u4e8e nmap -p 1-65535\n</code></pre>"},{"location":"src/dev/linux/#4-tcp","title":"4 TCP\u626b\u63cf","text":""},{"location":"src/dev/linux/#tcp-syn","title":"TCP SYN \u626b\u63cf","text":"<p><code>nmap -sS dxll.love</code></p> <p>\u6b64\u65b9\u5f0f\u4e0d\u5b8c\u6210 TCP \u4e09\u6b21\u63e1\u624b\uff0c\u800c\u662f\u53d1\u9001\u4e00\u4e2a SYN \u5305\uff0c\u5982\u679c\u76ee\u6807\u7aef\u53e3\u5f00\u653e\uff0c\u90a3\u4e48\u4f1a\u8fd4\u56de\u4e00\u4e2a SYN/ACK \u5305\uff0c\u5982\u679c\u7aef\u53e3\u5173\u95ed\uff0c\u90a3\u4e48\u4f1a\u8fd4\u56de\u4e00\u4e2a RST \u5305\u3002</p>"},{"location":"src/dev/linux/#tcp-connect","title":"TCP Connect \u626b\u63cf","text":"<p><code>nmap -sT dxll.love</code></p> <p>\u6b64\u65b9\u5f0f\u5b8c\u6210 TCP \u4e09\u6b21\u63e1\u624b\uff0c\u5982\u679c\u76ee\u6807\u7aef\u53e3\u5f00\u653e\uff0c\u90a3\u4e48\u4f1a\u8fd4\u56de\u4e00\u4e2a SYN/ACK \u5305\uff0c\u5982\u679c\u7aef\u53e3\u5173\u95ed\uff0c\u90a3\u4e48\u4f1a\u8fd4\u56de\u4e00\u4e2a RST \u5305\u3002 \u76ee\u6807\u4e3b\u673a\u53ef\u80fd\u4f1a\u8bb0\u5f55\u4e0b\u8fde\u63a5\uff0c\u6240\u4ee5\u6b64\u65b9\u5f0f\u4e0d\u592a\u9690\u853d\u3002</p>"},{"location":"src/dev/linux/#tcp","title":"TCP \u9690\u79d8\u626b\u63cf","text":"<p>\u5982\u679c\u6536\u5230 RST \u54cd\u5e94\uff0c\u5219\u7aef\u53e3\u5173\u95ed\uff0c\u5426\u5219\u5224\u5b9a\u7aef\u53e3\u5f00\u653e\u6216\u88ab\u5c4f\u853d\u3002</p> <p><code>nmap -sN dxll.love</code></p> <p>\u4e0d\u8bbe\u7f6e\u4efb\u4f55\u6807\u5fd7\u4f4d\u3002</p> <p><code>nmap -sF dxll.love</code></p> <p>\u53ea\u8bbe\u7f6eTCP FIN\u6807\u5fd7\u4f4d\u3002</p> <p><code>nmap -sX dxll.love</code></p> <p>flags\u7684FIN\u3001URG\u3001PUSH\u90fd\u4e3a1\u7684\u5305\u3002</p>"},{"location":"src/dev/linux/#tcp-ping","title":"TCP ping \u626b\u63cf","text":"<p><code>nmap -sP dxll.love</code></p> <p>\u901a\u8fc7\u53d1\u9001ICMP Echo\u8bf7\u6c42\uff08\u4e5f\u79f0\u4e3aPing\u8bf7\u6c42\uff09\u5230\u76ee\u6807\u4e3b\u673a\uff0c\u547d\u4ee4\u5c06\u68c0\u6d4b\u4e3b\u673a\u662f\u5426\u54cd\u5e94\u4e86\u8bf7\u6c42\u5e76\u8fd4\u56deIP\u5730\u5740\u3002\u5982\u679c\u4e3b\u673a\u54cd\u5e94\uff0c\u5219\u8868\u793a\u4e3b\u673a\u662f\u5728\u7ebf\u7684\u3002\u5728\u8fd9\u4e2a\u626b\u63cf\u4e2d\uff0cNmap\u53ea\u68c0\u67e5\u662f\u5426\u6709\u54cd\u5e94\uff0c\u800c\u4e0d\u626b\u63cf\u4e3b\u673a\u7684\u4efb\u4f55\u7aef\u53e3\u3002</p>"},{"location":"src/dev/linux/#5-udp","title":"5 UDP \u626b\u63cf","text":"<p><code>namp -sU dxll.love</code></p> <p>UDP \u626b\u63cf\u9700\u8981\u53d1\u9001 UDP \u5305\uff0c\u5982\u679c\u76ee\u6807\u7aef\u53e3\u5f00\u653e\uff0c\u90a3\u4e48\u4f1a\u8fd4\u56de\u4e00\u4e2a ICMP \u7aef\u53e3\u4e0d\u53ef\u8fbe\u6d88\u606f\uff0c\u5982\u679c\u7aef\u53e3\u5173\u95ed\uff0c\u90a3\u4e48\u4f1a\u8fd4\u56de\u4e00\u4e2a ICMP \u7aef\u53e3\u4e0d\u53ef\u8fbe\u6d88\u606f\u6216\u8005\u6ca1\u6709\u54cd\u5e94\u3002</p>"},{"location":"src/dev/linux/#6","title":"6 \u8def\u7531\u8ddf\u8e2a","text":"<p><code>nmap --traceroute dxll.love</code></p> <p>\u67e5\u51fa\u4ece\u672c\u5730\u8ba1\u7b97\u673a\u5230\u76ee\u6807\u4e4b\u95f4\u6240\u7ecf\u8fc7\u7684\u7f51\u7edc\u8282\u70b9\uff0c\u5e76\u53ef\u4ee5\u770b\u5230\u901a\u8fc7\u5404\u4e2a\u8282\u70b9\u7684\u65f6\u95f4\u3002</p>"},{"location":"src/dev/linux/#7","title":"7 \u64cd\u4f5c\u7cfb\u7edf\u63a2\u6d4b","text":"<p><code>nmap -O dxll.love</code></p> <p>nmap \u4f1a\u53d1\u9001\u4e00\u7cfb\u5217\u7684 TCP \u548c UDP \u5305\uff0c\u7136\u540e\u5206\u6790\u8fd4\u56de\u7684\u5305\uff0c\u4ece\u800c\u5224\u65ad\u76ee\u6807\u4e3b\u673a\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002</p> <p></p>"},{"location":"src/dev/linux/#telnet","title":"telnet","text":""},{"location":"src/dev/linux/#iperf3","title":"iperf3","text":""},{"location":"src/dev/linux/#tmux","title":"tmux","text":"<p>\u7ec8\u7aef\u590d\u7528</p> <p></p>"},{"location":"src/dev/linux/#_18","title":"\u5b88\u62a4\u8fdb\u7a0b","text":"<p>Systemd</p> <p></p>"},{"location":"src/dev/linux/#_19","title":"\u8ba1\u5212\u4f5c\u4e1a","text":"<p><code>crontab</code></p> <ul> <li>\u67e5\u770b\u8ba1\u5212\u4f5c\u4e1a <code>crontab -l</code></li> <li>\u7f16\u8f91\u8ba1\u5212\u4f5c\u4e1a <code>crontab -e</code></li> <li>\u5220\u9664\u8ba1\u5212\u4f5c\u4e1a <code>crontab -r</code></li> </ul> <p></p>"},{"location":"src/dev/linux/#ufw","title":"UFW","text":"<ul> <li><code>ufw enable</code> \u542f\u52a8\u9632\u706b\u5899 </li> <li><code>ufw disenable</code>  \u5173\u95ed\u9632\u706b\u5899 </li> <li><code>ufw allow 22</code> \u6253\u5f00\u7aef\u53e3</li> <li><code>ufw delete allow 22</code> \u5173\u95ed\u7aef\u53e3</li> <li><code>ufw status</code> \u9632\u706b\u5899\u72b6\u6001</li> </ul>"},{"location":"src/dev/linux/#_20","title":"\u8fdc\u7a0b\u684c\u9762","text":""},{"location":"src/dev/linux/#other-linux","title":"other -&gt; linux","text":"<p>\u76f4\u63a5\u4f7f\u7528\u5fae\u8f6f\u7684\u8fdc\u7a0b\u684c\u9762\u534f\u8bae\uff08RDP\uff09</p> <ol> <li> <p>\u4e0b\u8f7d <code>sudo apt install xrdp</code></p> </li> <li> <p>\u6253\u5f00\u7aef\u53e3 <code>sudo ufw allow 3389</code></p> </li> </ol>"},{"location":"src/dev/linux/#linux-other","title":"linux -&gt; other","text":"<ol> <li> <p><code>sudo apt install freerdp2-x11</code></p> </li> <li> <p><code>xfreerdp /v:10.0.0.6 /u:root /p:password</code></p> </li> </ol>"},{"location":"src/dev/macos/","title":"\ud83e\uddd1\u200d\ud83d\udcbb MacOS","text":""},{"location":"src/dev/macos/#_1","title":"\u5feb\u6377\u952e","text":""},{"location":"src/dev/macos/#_2","title":"\u81ea\u5b9a\u4e49\u7684","text":"<ul> <li><code>command</code> <code>space</code>\uff1a\u542f\u52a8\u53f0</li> </ul>"},{"location":"src/dev/macos/#_3","title":"\u7cfb\u7edf\u7684","text":"<p>\u622a\u56fe</p> <ul> <li> <p><code>command</code> <code>shift</code> <code>5</code>\uff1a\u622a\u56fe</p> </li> <li> <p><code>command</code> <code>shift</code> <code>4</code>\uff1a\u9009\u533a\u622a\u56fe\uff0c<code>control</code>\uff1a\u622a\u56fe\u5230\u526a\u8d34\u677f</p> </li> <li> <p><code>command</code> <code>shift</code> <code>3</code>\uff1a\u5168\u5c4f\u622a\u56fe\uff0c<code>control</code>\uff1a\u622a\u56fe\u5230\u526a\u8d34\u677f</p> </li> </ul>"},{"location":"src/dev/macos/#brew","title":"brew","text":""},{"location":"src/dev/macos/#ds_store","title":"\u5173\u95ed <code>.DS_Store</code>","text":"Bash<pre><code>defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool TRUE\n</code></pre>"},{"location":"src/dev/mysql/","title":"\ud83d\udcaa\ud83c\udffb MySQL","text":""},{"location":"src/dev/mysql/#setup","title":"setup","text":""},{"location":"src/dev/mysql/#linux","title":"linux","text":"<ol> <li> <p>\u4e0b\u8f7d\u5b89\u88c5</p> <ul> <li><code>apt install mysql-server</code></li> <li><code>apt install mysql-client</code></li> </ul> </li> <li> <p>\u521d\u59cb\u5316</p> <ul> <li><code>mysql_secure_installation</code></li> </ul> </li> <li> <p>\u542f\u52a8\u670d\u52a1</p> <ul> <li><code>service mysql start</code></li> </ul> </li> <li> <p>\u767b\u5f55</p> <ul> <li><code>mysql -u root -p</code></li> </ul> </li> <li> <p>\u8bbe\u7f6e\u5bc6\u7801</p> <ul> <li><code>use mysql;</code></li> <li><code>ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '12345678';</code></li> </ul> </li> <li> <p>\u9000\u51fa</p> <ul> <li><code>quit</code></li> </ul> </li> </ol>"},{"location":"src/dev/mysql/#windows","title":"windows","text":"<ol> <li> <p>\u4e0b\u8f7d</p> </li> <li> <p>\u9ed8\u8ba4\u5b89\u88c5\u5373\u53ef</p> </li> </ol> <p></p>"},{"location":"src/dev/mysql/#ues","title":"ues","text":""},{"location":"src/dev/mysql/#_1","title":"\u5176\u4ed6","text":"<ul> <li>\u5bfc\u51fa\u6570\u636e\u5e93     Bash<pre><code>mysqldump -uroot -p1234 --databases db1 --tables t1 &gt;/tmp/db1.sql\n</code></pre></li> </ul>"},{"location":"src/dev/mysql/#_2","title":"\u5e93","text":""},{"location":"src/dev/mysql/#_3","title":"\u589e","text":"<ul> <li>\u521b\u5efa\u6570\u636e\u5e93     SQL<pre><code>create database \u5e93\u540d;\n</code></pre></li> </ul>"},{"location":"src/dev/mysql/#_4","title":"\u5220","text":"<ul> <li>\u5220\u9664\u6570\u636e\u5e93     SQL<pre><code>drop database \u5e93\u540d;\n</code></pre></li> </ul>"},{"location":"src/dev/mysql/#_5","title":"\u6539","text":"<ul> <li>\u5207\u6362\u5f53\u524d\u4f7f\u7528\u7684\u6570\u636e\u5e93     SQL<pre><code>use \u5e93\u540d;\n</code></pre></li> </ul>"},{"location":"src/dev/mysql/#_6","title":"\u67e5","text":"<ul> <li>\u67e5\u770b\u6240\u6709\u6570\u636e\u5e93     SQL<pre><code>show databases;\n</code></pre></li> </ul>"},{"location":"src/dev/mysql/#_7","title":"\u8868","text":""},{"location":"src/dev/mysql/#_8","title":"\u589e","text":"<ul> <li>\u521b\u5efa\u8868      SQL<pre><code>CREATE TABLE \u8868\u540d(\n    \u5217\u540d \u7c7b\u578b \u7ea6\u675f,\n    user_id INT AUTO_INCREMENT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    birthdate DATE\n);\n</code></pre></li> </ul>"},{"location":"src/dev/mysql/#_9","title":"\u5220","text":"<ul> <li>\u5220\u9664\u67d0\u5f20\u8868      SQL<pre><code>drop table \u8868\u540d;\n</code></pre></li> </ul>"},{"location":"src/dev/mysql/#_10","title":"\u6539","text":""},{"location":"src/dev/mysql/#_11","title":"\u67e5","text":"<ul> <li>\u67e5\u770b\u6240\u6709\u8868      SQL<pre><code>show tables;\n</code></pre></li> </ul>"},{"location":"src/dev/mysql/#_12","title":"\u8bb0\u5f55","text":""},{"location":"src/dev/mysql/#_13","title":"\u589e","text":"<ul> <li>\u589e\u52a0\u4e00\u6761\u8bb0\u5f55     SQL<pre><code>INSERT INTO \u8868\u540d (\u5217\u540d, \u5217\u540d)\nVALUES ('Alice', 20);\n</code></pre></li> </ul>"},{"location":"src/dev/mysql/#_14","title":"\u5220","text":"<ul> <li>\u5220\u9664\u4e00\u6761\u8bb0\u5f55     SQL<pre><code>delete from \u8868\u540d where \u5217\u540d = \u503c;\n</code></pre></li> </ul>"},{"location":"src/dev/mysql/#_15","title":"\u6539","text":""},{"location":"src/dev/mysql/#_16","title":"\u67e5","text":"<ul> <li>\u67e5\u770b\u8868\u4e2d\u6240\u6709\u6570\u636e     SQL<pre><code>select * from \u8868\u540d;\n</code></pre></li> </ul>"},{"location":"src/dev/nginx/","title":"\ud83d\udcaa\ud83c\udffb Nginx","text":""},{"location":"src/dev/nginx/#_1","title":"\u53c2\u8003","text":"<ul> <li> <p>\u4e3a\u6ca1\u670980\u3001443\u7aef\u53e3\u7684\u57df\u540d\u7533\u8bf7SSL\u8bc1\u4e66</p> </li> <li> <p>\u963f\u91cc\u4e91\uff1aNginx\u6216Tengine\u670d\u52a1\u5668\u914d\u7f6eSSL\u8bc1\u4e66</p> </li> </ul> <p></p>"},{"location":"src/dev/nginx/#_2","title":"\u5b89\u88c5\u53ca\u4f7f\u7528","text":"<ol> <li> <p>\u5b89\u88c5</p> Bash<pre><code>sudo apt install nginx\n</code></pre> </li> <li> <p>\u5378\u8f7d</p> Bash<pre><code>sudo apt purge nginx nginx-common\nsudo apt autoremove\n</code></pre> </li> <li> <p>\u70ed\u91cd\u8f7d</p> Bash<pre><code>sudo nginx -s reload\n</code></pre> </li> <li> <p>\u91cd\u542f\u670d\u52a1</p> Bash<pre><code>sudo systemctl restart nginx\n</code></pre> </li> </ol> <p></p>"},{"location":"src/dev/nginx/#etcnginxnginxconf","title":"/etc/nginx/nginx.conf","text":"<ul> <li>\u4e3b\u914d\u7f6e\u6587\u4ef6\uff1a\u7528\u4e8e\u5b9a\u4e49\u5168\u5c40\u914d\u7f6e\u548c\u57fa\u672c\u8bbe\u7f6e</li> <li>\u5305\u542b\u6307\u4ee4\uff1a\u5305\u542b\u670d\u52a1\u5668\u7ea7\u522b\u7684\u8bbe\u7f6e\u3001\u5168\u5c40\u53d8\u91cf\u3001\u5de5\u4f5c\u8fdb\u7a0b\u6570\u3001\u65e5\u5fd7\u6587\u4ef6\u4f4d\u7f6e\u3001\u7528\u6237\u6743\u9650\u3001\u52a0\u8f7d\u6a21\u5757\u7b49</li> <li>\u5305\u542b\u5176\u4ed6\u6587\u4ef6\uff1a\u901a\u5e38\u4f1a\u4f7f\u7528include\u6307\u4ee4\u5c06\u5176\u4ed6\u914d\u7f6e\u6587\u4ef6\u5305\u542b\u8fdb\u6765\uff0c\u5982/etc/nginx/conf.d/*.conf\uff0c\u4ece\u800c\u7ec4\u7ec7\u548c\u7ba1\u7406\u914d\u7f6e\u6587\u4ef6</li> </ul>"},{"location":"src/dev/nginx/#etcnginxconfdconf","title":"/etc/nginx/conf.d/*.conf","text":"<ul> <li>\u865a\u62df\u4e3b\u673a\u914d\u7f6e\u6587\u4ef6\uff1a\u7528\u4e8e\u5b9a\u4e49\u5177\u4f53\u7684\u865a\u62df\u4e3b\u673a\uff08\u670d\u52a1\u5668\uff09\u914d\u7f6e\u7684\u6587\u4ef6\uff0c\u901a\u5e38\u7528\u4e8e\u8bbe\u7f6e\u7279\u5b9a\u57df\u540d\u7684\u670d\u52a1\u5668\u5757</li> <li>\u4f5c\u7528\u8303\u56f4\uff1a\u8fd9\u4e2a\u6587\u4ef6\u4e3b\u8981\u5305\u542bHTTP\u670d\u52a1\u5668\u5757\uff08server block\uff09\uff0c\u5b9a\u4e49\u4e86\u5177\u4f53\u7684\u57df\u540d\u3001\u76d1\u542c\u7aef\u53e3\u3001\u6839\u76ee\u5f55\u3001\u65e5\u5fd7\u8def\u5f84\u3001\u53cd\u5411\u4ee3\u7406\u8bbe\u7f6e\u7b49</li> <li>\u4ece\u5c5e\u5173\u7cfb\uff1a\u8fd9\u4e2a\u6587\u4ef6\u901a\u5e38\u88ab\u4e3b\u914d\u7f6e\u6587\u4ef6 nginx.conf \u901a\u8fc7 include \u6307\u4ee4\u5305\u542b\u8fdb\u6765\uff0c\u4f7f\u5f97Nginx\u80fd\u591f\u52a0\u8f7d\u8fd9\u4e9b\u865a\u62df\u4e3b\u673a\u914d\u7f6e</li> </ul> Text Only<pre><code>server {\n    listen 80;                    # IPv4 80\u7aef\u53e3\n\n    server_name example.com;      # \u57df\u540d\n\n    root /var/www/example.com;    # \u7f51\u7ad9\u6839\u76ee\u5f55\n    index index.html;             # \u9ed8\u8ba4\u9996\u9875\n\n    location / {\n        try_files $uri $uri/ =404;# \u6587\u4ef6\u67e5\u627e\u89c4\u5219\n    }\n}\n</code></pre>"},{"location":"src/dev/nginx/#ssl","title":"SSL \u8bc1\u4e66","text":"Text Only<pre><code>server {\n    listen 80;                              # \u5c06 http \u91cd\u5b9a\u5411\u5230 https\n    server_name dxlcq.cn;\n    return 301 https://$host$request_uri;\n}\n\nserver {\n    listen 443 ssl;\n    server_name dxlcq.cn;\n\n    ssl_certificate     /etc/letsencrypt/live/dxlcq.cn/fullchain.pem;   # SSL \u5b8c\u6574\u8bc1\u4e66\n    ssl_certificate_key /etc/letsencrypt/live/dxlcq.cn/privkey.pem;     # SSL \u79c1\u94a5\n    ssl_session_cache   shared:SSL:1m;                                  # \u7f13\u5b58 SSL \u4f1a\u8bdd\n    ssl_ciphers         HIGH:!aNULL:!MD5;                               # \u652f\u6301\u7684\u5bc6\u7801\u5957\u4ef6\n    ssl_protocols       TLSv1.2 TLSv1.3;                                # \u652f\u6301\u7684\u534f\u8bae\u7248\u672c\n    ssl_prefer_server_ciphers on;                                       # \u4f18\u5148\u4f7f\u7528\u670d\u52a1\u5668\u5bc6\u7801\u5957\u4ef6\n\n    location /.well-known {                                             # \u7528\u4e8e\u9a8c\u8bc1\u57df\u540d\u6240\u6709\u6743\n        root /;\n    }\n}\n</code></pre> <ul> <li> <p>\u5b89\u88c5 <code>certbot</code></p> Bash<pre><code>sudo snap install --classic certbot\nsudo ln -s /snap/bin/certbot /usr/bin/certbot\n</code></pre> </li> <li> <p>\u9996\u6b21\u7533\u8bf7</p> Bash<pre><code>sudo certbot certonly --webroot -w / -d dxlcq.cn\n</code></pre> </li> <li> <p>\u6d4b\u8bd5\u66f4\u65b0</p> Bash<pre><code>sudo certbot renew --dry-run\n</code></pre> </li> <li> <p>\u6bcf\u5468\u66f4\u65b0 <code>sudo crontab -e</code></p> Bash<pre><code>0 0 * * 1 certbot renew &amp;&amp; nginx -s reload\n</code></pre> </li> <li> <p>\u67e5\u770b\u8bc1\u4e66\u5269\u4f59\u65f6\u957f </p> Bash<pre><code>sudo certbot certificates\n</code></pre> </li> </ul> <p></p>"},{"location":"src/dev/nginx/#_3","title":"\u4e0b\u8f7d\u7ad9\u70b9\u4e0e\u52a0\u5bc6","text":"Text Only<pre><code>server {\n    location /private {         # \u6587\u6863\u6839\u76ee\u5f55\n        alias   /usr/share/nginx/private;\n        autoindex on;           # \u81ea\u52a8\u7d22\u5f15\n\n        # \u9274\u6743\n        auth_basic \"password\";\n        auth_basic_user_file /usr/share/nginx/htpwd;\n    }\n}\n</code></pre> <ul> <li>htpwd \u5728\u7ebf\u751f\u6210</li> </ul>"},{"location":"src/dev/nginx/#docker-nginx","title":"\u4f7f\u7528 docker \u5feb\u901f\u90e8\u7f72 Nginx","text":"Bash<pre><code>sudo docker run --rm -d -p 80:80 \\\n    -v /www:/usr/share/nginx/html nginx\n</code></pre>"},{"location":"src/dev/nginx/#_4","title":"\u53cd\u5411\u4ee3\u7406","text":"Text Only<pre><code>server {\n    resolver 119.29.29.29 valid=6s;                                     # dns \u89e3\u6790 6 \u79d2\u5237\u65b0\u4e00\u6b21\n\n    location / {                                                        # \u53cd\u5411\u4ee3\u7406\u5230\u540e\u7aef\u670d\u52a1\u5668\n        proxy_pass http://dxlcq.cn;                                     # \u540e\u7aef\u670d\u52a1\u5668\u5730\u5740\u548c\u7aef\u53e3\n        proxy_set_header Host $host;                                    # \u4fdd\u6301\u4e3b\u673a\u5934\u4e0d\u53d8\n        proxy_set_header X-Forwarded-Proto $scheme;                     # \u8f6c\u53d1\u534f\u8bae\n    }\n}\n</code></pre>"},{"location":"src/dev/openssh/","title":"\ud83d\udcaa\ud83c\udffb OpenSSH","text":""},{"location":"src/dev/openssh/#use","title":"use","text":""},{"location":"src/dev/openssh/#_1","title":"\u751f\u6210\u5bc6\u94a5\u5bf9","text":"Bash<pre><code>ssh-keygen -t rsa -m PEM -b 4096 -C \"dxlcq@outlook.com\"\n</code></pre> <ul> <li><code>-t</code>\uff1a\u5bc6\u94a5\u7c7b\u578b</li> <li><code>-m</code>\uff1a\u5bc6\u94a5\u683c\u5f0f</li> <li><code>-b</code>\uff1a\u5bc6\u94a5\u4f4d\u6570</li> <li><code>-C</code>\uff1a\u8ffd\u52a0\u5230\u516c\u94a5\u6587\u4ef6\u672b\u5c3e\u4ee5\u4fbf\u4e8e\u8bc6\u522b\u7684\u6ce8\u91ca</li> </ul>"},{"location":"src/dev/openssh/#_2","title":"\u514d\u5bc6\u767b\u5f55","text":"<p><code>remote</code>\uff1a\u5c06\u516c\u94a5 <code>id_rsa.pub</code> \u653e\u5165 <code>authorized_keys</code></p> <p><code>local</code>\uff1a\u4fee\u6539\u79c1\u94a5 <code>id_rsa</code> \u6743\u9650 <code>chmod 600 ~/.ssh/id_rsa</code></p>"},{"location":"src/dev/openwrt/","title":"\ud83d\udce1 OpenWrt","text":""},{"location":"src/dev/openwrt/#_1","title":"\u53c2\u8003","text":"<ul> <li> <p>\u626b\u76f2 \u4f60\u7ba1\u8fd9\u7834\u73a9\u610f\u53eb\u7f51\u7edc\uff1f \u786c\u6838\u7ffb\u5899\u7cfb\u5217</p> </li> <li> <p>\u673a\u573a \u8d54\u94b1 / \u98de\u9e1f / \u9b54\u6212</p> </li> <li> <p>\u673a\u573a\u6d4b\u901f duyaoss</p> </li> <li> <p>\u5ba2\u6237\u7aef clash-verge / mihomo</p> </li> </ul> <p></p>"},{"location":"src/dev/openwrt/#openwrt","title":"openwrt","text":"<ul> <li> <p>OpenWrt / \u641c\u7d22\u955c\u50cf / \u6d4f\u89c8\u955c\u50cf / \u6e05\u534e\u955c\u50cf</p> </li> <li> <p>ImmortalWrt / \u641c\u7d22\u955c\u50cf / \u6d4f\u89c8\u955c\u50cf / \u5317\u5927\u955c\u50cf</p> </li> </ul> Text Only<pre><code>src/gz openwrt_core https://downloads.openwrt.org/releases/24.10.0-rc5/targets/mediatek/filogic/packages\nsrc/gz openwrt_base https://downloads.openwrt.org/releases/24.10.0-rc5/packages/aarch64_cortex-a53/base\nsrc/gz openwrt_kmods https://downloads.openwrt.org/releases/24.10.0-rc5/targets/mediatek/filogic/kmods/6.6.69-1-83c6d4e14f7353564d3cadaf38a15bef\nsrc/gz openwrt_luci https://downloads.openwrt.org/releases/24.10.0-rc5/packages/aarch64_cortex-a53/luci\nsrc/gz openwrt_packages https://downloads.openwrt.org/releases/24.10.0-rc5/packages/aarch64_cortex-a53/packages\nsrc/gz openwrt_routing https://downloads.openwrt.org/releases/24.10.0-rc5/packages/aarch64_cortex-a53/routing\nsrc/gz openwrt_telephony https://downloads.openwrt.org/releases/24.10.0-rc5/packages/aarch64_cortex-a53/telephony\n</code></pre> Text Only<pre><code>src/gz immortalwrt_core https://mirrors.vsean.net/openwrt/releases/24.10.0-rc3/targets/mediatek/filogic/packages\nsrc/gz immortalwrt_base https://mirrors.vsean.net/openwrt/releases/24.10.0-rc3/packages/aarch64_cortex-a53/base\nsrc/gz immortalwrt_kmods https://mirrors.vsean.net/openwrt/releases/24.10.0-rc3/targets/mediatek/filogic/kmods/6.6.67-1-cde7aa5ae483611d69bd37bac0c68bf8\nsrc/gz immortalwrt_luci https://mirrors.vsean.net/openwrt/releases/24.10.0-rc3/packages/aarch64_cortex-a53/luci\nsrc/gz immortalwrt_packages https://mirrors.vsean.net/openwrt/releases/24.10.0-rc3/packages/aarch64_cortex-a53/packages\nsrc/gz immortalwrt_routing https://mirrors.vsean.net/openwrt/releases/24.10.0-rc3/packages/aarch64_cortex-a53/routing\nsrc/gz immortalwrt_telephony https://mirrors.vsean.net/openwrt/releases/24.10.0-rc3/packages/aarch64_cortex-a53/telephony\n</code></pre> <p></p>"},{"location":"src/dev/openwrt/#_2","title":"\u6211\u7684\u8bbe\u5907","text":""},{"location":"src/dev/openwrt/#friendlyelec-nanopi-zero2","title":"FriendlyElec NanoPi Zero2","text":"<p>\u53ef\u80fd\u662f 2024 \u5e74\u6700\u5c0f\u7684 \u65e0\u7ebf \u8def\u7531\u5668\u4e86</p> <ul> <li>\u6587\u6863</li> </ul>"},{"location":"src/dev/openwrt/#banana-pi-bpi-r4","title":"Banana Pi BPI-R4","text":"<p>wifi7 + \u53cc10G\uff0c\u53ef\u80fd\u662f 2024 \u5e74\u6700\u5f3a\u7684\u65e0\u7ebf\u8def\u7531\u5668\u4e86</p> <ul> <li>\u6587\u6863 / \u8bba\u575b</li> </ul>"},{"location":"src/dev/openwrt/#x86_64","title":"x86_64","text":"<p>\u629b\u5f00\u65e0\u7ebf\uff0c\u65e0\u7591\u65e0\u654c</p> <ul> <li> <p>\u4e00\u79cd\u65e0\u9700\u989d\u5916\u786c\u4ef6\u7684\u6700\u4f73 OpenWrt \u5b89\u88c5\u65b9\u6cd5</p> <ol> <li> <p>\u4e0b\u8f7d immortalwrt-x86-64-generic-ext4-combined-efi.vhdx</p> </li> <li> <p>\u76f4\u63a5\u5b89\u88c5\u81f3 hyper-v</p> </li> <li> <p>\u7f51\u5361\u8bbe\u7f6e\u4e3a\u6865\u63a5\uff0c\u9700\u8981\u4ee3\u7406\u7684\u8bbe\u5907\u8bbe\u7f6e\u7f51\u5173\u4e3a\u865a\u62df\u673a\u7684 ip</p> </li> </ol> </li> </ul> <p></p>"},{"location":"src/dev/openwrt/#_3","title":"\u5f00\u59cb\u4f7f\u7528","text":""},{"location":"src/dev/openwrt/#cfdisk","title":"cfdisk","text":"<ol> <li> <p>\u770b\u770b\u5206\u533a</p> Bash<pre><code>ls /dev/\nfdisk /dev/mmcblk0\n</code></pre> </li> <li> <p>\u5207\u6362\u5230 <code>Free Space</code></p> <p><code>New</code> -&gt; <code>Primary</code> -&gt; <code>Enter</code> -&gt; <code>Write</code> -&gt; <code>yes</code> -&gt; <code>Quit</code></p> <p>\u8fd9\u65f6\u5019\u6211\u751f\u6210\u4e86\u4e00\u4e2a\u65b0\u7684\u5206\u533a <code>/dev/mmcblk0p8</code></p> </li> <li> <p>\u683c\u5f0f\u5316</p> Bash<pre><code>mkfs.ext4 /dev/mmcblk0p8\n</code></pre> </li> <li> <p>\u5728 <code>web</code> -&gt; <code>System</code> -&gt; <code>Mount Points</code></p> <p>\u751f\u6210\u914d\u7f6e -&gt; \u9009\u62e9\u521a\u624d\u7684\u5206\u533a -&gt; \u542f\u7528 -&gt; \u6302\u8f7d\u70b9 <code>/</code> -&gt; \u4fdd\u5b58</p> </li> <li> <p>\u4fdd\u5b58\uff0c\u6267\u884c\u521a\u624d\u751f\u6210\u7684\u547d\u4ee4</p> <p>\u6ce8\u610f\uff01\uff01\uff01<code>/dev/sda1</code> \u6539\u4e3a <code>/dev/mmcblk0p8</code></p> Bash<pre><code>mount /dev/mmcblk0p8 /mnt\n</code></pre> <p>\u91cd\u542f</p> </li> </ol>"},{"location":"src/dev/openwrt/#interface","title":"interface","text":"<ul> <li> <p><code>terminal</code></p> <p>\u6309\u9700\u4fee\u6539 ip</p> Bash<pre><code>vim /etc/config/network\n</code></pre> Text Only<pre><code>config interface 'lan'\n    option device 'br-lan'\n    option proto 'static'\n    option ipaddr '192.168.1.2'\n    option netmask '255.255.255.0'\n    option gateway '192.168.1.1'\n</code></pre> Bash<pre><code>/etc/init.d/network restart\n</code></pre> <p>\u5982\u679c\u4fee\u6539\u4e4b\u540e\u65e0\u6cd5\u8fde\u63a5\uff0c\u5219\u9700\u8981\u5173\u95ed\u9632\u706b\u5899</p> Bash<pre><code>/etc/init.d/firewall stop\n# /etc/init.d/firewall disable\n</code></pre> </li> </ul>"},{"location":"src/dev/openwrt/#br-lan","title":"br-lan","text":"<ol> <li> <p>IP \u5730\u5740</p> </li> <li> <p>\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684 DNS \u670d\u52a1\u5668</p> </li> </ol>"},{"location":"src/dev/openwrt/#br-wan","title":"br-wan","text":"<ol> <li>DHCP \u5ba2\u6237\u7aef</li> </ol>"},{"location":"src/dev/openwrt/#device","title":"device","text":""},{"location":"src/dev/openwrt/#br-lan_1","title":"br-lan","text":"<ol> <li>\u7981\u7528 IPv6</li> </ol>"},{"location":"src/dev/openwrt/#br-wan_1","title":"br-wan","text":"<ol> <li>\u7981\u7528 IPv6</li> </ol>"},{"location":"src/dev/openwrt/#usb","title":"USB","text":"<ol> <li> <p>\u6dfb\u52a0\u63a5\u53e3</p> <p>\u540d\u79f0 <code>usb</code></p> <p>\u534f\u8bae <code>DHCP\u5ba2\u6237\u7aef</code></p> <p>\u8bbe\u5907 <code>usb0</code></p> </li> <li> <p>\u6dfb\u52a0 NAT \u89c4\u5219</p> <ul> <li> <p><code>usb</code></p> <p>Forwarded <code>IPv4</code>\uff1b\u6765\u81ea <code>\u6240\u6709\u533a\u57df</code>\uff1b\u5230 <code>\u6240\u6709\u533a\u57df</code>\uff0c\u901a\u8fc7\u8bbe\u5907 <code>usb0</code>\uff1b\u81ea\u52a8\u91cd\u5199\u6e90 IP</p> </li> </ul> </li> </ol> <p></p>"},{"location":"src/dev/openwrt/#luci","title":"luci","text":"Bash<pre><code>opkg update\nopkg install luci\nopkg install luci-i18n-base-zh-cn\n</code></pre>"},{"location":"src/dev/openwrt/#homeproxy","title":"HomeProxy","text":"<p>homeproxy \u6559\u7a0b</p> <p>\u5b89\u88c5\u5305\u4f4d\u7f6e\uff1a</p> <ul> <li> <p><code>/immortalwrt/releases</code> <code>/packages-\u7248\u672c</code> <code>/\u5728 opkg \u4e2d\u770b\u67b6\u6784</code> <code>/luci</code></p> </li> <li> <p><code>/immortalwrt/releases</code> <code>/\u7248\u672c/packages</code> <code>/\u5728 opkg \u4e2d\u770b\u67b6\u6784</code> <code>/luci</code></p> </li> </ul> <p></p>"},{"location":"src/dev/openwrt/#openvpn","title":"OpenVPN","text":""},{"location":"src/dev/openwrt/#server","title":"Server","text":"<ol> <li> <p>\u5b89\u88c5\u8f6f\u4ef6\u5305</p> <ul> <li> <p><code>openvpn-openssl</code></p> </li> <li> <p><code>openvpn-easy-rsa</code></p> </li> <li> <p><code>luci-app-openvpn-server</code> \u4ec5\u4f7f\u7528 terminal \u4e0b\u8f7d\u8fd9\u4e00\u4e2a\uff0c\u524d\u4e24\u4e2a\u81ea\u52a8\u4e0b</p> </li> <li> <p><code>luci-i18n-openvpn-server-zh-cn</code></p> </li> </ul> </li> <li> <p>\u6dfb\u52a0 NAT \u89c4\u5219</p> <ul> <li> <p><code>ovpn_server</code></p> <p>Forwarded <code>IPv4</code>\uff1b\u6765\u81ea <code>\u6240\u6709\u533a\u57df</code>\uff0cIP <code>10.0.1.0/24</code>\uff1b\u5230 <code>\u6240\u6709\u533a\u57df</code>\uff1b\u81ea\u52a8\u91cd\u5199\u6e90 IP</p> </li> </ul> </li> <li> <p><code>/etc/config/openvpn</code></p> Bash<pre><code>config openvpn 'myvpn'\n    option enabled '1'\n    option proto 'tcp-server'\n    option port '1194'\n    option ddns 'dxlcq.com'\n    option dev 'tun'\n    option topology 'subnet'\n    option server '10.0.1.0 255.255.255.0'\n    option comp_lzo 'no'\n    option ca '/etc/openvpn/pki/ca.crt'\n    option dh '/etc/openvpn/pki/dh.pem'\n    option cert '/etc/openvpn/pki/server.crt'\n    option key '/etc/openvpn/pki/server.key'\n    option persist_key '1'\n    option persist_tun '1'\n    option user 'nobody'\n    option group 'nogroup'\n    option max_clients '10'\n    option keepalive '10 120'\n    option verb '3'\n    option status '/var/log/openvpn_status.log'\n    option log '/tmp/openvpn.log'\n    option duplicate_cn '1'\n    option client_to_client \n    list push 'comp-lzo no'\n    list push 'redirect-gateway def1 bypass-dhcp'\n    list push 'route 10.0.0.0 255.255.255.0'\n    list push 'dhcp-option DNS 10.0.0.1'\n</code></pre> </li> </ol>"},{"location":"src/dev/openwrt/#client","title":"Client","text":"<ol> <li> <p>\u5b89\u88c5\u8f6f\u4ef6\u5305</p> <ul> <li> <p><code>openvpn-openssl</code></p> </li> <li> <p><code>luci-app-openvpn</code></p> </li> <li> <p><code>luci-i18n-openvpn-zh-cn</code></p> </li> </ul> </li> <li> <p>\u6dfb\u52a0 NAT \u89c4\u5219</p> <ul> <li> <p><code>ovpn_client</code></p> <p>Forwarded <code>IPv4</code>\uff1b\u6765\u81ea <code>\u6240\u6709\u533a\u57df</code>\uff1b\u5230 <code>\u6240\u6709\u533a\u57df</code>\uff0cIP <code>10.0.0.0/24</code>\uff1b\u81ea\u52a8\u91cd\u5199\u6e90 IP</p> </li> </ul> </li> <li> <p>\u5e38\u89c4\u8bbe\u7f6e \u8f6c\u53d1 \u63a5\u53d7</p> </li> <li> <p>\u5728 <code>.ovpn</code> \u6587\u4ef6\u4e2d\u6dfb\u52a0\uff0c\u53ea\u6709\u7279\u5b9a\u7f51\u7edc\u6d41\u91cf\u901a\u8fc7 vpn</p> Text Only<pre><code>route-nopull\nroute 10.0.0.0 255.255.255.0 vpn_gateway\n</code></pre> </li> </ol> <p></p>"},{"location":"src/dev/openwrt/#firewall","title":"firewall","text":""},{"location":"src/dev/openwrt/#nat","title":"NAT","text":"<ul> <li> <p>\u5982\u9700\u8981\u5e73\u7ea7\u8bbe\u5907\u901a\u8fc7\u6b64\u8bbe\u5907\uff08\u65c1\u8def\u7531\uff09\u4e0a\u7f51\uff0c\u6dfb\u52a0 <code>NAT</code> \u89c4\u5219</p> <ul> <li> <p>\u4ee5 <code>cqu</code> \u4e3a\u4f8b</p> <p>Forwarded <code>IPv4</code>\uff1b\u6765\u81ea <code>\u6240\u6709\u533a\u57df</code>\uff0cIP <code>180.85.206.0/24</code>\uff1b\u5230 <code>\u6240\u6709\u533a\u57df</code>\uff1b\u81ea\u52a8\u91cd\u5199\u6e90 IP</p> <p>Forwarded <code>IPv4</code>\uff1b\u6765\u81ea <code>\u6240\u6709\u533a\u57df</code>\uff1b\u5230 <code>\u6240\u6709\u533a\u57df</code>\uff0cIP <code>180.85.206.0/24</code>\uff1b\u81ea\u52a8\u91cd\u5199\u6e90 IP</p> </li> </ul> </li> </ul> <p></p> <p>https://en.wikipedia.org/wiki/List_of_WLAN_channels</p> <p>openwrt ovpn\u6559\u7a0b</p> <p>openvpn \u7f51\u7edc\u901f\u7387\u4f18\u5316</p>"},{"location":"src/dev/openwrt/#_4","title":"\u8def\u7531\u5668","text":"<p>WAN</p> <ul> <li> <p><code>PPPoE</code></p> <ol> <li>\u5149\u732b\u6539\u6865\u63a5\uff0c\u9ed8\u8ba4\u6a21\u5f0f\u62e8\u53f7</li> </ol> </li> </ul> <p>LAN</p> <ul> <li> <p><code>DHCPv4</code> </p> <ol> <li> <p><code>DNS</code> \u4e0e\u7f51\u5173 <code>10.0.0.3</code></p> </li> <li> <p>\u5730\u5740\u8303\u56f4</p> <ul> <li> <p>\u4fdd\u7559 <code>.2 - .100</code></p> </li> <li> <p>\u52a8\u6001 <code>.101 - .200</code> <code>DHCP</code></p> </li> <li> <p>\u9694\u79bb <code>.201 - .254</code></p> </li> </ul> </li> </ol> </li> <li> <p><code>static IP</code></p> <ul> <li> <p>\u957f\u671f <code>.1 - .20</code></p> </li> <li> <p>\u77ed\u671f <code>.21 - .100</code></p> </li> </ul> </li> </ul> <p>\u5b9a\u65f6\u91cd\u542f</p> <ul> <li> <p>\u6bcf\u5929 <code>2:00</code>\uff0c\u91cd\u65b0\u4e0a\u7535 POE</p> </li> <li> <p>\u6bcf\u5929 <code>2:20</code>\uff0c\u672c\u673a\u6e05\u7406</p> </li> <li> <p>\u6bcf\u5929 <code>2:40</code>\uff0c\u5c04\u9891\u8c03\u4f18</p> </li> <li> <p>\u6bcf\u5929 <code>3:00</code>\uff0c\u8bbe\u5907\u91cd\u542f</p> </li> </ul> <p>\u5b89\u5168\u7ba1\u7406</p> <ul> <li> <p><code>ARP</code> \u9632\u62a4</p> </li> <li> <p>\u653b\u51fb\u9632\u62a4</p> </li> </ul> <p>VPN-PPTP</p> <ul> <li> <p>L2TP VPN \u4f01\u4e1a\u5e94\u7528\u914d\u7f6e\u5b9e\u4f8b</p> </li> <li> <p>\u521b\u5efa IP \u5730\u5740\u6c60</p> <ul> <li><code>10.0.2.2 - 10.0.2.10</code></li> </ul> </li> <li> <p>\u521b\u5efa\u7528\u6237</p> <ul> <li> <p>\u672c\u5730\u5730\u5740 <code>10.0.2.1</code></p> </li> <li> <p>\u8bbe\u7f6e\u7528\u6237\u540d\u5bc6\u7801</p> </li> </ul> </li> <li> <p>\u521b\u5efa l2tp \u670d\u52a1</p> <ul> <li>\u8bbe\u7f6e\u9884\u5171\u4eab\u5bc6\u94a5</li> </ul> </li> </ul> <p>\u7aef\u53e3\u6620\u5c04</p> <p>\u975e\u5fc5\u8981\u4e0d\u505a\u7aef\u53e3\u6620\u5c04\uff0c\u5c3d\u91cf\u4f7f\u7528 <code>VPN</code></p>   | \u8bbe\u5907 | IP | \u5916\u90e8\u7aef\u53e3 | \u5185\u90e8\u7aef\u53e3 | |:-:|:-:|:-:|:-:| | \u7f51\u7ad9 | 10.0.0.6 | 2025 | 2025 |   <p>DDNS</p> <ul> <li> <p>TP-Link\uff08\u66f4\u65b0\u5f88\u5feb\uff0c\u4f46\u89e3\u6790\u6548\u679c\u4e0d\u884c\uff09</p> </li> <li> <p>\u79d1\u8fc8\uff08\u89e3\u6790\u6548\u679c\u5f88\u597d\uff0c\u4f46\u662f\u66f4\u65b0\u5f88\u6162\uff09</p> </li> </ul> <p>\u7f51\u7edc\u5524\u9192</p> <ul> <li>windows \u5173\u95ed <code>\u5feb\u901f\u542f\u52a8</code></li> </ul> <p>\u4e91\u7ba1\u7406-TP\u5546\u4e91</p> <p>\u5f53 <code>VPN</code> \u5931\u6548\u65f6\u7684\u552f\u4e00\u7ba1\u7406\u624b\u6bb5</p>"},{"location":"src/dev/postgresql/","title":"\ud83d\udce6 PostgreSQL","text":""},{"location":"src/dev/postgresql/#_1","title":"\u53c2\u8003","text":"<ul> <li>PostgreSQL Docker hub</li> </ul>"},{"location":"src/dev/postgresql/#_2","title":"\u542f\u52a8","text":"Bash<pre><code>sudo docker run -e POSTGRES_PASSWORD=postgres -d -p 5432:5432 postgres\n</code></pre> Bash<pre><code>sudo apt install postgresql-client\npsql -h localhost -U postgres -d postgres\n</code></pre>"},{"location":"src/dev/postgresql/#_3","title":"\u67e5","text":"<ul> <li>\u67e5\u770b\u6240\u6709\u6570\u636e\u5e93 <code>SELECT datname FROM pg_database;</code></li> <li>\u67e5\u770b\u5f53\u524d\u6570\u636e\u5e93 <code>SELECT current_database();</code></li> <li> <p>\u8fdb\u5165\u6570\u636e\u5e93 <code>\\c &lt;dbname&gt;;</code></p> </li> <li> <p>\u67e5\u770b\u6240\u6709\u8868 <code>\\d;</code></p> </li> <li>\u67e5\u770b\u67d0\u8868\u7684\u6240\u6709\u6570\u636e <code>SELECT * FROM &lt;tablename&gt;;</code></li> <li> <p>\u67e5\u770b\u67d0\u8868 i - j \u7684\u6570\u636e <code>SELECT * FROM &lt;tablename&gt; LIMIT j-i+1 OFFSET i-1;</code></p> </li> <li> <p>\u67e5\u770b\u67d0\u8868\u7684\u884c\u6570 <code>SELECT count(*) FROM &lt;tablename&gt;;</code></p> </li> <li>\u67e5\u770b\u67d0\u8868\u7684\u5217\u6570 <code>SELECT count(*) FROM information_schema.columns WHERE table_name='&lt;tablename&gt;';</code></li> </ul>"},{"location":"src/dev/postgresql/#_4","title":"\u589e","text":"<ul> <li>\u521b\u5efa\u6570\u636e\u5e93 <code>CREATE DATABASE &lt;dbname&gt;;</code></li> </ul>"},{"location":"src/dev/postgresql/#_5","title":"\u5220","text":"<ul> <li>\u5220\u9664\u6570\u636e\u5e93 <code>DROP DATABASE &lt;dbname&gt;;</code></li> </ul>"},{"location":"src/dev/postgresql/#_6","title":"\u6539","text":""},{"location":"src/dev/postgresql/#c","title":"C","text":"<ul> <li> <p>\u5b89\u88c5 <code>sudo apt install libpq-dev</code></p> </li> <li> <p>\u6d4b\u8bd5 \u4ee3\u7801</p> </li> <li> <p>\u8fd0\u884c <code>g++ pq.cpp -I/usr/include/postgresql -lpq</code></p> </li> </ul>"},{"location":"src/dev/postgresql/#c_1","title":"C++","text":"<ul> <li> <p>\u4e0b\u8f7d <code>wget https://github.com/jtv/libpqxx/archive/refs/tags/7.10.0.tar.gz</code></p> </li> <li> <p>\u89e3\u538b <code>tar zxvf 7.10.0.tar.gz</code></p> </li> <li> <p>\u7f16\u8bd1\u5b89\u88c5 <code>mkdir build &amp;&amp; cd build &amp;&amp; cmake .. &amp;&amp; make -j8 &amp;&amp; sudo make install</code></p> </li> <li> <p>\u7f16\u8bd1 <code>g++ a.cc -lpqxx -lpq</code></p> </li> </ul> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;pqxx/pqxx&gt;\n\nint main() {\n    try {\n        // \u8fde\u63a5\u5230\u6570\u636e\u5e93\n        pqxx::connection c(\n            \"host=localhost port=5432 dbname = qicstabledata user=postgres \"\n            \"password=postgres\");\n        std::cout &lt;&lt; \"Connected to \" &lt;&lt; c.dbname() &lt;&lt; '\\n';\n\n        // \u5f00\u59cb\u4e00\u4e2a\u4e8b\u7269\n        // \u4e00\u4e2a\u8fde\u63a5\u5728\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u6709\u4e00\u4e2a\u4e8b\u7269\u6253\u5f00\n        pqxx::work tx{c};\n\n        // \u6267\u884c\u67e5\u8be2\u5e76\u83b7\u53d6\u7ed3\u679c\u96c6\n        pqxx::result res = tx.exec(\"SELECT * FROM events\");\n\n        // \u67e5\u8be2\u7684\u7ed3\u679c\n        std::unique_ptr&lt;std::vector&lt;std::vector&lt;std::string&gt;&gt;&gt; data =\n            std::make_unique&lt;std::vector&lt;std::vector&lt;std::string&gt;&gt;&gt;();\n\n        // \u904d\u5386\u7ed3\u679c\u96c6\u5e76\u586b\u5145\u6570\u636e\n        for (const auto&amp; row : res) {\n            std::vector&lt;std::string&gt; row_data;\n            for (const auto&amp; col : row) {\n                row_data.push_back(col.c_str());\n            }\n            data-&gt;push_back(row_data);\n        }\n\n        // \u8f93\u51fa\u7ed3\u679c\u96c6\n        for (const auto&amp; row : *data) {\n            for (const auto&amp; col : row) {\n                std::cout &lt;&lt; col &lt;&lt; \" \";\n            }\n            std::cout &lt;&lt; \"\\n\";\n        }\n\n        // \u63d0\u4ea4\u4e8b\u7269\n        tx.commit();\n    } catch (std::exception const&amp; e) {\n        std::cerr &lt;&lt; \"ERROR: \" &lt;&lt; e.what() &lt;&lt; '\\n';\n        return 1;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"src/dev/prometheus/","title":"\ud83d\ude80 Prometheus","text":""},{"location":"src/dev/prometheus/#_1","title":"\u53c2\u8003","text":"<ul> <li>helm \u6559\u7a0b</li> </ul>"},{"location":"src/dev/prometheus/#helm","title":"Helm","text":"Bash<pre><code>snap install helm --classic\n</code></pre> <ul> <li> <p>repo</p> <ul> <li> <p>\u67e5\u770b</p> Bash<pre><code>helm repo list\n</code></pre> </li> <li> <p>\u6dfb\u52a0</p> Bash<pre><code>helm repo add \u4ed3\u5e93\u540d\u79f0 \u4ed3\u5e93\u5730\u5740\n</code></pre> </li> <li> <p>\u66f4\u65b0</p> Bash<pre><code>helm repo update\n</code></pre> </li> </ul> </li> <li> <p>release</p> <ul> <li> <p>\u67e5\u770b</p> Bash<pre><code>helm list -A\n</code></pre> </li> <li> <p>\u5378\u8f7d</p> Bash<pre><code>helm uninstall [release]\n</code></pre> </li> <li> <p>\u5b89\u88c5</p> Bash<pre><code>helm install [release] \u4ed3\u5e93\u540d\u79f0/\u5305\u540d -n \u547d\u540d\u7a7a\u95f4 --create-namespace\n</code></pre> </li> </ul> </li> <li> <p>upgrade</p> <ul> <li> <p>\u67e5\u770b</p> Bash<pre><code>helm show values \u4ed3\u5e93\u540d\u79f0/\u5305\u540d\n</code></pre> Bash<pre><code>helm get values [release] -n \u547d\u540d\u7a7a\u95f4\n</code></pre> </li> <li> <p>\u4fee\u6539</p> Bash<pre><code>helm upgrade [release] \u4ed3\u5e93\u540d\u79f0/\u5305\u540d -n \u547d\u540d\u7a7a\u95f4 -f values.yaml\n</code></pre> </li> <li> <p>rollback</p> Bash<pre><code>helm rollback [release] \u7248\u672c\u53f7 -n \u547d\u540d\u7a7a\u95f4\n</code></pre> Bash<pre><code>helm history [release] -n \u547d\u540d\u7a7a\u95f4\n</code></pre> </li> </ul> </li> </ul> <p></p>"},{"location":"src/dev/prometheus/#prometheus","title":"Prometheus","text":"<ol> <li> <p>\u6dfb\u52a0 prometheus-community \u4ed3\u5e93</p> Bash<pre><code>helm repo add prometheus-community https://prometheus-community.github.io/helm-charts\n</code></pre> </li> <li> <p>\u5b89\u88c5 prometheus</p> Bash<pre><code>helm install prometheus prometheus-community/kube-prometheus-stack --namespace prometheus --create-namespace\n</code></pre> </li> <li> <p>\u8ba9\u670d\u52a1\u66b4\u9732\u51fa\u6765</p> YAML<pre><code># values-prometheus.yaml\nprometheus:\n  prometheusSpec:\n    service:\n      type: NodePort\n\ngrafana:\n  service:\n    type: NodePort\n\nalertmanager:\n  service:\n    type: NodePort\n</code></pre> Bash<pre><code>helm upgrade prometheus prometheus-community/kube-prometheus-stack -n prometheus -f values-prometheus.yaml\n</code></pre> </li> <li> <p>\u5eb7\u5eb7\u670d\u52a1</p> Bash<pre><code>kubectl get svc -n prometheus\n</code></pre> </li> </ol> <p></p>"},{"location":"src/dev/prometheus/#gpu-operator","title":"GPU Operator","text":"<ol> <li> <p>\u5bfc\u5165\u4ed3\u5e93</p> Bash<pre><code>helm repo add nvidia https://helm.ngc.nvidia.com/nvidia\n</code></pre> </li> <li> <p>\u5b89\u88c5 GPU Operator</p> Bash<pre><code>helm install gpu-operator nvidia/gpu-operator -n gpu-operator --create-namespace\n</code></pre> </li> <li> <p>\u66b4\u9732\u670d\u52a1</p> YAML<pre><code># values-gpu-operator.yaml\ndcgmExporter:\n  service:\n    type: NodePort\n</code></pre> Bash<pre><code>helm upgrade gpu-operator nvidia/gpu-operator -n gpu-operator -f values-gpu-operator.yaml\n</code></pre> </li> <li> <p>\u5eb7\u5eb7\u670d\u52a1</p> Bash<pre><code>kubectl get svc -n gpu-operator\n</code></pre> </li> </ol>"},{"location":"src/dev/windows/","title":"\ud83e\ude9f Windows","text":"<p>\u4e91\u56fe</p> <p>\u8bbe\u5907\u62d3\u6251\u56fe / \u6587\u4ef6\u5c42\u7ea7\u56fe</p>"},{"location":"src/dev/windows/#_1","title":"\u9a71\u52a8\u548c\u8f6f\u4ef6","text":"<ul> <li> <p>NV \u9a71\u52a8 / INTEL \u9a71\u52a8</p> </li> <li> <p>MS \u6fc0\u6d3b <code>irm https://get.activated.win | iex</code></p> </li> <li> <p>xbox</p> </li> <li> <p>\u5fae\u8f6f\u5546\u5e97\u514d\u8d39\u4e0b\u8f7d</p> </li> <li> <p>\u72b6\u6001\u76d1\u63a7 / Bandizip / Office / WPS / todesk</p> </li> <li> <p>VMware</p> </li> </ul> <p></p>"},{"location":"src/dev/windows/#wsl2","title":"WSL2","text":"<p>\u5b89\u88c5</p> <ul> <li> <p>\u81ea\u52a8\u5b89\u88c5 \u5b98\u65b9\u6587\u6863 / \u57fa\u672c\u547d\u4ee4</p> <ul> <li>\u542f\u7528\u9002\u7528\u4e8e Linux \u7684 Windows \u5b50\u7cfb\u7edf</li> </ul> Bash<pre><code>wsl --update --web-download     # \u66f4\u65b0 WSL\n</code></pre> Bash<pre><code>wsl -l -o                       # \u67e5\u770b\u53ef\u7528 Linux \u53d1\u884c\u7248\n</code></pre> Bash<pre><code>wsl --install -d Ubuntu-22.04   # \u4e0b\u8f7d\u5b89\u88c5 Ubuntu 22.04\n</code></pre> Bash<pre><code>wsl -l -v                       # \u67e5\u770b\u5df2\u5b89\u88c5\u7684\n</code></pre> Bash<pre><code>wsl --unregister Ubuntu         # \u5220\u9664 Ubuntu\n</code></pre> </li> <li> <p>\u624b\u52a8\u5b89\u88c5\uff1ams/WSL</p> </li> </ul> <p></p> <p>\u955c\u50cf\u7f51\u7edc \u5b98\u65b9\u6587\u6863</p> <ul> <li>\u521b\u5efa <code>C:\\Users\\&lt;UserName&gt;\\.wslconfig</code> \u6587\u4ef6     Bash<pre><code>[wsl2]\nnetworkingMode=mirrored\nmemory=48GB\n</code></pre></li> </ul> <p></p> <p>\u6302\u8f7d\u7f51\u7edc\u78c1\u76d8 \u975e\u5b98\u6587\u6863</p> Bash<pre><code>//10.0.0.5/D /mnt/d cifs credentials=/root/smb.cred,uid=1000,gid=1000,iocharset=utf8 0 0\n</code></pre> <p></p> <p>\u6302\u8f7d NFS</p> Bash<pre><code>sudo mount -t nfs -o noresvport 10.0.0.15:/mnt/nfs /mnt/nfs\n</code></pre> <p></p> <p>\u542f\u52a8\u811a\u672c</p> <ol> <li>win + r \u8f93\u5165  <code>shell:startup</code></li> <li>\u65b0\u5efa <code>wsl.vbs</code> \u6587\u4ef6     Bash<pre><code>Set ws = WScript.CreateObject(\"WScript.Shell\")        \nws.run \"wsl -d Ubuntu-22.04 -u user /home/user/startupsh\"\n</code></pre></li> </ol> <p></p> <p>GPU \u95ee\u9898</p> <p>wsl2 \u9ed8\u8ba4\u5df2\u7ecf\u6709 NVIDIA GPU \u652f\u6301\uff0c\u5982\u679c\u51fa\u73b0 nvidia-smi \u5bf9\u4e0d\u4e0a\u7248\u672c\u7684\u60c5\u51b5\uff0c\u5982\u4e0b</p> Bash<pre><code>sudo cp /usr/lib/wsl/lib/nvidia-smi /usr/lib/wsl/lib/nvidia-smi.backup\n# \u521b\u5efa\u5305\u88c5\u811a\u672c\u66ff\u6362 WSL \u7248\u672c\nsudo tee /usr/lib/wsl/lib/nvidia-smi &gt; /dev/null &lt;&lt; 'EOF'\n#!/bin/bash\nexec /mnt/c/Windows/System32/nvidia-smi.exe \"$@\"\nEOF\n\n# \u8bbe\u7f6e\u6267\u884c\u6743\u9650\nsudo chmod +x /usr/lib/wsl/lib/nvidia-smi\n</code></pre> <p></p>"},{"location":"src/dev/windows/#hyper-v-gpu","title":"Hyper-V \u76f4\u901a GPU","text":"<ul> <li>\u4f7f\u7528\u79bb\u6563\u8bbe\u5907\u5206\u914d\u90e8\u7f72\u56fe\u5f62\u8bbe\u5907</li> </ul> <p>\u5173\u673a\u3001\u5173\u95ed\u865a\u62df\u673a\u7684\u52a8\u6001\u5185\u5b58\u3001\u5173\u95ed\u68c0\u67e5\u70b9\u3001\u5173\u95ed\u5b89\u5168\u542f\u52a8</p> <ul> <li> <p>\u76f4\u901a GPU</p> PowerShell<pre><code># \u76ee\u6807\u865a\u62df\u673a\n$vm = \"dda\"\n\n# 1. \u865a\u62df\u673a\u5173\u673a\nSet-VM -Name $vm -AutomaticStopAction TurnOff\n# 2. \u542f\u7528CPU\u7684\u5199\u5408\u5e76\u529f\u80fd\nSet-VM -GuestControlledCacheTypes $true -VMName $vm\n# 3. \u914d\u7f6e 32 \u4f4d MMIO\uff08\u5185\u5b58\u6620\u5c04 I/O\uff09\u7a7a\u95f4\nSet-VM -LowMemoryMappedIoSpace 3Gb -VMName $vm\n# 4. \u914d\u7f6e\u5927\u4e8e 32 \u4f4d\u7684 MMIO \u7a7a\u95f4\nSet-VM -HighMemoryMappedIoSpace 33280Mb -VMName $vm\n\n# 1. \u67e5\u627e\u6240\u6709 pnp \u8bbe\u5907\n$pnpdevs = Get-PnpDevice -presentOnly\n# 2. \u7b5b\u9009\u51fa\u5236\u9020\u5546\u4e3a NVIDIA \u4e14\u5c5e\u4e8e\u201c\u663e\u793a\u201d\u7c7b\u522b\u7684\u8bbe\u5907\n$gpudevs = $pnpdevs | Where-Object {$_.Class -like \"Display\" -and $_.Manufacturer -like \"NVIDIA\"}\n# 3. \u83b7\u53d6\u7b2c\u4e00\u4e2a\u8bbe\u5907\u7684\u8bbe\u5907\u4f4d\u7f6e\u8def\u5f84\n$locationPath = ($gpudevs | Get-PnpDeviceProperty DEVPKEY_Device_LocationPaths).data[0]\n\n# 1. \u7981\u7528\u8be5\u8bbe\u5907\nDisable-PnpDevice -InstanceId $gpudevs[0].InstanceId\n# 2. \u4ece\u4e3b\u673a\u4e2d\u5378\u8f7d\u8be5\u8bbe\u5907\nDismount-VMHostAssignableDevice -Force -LocationPath $locationPath\n# 3. \u5c06\u8bbe\u5907\u5206\u914d\u7ed9\u865a\u62df\u673a\nAdd-VMAssignableDevice -LocationPath $locationPath -VMName $vm\n</code></pre> </li> <li> <p>\u53d6\u6d88\u76f4\u901a GPU</p> PowerShell<pre><code># \u76ee\u6807\u865a\u62df\u673a\uff08\u540c\u4e0a\uff09\n\n# 1. \u67e5\u627e\u6240\u6709 pnp \u8bbe\u5907\n$pnpdevs = Get-PnpDevice\n# 2. \u7b5b\u9009\u51fa\u5236\u9020\u5546\u4e3a NVIDIA \u4e14\u5c5e\u4e8e\u201c\u663e\u793a\u201d\u7c7b\u522b\u7684\u8bbe\u5907\n$gpudevs = $pnpdevs | Where-Object {$_.Class -like \"Display\" -and $_.Manufacturer -like \"NVIDIA\"}\n# 3. \u83b7\u53d6\u7b2c\u4e00\u4e2a\u8bbe\u5907\u7684\u8bbe\u5907\u4f4d\u7f6e\u8def\u5f84\n$locationPath = ($gpudevs | Get-PnpDeviceProperty DEVPKEY_Device_LocationPaths).data[0]\n\n# 1. \u4ece\u865a\u62df\u673a\u4e2d\u79fb\u9664\u8bbe\u5907\nRemove-VMAssignableDevice -LocationPath $locationPath -VMName $vm\n# 2. \u91cd\u65b0\u542f\u7528\u8be5\u8bbe\u5907\nMount-VMHostAssignableDevice -LocationPath $locationPath\n</code></pre> </li> <li> <p>\u67e5\u8be2</p> PowerShell<pre><code># \u67e5\u770b\u8bbe\u5907\nGet-PnpDevice | Where-Object {$_.FriendlyName -like \"*NVIDIA*\"}\n\n# \u83b7\u53d6 locationPath\n$locationPath = (Get-PnpDevice | Where-Object {$_.FriendlyName -like \"*NVIDIA*\"} | Get-PnpDeviceProperty DEVPKEY_Device_LocationPaths).data[0]\n\n# \u786e\u8ba4 locationPath\nWrite-OutPut $locationPath\n</code></pre> </li> </ul>"},{"location":"src/jiao/cv/","title":"CV","text":""},{"location":"src/jiao/cv/#education","title":"Education","text":""},{"location":"src/jiao/cv/#_1","title":"\u91cd\u5e86\u5927\u5b66","text":"<ol> <ul>\u5b98\u7f51 / \u6559\u52a1 / \u5b66\u58eb\u8bba\u6587\u53ca\u8bfe\u7a0b</ul> <ul>\u65f6\u95f4\uff1a2024.9.9 - 2025.6.28</ul> <ul>\u5b66\u5386\uff1a\u4ea4\u6362\u751f\uff08\u56fd\u5bb6\u5353\u8d8a\u5de5\u7a0b\u5e08\u9879\u76ee\uff09</ul> <ul>\u4e13\u4e1a\uff1a\u667a\u80fd\u7f51\u8054\u6c7d\u8f66</ul> </ol>"},{"location":"src/jiao/cv/#_2","title":"\u91cd\u5e86\u79d1\u6280\u5927\u5b66","text":"<ol> <ul>\u5b98\u7f51 / \u5b66\u751f\u624b\u518c</ul> <ul>\u65f6\u95f4\uff1a2023.9.1 - 2025.6.28</ul> <ul>\u5b66\u5386\uff1a\u5168\u65e5\u5236\u672c\u79d1</ul> <ul>\u4e13\u4e1a\uff1a\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f</ul> </ol>"},{"location":"src/jiao/cv/#_3","title":"\u91cd\u5e86\u5de5\u4e1a\u804c\u4e1a\u6280\u672f\u5b66\u9662","text":"<ol> <ul>\u65f6\u95f4\uff1a2020.9.24 - 2023.6.29</ul> <ul>\u5b66\u5386\uff1a\u5168\u65e5\u5236\u4e13\u79d1</ul> <ul>\u4e13\u4e1a\uff1a\u8ba1\u7b97\u673a\u7f51\u7edc\u6280\u672f</ul> </ol>"},{"location":"src/jiao/cv/#work","title":"Work","text":""},{"location":"src/jiao/cv/#_4","title":"\u5317\u4eac\u4e2d\u79d1\u6d77\u8baf","text":"<ol> <ul>\u65f6\u95f4\uff1a2025.3 - \u81f3\u4eca</ul> <ul>\u804c\u52a1\uff1a[\u5168\u804c] \u901a\u7528\u8ba1\u7b97\u4e8b\u4e1a\u90e8 - C/C++\u5de5\u7a0b\u5e08</ul> <ul>\u804c\u8d23\uff1a\u5f00\u53d1</ul> </ol>"},{"location":"src/jiao/cv/#_5","title":"\u4e2d\u56fd\u7535\u4fe1\u5317\u789a\u5206\u516c\u53f8","text":"<ol> <ul>\u65f6\u95f4\uff1a2024.6 - 2024.9</ul> <ul>\u804c\u52a1\uff1a[\u5b9e\u4e60] \u4e91\u4e2d\u53f0 - \u7814\u53d1\u5de5\u7a0b\u5e08</ul> <ul>\u804c\u8d23\uff1a\u97f3\u89c6\u9891\u548c\u6570\u636e\u5904\u7406\u7684\u5f00\u53d1\u5de5\u4f5c</ul> </ol>"},{"location":"src/jiao/cv/#_6","title":"\u91cd\u5e86\u5947\u7075\u4e91\u6559\u80b2\u79d1\u6280","text":"<ol> <ul>\u65f6\u95f4\uff1a2022.11 - 2024.5</ul> <ul>\u804c\u52a1\uff1a[\u517c\u804c] \u8bb2\u5e08</ul> <ul>\u804c\u8d23\uff1a\u4e2d\u5c0f\u5b66\u5b66\u751f\u7684\u7b97\u6cd5\u7ade\u8d5b\u6388\u8bfe\u5de5\u4f5c</ul> </ol>"},{"location":"src/jiao/cv/#_7","title":"\u91cd\u5e86\u5de5\u7a0b\u804c\u4e1a\u6280\u672f\u5b66\u9662","text":"<ol> <ul>\u65f6\u95f4\uff1a2023.10 - 2024.1</ul> <ul>\u804c\u52a1\uff1a[\u517c\u804c] \u52a9\u6559</ul> <ul>\u804c\u8d23\uff1aC++/Qt\u3001\u6570\u636e\u7ed3\u6784\u8bfe\u7a0b\u7684\u6388\u8bfe\u5de5\u4f5c</ul> </ol>"},{"location":"src/jiao/cv/#_8","title":"\u6e05\u534e\u5927\u5b66\u51fa\u7248\u793e","text":"<ol> <ul>\u65f6\u95f4\uff1a2022.5 - 2024.5</ul> <ul>\u804c\u52a1\uff1a[\u5b66\u751f\u5de5\u4f5c / online] \u5fd7\u613f\u8005</ul> <ul>\u804c\u8d23\uff1a\u7b97\u6cd5\u7ade\u8d5b\u7c7b\u4e66\u7c4d\u7684\u6821\u5bf9\u5de5\u4f5c\u3001OJ \u9898\u5e93\u7684\u5efa\u8bbe\u5de5\u4f5c</ul> </ol>"},{"location":"src/jiao/cv/#_9","title":"\u56fd\u4fe1\u84dd\u6865\u6559\u80b2\u79d1\u6280","text":"<ol> <ul>\u65f6\u95f4\uff1a2023.7 - 2023.7</ul> <ul>\u804c\u52a1\uff1a[\u5b66\u751f\u5de5\u4f5c / online] \u84dd\u6865\u4e91\u8bfe\u51fa\u9898\u5c0f\u7ec4\u6210\u5458</ul> <ul>\u804c\u8d23\uff1aOJ \u9898\u5e93\u7684\u5efa\u8bbe\u5de5\u4f5c</ul> </ol>"},{"location":"src/jiao/cv/#honor","title":"Honor","text":"\u56fd\u5bb6\u7ea7\u5956\u9879 \ud83e\udd47 \u7701\u90e8\u7ea7\u5956\u9879 \ud83e\udd48 \u6280\u80fd\u8bc1\u4e66 \ud83e\udd49 \u5956\u5b66\u91d1 \ud83d\udcb0 8 17 4 12"},{"location":"src/jiao/cv/#xcpc","title":"XCPC","text":""},{"location":"src/jiao/cv/#2024","title":"2024 \u56db\u5ddd\u7701\u8d5b","text":"<ul> <li><code>2024-6-16</code> <code>\u7b2c\u5341\u516d\u5c4a\u56db\u5ddd\u7701\u5927\u5b66\u751f\u7a0b\u5e8f\u8bbe\u8ba1\u7ade\u8d5b</code> <code>\u94dc</code></li> </ul>"},{"location":"src/jiao/cv/#2024_1","title":"2024 \u91cd\u5e86\u5e02\u8d5b","text":"<ul> <li><code>2024-6-8</code> <code>\u91cd\u5e86\u5e02\u7b2c\u5341\u4e8c\u5c4a\u5927\u5b66\u751f\u7a0b\u5e8f\u8bbe\u8ba1\u5927\u8d5b</code> <code>\u94dc</code></li> </ul>"},{"location":"src/jiao/cv/#2023","title":"2023 \u91cd\u5e86\u5e02\u8d5b","text":"<ul> <li><code>2023-12-17</code> <code>2023\u91cd\u5e86\u5e02\u7b2c\u5341\u4e00\u5c4a\u5927\u5b66\u751f\u7a0b\u5e8f\u8bbe\u8ba1\u5927\u8d5b</code> <code>\u94f6</code> \u62a5\u9053</li> </ul>"},{"location":"src/jiao/cv/#2024_2","title":"2024","text":""},{"location":"src/jiao/cv/#_10","title":"\u6821\u7ea7\u5148\u8fdb\u4e2a\u4eba","text":"<ul> <li><code>2024-12</code> <code>\u91cd\u5e86\u79d1\u6280\u5927\u5b66\u79d1\u6280\u521b\u65b0\u4f18\u79c0\u5b66\u751f</code></li> </ul>"},{"location":"src/jiao/cv/#_11","title":"\u7701\u4e8c \u7801\u8e44\u676f","text":"<ul> <li><code>2024-6-22</code> <code>\u7b2c\u516d\u5c4a\u7801\u68af\u676f\u5168\u56fd\u5927\u5b66\u751f\u7a0b\u5e8f\u8bbe\u8ba1\u5927\u8d5b</code> <code>\u7701\u8d5b\u94f6\u5956</code> \u516c\u793a / \u6392\u540d</li> </ul>"},{"location":"src/jiao/cv/#_12","title":"\u56fd\u4e09 \u84dd\u6865\u676f","text":"<ul> <li><code>2024-6-1</code> <code>\u7b2c\u5341\u4e94\u5c4a\u201c\u84dd\u6865\u676f\u201dC/C++\u7a0b\u5e8f\u8bbe\u8ba1\u672c\u79d1B\u7ec4</code> <code>\u56fd\u8d5b\u4e09\u7b49\u5956</code> \u516c\u793a / \u6392\u540d / \u62a5\u9053</li> </ul>"},{"location":"src/jiao/cv/#_13","title":"\u51a0\u519b \u91cd\u79d1\u676f","text":"<ul> <li><code>2024-5</code> <code>\u7b2c\u4e8c\u5c4a\u201c\u91cd\u79d1\u676f\u201d</code> <code>\u51a0\u519b</code> \u516c\u793a / \u6392\u540d</li> </ul>"},{"location":"src/jiao/cv/#_14","title":"\u7701\u4e00 \u84dd\u6865\u676f","text":"<ul> <li><code>2024-4</code> <code>\u7b2c\u5341\u4e94\u5c4a\u201c\u84dd\u6865\u676f\u201dC/C++\u7a0b\u5e8f\u8bbe\u8ba1\u672c\u79d1B\u7ec4</code> <code>\u91cd\u5e86\u5e02\u4e00\u7b49\u5956</code> \u516c\u793a / \u6392\u540d</li> </ul>"},{"location":"src/jiao/cv/#2023_1","title":"2023","text":""},{"location":"src/jiao/cv/#_15","title":"\u7701\u4e09 \u4f20\u667a\u676f","text":"<ul> <li><code>2023-12</code> <code>\u7b2c\u516d\u5c4a\u201c\u4f20\u667a\u676f\u201d\u5168\u56fdIT\u6280\u80fd\u5927\u8d5b-\u7a0b\u5e8f\u8bbe\u8ba1\u8d5b\u9879\u672c\u79d1B\u7ec4</code> <code>\u91cd\u5e86\u5e02\u4e09\u7b49\u5956</code> \u516c\u793a / \u6392\u540d</li> </ul>"},{"location":"src/jiao/cv/#_16","title":"\u56fd\u4e8c \u6e05\u534e\u793e\u676f","text":"<ul> <li><code>2023-12</code> <code>2023\u7b2c\u4e8c\u5c4a\u201c\u6e05\u534e\u793e\u676f\u201d\u5927\u5b66\u751f\u7b97\u6cd5\u5927\u8d5b\u5927\u5b66B\u7ec4</code> <code>\u56fd\u8d5b\u4e8c\u7b49\u5956</code></li> </ul>"},{"location":"src/jiao/cv/#_17","title":"\u56fd\u4e00 \u7801\u8e44\u676f","text":"<ul> <li><code>2023-12</code> <code>\u7b2c\u4e94\u5c4a\u201c\u7801\u8e44\u676f\u201d\u5168\u56fd\u804c\u4e1a\u9662\u6821\u7a0b\u5e8f\u8bbe\u8ba1\u5927\u8d5b</code> <code>\u56fd\u8d5b\u91d1\u5956</code> \u516c\u793a / \u6392\u540d</li> </ul>"},{"location":"src/jiao/cv/#_18","title":"\u7701\u4e00 \u7801\u8e44\u676f","text":"<ul> <li><code>2023-11</code> <code>\u7b2c\u4e94\u5c4a\u201c\u7801\u8e44\u676f\u201d\u5168\u56fd\u804c\u4e1a\u9662\u6821\u7a0b\u5e8f\u8bbe\u8ba1\u5927\u8d5b</code> <code>\u7701\u8d5b\u91d1\u5956</code> \u516c\u793a / \u6392\u540d</li> </ul>"},{"location":"src/jiao/cv/#_19","title":"\u7701\u4e8c \u767e\u5ea6\u4e4b\u661f","text":"<ul> <li><code>2023-9</code> <code>\u7b2c\u5341\u4e5d\u5c4a\u767e\u5ea6\u4e4b\u661f\u7a0b\u5e8f\u8bbe\u8ba1\u5927\u8d5b</code> <code>\u91cd\u5e86\u5e02\u94f6\u5956</code> \u516c\u793a / \u6392\u540d</li> </ul>"},{"location":"src/jiao/cv/#_20","title":"\u56fd\u4e00 \u777f\u6297","text":"<ul> <li><code>2023-8</code> <code>\u777f\u6297\u673a\u5668\u4eba\u5f00\u53d1\u8005\u5927\u8d5b\uff08RAICOM\uff09\u5168\u56fd\u603b\u51b3\u8d5b \u7f16\u7a0b\u6280\u80fd\u7ade\u8d5b\u9879\u76ee</code> <code>\u56fd\u8d5b\u4e00\u7b49\u5956</code> \u516c\u793a / \u6392\u540d</li> </ul>"},{"location":"src/jiao/cv/#_21","title":"\u84dd\u6865\u4e91\u8bfe","text":"<ul> <li><code>2023-7</code> <code>\u84dd\u6865\u4e91\u8bfeOJ\u51fa\u9898\u5c0f\u7ec4\u6210\u5458</code></li> </ul>"},{"location":"src/jiao/cv/#_22","title":"\u5de5\u4fe1\u4eba\u624d\u8bc1\u4e66","text":"<ul> <li><code>2023-7</code> <code>\u5de5\u4e1a\u548c\u4fe1\u606f\u5316\u4eba\u624d\u5c97\u4f4d\u80fd\u529b\u8bc4\u4ef7\u8bc1\u4e66\uff08\u4e2d\u7ea7\uff09</code></li> </ul>"},{"location":"src/jiao/cv/#_23","title":"\u7701\u4e8c \u777f\u6297","text":"<ul> <li><code>2023-7</code> <code>\u777f\u6297\u673a\u5668\u4eba\u5f00\u53d1\u8005\u5927\u8d5b\uff08RAICOM\uff09\u91cd\u5e86\u8d5b\u533a \u7f16\u7a0b\u6280\u80fd\u7ade\u8d5b\u9879\u76ee</code> <code>\u91cd\u5e86\u5e02\u4e8c\u7b49\u5956</code> \u516c\u793a / \u6392\u540d</li> </ul>"},{"location":"src/jiao/cv/#_24","title":"\u7701\u7ea7\u5148\u8fdb\u4e2a\u4eba","text":"<ul> <li><code>2023-7</code> <code>\u91cd\u5e86\u5e02\u521b\u65b0\u80fd\u529b\u63d0\u5347\u5148\u8fdb\u4e2a\u4eba</code> \u516c\u793a / \u6392\u540d</li> </ul>"},{"location":"src/jiao/cv/#_25","title":"\u56fd\u4e8c \u84dd\u6865\u676f","text":"<ul> <li><code>2023-6</code> <code>\u7b2c\u5341\u56db\u5c4a\u201c\u84dd\u6865\u676f\u201dC/C++\u7a0b\u5e8f\u8bbe\u8ba1\u672c\u79d1B\u7ec4</code> <code>\u56fd\u8d5b\u4e8c\u7b49\u5956</code> \u516c\u793a / \u6392\u540d / \u62a5\u9053</li> </ul>"},{"location":"src/jiao/cv/#_26","title":"\u56fd\u4e8c \u4f20\u667a\u676f","text":"<ul> <li><code>2023-4</code> <code>\u7b2c\u4e94\u5c4a\u201c\u4f20\u667a\u676f\u201d\u7a0b\u5e8f\u8bbe\u8ba1\u6311\u6218\u8d5b\u672c\u79d1B\u7ec4</code> <code>\u51b3\u8d5b\u4e8c\u7b49\u5956</code> \u516c\u793a / \u6392\u540d</li> </ul>"},{"location":"src/jiao/cv/#_27","title":"\u7701\u4e00 \u84dd\u6865\u676f","text":"<ul> <li><code>2023-4</code> <code>\u7b2c\u5341\u56db\u5c4a\u201c\u84dd\u6865\u676f\u201dC/C++\u7a0b\u5e8f\u8bbe\u8ba1\u672c\u79d1B\u7ec4</code> <code>\u91cd\u5e86\u5e02\u4e00\u7b49\u5956</code> \u516c\u793a / \u6392\u540d</li> </ul>"},{"location":"src/jiao/cv/#2","title":"\u6821\u7ea7\u5148\u8fdb\u4e2a\u4eba (2)","text":"<ul> <li><code>2023-1</code> <code>\u91cd\u5e86\u5de5\u4e1a\u804c\u4e1a\u6280\u672f\u5b66\u9662\u4f18\u79c0\u6bd5\u4e1a\u751f</code> <code>\u79d1\u6280\u521b\u65b0\u5148\u8fdb\u4e2a\u4eba</code></li> </ul>"},{"location":"src/jiao/cv/#2022","title":"2022","text":""},{"location":"src/jiao/cv/#_28","title":"\u7701\u4e8c \u4f20\u667a\u676f","text":"<ul> <li><code>2022-12</code> <code>\u7b2c\u4e94\u5c4a\u201c\u4f20\u667a\u676f\u201d\u7a0b\u5e8f\u8bbe\u8ba1\u6311\u6218\u8d5b\u672c\u79d1B\u7ec4</code> <code>\u521d\u8d5b\u4e8c\u7b49\u5956</code> \u516c\u793a / \u6392\u540d</li> </ul>"},{"location":"src/jiao/cv/#_29","title":"\u56fd\u4e09 \u7801\u8e44\u676f","text":"<ul> <li><code>2022-10</code> <code>\u7b2c\u56db\u5c4a\u201c\u7801\u8e44\u676f\u201d\u5168\u56fd\u804c\u4e1a\u9662\u6821\u7a0b\u5e8f\u8bbe\u8ba1\u5927\u8d5b</code> <code>\u51b3\u8d5b\u94dc\u5956</code> \u516c\u793a / \u6392\u540d</li> </ul>"},{"location":"src/jiao/cv/#_30","title":"\u5fd7\u613f\u8005 \u7801\u8e44\u96c6","text":"<ul> <li><code>2022-9</code> <code>\u5168\u56fd\u9ad8\u7b49\u5b66\u6821\u8ba1\u7b97\u673a\u6559\u5b66\u4e0e\u4ea7\u4e1a\u5b9e\u8df5\u8d44\u6e90\u5efa\u8bbe\u4e13\u5bb6\u59d4\u5458\u4f1a\uff08TIPCC\uff09\u5fd7\u613f\u8005</code></li> </ul>"},{"location":"src/jiao/cv/#_31","title":"\u7701\u4e00 \u4e92\u8054\u7f51+","text":"<ul> <li><code>2022-8</code> <code>\u7b2c\u516b\u5c4a\u201c\u4e92\u8054\u7f51+\u201d\u5927\u5b66\u751f\u521b\u65b0\u521b\u4e1a\u5927\u8d5b</code> <code>\u91cd\u5e86\u5e02\u91d1\u5956</code></li> </ul>"},{"location":"src/jiao/cv/#_32","title":"\u7701\u4e09 \u6311\u6218\u676f","text":"<ul> <li><code>2022-8</code> <code>\u7b2c\u5341\u4e09\u5c4a\u201c\u6311\u6218\u676f\u201d\u4e2d\u56fd\u5927\u5b66\u751f\u521b\u4e1a\u8ba1\u5212\u7ade\u8d5b</code> <code>\u91cd\u5e86\u5e02\u94dc\u5956</code> </li> </ul>"},{"location":"src/jiao/cv/#_33","title":"\u56fd\u4f18 \u84dd\u6865\u676f","text":"<ul> <li><code>2022-5</code> <code>\u7b2c\u5341\u4e09\u5c4a\u201c\u84dd\u6865\u676f\u201dC/C++\u7a0b\u5e8f\u8bbe\u8ba1\u672c\u79d1B\u7ec4</code> <code>\u56fd\u8d5b\u4f18\u79c0\u5956</code> \u516c\u793a / \u6392\u540d</li> </ul>"},{"location":"src/jiao/cv/#_34","title":"\u7701\u4e00 \u84dd\u6865\u676f","text":"<ul> <li><code>2022-4</code> <code>\u7b2c\u5341\u4e09\u5c4a\u201c\u84dd\u6865\u676f\u201dC/C++\u7a0b\u5e8f\u8bbe\u8ba1\u672c\u79d1B\u7ec4</code> <code>\u91cd\u5e86\u5e02\u4e00\u7b49\u5956</code> \u516c\u793a / \u6392\u540d</li> </ul>"},{"location":"src/jiao/cv/#2021","title":"2021","text":""},{"location":"src/jiao/cv/#_35","title":"\u7701\u4e8c \u5de5\u4e1a\u5927\u6570\u636e","text":"<ul> <li><code>2021-12</code> <code>\u5168\u56fd\u5de5\u4e1a\u548c\u4fe1\u606f\u5316\u6280\u672f\u6280\u80fd\u5927\u8d5b-\u5de5\u4e1a\u5927\u6570\u636e\u7b97\u6cd5</code> <code>\u91cd\u5e86\u5e02\u7b2c3\u540d</code></li> </ul>"},{"location":"src/jiao/cv/#_36","title":"\u6570\u636e\u6807\u6ce8","text":"<ul> <li><code>2021-10</code> <code>\u5168\u56fd\u884c\u4e1a\u804c\u4e1a\u6280\u80fd\u7ade\u8d5b-\u6570\u636e\u667a\u80fd\u6807\u6ce8\u5206\u6790\u4e0e\u5e94\u7528</code> <code>\u91cd\u5e86\u5e02\u7b2c\u516b\u540d</code></li> </ul>"},{"location":"src/jiao/cv/#b","title":"\u82f1\u8bedB\u7ea7","text":"<ul> <li><code>2021-9</code> <code>\u9ad8\u7b49\u5b66\u6821\u82f1\u8bed\u5e94\u7528\u80fd\u529b\u8003\u8bd5</code> <code>B\u7ea7</code></li> </ul>"},{"location":"src/jiao/cv/#_37","title":"\u7701\u4e8c \u5fc3\u7406\u8bba\u575b","text":"<ul> <li><code>2021-7</code> <code>\u91cd\u5e86\u5e02\u7b2c\u5341\u4e8c\u5c4a\u5927\u5b66\u751f\u5fc3\u7406\u6210\u957f\u8bba\u575b\u5fc3\u7406\u6210\u957f\u5fae\u8bfe\u6bd4\u8d5b</code> <code>\u91cd\u5e86\u5e02\u4e8c\u7b49\u5956</code></li> </ul>"},{"location":"src/jiao/cv/#_38","title":"\u666e\u901a\u8bdd\u4e8c\u4e59","text":"<ul> <li><code>2021-3</code> <code>\u666e\u901a\u8bdd\u6c34\u5e73\u6d4b\u8bd5</code> <code>\u4e8c\u7ea7\u4e59\u7b49</code> </li> </ul>"},{"location":"src/jiao/cv/#_39","title":"\u8ba1\u7b97\u673a\u4e8c\u7ea7","text":"<ul> <li><code>2021-3</code> <code>\u8ba1\u7b97\u673a\u7b49\u7ea7\u8003\u8bd5\u4e8c\u7ea7C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1</code> <code>\u826f\u597d</code> </li> </ul>"},{"location":"src/jiao/cv/#23100","title":"\u5956\u5b66\u91d1 \uffe523100","text":""},{"location":"src/jiao/cv/#3","title":"\u5355\u9879\u5956\u5b66\u91d1 (3)","text":"<ul> <li><code>2024-9</code> <code>\u91cd\u5e86\u5de5\u4e1a\u804c\u4e1a\u6280\u672f\u5b66\u9662\u5355\u9879\u5956\u5b66\u91d1</code></li> </ul>"},{"location":"src/jiao/cv/#2_1","title":"\u5355\u9879\u5956\u5b66\u91d1 (2)","text":"<ul> <li><code>2023-7</code> <code>\u91cd\u5e86\u5de5\u4e1a\u804c\u4e1a\u6280\u672f\u5b66\u9662\u5355\u9879\u5956\u5b66\u91d1</code></li> </ul>"},{"location":"src/jiao/cv/#2_2","title":"\u7efc\u5408\u5956\u5b66\u91d1 (2)","text":"<ul> <li><code>2023-4</code> <code>\u91cd\u5e86\u5de5\u4e1a\u804c\u4e1a\u6280\u672f\u5b66\u9662\u7efc\u5408\u5956\u5b66\u91d1</code></li> </ul>"},{"location":"src/jiao/cv/#2_3","title":"\u5355\u9879\u5956\u5b66\u91d1 (2)","text":"<ul> <li><code>2023-3</code> <code>\u91cd\u5e86\u5de5\u4e1a\u804c\u4e1a\u6280\u672f\u5b66\u9662\u5355\u9879\u5956\u5b66\u91d1</code></li> </ul>"},{"location":"src/jiao/cv/#2_4","title":"\u5355\u9879\u5956\u5b66\u91d1 (2)","text":"<ul> <li><code>2022-7</code> <code>\u91cd\u5e86\u5de5\u4e1a\u804c\u4e1a\u6280\u672f\u5b66\u9662\u5355\u9879\u5956\u5b66\u91d1</code></li> </ul>"},{"location":"src/jiao/cv/#_40","title":"\u7efc\u5408\u5956\u5b66\u91d1","text":"<ul> <li><code>2022-4</code> <code>\u91cd\u5e86\u5de5\u4e1a\u804c\u4e1a\u6280\u672f\u5b66\u9662\u7efc\u5408\u5956\u5b66\u91d1</code></li> </ul>"},{"location":"src/jiao/profile/","title":"Profile","text":""},{"location":"src/jiao/profile/#_1","title":"\u6234\u5174\u9f99","text":"<p>\u6c42\u804c\u610f\u5411\uff1a\uff08\u91cd\u5e86\uff09C/C++\u3001DevOps</p> <p>\u7537 \uff5c 23\u5c81 \uff5c \u672c\u79d1 \uff5c1 \u5e74\u7ecf\u9a8c \uff5c 134-xxxx-xxxx \uff5c dxlcq@outlook.com | dxlcq.cn</p>"},{"location":"src/jiao/profile/#_2","title":"\u5de5\u4f5c\u7ecf\u5386","text":"<ul> <li> <p>\u5317\u4eac\u4e2d\u79d1\u6d77\u8baf \uff5c \u901a\u7528\u8ba1\u7b97\u4e8b\u4e1a\u90e8 - C/C++\u5de5\u7a0b\u5e08 2025.3 - \u81f3\u4eca</p> <ul> <li> <p>\u4e2d\u79d1\u9662\u58f0\u5b66\u6240 xx \u9879\u76ee\uff1a\u8d1f\u8d23\u524d\u671f\u6280\u672f\u9009\u578b\u4e0e\u9a8c\u8bc1\uff0c\u53c2\u4e0e\u6838\u5fc3\u6846\u67b6\u7684\u642d\u5efa\uff0c\u72ec\u7acb\u8d1f\u8d23\u591a\u4e2a\u7b97\u6cd5\u6a21\u5757\u7684\u91cd\u6784</p> </li> <li> <p>xx\u95ee\u9898\u3001\u5982\u4f55\u89e3\u51b3\u3001\u63d0\u5347\u4e86xx</p> </li> <li> <p>xx\u95ee\u9898\u3001\u5982\u4f55\u89e3\u51b3\u3001\u63d0\u5347\u4e86xx</p> </li> </ul> </li> </ul>"},{"location":"src/jiao/profile/#_3","title":"\u6559\u80b2\u7ecf\u5386","text":"<ul> <li> <p>\u91cd\u5e86\u5927\u5b66 \uff5c \u667a\u80fd\u7f51\u8054\u6c7d\u8f66 \uff5c \u56fd\u5bb6\u5353\u8d8a\u5de5\u7a0b\u5e08\u5b66\u9662\u4ea4\u6362\u751f 2024.9 - 2025.6</p> </li> <li> <p>\u91cd\u5e86\u79d1\u6280\u5927\u5b66 \uff5c \u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f \uff5c \u5168\u65e5\u5236\u672c\u79d1 2023.9 - 2025.6</p> </li> <li> <p>\u91cd\u5e86\u5de5\u4e1a\u804c\u4e1a\u6280\u672f\u5b66\u9662 \uff5c \u8ba1\u7b97\u673a\u7f51\u7edc\u6280\u672f \uff5c \u5168\u65e5\u5236\u4e13\u79d1 2020.9 - 2023.6</p> </li> </ul>"},{"location":"src/jiao/profile/#_4","title":"\u4e2a\u4eba\u80fd\u529b","text":"<ul> <li> <p>\u5bf9\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u6709\u4e00\u5b9a\u7684\u7406\u89e3\uff0c\u66fe\u83b7ACM\u5ddd\u6e1d\u8d5b\u533a\u94f6\u724c\u3001\u84dd\u6865\u676f\u56fd\u4e8c\u3001RAICOM\u56fd\u4e00\u3001\u767e\u5ea6\u4e4b\u661f\u7701\u4e8c\u7b49 20+ \u5956\u9879</p> </li> <li> <p>\u719f\u6089 Linux \u73af\u5883\u4e0b\u7684 C/C++ \u7f16\u7a0b\uff0c\u638c\u63e1 cmake\u3001vs \u7b49\u7f16\u8bd1\u8c03\u8bd5\u5de5\u5177\uff0c\u5bf9\u7f51\u7edc\u3001\u591a\u7ebf\u7a0b\u7b49\u6709\u4e00\u5b9a\u4e86\u89e3</p> </li> <li> <p>\u8f83\u624e\u5b9e\u7684\u8ba1\u7b97\u673a\u5de5\u7a0b\u80fd\u529b\uff0c\u70ed\u7231\u4e91\u539f\u751f\uff0c\u642d\u5efa\u5e76\u8fd0\u7ef4\u65e0\u4eba\u76d1\u7ba1\u7684 HomeLab\uff08\u7528\u4e8e AI\u3001DEV \u7b49\uff09</p> </li> <li> <p>\u5173\u6ce8\u524d\u6cbfAI\u76f8\u5173\u5e94\u7528\uff0c\u4e86\u89e3\u4e3b\u6d41\u5927\u6a21\u578b\u7684\u90e8\u7f72\uff08Ollama\uff0cvLLM\uff09\u53ca\u77e5\u8bc6\u5e93\uff08RAGFlow\uff09\u7684\u8fd0\u7528</p> </li> </ul>"},{"location":"src/jiao/profile/#_5","title":"\u4e2a\u4eba\u9879\u76ee","text":"<ul> <li> <p>\u81ea\u52a8\u9a7e\u9a76\u5206\u5e03\u5f0f\u4eff\u771f\u6d4b\u8bd5\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5b9e\u73b0 \uff5c \u672c\u79d1\u6bd5\u8bbe \uff5c \u4e2d\u56fd\u6c7d\u7814\u6a2a\u5411\u79d1\u7814 2025.1 - 2025.3</p> <ul> <li> <p>\u57fa\u4e8e Kubernetes + Carla \u5b9e\u73b0\u4e86\u81ea\u52a8\u9a7e\u9a76\u7b97\u6cd5\u7684\u5206\u5e03\u5f0f\u4eff\u771f\u6d4b\u8bd5</p> </li> <li> <p>\u6838\u5fc3\u5de5\u4f5c\uff1a\u4e8c\u6b21\u5f00\u53d1 K8s Scheduler\uff0c\u96c6\u6210 NVIDIA DCGM \u76d1\u63a7\uff0c\u5b9e\u73b0\u7ec6\u7c92\u5ea6\u8d44\u6e90\u8c03\u5ea6</p> </li> <li> <p>\u6027\u80fd\u63d0\u5347\uff1a\u786c\u4ef6\u5229\u7528\u7387\u4e0e\u4eff\u771f\u6548\u7387\u63d0\u5347 40%\uff0c\u5e76\u53d1\u6d4b\u8bd5\u573a\u666f\u6570\u589e\u957f\u4e00\u500d</p> </li> </ul> </li> </ul>"},{"location":"src/jiao/live/%E6%95%B0%E5%AD%97%E7%A7%BB%E6%B0%91/","title":"\u6570\u5b57\u79fb\u6c11","text":""},{"location":"src/jiao/live/%E6%95%B0%E5%AD%97%E7%A7%BB%E6%B0%91/#_1","title":"\u62a4\u7167\u4e0e\u6e2f\u6fb3\u901a","text":""},{"location":"src/jiao/live/%E6%95%B0%E5%AD%97%E7%A7%BB%E6%B0%91/#_2","title":"\u9999\u6e2f\u94f6\u884c\u5361","text":""},{"location":"src/jiao/live/%E6%95%B0%E5%AD%97%E7%A7%BB%E6%B0%91/#hsbc-hk","title":"HSBC HK","text":"<p>\u6c47\u4e30One</p> <p>\u6c47\u4e30Mastercard\u00ae\u501f\u8bb0\u5361</p> <p>\u9999\u6e2f\u6c47\u4e30\u94f6\u884c\u6c47\u4e30one\u7ebf\u4e0b\u5f00\u6237\u5168\u8fc7\u7a0b\u548c\u6c47\u4e30\u9632\u5c01\u6307\u5357</p> <p>\u6c47\u4e30\u84dd\u72ee\u5b50\u4e07\u4e8b\u8fbe\u501f\u8bb0\u5361\u6700\u5168\u653b\u7565</p> <p></p>"},{"location":"src/jiao/live/%E6%95%B0%E5%AD%97%E7%A7%BB%E6%B0%91/#_3","title":"\u9999\u6e2f\u7535\u8bdd\u5361","text":""},{"location":"src/jiao/live/%E6%95%B0%E5%AD%97%E7%A7%BB%E6%B0%91/#club-sim","title":"Club sim","text":"<p>Club sim \u5b98\u7f51</p> <p>\u9999\u6e2f\u7535\u8bdd\u5361 Club Sim \u4fdd\u53f7\u7ecf\u9a8c\u5206\u4eab</p> <p>\u53ef\u5728\u5927\u9646\u957f\u671f\u6f2b\u6e38\u7684\u9999\u6e2fClub SIM\u7535\u8bdd\u5361\uff0c\u6536\u77ed\u4fe1\u4fdd\u53f7\u4e00\u5e74\u4ec5\u97006\u6e2f\u5e01</p>"},{"location":"src/language/go/gin/","title":"gin","text":"<p>\u6587\u6863</p>"},{"location":"src/language/go/go/","title":"go","text":"<p>\u8bed\u6cd5\u901f\u67e5</p>"},{"location":"src/language/go/go/#_1","title":"\u4e0a\u624b","text":"<ol> <li> <p>\u5b98\u7f51 \u5eb7\u5eb7\u6700\u65b0\u7248\u672c\uff0c\u4e0b\u8f7d</p> </li> <li> <p>\u89e3\u538b\u7f29\u81f3 <code>/usr/local/</code></p> <ul> <li><code>sudo tar -zxvf go* -C /usr/local/</code></li> </ul> </li> <li> <p>\u914d\u7f6e\u73af\u5883\u53d8\u91cf</p> <ul> <li> <p><code>vim ~/.bashrc</code> Bash<pre><code>export PATH=$PATH:/usr/local/go/bin\n</code></pre></p> </li> <li> <p>\u5237\u65b0   <code>source ~/.bashrc</code></p> </li> </ul> </li> <li> <p>\u6d4b\u8bd5 <code>go version</code></p> </li> </ol>"},{"location":"src/language/go/go/#_2","title":"\u5355\u4e2a\u6587\u4ef6\u8fd0\u884c","text":"Text Only<pre><code>\u2500\u2500 my_project/\n   \u251c\u2500\u2500 go.mod\n   \u251c\u2500\u2500 main.go\n</code></pre> <ol> <li> <p><code>mkdir my_project &amp;&amp; cd my_project</code></p> </li> <li> <p><code>go mod init github.com/daixll/my_project</code></p> </li> <li> <p><code>vim main.go</code></p> Go<pre><code>// main.go\npackage main\nimport \"fmt\"\nfunc main() {\n    fmt.Println(\"Hello, World!\")\n}\n</code></pre> </li> <li> <p><code>go run main.go</code></p> </li> </ol> <p></p>"},{"location":"src/language/go/go/#_3","title":"\u591a\u4e2a\u6587\u4ef6\u8fd0\u884c","text":"Text Only<pre><code>\u2500\u2500 my_project/\n   \u251c\u2500\u2500 go.mod\n   \u251c\u2500\u2500 main.go\n   \u251c\u2500\u2500 one.go\n</code></pre> <ol> <li> <p><code>vim one.go</code></p> Go<pre><code>package main  // \u5728\u540c\u4e00\u76ee\u5f55\u4e0b\uff0c\u4e00\u5b9a\u8981\u662f main \u5305\nimport \"fmt\"\nfunc One() {  // \u9996\u5b57\u6bcd\u5927\u5199\uff0c\u8868\u793a\u53ef\u4ee5\u88ab\u5916\u90e8\u8c03\u7528\n    fmt.Println(\"Hello, one\")\n}\n</code></pre> </li> <li> <p><code>vim main.go</code></p> Go<pre><code>package main\nfunc main() {\n    One()  // \u8c03\u7528\u5305\u4e2d\u7684\u51fd\u6570\n}\n</code></pre> </li> <li> <p><code>go run main.go one.go</code></p> </li> </ol> <p></p>"},{"location":"src/language/go/go/#_4","title":"\u8c03\u7528\u672c\u5730\u5305","text":"Text Only<pre><code>\u2500\u2500 my_project/\n   \u251c\u2500\u2500 go.mod\n   \u251c\u2500\u2500 main.go\n   \u251c\u2500\u2500 one.go\n   \u251c\u2500\u2500 two\n       \u251c\u2500\u2500 two.go\n</code></pre> <ol> <li> <p><code>mkdir two &amp;&amp; vim two/two.go</code></p> <p>Go<pre><code>package two\nimport \"fmt\"\nfunc Two() {\n    fmt.Println(\"Hello, two\")\n}\n</code></pre> 2. <code>vim main.go</code></p> Go<pre><code>package main\nimport (\n    \"github.com/daixll/my_project/two\"  // \u5bfc\u5165\u672c\u5730\u5305\n)\nfunc main() {\n    two.Two()  // \u8c03\u7528\u5305\u4e2d\u7684\u51fd\u6570\n}\n</code></pre> </li> <li> <p><code>vim go.mod</code></p> Bash<pre><code>module github.com/daixll/my_project\n\ngo 1.22\n// \u91cd\u5b9a\u5411\u5230\u672c\u5730\nreplace github.com/daixll/my_project/two =&gt; ./two\n</code></pre> </li> <li> <p><code>go mod tidy</code></p> </li> <li> <p><code>go build</code></p> </li> <li> <p><code>./my_project</code></p> </li> </ol>"},{"location":"src/language/go/go/#1","title":"1 \u9ad8\u5e76\u53d1\u652f\u6301","text":"<p>Go\u8bed\u8a00\u5e76\u884c\u8bbe\u8ba1\u7684\u725b\u903c\u4e4b\u5904\u5c31\u5728\u4e8e <code>goroutine</code> \u548c <code>channel</code>\uff0c\u57fa\u4e8e\u8fd9\u4fe9\u5b9e\u73b0\u7b80\u5355\u7684\u5e76\u53d1\u7f16\u7a0b</p> <ul> <li><code>goroutine</code> \u534f\u7a0b </li> <li>\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u62e5\u6709\u591a\u4e2a\u7ebf\u7a0b\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u62e5\u6709\u591a\u4e2a\u534f\u7a0b</li> <li>\u534f\u7a0b\u7531\u7a0b\u5e8f\u63a7\u5236\uff08\u7528\u6237\u6001\uff09\uff0c\u800c\u4e0d\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf\u63a7\u5236</li> <li>\u8f7b\u91cf\u7ea7\uff0c\u6ca1\u6709\u5185\u6838\u5207\u6362\u7684\u5f00\u9500\u5927\uff0c\u4e0a\u4e0b\u6587\u5207\u6362\u5f88\u5feb</li> </ul> <p>\u5173\u4e8e\u534f\u7a0b\u7684\u5e95\u5c42\u539f\u7406\u548c\u8bbe\u8ba1\u53ef\u4ee5\u770b\u770b GMP</p> <ul> <li><code>Channel</code> \u7ba1\u9053</li> <li>\u4e00\u79cd\u534f\u7a0b\u95f4\u7684\u5f02\u6b65\u901a\u4fe1\u65b9\u5f0f<ul> <li><code>goroutine A</code> \u548c<code>goroutine B</code> \u53ef\u4ee5\u901a\u8fc7 <code>Channel</code> \u5b8c\u6210\u901a\u4fe1\uff0c\u9075\u5faa\u5148\u8fdb\u5148\u51fa</li> </ul> </li> <li>Don\u2019t communicate by sharing memory, share memory by communicating</li> </ul>"},{"location":"src/language/go/go/#2","title":"2 \u4e30\u5bcc\u6807\u51c6\u5e93","text":"| \u6807\u51c6\u5e93 | \u529f\u80fd | |:--:|:--:| | fmt | \u683c\u5f0f\u5316\u64cd\u4f5c | | net | \u7f51\u7edc\u5e93\uff1aSocket\u3001HTTP\u3001RPC... | | html| \u7f51\u9875 | | math | \u6570\u5b66 | | strings| \u5b57\u7b26\u4e32 | | time | \u65f6\u95f4 | | ... | ... |   <p>ps\uff1a\u6ca1\u6709\u6709\u5e8fmap</p>"},{"location":"src/language/go/go/#3","title":"3 \u5b8c\u6574\u5de5\u5177\u94fe","text":"<p>\u5185\u7f6e\u4e86\u5f88\u591a\u6027\u80fd\u8c03\u4f18\u3001\u6d4b\u8bd5\u7684\u5de5\u5177\uff0c\u6bd4\u5982CPU\u5206\u6790\u5668pprof\u3001Uber\u5f00\u6e90\u7684\u7528\u4e8e\u751f\u6210\u706b\u7130\u56fe\u7684go-torch\u3001\u6d41\u91cf\u62f7\u8d1d\u5de5\u5177goreplay\u7b49</p>"},{"location":"src/language/go/go/#4","title":"4 \u5feb\u901f\u7f16\u8bd1","text":"<ul> <li>\u8de8\u5e73\u53f0</li> <li>Go\u7a0b\u5e8f\u662f\u901a\u8fc7\u81ea\u5df1\u7684 <code>runtime</code> \u5e93\u5b9e\u73b0\u4e0e\u64cd\u4f5c\u5185\u6838\u7cfb\u7edf\u4ea4\u4e92\u3002</li> <li>\u9759\u6001\u94fe\u63a5</li> <li>\u5728\u7f16\u8bd1\u65f6\u4f1a\u5c06\u4f9d\u8d56\u5e93\u4e00\u8d77\u7f16\u8bd1\u8fdb\u4e8c\u8fdb\u5236\u6587\u4ef6</li> <li>\u5feb\u901f\u7f16\u8bd1  </li> <li>\u4f7f\u7528\u4e86import\u7684\u5f15\u7528\u7ba1\u7406\u65b9\u5f0f</li> <li>\u6ca1\u6709\u6a21\u677f\u7684\u7f16\u8bd1\u8d1f\u62c5</li> <li>\uff1f</li> </ul>"},{"location":"src/language/go/go/#5","title":"5 \u5783\u573e\u56de\u6536","text":"<p>\u5783\u573e\u56de\u6536\uff08GC\uff09\u662f\u5728\u540e\u53f0\u8fd0\u884c\u4e00\u4e2a\u5b88\u62a4\u7ebf\u7a0b\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5728\u76d1\u63a7\u5404\u4e2a\u5bf9\u8c61\u7684\u72b6\u6001\uff0c\u8bc6\u522b\u5e76\u4e14\u4e22\u5f03\u4e0d\u518d\u4f7f\u7528\u7684\u5bf9\u8c61\u6765\u91ca\u653e\u548c\u91cd\u7528\u8d44\u6e90</p> <p>\u5173\u4e8eGO GC\u7684\u5e95\u5c42\u539f\u7406\u548c\u8bbe\u8ba1\u53ef\u4ee5\u770b\u770b \u4e09\u8272\u6807\u8bb0\u6cd5</p>"},{"location":"src/language/go/go/#_5","title":"\u57fa\u7840\u8bed\u6cd5","text":""},{"location":"src/language/go/go/#1-hello-world","title":"1 Hello World","text":"Go<pre><code>package main\n\nimport (\n  \"fmt\"\n)\n\nfunc main() {\n  fmt.Println(\"Hello World!\")\n}\n</code></pre>"},{"location":"src/language/go/go/#2-var","title":"2 var","text":"<p>\u58f0\u660e\uff1a<code>var name type</code>\uff0cvar \u662f\u5173\u952e\u5b57\uff0cname \u662f\u53d8\u91cf\u540d\uff0ctype \u662f\u53d8\u91cf\u7c7b\u578b </p> <p>\u7b80\u77ed\u58f0\u660e\uff1a<code>name := val</code>\uff0cname \u662f\u53d8\u91cf\u540d\uff0cval \u662f\u8868\u8fbe\u5f0f</p> Go<pre><code>// \u58f0\u660e\u4e00\u4e2a\nvar a int\n// \u58f0\u660e\u4e14\u521d\u59cb\u5316\nvar a int = 100\n\n// \u58f0\u660e\u591a\u4e2a\nvar a, b int    \n// \u58f0\u660e\u591a\u4e2a\u4e0d\u540c\u7c7b\u578b\nvar (\n    a int\n    b string\n    c []float32\n    d func() bool\n    e struct {\n        x int\n    }\n)\n// \u7b80\u77ed\u58f0\u660e\na := 1\n\na, b := 6.0, \"666\"\n\n// \u9759\u6001\u53d8\u91cf\nconst a = 100   // \u65e0\u987b\u8bbe\u7f6e\u7c7b\u578b\n</code></pre> <p>\u533f\u540d\u53d8\u91cf\uff1a\u4e0d\u5360\u7528\u5185\u5b58\u7a7a\u95f4\uff0c\u4e0d\u4f1a\u5206\u914d\u5185\u5b58\u3002\u533f\u540d\u53d8\u91cf\u4e0e\u533f\u540d\u53d8\u91cf\u4e4b\u95f4\u4e5f\u4e0d\u4f1a\u56e0\u4e3a\u591a\u6b21\u58f0\u660e\u800c\u65e0\u6cd5\u4f7f\u7528\u3002</p> Go<pre><code>a, _ = Get2num()    // \u8fd9\u4e2a\u4e0b\u5212\u7ebf\u5c31\u662f\u533f\u540d\u53d8\u91cf\n</code></pre>"},{"location":"src/language/go/go/#3-if-else","title":"3 if else","text":"<p>\u5fc5\u987b\u5927\u62ec\u53f7</p> Go<pre><code>if a:=1; a == 1 {\n    a := 1\n} else if a == 0 {\n    a := 2\n} else {\n    a := 3\n}\n</code></pre>"},{"location":"src/language/go/go/#4-for","title":"4 for","text":"Go<pre><code>for {\n    // \u6b7b\u5faa\u73af\n}\n\nfor i := 1; i &lt;= 10; i++{\n\n}\n\nfor i &lt;= 10 {\n    // \u5faa\u73af 10 \u6b21\n}\n</code></pre>"},{"location":"src/language/go/go/#5-switch","title":"5 switch","text":"<ul> <li><code>case</code> \u53ea\u8981\u6267\u884c\u4e86\u5c31\u4e0d\u4f1a\u518d\u9009\u62e9\u4e86 </li> <li>\u6761\u4ef6\u53ef\u4ee5\u968f\u4fbf\u5199\uff0c\u4e5f\u5c31\u662f\u65e0\u9700\u9009\u62e9\u67d0\u4e00\u53d8\u91cf</li> </ul> Go<pre><code>a := \"6\"\nswitch a {\ncase \"1\":\n  fmt.Println(\"1\")\ncase \"2\":\n  fmt.Println(\"2\")\ndefault:\n  fmt.Print(\"6\")\n}\n</code></pre> Go<pre><code>switch {    // \u6bd4 if else \u5d4c\u5957\u66f4\u6e05\u6670\ncase getuid() &gt; 6:\n  fmt.Println(\"1\")\ncase getuid() &lt; 6:\n  fmt.Println(\"2\")\ndefault:\n  fmt.Print(\"6\")\n}\n</code></pre>"},{"location":"src/language/go/go/#6-array-slice","title":"6 array &amp; slice","text":"<p>\u6570\u7ec4 <code>array</code> \u7684\u4e0b\u6807\u4ece 0 \u5f00\u59cb</p> Go<pre><code>var a [5][5]int\na[1][1] = 666\nfmt.Println(a)\n</code></pre> <p>\u5207\u7247 <code>slice</code></p> <ul> <li> <p>\u58f0\u660e Go<pre><code>// \u76f4\u63a5\u5b9a\u4e49\u4e00\u4e2a\u4e0d\u5b9a\u957f\u6570\u7ec4\nvar arr []int   \n// \u4f7f\u7528 make \u5b9a\u4e49\u4e00\u4e2a\u5207\u7247\nvar slice []int = make([]int, 8\uff0c 16) // \u7b2c\u4e09\u4e2a\u53c2\u6570\u4e3a\u63d0\u524d\u9884\u7559\u7684\u5927\u5c0f\n// \u7b80\u5316\u5199\u6cd5\nslice := make([]int, 8)\n</code></pre></p> </li> <li> <p>\u521d\u59cb\u5316 Go<pre><code>arr := []int{1, 2, 3}\n\na := 1\nb := 2\n</code></pre></p> </li> <li> <p>\u622a\u53d6\uff08\u7528\u622a\u53d6\u505a\u5220\u9664\u64cd\u4f5c\uff09</p> </li> </ul> Go<pre><code>// \u622a\u53d6 [a,b) \u4e2d\u7684\u5185\u5bb9\nbrr := arr[a:b]\n// \u4e0d\u5199, \u5c31\u662f\u9ed8\u8ba4\u4ece\u7b2c\u4e00\u4e2a\u5143\u7d20\u5230\u6700\u540e\u4e00\u4e2a\u5143\u7d20\n</code></pre> <ul> <li> <p>\u83b7\u53d6\u957f\u5ea6 Go<pre><code>len(arr)  // \u5b9e\u9645\u4f7f\u7528\u957f\u5ea6\ncap(arr)  // \u52a0\u4e0a\u9884\u7559\u7684\u957f\u5ea6\n</code></pre></p> </li> <li> <p>\u589e\u52a0\u5143\u7d20 Go<pre><code>arr = append(arr, 1, 2, 3)  // \u53ef\u4ee5\u6dfb\u52a0\u591a\u4e2a\u5143\u7d20\n</code></pre></p> </li> </ul>"},{"location":"src/language/go/go/#7-map","title":"7 map","text":"<ul> <li>\u58f0\u660e</li> </ul> Go<pre><code>cnt := make(map[string]int, 6) // map[key]val, \u9884\u7559\u7a7a\u95f46, \u53ef\u4ee5\u4e0d\u5199\n\ncnt := map[string]int { // \u521b\u5efa\u591a\u4e2a\n  \"123\": 666,\n  \"555\": 777,\n  \"777\": 888,\n}\n</code></pre> <ul> <li>\u83b7\u53d6\u952e\u503c\u5bf9</li> </ul> Go<pre><code>v := cnt[\"123\"]     // \u83b7\u53d6 val\nk, v := cnt[\"123\"]  // \u83b7\u53d6 key val\n</code></pre>"},{"location":"src/language/go/go/#8-range","title":"8 range","text":"<p>\u7528\u4e8e for \u5faa\u73af\u4e2d\u8fed\u4ee3\u6570\u7ec4(array)\u3001\u5207\u7247(slice)\u3001\u901a\u9053(channel)\u6216\u96c6\u5408(map)\u7684\u5143\u7d20</p> Go<pre><code>for _, v := range cnt { // \u5584\u7528\u533f\u540d\u53d8\u91cf\n  fmt.Println(v)\n}\n</code></pre>"},{"location":"src/language/go/go/#9","title":"9 \u7ed3\u6784\u4f53\u51fd\u6570","text":"Go<pre><code>// \u5b9a\u4e49\u7ed3\u6784\u4f53\ntype T struct {\n  a int\n  b int\n  c string\n}\n\n// \u7ed3\u6784\u4f53 T \u7684\u4e00\u4e2a\u51fd\u6570\nfunc (u T) ADD() int {\n  return u.a + u.b\n}\n\n// \u521d\u59cb\u5316 \u4e0e \u4f7f\u7528\nx := T{1, 2, \"666\"}\nvar y T\nfmt.Println(x.ADD(), y)\n</code></pre>"},{"location":"src/language/go/go/#10","title":"10 \u5b57\u7b26\u4e32\u5904\u7406","text":"<ul> <li>\u5305</li> </ul> Go<pre><code>import (\n  \"strings\"\n)\n</code></pre> <ul> <li> <p>\u662f\u5426\u542b\u6709\u5b50\u4e32 Go<pre><code>strings.Contains(s, \"substr\")\n</code></pre></p> </li> <li> <p>\u5b50\u4e32\u51fa\u73b0\u7684\u6b21\u6570</p> </li> </ul> Go<pre><code>strings.Count(s, \"substr\")\n</code></pre> <ul> <li> <p>\u4e32\u662f\u5426\u4ee5 pre \u5f00\u59cb Go<pre><code>strings.HasPrefix(s, \"pre\")\n</code></pre></p> </li> <li> <p>\u4e32\u662f\u5426\u4ee5 suf \u7ed3\u675f</p> </li> </ul> Go<pre><code>strings.HasSuffix(s, \"suf\")\n</code></pre> <ul> <li>\u8fd8\u6709\u4e00\u4e9b\uff0c\u540e\u9762\u5199\u5427</li> </ul>"},{"location":"src/language/go/go/#11-json","title":"11 JSON\u5904\u7406","text":"<ul> <li> <p>\u7ed3\u6784\u4f53 -&gt; json</p> </li> <li> <p>u \u4e00\u4e2a\u5e26\u5185\u5bb9\u7ed3\u6784\u4f53   Go<pre><code>u := &amp;T{\n  1,\n  []int{1, 2, 3},\n  true,\n}\n</code></pre></p> </li> <li> <p>\u7ed3\u6784\u4f53(u) -&gt; json(uJson)</p> </li> </ul> Go<pre><code>uJson, err := json.Marshal(u) // \u8f6c\u6362\nif err != nil {\n    fmt.Println(\"\u9519\u8bef\")\n}\n</code></pre> <ol> <li> <p>\u8f93\u51fa   Go<pre><code>fmt.Println(string(uJson)) // \u8f93\u51fa\u9700\u8981 string()\n</code></pre></p> </li> <li> <p>json -&gt; \u7ed3\u6784\u4f53</p> </li> <li> <p>nu \u4e00\u4e2a\u7a7a\u7684\u7ed3\u6784\u4f53   Go<pre><code>nu := &amp;T{}\n</code></pre></p> </li> <li> <p>json(uJson) -&gt; \u7ed3\u6784\u4f53(nu)   Go<pre><code>err2 := json.Unmarshal(uJson, nu)\nif err2 != nil {\n  fmt.Println(\"\u9519\u8bef\")\n}\n</code></pre></p> </li> <li> <p>\u8f93\u51fa   Go<pre><code>fmt.Println(nu)\n</code></pre></p> </li> </ol>"},{"location":"src/language/go/go/#12","title":"12 \u65f6\u95f4\u5904\u7406","text":""},{"location":"src/language/go/go/#13","title":"13 \u9519\u8bef\u5904\u7406","text":"<ul> <li>Go \u76f4\u63a5\u63d0\u4f9b\u4e00\u4e2a\u9519\u8bef\u7c7b\u578b error</li> </ul> Go<pre><code>// \u4e00\u4e2a\u51fd\u6570\nfunc DIV(a int, b int) (int, error) {\n  if b == 0 {\n    return -1, errors.New(\"g\")\n  }\n  return a / b, errors.New(\"\")\n}\n\n// \u4f7f\u7528\na, msg := DIV(10, 2)\n\nif msg == errors.New(\"\") {\n  fmt.Println(a, msg)\n} else {\n  fmt.Println(a, msg)\n} \n</code></pre>"},{"location":"src/language/go/go/#14","title":"14 \u8fdb\u7a0b\u4fe1\u606f","text":"<p>html:     toc: true           # \u6253\u5f00\u4fa7\u8fb9\u76ee\u5f55     toc_depth: 6        # \u6253\u5f00\u7684\u76ee\u5f55\u5c42\u7ea7     toc_float: true     # \u4fa7\u8fb9\u60ac\u505c     collapsed: true     # \u53ea\u663e\u793a\u9ad8\u7ea7\u522b\u6807\u9898(2)     smooth_scroll: true # \u9875\u9762\u6eda\u52a8,\u6807\u9898\u53d8\u5316     number_sections: false  # \u663e\u793a\u6807\u9898\u7f16\u53f7     theme: united</p>"},{"location":"src/language/go/go/#_6","title":"\u8fdb\u9636","text":""},{"location":"src/language/go/go/#goroutine-channel","title":"goroutine \u548c channel \u5b9e\u4f8b","text":"<p>A \u7ebf\u7a0b\u534f\u7a0b 0~9 \u4e2a\u6570\u5b57</p> <p>B \u7ebf\u7a0b\u534f\u7a0b \u8ba1\u7b97 \u63a5\u53d7\u5230\u7684\u6570\u5b57 \u7684\u5e73\u65b9</p> <p>\u4e3b\u51fd\u6570\u8f93\u51fa B \u534f\u7a0b\u8ba1\u7b97\u7684</p> Go<pre><code>package main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    src := make(chan int)      // \u65e0\u7f13\u51b2\u901a\u9053\n    dest := make(chan int, 10) // \u6709\u7f13\u51b2\u901a\u9053\n    go func() { // A\n        defer close(src)\n        for i := 1; i &lt;= 10; i++ {\n            src &lt;- i\n        }\n    }()\n\n    go func() { // B\n        defer close(dest)\n        for i := range src {\n            dest &lt;- i * i\n        }\n    }()\n\n    for i := range dest {\n        fmt.Println(i)\n    }\n}\n</code></pre> <ul> <li> <p>\u65e0\u7f13\u51b2\u901a\u9053     \u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\uff0c\u5fc5\u987b\u540c\u65f6\u53d1\u9001\u548c\u63a5\u53d7\uff0c\u4e5f\u5c31\u662f\u540c\u6b65</p> </li> <li> <p>\u6709\u7f13\u51b2\u901a\u9053     \u53d1\u9001\u65b9\u53ef\u4ee5\u5148\u5c06\u4e1c\u897f\u653e\u5230\u901a\u9053\uff0c\u63a5\u6536\u65b9\u9700\u8981\u4e86\u5c31\u4ece\u901a\u9053\u62ff</p> </li> </ul>"},{"location":"src/language/go/go/#lock","title":"lock \u5e76\u53d1\u5b89\u5168","text":"Go<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"sync\"\n    \"time\"\n)\n\nvar (\n    x    int64\n    lock sync.Mutex\n)\n\nfunc addWithlock() {\n    for i := 0; i &lt; 2e3; i++ {\n        lock.Lock()\n        x += 1\n        lock.Unlock()\n    }\n}\n\nfunc addWithoutlock() {\n    for i := 0; i &lt; 2e3; i++ {\n        x += 1\n    }\n}\n\nfunc main() {\n\n    x = 0\n    for i := 0; i &lt; 5; i++ {\n        go addWithoutlock() // \u65e0\u9501\u52a0\u6cd5\n    }\n    time.Sleep(time.Second)\n    fmt.Println(\"\u65e0\u9501\uff1a\", x)\n\n    x = 0\n    for i := 0; i &lt; 5; i++ {\n        go addWithlock() // \u6709\u9501\u52a0\u6cd5\n    }\n    time.Sleep(time.Second)\n    fmt.Println(\"\u6709\u9501\uff1a\", x)\n}\n</code></pre> <p>\u8f93\u51fa\uff1a</p> Text Only<pre><code>\u65e0\u9501\uff1a9767\n\u6709\u9501\uff1a10000\n</code></pre> <p>\u5728\u4e0d\u52a0\u9501\u7684\u60c5\u51b5\u4e0b\uff0cx \u88ab5\u4e2a\u534f\u7a0b\u540c\u65f6\u8bbf\u95ee\uff0c\u67d0\u4e9b+1\u52a0\u5728\u4e86\u9519\u8bef\u7684 x \u4e0a\u9762 \u56e0\u6b64\uff0c\u5171\u4eab\u5185\u5b58\u9700\u8981\u7279\u522b\u6ce8\u610f\u5e76\u53d1\u5b89\u5168</p>"},{"location":"src/language/go/go/#waitgroup","title":"WaitGroup \u534f\u7a0b\u8ba1\u6570\u5668","text":"<p>\u521b\u5efa\u4e00\u4e2a\u534f\u7a0b\u8ba1\u6570\u5668 <code>var wg sync.WaitGroup</code> \u534f\u7a0b\u6570\u91cf\u589e\u52a0 1 \u4e2a <code>wg.Add(1)</code> \u534f\u7a0b\u6570\u91cf\u51cf\u5c11 1 \u4e2a <code>wg.Done()</code> \u7b49\u5f85\u534f\u7a0b\u6570\u91cf\u5f52\u96f6 <code>wg.Wait()</code></p> Go<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"sync\"\n)\n\nvar wg sync.WaitGroup\n\nfunc hello(i int) {\n    defer wg.Done() // \u5f53\u51fd\u6570\u7ed3\u675f\uff0c\u4ee3\u8868\u4e00\u4e2a\u534f\u7a0b\u7ed3\u675f\n    fmt.Println(i)\n}\n\nfunc main() {\n    for i := 0; i &lt; 5; i++ {\n        wg.Add(1)\n        go hello(i)\n    }\n    wg.Wait() // \u7b49\u5f85\u534f\u7a0b\u5168\u90e8\u7ed3\u675f\n}\n</code></pre>"},{"location":"src/language/go/go/#_7","title":"\u4f9d\u8d56\u7ba1\u7406","text":""},{"location":"src/language/go/go/#_8","title":"\u9ad8\u8d28\u91cf\u4ee3\u7801","text":"<p>\u9ad8\u8d28\u91cf\u4ee3\u7801</p> <ul> <li>\u6b63\u786e\u53ef\u9760</li> <li>\u8fb9\u754c\u6761\u4ef6\u662f\u5426\u8003\u8651\u5b8c\u5907</li> <li> <p>\u5f02\u5e38\u60c5\u51b5\u5904\u7406\uff0c\u7a33\u5b9a\u6027\u4fdd\u8bc1</p> </li> <li> <p>\u7b80\u6d01\u6e05\u6670</p> </li> <li>\u6613\u8bfb\u6613\u7ef4\u62a4</li> </ul> <p>\u9519\u8bef\u5904\u7406 * \u7b80\u5355\u9519\u8bef   * \u5728\u5176\u4ed6\u5730\u65b9\u4e0d\u9700\u8981\u6355\u83b7\u8fd9\u4e2a\u9519\u8bef   * \u4f18\u5148\u4f7f\u7528 <code>errors.New</code> \u76f4\u63a5\u8868\u793a\u7b80\u5355\u9519\u8bef</p> <ul> <li>\u9519\u8bef\u7684 wrap\uff08\u5305\uff09</li> <li>\u5f53\u5d4c\u5957\u8c03\u7528\u591a\u4e2a\u51fd\u6570\u7684\u65f6\u5019\uff0cerror\u5d4c\u5957\u53e6\u4e00\u4e2aerror\uff0c\u9700\u8981\u751f\u6210\u4e00\u4e2a\u8ddf\u8e2a\u94fe</li> <li> <p>\u4f18\u5148\u4f7f\u7528 <code>fmt.Errorf</code> \u4e2d\u7684 <code>%w</code> \u6765\u5c06\u9519\u8bef\u5173\u8054\u81f3\u9519\u8bef\u94fe\u4e2d</p> </li> <li> <p>\u9519\u8bef\u5224\u5b9a</p> </li> <li>\u5728\u9519\u8bef\u94fe\u4e0a\u83b7\u53d6\u7279\u5b9a\u79cd\u7c7b\u7684\u9519\u8bef</li> <li>\u4f18\u5148\u4f7f\u7528 <code>errors.As</code></li> </ul>"},{"location":"src/language/go/go/#_9","title":"\u6027\u80fd\u4f18\u5316","text":""},{"location":"src/language/go/go/#benchmark","title":"benchmark","text":"<p>\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0</p>"},{"location":"src/language/go/go/#_10","title":"\u6d4b\u8bd5","text":""},{"location":"src/language/go/go/#_11","title":"\u5355\u5143\u6d4b\u8bd5","text":""},{"location":"src/language/go/go/#mock","title":"Mock\u6d4b\u8bd5","text":""},{"location":"src/language/go/go/#_12","title":"\u57fa\u51c6\u6d4b\u8bd5","text":""},{"location":"src/language/go/go/#http","title":"HTTP \u8def\u7531","text":"\u4f7f\u7528 Gin \u6846\u67b6\u5b9a\u4e49\u4e86\u56db\u4e2a HTTP \u8def\u7531\uff0c\u5206\u522b\u5bf9\u5e94 `HTTP GET`\u3001`POST`\u3001`PUT` \u548c `DELETE` \u8bf7\u6c42\u3002 \u5f53\u7528\u6237\u8bbf\u95ee `/book` \u8def\u5f84\u5e76\u53d1\u9001\u4e0d\u540c\u7c7b\u578b\u7684 HTTP \u8bf7\u6c42\u65f6\uff0c\u670d\u52a1\u5668\u4f1a\u8fd4\u56de\u76f8\u5e94\u7684 JSON \u5bf9\u8c61\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u6761\u6d88\u606f\uff0c\u8868\u793a\u8bf7\u6c42\u7684\u7c7b\u578b\u3002  &gt; \u4e0d\u4f7f\u7528\u8def\u5f84\u540d `/book` \u6765\u533a\u5206 HTTP \u8bf7\u6c42  Go<pre><code>package main\n\nimport (\n    \"github.com/gin-gonic/gin\"\n    \"net/http\"\n)\n\nfunc main() {\n    r := gin.Default()\n\n    r.GET(\"/book\", func(c *gin.Context) {\n        c.JSON(http.StatusOK, gin.H{\n            \"method\": \"GET\",\n        })\n    })\n\n    r.POST(\"/book\", func(c *gin.Context) {\n        c.JSON(http.StatusOK, gin.H{\n            \"method\": \"POST\",\n        })\n    })\n\n    r.PUT(\"/book\", func(c *gin.Context) {\n        c.JSON(http.StatusOK, gin.H{\n            \"method\": \"PUT\",\n        })\n    })\n\n    r.DELETE(\"/book\", func(c *gin.Context) {\n        c.JSON(http.StatusOK, gin.H{\n            \"method\": \"DELETE\",\n        })\n    })\n\n    err := r.Run(\":9090\")\n    if err != nil {\n        return\n    }\n}\n</code></pre>"},{"location":"src/language/go/go/#html","title":"HTML \u6e32\u67d3","text":""},{"location":"src/language/go/go/#_13","title":"\u6a21\u677f\u7684\u4f7f\u7528","text":"1. \u521b\u5efa\u6a21\u677f `*.tmpl`  HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"zh-CN\"&gt;\n\n&lt;head&gt;\n    &lt;title&gt; Hello &lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n{{ with .uu1 }}\n&lt;p&gt;Hello {{ .Name }} {{ .Age }} {{ .Gender }}&lt;/p&gt;\n{{ end }}\n\n{{ if lt .uu1.Age 20}}\n\u672a\u6210\u5e74\n{{ else }}\n\u6210\u5e74\u4eba\n{{ end }}\n\n{{ range $idx, $hb := .hobby }}\n   &lt;p&gt; {{ $idx }} - {{ $hb }} &lt;/p&gt;\n{{ else }}\n    \u7a7a\u7a7a\u5982\u4e5f\n{{ end }}\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>  2. \u89e3\u6790\u6a21\u677f     * `ParseFiles` \u51fd\u6570\u4f1a\u8bfb\u53d6\u6307\u5b9a\u7684\u6a21\u677f\u6587\u4ef6\uff0c\u5e76\u5c06\u5176\u89e3\u6790\u4e3a\u6a21\u677f\u5bf9\u8c61  3. \u6e32\u67d3\u6a21\u677f     * `Execute` \u6e32\u67d3\u4e00\u4e2a\u6a21\u677f     * \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a `io.Writer` \u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u8868\u793a\u8981\u5c06\u6a21\u677f\u7684\u8f93\u51fa\u5199\u5165\u5230\u54ea\u91cc\uff1b     * \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a `interface{}` \u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u8868\u793a\u8981\u4f20\u9012\u7ed9\u6a21\u677f\u7684\u6570\u636e\u3002  C++<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"html/template\"\n    \"net/http\"\n)\n\ntype U struct {\n    Name   string\n    Age    int\n    Gender string\n}\n\n// \u8fd9\u4e24\u4e2a\u53c2\u6570\u5206\u522b\u7528\u4e8e\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u54cd\u5e94\u548c\u83b7\u53d6\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u8bf7\u6c42\u4fe1\u606f\nfunc sayHello(w http.ResponseWriter, r *http.Request) {\n    // \u89e3\u6790\u6a21\u677f\n    t, err := template.ParseFiles(\"./learn/hello.tmpl\")\n    if err != nil {\n        fmt.Println(\"\u6a21\u677f\u89e3\u6790\u9519\u8bef\uff1a%v\", err)\n        return\n    }\n    // \u6e32\u67d3\u6a21\u677f\n\n    u1 := U{\n        \"\u5965\u7279\u66fc\",\n        18,\n        \"\u6027\u522b\u7537\uff0c\u7231\u597d\u5973\",\n    }\n\n    hobbyList := []string{\n        \"\u5531\u8df3\",\n        \"rap\",\n        \"\u7bee\u7403\",\n    }\n\n    err = t.Execute(w, map[string]interface{}{\n        \"uu1\":   u1,\n        \"hobby\": hobbyList,\n    })\n\n    if err != nil {\n        fmt.Println(\"\u6a21\u677f\u6e32\u67d3\u9519\u8bef\uff1a%v\", err)\n    }\n}\n\nfunc main() {\n    // \u5f53\u670d\u52a1\u5668\u6536\u5230\u5bf9\u6839\u8def\u5f84 / \u7684 HTTP \u8bf7\u6c42\u65f6\uff0c\u5b83\u4f1a\u8c03\u7528 f1 \u51fd\u6570\u6765\u5904\u7406\u8be5\u8bf7\u6c42\n    http.HandleFunc(\"/\", sayHello)\n    err := http.ListenAndServe(\":9090\", nil)\n    if err != nil {\n        fmt.Println(\"HTTP server start failed, err:%v\", err)\n        return\n    }\n}\n</code></pre>"},{"location":"src/language/go/go/#_14","title":"\u6a21\u677f\u7684\u51fd\u6570","text":"HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"zh-CN\"&gt;\n\n&lt;head&gt;\n    &lt;title&gt;\u81ea\u5b9a\u4e49\u6a21\u677f\u51fd\u6570&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n{{ onevar . }}\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>   \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u53d8\u91cf `onevar`  Go<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"net/http\"\n    \"text/template\"\n)\n\nfunc f1(w http.ResponseWriter, r *http.Request) {\n    // \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570 f2\n    //f2 := func(name string) (string, error) {\n    //  return name + \"\u516d\u516d\u516d\", nil\n    //}\n\n    // \u5b9a\u4e49\u6a21\u677f\n    // \u89e3\u6790\u6a21\u677f\n    // template.New\u7684\u540d\u5b57 \u8981\u4e0e\u6a21\u677f\u540d\u5b57\u5bf9\u5e94\n    t, err := template.New(\n        \"f1.tmpl\").Funcs(template.FuncMap{ // \u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u51fd\u6570\n        \"onevar\": func(name string) (string, error) { // \u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u51fd\u6570\n            return name + \"\u516d\u516d\u516d\", nil\n        },\n    }).ParseFiles(\"./learn/f1.tmpl\") // \u89e3\u6790\u6a21\u677f\n\n    if err != nil {\n        fmt.Println(\"\u6a21\u677f\u89e3\u6790\u5931\u8d25\uff01\u56e0\u4e3a\uff1a%v\", err)\n        return\n    }\n    // \u6e32\u67d3\u6a21\u677f\n    name := \"\u5965\u7279\u66fc\"\n    t.Execute(w, name)\n}\n\nfunc main() {\n    http.HandleFunc(\"/\", f1)\n    err := http.ListenAndServe(\":9090\", nil)\n    if err != nil {\n        fmt.Println(\"HTTP \u670d\u52a1\u542f\u52a8\u5931\u8d25\uff01\u56e0\u4e3a\uff1a%v\", err)\n        return\n    }\n}\n</code></pre>"},{"location":"src/language/go/go/#_15","title":"\u6a21\u677f\u7684\u5d4c\u5957","text":"HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"zh-CN\"&gt;\n\n&lt;head&gt;\n    &lt;title&gt; \u5d4c\u5957\u6a21\u677f &lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n{{/*\u5d4c\u5957\u53e6\u4e00\u4e2a\u5355\u72ec\u7684\u6a21\u677f\u6587\u4ef6*/}}\n{{template \"f2.tmpl\"}}\n\n{{/*\u5d4c\u5957\u53e6\u4e00\u4e2adefine\u5b9a\u4e49\u7684\u6a21\u677f*/}}\n{{template \"f3.tmpl\"}}\n\n&lt;/body&gt;\n&lt;/html&gt;\n\n{{ define \"f3.tmpl\" }}\n    &lt;ol&gt;\n        &lt;li&gt; \u5403\u996d &lt;/li&gt;\n        &lt;li&gt; \u7761\u89c9 &lt;/li&gt;\n        &lt;li&gt; \u6253\u8c46\u8c46 &lt;/li&gt;\n    &lt;/ol&gt;\n{{ end }}\n</code></pre> Go<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"html/template\"\n    \"net/http\"\n)\n\nfunc f(w http.ResponseWriter, r *http.Request) {\n    // \u5b9a\u4e49\u6a21\u677f\n    // \u89e3\u6790\u6a21\u677f\n    t, err := template.ParseFiles(\"./learn/f1.tmpl\", \"./learn/f2.tmpl\")\n    if err != nil {\n        fmt.Println(\"\u6a21\u677f\u89e3\u6790\u5931\u8d25\uff01\u56e0\u4e3a\uff1a%v\", err)\n        return\n    }\n    // \u6e32\u67d3\u6a21\u677f\n    t.Execute(w, nil)\n}\n\nfunc main() {\n    http.HandleFunc(\"/\", f)\n    err := http.ListenAndServe(\":9090\", nil)\n    if err != nil {\n        fmt.Println(\"HTTP \u670d\u52a1\u542f\u52a8\u5931\u8d25\uff01\u56e0\u4e3a\uff1a%v\", err)\n        return\n    }\n}\n</code></pre>"},{"location":"src/language/go/go/#_16","title":"\u6a21\u677f\u7684\u7ee7\u627f","text":"1. \u521b\u5efa\u4e00\u4e2a\u57fa\u7840\u6a21\u677f  \u5176\u4e2d\u9700\u8981\u88ab\u66ff\u6362\u7684\u5757\uff0c`content` \u662f\u5757\u7684\u540d\u5b57\uff0c`.`\u662f\u4f20\u8fdb\u53bb\u4e00\u4e2a\u53d8\u91cf HTML<pre><code> {{block \"content\" .}}{{end}}\n</code></pre> HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"zh-CN\"&gt;\n\n&lt;head&gt;\n    &lt;title&gt; \u6a21\u677f\u7ee7\u627f &lt;/title&gt;\n    &lt;style&gt;\n    *{\n        margin: 0;\n    }\n    .nav {\n        height: 50px;\n        width: 100%;\n        position: fixed;\n        top: 0;\n        background-color: burlywood;\n    }\n    .main {\n        margin-top: 50px;\n    }\n    .menu {\n        width: 20%;\n        height: 100%;\n        position: fixed;\n        left: 0;\n        background-color: cornflowerblue;\n    }\n    .center {\n        text-align: center;\n    }\n    &lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n&lt;div class=\"nav\"&gt;&lt;/div&gt;\n&lt;div class=\"main\"&gt;\n    &lt;div class=\"menu\"&gt;&lt;/div&gt;\n    &lt;div class=\"content center\"&gt;\n\n        {{/* \u4e0d\u540c\u7684\u5730\u65b9\uff0c\u5b9a\u4e49\u4e00\u4e2a\u5757 */}}\n        {{block \"content\" .}}{{end}}\n\n    &lt;/div&gt;\n&lt;/div&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>  2. \u521b\u5efa\u4e00\u4e2a\u5757\u6a21\u677f  \u8fd9\u91cc\u6307\u660e\u4f60\u7ee7\u627f\u7684\u662f\u54ea\u4e00\u4e2a\u57fa\u7840\u6a21\u677f\uff0c\u4ee5\u53ca\u4f20\u8fdb\u6765\u4e86\u90a3\u4e9b\u53d8\u91cf `{{template \"base.tmpl\" .}}`  \u5757\u7684\u540d\u5b57\u8981\u548c\u6839\u6a21\u677f\u4e2d\u7684\u540d\u5b57\uff0c\u4e00\u4e00\u5bf9\u5e94 `{{define \"content\"}}{{end}}`  HTML<pre><code>{{/*\u7ee7\u627f\u6839\u6a21\u677f*/}}\n{{template \"base.tmpl\" .}}\n\n{{/*\u91cd\u65b0\u5b9a\u4e49\u5757\u6a21\u677f*/}}\n{{define \"content\"}}\n    &lt;h1&gt; \u8fd9\u91cc\u7684\u5185\u5bb9\uff0c\u5b8c\u6574\u7684\u66ff\u6362\u8fc7\u53bb &lt;/h1&gt;\n    &lt;h1&gt; {{.}} &lt;/h1&gt;\n{{end}}\n</code></pre>  3. \u6e32\u67d3\u6a21\u677f  `template.ParseFiles` \u4f9d\u6b21\u4f20\u5165\u6839\u6a21\u677f\u3001\u5757\u6a21\u677f `t.ExecuteTemplate` \u4f9d\u6b21\u4f20\u5165\u9700\u8981\u6e32\u67d3\u7684\u5757\u6a21\u677f\u3001\u53d8\u91cf  Go<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"html/template\"\n    \"net/http\"\n)\n\nfunc ff(w http.ResponseWriter, r *http.Request) {\n    t, err := template.ParseFiles(\"./learn/base.tmpl\", \"./learn/index.tmpl\")\n    if err != nil {\n        fmt.Printf(\"\u6a21\u677f\u89e3\u6790\u5931\u8d25\uff01\u56e0\u4e3a\uff1a%v\\n\", err)\n        return\n    }\n    // \u6e32\u67d3\u6a21\u677f\n    msg := \"666\"\n    t.ExecuteTemplate(w, \"index.tmpl\", msg)\n}\n\nfunc main() {\n    http.HandleFunc(\"/ff\", ff)\n    err := http.ListenAndServe(\":9090\", nil)\n    if err != nil {\n        fmt.Println(\"HTTP \u670d\u52a1\u542f\u52a8\u5931\u8d25\uff01\u56e0\u4e3a\uff1a%v\", err)\n        return\n    }\n}\n</code></pre>"},{"location":"src/language/html/css/","title":"CSS","text":""},{"location":"src/language/html/css/#id","title":"id \u9009\u62e9\u5668","text":"HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt; \n        &lt;title&gt; \u7f51\u9875\u540d\u79f0 &lt;/title&gt;\n\n        &lt;style&gt;\n            #one\n            {\n                color:red;\n            }\n\n            #two\n            {\n                color:green;\n            }\n        &lt;/style&gt;\n\n    &lt;/head&gt;\n\n    &lt;body&gt;\n        &lt;p id=\"one\"&gt; \u7f51\u9875\u5185\u5bb9 &lt;/p&gt;\n        &lt;p id=\"two\"&gt; \u7f51\u9875\u5185\u5bb9 &lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"src/language/html/css/#class","title":"class \u9009\u62e9\u5668","text":"HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt; \n        &lt;title&gt; \u7f51\u9875\u540d\u79f0 &lt;/title&gt;\n\n        &lt;style&gt;\n            .one{\n                color:red;\n            }\n\n            p.two{\n                color:green;\n            }\n\n            .center{\n                text-align:center;\n            }\n        &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;p&gt; \u7f51\u9875\u5185\u5bb9 &lt;/p&gt;\n        &lt;p class = \"one\"&gt; \u7f51\u9875\u5185\u5bb9 &lt;/p&gt;\n        &lt;p class = \"two center\"&gt; \u7f51\u9875\u5185\u5bb9 &lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"src/language/html/css/#_1","title":"\u76d2\u5b50\u6a21\u578b","text":"HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt; \n        &lt;title&gt; \u7f51\u9875\u540d\u79f0 &lt;/title&gt;\n\n        &lt;style&gt;\n            div{\n                background-color: lightgrey;/* \u80cc\u666f\u989c\u8272 */\n\n                margin: 100px;                /* \u8fb9\u6846\u5916\u9762\u4e00\u5c42 */\n                border: 50px solid green;   /* \u8fb9\u6846\u5927\u5c0f */\n                padding: 100px ;              /* \u8fb9\u6846\u91cc\u9762\u4e00\u5c42 */\n\n                text-align:center;\n            }\n        &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div&gt;\u7f51\u9875\u5185\u5bb9&lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"src/language/html/html/","title":"HTML","text":"HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt; \n        &lt;title&gt; \u7f51\u9875\u540d\u79f0 &lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        \u7f51\u9875\u5185\u5bb9\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"src/language/html/html/#_1","title":"\u5c0f\u533a\u5757","text":"HTML<pre><code>&lt;span style=\"color: red;\"&gt; \u7ea2\u8272 &lt;/span&gt;&lt;span style=\"color: green;\"&gt; \u7eff\u8272 &lt;/span&gt;\n</code></pre> <p> \u7ea2\u8272  \u7eff\u8272 </p>"},{"location":"src/language/html/html/#_2","title":"\u5927\u533a\u5757","text":"HTML<pre><code>&lt;div style=\"color: red;\"&gt; \u7ea2\u8272 &lt;/div&gt;&lt;div style=\"color: green;\"&gt; \u7eff\u8272 &lt;/div&gt;\n</code></pre> <p> \u7ea2\u8272  \u7eff\u8272 </p>"},{"location":"src/language/html/html/#_3","title":"\u6bb5\u843d","text":"HTML<pre><code>&lt;p&gt; \u6bb5\u843d 1 &lt;/p&gt;\n&lt;p&gt; \u6bb5\u843d 2 &lt;/p&gt;\n</code></pre> <p><p> \u6bb5\u843d 1 </p> <p> \u6bb5\u843d 2 </p></p>"},{"location":"src/language/html/html/#_4","title":"\u8d85\u94fe\u63a5","text":"HTML<pre><code>&lt;a href=\"https://www.google.com\"&gt; \u70b9\u51fb\u8df3\u8f6c\u8c37\u6b4c &lt;/a&gt;\n</code></pre> <p> \u70b9\u51fb\u8df3\u8f6c\u8c37\u6b4c </p>"},{"location":"src/language/html/html/#_5","title":"\u56fe\u7247","text":"HTML<pre><code>&lt;img src=\"https://codeforces.org/s/26754/images/codeforces-sponsored-by-ton.png\" alt=\"\u56fe\u7247\u65e0\u6cd5\u663e\u793a\" width=\"200\" height=\"100\"&gt;\n</code></pre>"},{"location":"src/language/java/main_java/","title":"main/java","text":""},{"location":"src/language/java/main_java/#orgdxlutils","title":"org/dxl/utils","text":"JwtUtils.java Java<pre><code>// JwtUtils.java\npackage org.dxl.utils;\n\nimport io.jsonwebtoken.Claims;\nimport io.jsonwebtoken.Jws;\nimport io.jsonwebtoken.JwsHeader;\nimport io.jsonwebtoken.Jwts;\nimport io.jsonwebtoken.security.Keys;\nimport io.jsonwebtoken.security.SecureDigestAlgorithm;\n\nimport javax.crypto.SecretKey;\nimport java.time.Instant;\nimport java.util.Date;\nimport java.util.Map;\nimport java.util.UUID;\n\npublic class JwtUtils {\n    private static final String SECRET = \"12345678901234567890123456789012\"; // 32\u4e2a\u5b57\u8282\u7684\u5bc6\u94a5\n    private static final Integer expireTime = 12 * 60 * 60; // token\u6709\u6548\u671f\n    private static final String ISSUER = \"dxl\"; // Token \u7b7e\u53d1\u8005\n    private static final SecureDigestAlgorithm&lt;SecretKey, SecretKey&gt; ALGORITHM = Jwts.SIG.HS256; // \u7b7e\u540d\u7b97\u6cd5\n\n    //subject: token \u4f7f\u7528\u4e3b\u4f53\uff0c\u901a\u5e38\u662ftoken\u6240\u6709\u4eba\u7684ID\n    // username \u548c userid \u7528\u4e8e payload\n    public static String buildJwt(String subject, Map&lt;String, Object&gt; claims){\n        String uuid = UUID.randomUUID().toString();\n        Date expireDate = Date.from(Instant.now().plusSeconds(expireTime));\n        //HMAC : Hash-based Message Authentication Code\n        SecretKey KEY = Keys.hmacShaKeyFor(SECRET.getBytes()); // \u57fa\u4e8e\u5bc6\u94a5\u4ea7\u751f SecretKey\n        return Jwts.builder()\n                .header()\n                //\u8bbe\u7f6e\u5934\u90e8\u4fe1\u606fheader\n                .add(\"typ\", \"JWT\")\n                .add(\"alg\", \"HS256\")\n                .and()\n                //\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u8d1f\u8f7d\u4fe1\u606fpayload\n                .claims(claims)\n                //\u4ee4\u724cID\n                .id(uuid)\n                // \u8fc7\u671f\u65f6\u95f4\n                .expiration(expireDate)\n                //\u751f\u6548\u65f6\u95f4\n                .notBefore(new Date())\n                //\u7b7e\u53d1\u65f6\u95f4\n                .issuedAt(new Date())\n                //\u4ee4\u724c\u6240\u6709\u8005\uff0c\u901a\u5e38\u662f\u7528\u6237ID\n                .subject(subject)\n                //\u7b7e\u53d1\u8005\n                .issuer(ISSUER)\n                //\u7b7e\u540d\n                .signWith(KEY, ALGORITHM)\n                .compact();\n    }\n\n    public static Jws&lt;Claims&gt; parseToken(String token) {\n        SecretKey KEY = Keys.hmacShaKeyFor(SECRET.getBytes());\n        return Jwts.parser()\n                .verifyWith(KEY)\n                .build()\n                .parseSignedClaims(token);\n    }\n\n    public static JwsHeader parseHeader(String token) {\n        return parseToken(token).getHeader();\n    }\n\n    public static Claims parsePayload(String token) {\n        return parseToken(token).getPayload();\n    }\n\n    public static String getSubject(String token) {\n        return parseToken(token).getPayload().getSubject();\n    }\n\n    public static boolean validateToken(String token) {\n        try {\n            parseToken(token);\n            return true;\n        } catch (Exception e) {\n            return false;\n        }\n    }\n}\n\n/*\n&lt;dependency&gt;\n    &lt;groupId&gt;io.jsonwebtoken&lt;/groupId&gt;\n    &lt;artifactId&gt;jjwt&lt;/artifactId&gt;\n    &lt;version&gt;0.12.5&lt;/version&gt;\n&lt;/dependency&gt;\n*/\n</code></pre>"},{"location":"src/language/java/main_java/#orgdxlinterceptor","title":"org/dxl/interceptor","text":"LoginCheckInterceptor.java Java<pre><code>// LoginCheckInterceptor.java\npackage org.dxl.interceptor;\n\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpServletResponse;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.stereotype.Component;\nimport org.springframework.util.StringUtils;\nimport org.springframework.web.servlet.HandlerInterceptor;\nimport org.springframework.web.servlet.ModelAndView;\nimport org.dxl.utils.JwtUtils;\n\n@Slf4j\n@Component\npublic class LoginCheckInterceptor implements HandlerInterceptor {\n    @Override\n    // \u76ee\u6807\u8d44\u6e90\u65b9\u6cd5\u8fd0\u884c\u524d\u6267\u884c\uff0c\u8fd4\u56de true: \u6267\u884c\uff1b\u8fd4\u56de false: \u4e0d\u6267\u884c\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n        //1. \u83b7\u53d6\u8bf7\u6c42\u5934\u4e2d\u7684\u4ee4\u724c\n        String jwt = request.getHeader(\"token\");\n        //2. \u5224\u65ad\u4ee4\u724c\u662f\u5426\u5b58\u5728\n        if (!StringUtils.hasLength(jwt)){\n            log.info(\"\u8bf7\u6c42\u5934token\u4e3a\u7a7a\uff0c\u8fd4\u56de\u672a\u767b\u5f55\u7684\u4fe1\u606f\");\n            return false;\n        }\n        //3. \u89e3\u6790token,\u5982\u679c\u89e3\u6790\u5931\u8d25\uff0c\u8fd4\u56de false\n        try{\n            JwtUtils.parseToken(jwt);\n        }catch (Exception e){ // \u89e3\u6790\u5931\u8d25\n            log.info(\"token\u89e3\u6790\u5931\u8d25\");\n            return false;\n        }\n        //\u89e3\u6790token\u6210\u529f\n        return HandlerInterceptor.super.preHandle(request, response, handler);\n    }\n\n    @Override\n    // \u76ee\u6807\u8d44\u6e90\u65b9\u6cd5\u8fd0\u884c\u540e\u6267\u884c\n    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception {\n        HandlerInterceptor.super.postHandle(request, response, handler, modelAndView);\n    }\n\n    @Override\n    // \u89c6\u56fe\u6e32\u67d3\u5b8c\u6bd5\u540e\u6267\u884c\uff0c\u6700\u540e\u8fd0\u884c\uff0c\u6267\u884c\u91ca\u653e\u8d44\u6e90\u7684\u5de5\u4f5c\n    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {\n        HandlerInterceptor.super.afterCompletion(request, response, handler, ex);\n    }\n}\n</code></pre>"},{"location":"src/language/java/main_java/#orgdxlconfig","title":"org/dxl/config","text":"WebConfig.java Java<pre><code>// WebConfig.java\npackage org.dxl.config;\n\nimport jakarta.annotation.Resource;\nimport org.springframework.context.annotation.Configuration;\n\nimport org.springframework.web.servlet.config.annotation.InterceptorRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\nimport org.dxl.interceptor.LoginCheckInterceptor;\n\n@Configuration\npublic class WebConfig implements WebMvcConfigurer {\n    @Resource\n    private LoginCheckInterceptor loginCheckInterceptor;\n\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n        registry.addInterceptor(loginCheckInterceptor).addPathPatterns(\"/**\").excludePathPatterns(\"/login\");\n        WebMvcConfigurer.super.addInterceptors(registry);\n    }\n}\n</code></pre>"},{"location":"src/language/java/main_java/#orgdxlpojo","title":"org/dxl/pojo","text":"<p>\u666e\u901a Java \u5bf9\u8c61\uff0c\u5e38\u7528\u4e8e\u5c01\u88c5\u6570\u636e\u4f20\u8f93\u5bf9\u8c61</p> <ul> <li> <p><code>@Override</code> \u91cd\u5199\u7236\u7c7b\u65b9\u6cd5</p> </li> <li> <p><code>Lombok</code> \u63d0\u4f9b\u7684\u6ce8\u89e3\uff1a</p> <ul> <li><code>@Data</code> \u7528\u4e8e\u81ea\u52a8\u751f\u6210\u7c7b\u7684 <code>toString()</code> \u7b49</li> <li><code>@NoArgsConstructor</code> \u81ea\u52a8\u751f\u6210\u65e0\u53c2\u6784\u9020\u65b9\u6cd5</li> <li><code>@AllArgsConstructor</code>\u81ea\u52a8\u751f\u6210\u5305\u542b\u6240\u6709\u6210\u5458\u53d8\u91cf\u7684\u6784\u9020\u65b9\u6cd5</li> </ul> </li> </ul> Result.java Java<pre><code>package org.dxl.pojo;\n\n/**\n * \u7edf\u4e00\u54cd\u5e94\u7ed3\u679c\u5c01\u88c5\u7c7b\n */\npublic class Result {\n    private Integer code ;//1 \u6210\u529f , 0 \u5931\u8d25\n    private String msg; //\u63d0\u793a\u4fe1\u606f\n    private Object data; //\u6570\u636e date\n\n    public Result() {\n    }\n    public Result(Integer code, String msg, Object data) {\n        this.code = code;\n        this.msg = msg;\n        this.data = data;\n    }\n    public Integer getCode() {\n        return code;\n    }\n    public void setCode(Integer code) {\n        this.code = code;\n    }\n    public String getMsg() {\n        return msg;\n    }\n    public void setMsg(String msg) {\n        this.msg = msg;\n    }\n    public Object getData() {\n        return data;\n    }\n    public void setData(Object data) {\n        this.data = data;\n    }\n\n    public static Result success(Object data){\n        return new Result(1, \"success\", data);\n    }\n    public static Result success(){\n        return new Result(1, \"success\", null);\n    }\n    public static Result error(String msg){\n        return new Result(0, msg, null);\n    }\n\n    @Override\n    public String toString() {\n        return \"Result{\" +\n                \"code=\" + code +\n                \", msg='\" + msg + '\\'' +\n                \", data=\" + data +\n                '}';\n    }\n}\n</code></pre> PageBean.java Java<pre><code>package org.dxl.pojo;\n\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\nimport java.util.List;\n\n/**\n * \u5206\u9875\u67e5\u8be2\u7ed3\u679c\u5c01\u88c5\u7c7b\n */\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\npublic class PageBean {\n    private Long total;     // \u603b\u8bb0\u5f55\u6570\n    private List&lt;Emp&gt; rows; // \u5f53\u524d\u9875\u6570\u636e\u5217\u8868\n}\n</code></pre> Emp.java Java<pre><code>package org.dxl.pojo;\n\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\nimport java.time.LocalDate;\nimport java.time.LocalDateTime;\n\n/**\n * \u666e\u901a\u7528\u6237\u7c7b\n */\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\npublic class Emp {\n    private Integer id;                 // \u5458\u5de5\u7f16\u53f7\n    private String userName;            // \u7528\u6237\u540d\n    private String password;            // \u5bc6\u7801\n    private String name;                // \u59d3\u540d\n    private Short gender;               // \u6027\u522b\n    private String image;               // \u5934\u50cf\n    private Short job;                  // \u804c\u52a1\n    private LocalDate entryDate;        // \u5165\u804c\u65e5\u671f\n    private Integer deptId;             // \u90e8\u95e8\u7f16\u53f7\n    private LocalDateTime createTime;   // \u521b\u5efa\u65f6\u95f4\n    private LocalDateTime updateTime;   // \u66f4\u65b0\u65f6\u95f4\n}\n</code></pre> Dept.java Java<pre><code>package org.dxl.pojo;\n\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\nimport java.time.LocalDateTime;\n\n/**\n * \u666e\u901a\u90e8\u95e8\u7c7b\n */\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\npublic class Dept {\n    private Integer id;                 // ID\n    private String name;                // \u90e8\u95e8\u540d\u79f0\n    private LocalDateTime createTime;   // \u521b\u5efa\u65f6\u95f4\n    private LocalDateTime updateTime;   // \u4fee\u6539\u65f6\u95f4\n}\n</code></pre> <p></p>"},{"location":"src/language/java/main_java/#orgdxlmapper","title":"org/dxl/mapper","text":"<p>\u6620\u5c04\u5668\uff0c<code>MyBatis</code> \u7b49\u7ec4\u4ef6\u4f7f\u7528</p> <ul> <li><code>@Mapper</code> \u4f7f\u7528 <code>MyBatis</code> \u6846\u67b6\u4e3a\u63a5\u53e3\u751f\u6210\u5bf9\u5e94\u5b9e\u73b0\u7c7b</li> </ul> Mapper Java<pre><code>// EmpMapper.java\npackage org.dxl.mapper;\n\nimport org.apache.ibatis.annotations.Mapper;\nimport org.dxl.pojo.Emp;\n\nimport java.util.List;\n\n@Mapper\npublic interface EmpMapper {\n    // \u589e\n    void insertEmp(Emp emp);            // insert into emp values(...);\n    // \u5220\n    void deleteById(int id);            // delete from emp where id = ?;\n    void deleteByIds(List&lt;Integer&gt; ids);// delete from emp where id in (...);\n    // \u6539\n    void updateEmp(Emp emp);            // update emp set ... where id = ?;\n    // \u67e5\n    List&lt;Emp&gt; selectEmp();              // select * from emp;\n         Emp  selectEmpById(int id);    // select * from emp where id = ?;\n    // \u767b\u5f55\n    Emp login(Emp emp);                 // select * from emp where username = ? and password = ?;\n}\n</code></pre> <p></p>"},{"location":"src/language/java/main_java/#orgdxlservice","title":"org/dxl/service","text":"<p>\u670d\u52a1\u5c42\uff0c\u5c01\u88c5\u4e1a\u52a1\u903b\u8f91\u548c\u6570\u636e\u5904\u7406\uff0c\u63d0\u4f9b\u7ed9 <code>Controller</code> \u4f7f\u7528</p> <p>\u8c03\u7528 <code>DAO</code> \u5c42\u5b9e\u73b0\u5bf9\u6570\u636e\u7684\u8bbf\u95ee\u548c\u64cd\u4f5c</p> <ul> <li><code>@Server</code> \u6807\u8bc6\u4e3a <code>Spring Bean</code>\uff0c\u7531 <code>Spring</code> \u7ba1\u7406\u7684\u670d\u52a1\u7c7b</li> <li><code>@Resource</code> \u4f9d\u8d56\u6ce8\u5165</li> </ul> Service Java<pre><code>// EmpService.java\npackage org.dxl.service;\n\nimport org.dxl.pojo.Emp;\nimport java.util.List;\n\npublic interface EmpService {\n    // \u589e\n    void insertEmp(Emp emp);\n    // \u5220\n    void deleteById(int id);\n    void deleteByIds(List&lt;Integer&gt; ids);\n    // \u6539\n    void updateEmp(Emp emp);\n    // \u67e5\n    List&lt;Emp&gt; selectEmp();\n         Emp  selectEmpById(int id);\n    // \u767b\u5f55\n    Demo login(Demo demo);\n}\n</code></pre> impl/ServiceImpl Java<pre><code>// EmpServiceImpl.java\npackage org.dxl.service.impl;\n\nimport jakarta.annotation.Resource;\nimport org.dxl.mapper.EmpMapper;\nimport org.dxl.pojo.Emp;\nimport org.dxl.service.EmpService;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\n\n@Service\npublic class EmpServiceImpl implements EmpService {\n    @Resource\n    EmpMapper empMapper;\n\n    @Override\n    public void insertEmp(Emp emp) {\n        empMapper.insertEmp(emp);\n    }\n\n    @Override\n    public void deleteById(int id) {\n        empMapper.deleteById(id);\n    }\n\n    @Override\n    public void deleteByIds(List&lt;Integer&gt; ids) {\n        empMapper.deleteByIds(ids);\n    }\n\n    @Override\n    public void updateEmp(Emp emp) {\n        empMapper.updateEmp(emp);\n    }\n\n    @Override\n    public List&lt;Emp&gt; selectEmp() {\n        return empMapper.selectEmp();\n    }\n\n    @Override\n    public Emp selectEmpById(int id) {\n        return empMapper.selectEmpById(id);\n    }\n\n    @Override\n    public Demo login(Demo demo) {\n        return demoMapper.login(demo);\n    }\n}\n</code></pre> <p></p>"},{"location":"src/language/java/main_java/#orgdxlcontroller","title":"org/dxl/controller","text":"<p>\u63a7\u5236\u5668\uff0c\u5904\u7406 <code>HTTP</code> \u8bf7\u6c42\uff0c\u8fd4\u56de <code>HTTP</code> \u54cd\u5e94\uff0c\u8c03\u7528\u4e1a\u52a1\u903b\u8f91\u8fd4\u56de\u7ed3\u679c</p> <ul> <li><code>@RestController</code> \u5904\u7406 HTTP \u8bf7\u6c42\u5e76\u8fd4\u56de\u54cd\u5e94\u6570\u636e</li> <li><code>@Resource</code> \u4f9d\u8d56\u6ce8\u5165\uff0c\u89e3\u8026\u4e00\u4e2a\u7c7b\u5bf9\u5176\u4f9d\u8d56\u5bf9\u8c61\u7684\u521b\u5efa\u548c\u7ba1\u7406\u8fc7\u7a0b</li> <li><code>@GetMapping</code> \u5904\u7406 HTTP GET \u8bf7\u6c42</li> <li><code>@PostMapping</code> \u5904\u7406 HTTP POST \u8bf7\u6c42</li> <li><code>@PutMapping</code> \u5904\u7406 HTTP PUT \u8bf7\u6c42</li> <li><code>@RequestParam</code> \u4ece\u8bf7\u6c42\u4e2d\u83b7\u53d6 key \u7684 value\uff0c\u5e76\u4e14\u8d4b\u503c\u7ed9\u67d0\u4e2a\u53d8\u91cf</li> <li><code>@PathVariable</code> \u7528\u4e8e\u4ece URL \u8def\u5f84\u4e2d\u63d0\u53d6\u53d8\u91cf</li> <li><code>@RequestBody</code> \u5c06 HTTP \u8bf7\u6c42\u4f53\u4e2d\u7684\u5185\u5bb9\u7ed1\u5b9a\u5230\u65b9\u6cd5\u53c2\u6570\u4e0a</li> </ul> Controller Java<pre><code>// EmpController.java\npackage org.dxl.controller;\n\nimport jakarta.annotation.Resource;\nimport org.dxl.pojo.Emp;\nimport org.dxl.pojo.Result;\nimport org.dxl.service.EmpService;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.util.List;\n\n@RestController\npublic class EmpController {\n    @Resource\n    EmpService empService;              // \u6682\u65f6\u6309\u7167\u81ea\u52a8\u5b9e\u4f8b\u5316\u3001\u667a\u80fd\u6307\u9488\u7406\u89e3\u5427\n\n    @PostMapping(\"/insert\")             // \u5904\u7406\u5ba2\u6237\u7aef\u5bf9 \"/insert\" \u8def\u5f84\u7684 POST \u8bf7\u6c42\n    public Result insertEmp(@RequestBody Emp emp) {\n        empService.insertEmp(emp);      // \u8c03\u7528\u670d\u52a1\u5c42\n        return Result.success();        // \u8fd4\u56de\u4e00\u4e2a Result\n    }\n\n    @DeleteMapping(\"/delete/{id}\")      // \u5904\u7406\u5ba2\u6237\u7aef\u5bf9 \"/delete/{id}\" \u8def\u5f84\u7684 DELETE \u8bf7\u6c42\n    public Result deleteById(@PathVariable Integer id) {\n        empService.deleteById(id);\n        return Result.success();\n    }\n\n    @DeleteMapping(\"/delete\")           // \u5904\u7406\u5ba2\u6237\u7aef\u5bf9 \"/delete\" \u8def\u5f84\u7684 DELETE \u8bf7\u6c42\n    public Result deleteByIds(@RequestBody List&lt;Integer&gt; ids) {\n        empService.deleteByIds(ids);\n        return Result.success();\n    }\n\n    @PutMapping(\"/update\")              // \u5904\u7406\u5ba2\u6237\u7aef\u5bf9 \"/update\" \u8def\u5f84\u7684 PUT \u8bf7\u6c42\n    public Result updateEmp(@RequestBody Emp emp) {\n        empService.updateEmp(emp);\n        return Result.success();\n    }\n\n    @GetMapping(\"/select\")              // \u5904\u7406\u5ba2\u6237\u7aef\u5bf9 \"/list\" \u8def\u5f84\u7684 GET \u8bf7\u6c42\n    public Result selectEmp() {\n        List&lt;Emp&gt; e = empService.selectEmp();\n        return Result.success(e);\n    }\n\n    @GetMapping(\"/select/{id}\")         // \u5904\u7406\u5ba2\u6237\u7aef\u5bf9 \"/select/{id}\" \u8def\u5f84\u7684 Get \u8bf7\u6c42\n    public Result selectEmpById(@PathVariable Integer id) {\n        Emp e = empService.selectEmpById(id);\n        return Result.success(e);\n    }\n}\n</code></pre> LoginController.java Java<pre><code>// LoginController.java\npackage org.dxl.controller;\n\nimport jakarta.annotation.Resource;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.dxl.pojo.Emp;\nimport org.dxl.pojo.Result;\nimport org.dxl.service.EmpService;\nimport org.dxl.utils.JwtUtils;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\n@Slf4j\n@RestController\npublic class LoginController {\n    @Resource\n    EmpService empService;\n\n    @PostMapping(\"/login\")\n    public Result login(@RequestBody Emp emp){\n        Emp e = empService.login(emp);\n        // \u767b\u5f55\u6210\u529f\uff0c\u751f\u6210\u4ee4\u724c\uff0c\u4e0b\u53d1\u4ee4\u724c\n        if (e != null){\n            Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();\n            map.put(\"username\", e.getUserName());\n            map.put(\"id\", e.getId());\n            String jwt = JwtUtils.buildJwt(e.getId().toString(), map);\n            return Result.success(jwt);\n        }\n        else{\n            // \u767b\u9646\u5931\u8d25\uff0c\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\n            return Result.error(\"\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\");\n        }\n    }\n}\n</code></pre>"},{"location":"src/language/java/main_resources/","title":"main/resources","text":""},{"location":"src/language/java/main_resources/#orgdxlmapper","title":"org/dxl/mapper","text":"<p>MyBatis \u7684 SQL \u6620\u5c04\u914d\u7f6e\uff0c\u5b9a\u4e49\u5982\u4f55\u5c06\u5bf9\u8c61\u4e0e\u6570\u636e\u5e93\u4e2d\u7684\u8868\u8fdb\u884c\u6620\u5c04\u548c\u64cd\u4f5c</p> Mapper.xml XML<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;&lt;!-- EmpMapper.xml --&gt;\n&lt;!DOCTYPE mapper\n        PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n        \"https://mybatis.org/dtd/mybatis-3-mapper.dtd\"&gt;\n\n&lt;mapper namespace=\"org.dxl.mapper.EmpMapper\"&gt;\n\n    &lt;resultMap id=\"empResultMap\" type=\"org.dxl.pojo.Emp\"&gt;\n        &lt;!-- \u6620\u5c04 \u5de6\u4e3a\u6570\u636e\u5e93\u4e2d\u7684\u540d\u5b57 \u53f3\u4e3a\u7c7b\u4e2d\u7684\u540d\u5b57 --&gt;\n        &lt;result column=\"username\" property=\"userName\"/&gt;\n    &lt;/resultMap&gt;\n\n    &lt;!-- \u767b\u5f55 --&gt;\n    &lt;select id=\"login\" resultMap=\"empResultMap\"&gt;\n        select * from emp where username = #{userName} and password = #{password}\n    &lt;/select&gt;\n\n    &lt;!-- \u63d2\u5165 --&gt;\n    &lt;insert id=\"insertEmp\"&gt;\n        insert into emp(username, password)\n        values(#{userName}, #{password})\n    &lt;/insert&gt;\n\n    &lt;!-- \u5220\u9664 --&gt;\n    &lt;delete id=\"deleteById\"&gt;\n        delete from emp where id = #{id}\n    &lt;/delete&gt;\n\n    &lt;!-- \u6279\u91cf\u5220\u9664 --&gt;\n    &lt;delete id=\"deleteByIds\"&gt;\n        delete from emp where id in\n        &lt;foreach collection=\"ids\" item=\"id\" separator=\",\" open=\"(\" close=\")\"&gt;\n            #{id}\n        &lt;/foreach&gt;\n    &lt;/delete&gt;\n\n    &lt;!-- \u66f4\u65b0 --&gt;\n    &lt;update id=\"updateEmp\"&gt;\n        update emp\n        &lt;set&gt;\n            &lt;if test=\"userName != null\"&gt;\n                username=#{userName},\n            &lt;/if&gt;\n            &lt;if test=\"password != null\"&gt;\n                password=#{password},\n            &lt;/if&gt;\n        &lt;/set&gt;\n        where id = #{id}\n    &lt;/update&gt;\n\n    &lt;!-- \u67e5\u8be2\u6240\u6709 --&gt;\n    &lt;select id=\"selectEmp\" resultMap=\"empResultMap\"&gt;\n        select * from emp\n    &lt;/select&gt;\n\n    &lt;!-- \u6839\u636eid\u67e5\u8be2 --&gt;\n    &lt;select id=\"selectEmpById\" resultMap=\"empResultMap\"&gt;\n        select * from emp where id = #{id}\n    &lt;/select&gt;\n\n&lt;/mapper&gt;\n</code></pre> <p></p>"},{"location":"src/language/java/main_resources/#applicationproperties","title":"application.properties","text":"<p>\u9879\u76ee\u914d\u7f6e</p> application.properties Text Only<pre><code>spring.application.name=\u9879\u76ee\u540d\u5b57\n\n# mysql \u914d\u7f6e\nspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\nspring.datasource.url=jdbc:mysql://localhost:3306/\u6570\u636e\u5e93\u540d\u5b57\nspring.datasource.username=root\nspring.datasource.password=1234\n</code></pre>"},{"location":"src/language/java/test_java/","title":"test/java","text":""},{"location":"src/language/java/test_java/#orgdxl","title":"org/dxl","text":"ApplicationTests.java Java<pre><code>// EmpApplicationTests.java\npackage org.dxl;\n\nimport jakarta.annotation.Resource;\nimport org.junit.jupiter.api.Test;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.dxl.mapper.EmpMapper;\nimport org.dxl.pojo.Emp;\n\nimport java.util.List;\n\n@SpringBootTest\nclass SpringbootWebMybatisCrudApplicationTests {\n\n    @Resource\n    EmpMapper empMapper;\n\n    @Test\n    void testInsertEmp(){\n        Emp emp = new Emp();\n        emp.setUserName(\"root\");\n        emp.setPassword(\"1234\");\n        empMapper.insertEmp(emp);\n    }\n\n    @Test\n    void testDeleteById(){\n        empMapper.deleteById(2);\n    }\n\n    @Test\n    void testDeleteByIds(){\n        empMapper.deleteByIds(List.of(3, 4));\n    }\n\n    @Test\n    void testUpdateEmp(){\n        Emp emp = new Emp();\n        emp.setId(1);\n        emp.setUserName(\"root\");\n        emp.setPassword(\"1234\");\n        empMapper.updateEmp(emp);\n    }\n\n    @Test\n    void testSelectEmp(){\n        List&lt;Emp&gt; list = empMapper.selectEmp();\n        for (Emp e : list){\n            System.out.println(e);\n        }\n    }\n\n    @Test\n    void testSelectEmpById(){\n        Emp emp = empMapper.selectEmpById(1);\n        System.out.println(emp);\n    }\n}\n</code></pre>"},{"location":"src/language/js/webrtc/","title":"webrtc","text":"<p>\u53c2\u8003</p> <ul> <li>WebRTC \u4f7f\u7528\u5165\u95e8</li> <li>WebRTC samples</li> <li> <p>\u6269\u5c55 WebRTC \u7684 3 \u79cd\u5173\u952e\u65b9\u6cd5\uff1aSFU\u3001MCU \u548c XDN</p> </li> <li> <p>WebRTC \u57fa\u7840\u77e5\u8bc6</p> </li> <li> <p>WebRTC \u7b80\u5355\u6559\u7a0b</p> </li> </ul>"},{"location":"src/language/js/webrtc/#offer-sdp","title":"offer sdp","text":"<p><code>SDP</code>\uff08\u4f1a\u8bdd\u63cf\u8ff0\u534f\u8bae Session Description Protocol\uff09\u662f\u63cf\u8ff0\u70b9\u5bf9\u70b9\u8fde\u63a5\u7684\u6807\u51c6\uff0c<code>SDP</code> \u5305\u542b\u97f3\u89c6\u9891\u7684\u7f16\u89e3\u7801\u5668\u3001\u6e90\u5730\u5740\u548c\u65f6\u5e8f\u4fe1\u606f</p> <p>\u4f7f\u7528 <code>createOffer()</code> \u521b\u5efa <code>offer sdp</code></p> JSON<pre><code>sdp:\n    v=0\n    o=- 7093805778388360368 2 IN IP4 127.0.0.1\n    s=-\n    t=0 0\n    a=extmap-allow-mixed\n    a=msid-semantic: WMS\ntype:\n    offer\n</code></pre> <ul> <li><code>v</code><ul> <li><code>SDP</code> \u7248\u672c\u53f7\uff1a<code>0</code> \u8868\u793a\u4f7f\u7528 <code>SDP</code> \u7684\u7b2c\u4e00\u4e2a\u7248\u672c</li> </ul> </li> <li><code>o</code><ul> <li>\u7528\u6237\u540d\u5b57\u6bb5\uff1a<code>-</code> \u8868\u793a\u6ca1\u6709\u6307\u5b9a\u7528\u6237\u540d</li> <li>\u4f1a\u8bdd\u7684\u552f\u4e00\u6807\u8bc6\u7b26\uff08Session ID\uff09\uff1a<code>7093805778388360368</code></li> <li>\u4f1a\u8bdd\u7248\u672c\u53f7\uff1a<code>2</code>\uff0c\u6bcf\u5f53\u4f1a\u8bdd\u4fe1\u606f\u6539\u53d8\u65f6\uff0c\u8fd9\u4e2a\u7248\u672c\u53f7\u4f1a\u589e\u52a0</li> <li>\u7f51\u7edc\u7c7b\u578b\uff1a<code>IN</code>\uff0c\u8868\u793a <code>Internet</code></li> <li>\u5730\u5740\u7c7b\u578b\uff1a<code>IP4</code> \u8868\u793a <code>IPv4</code></li> <li>\u672c\u673a <code>IP</code> \u5730\u5740\uff1a<code>127.0.0.1</code></li> </ul> </li> <li><code>s</code><ul> <li>\u4f1a\u8bdd\u540d\u79f0: <code>-</code> \u8868\u793a\u672a\u6307\u5b9a\u5177\u4f53\u540d\u79f0</li> </ul> </li> <li><code>t</code><ul> <li>\u65f6\u95f4\uff1a<code>0 0</code> \u6ca1\u6709\u65f6\u95f4\u9650\u5236</li> </ul> </li> <li><code>a</code><ul> <li>\u5141\u8bb8 <code>RTP</code> \u6269\u5c55\u7684\u6df7\u5408\u4f7f\u7528\uff1a<code>extmap-allow-mixed</code></li> <li>\u6807\u8bc6\u7b26\u8bed\u4e49\uff1a<code>msid-semantic: WMS</code>\uff0c<code>WMS</code> \u901a\u5e38\u662f <code>WebRTC</code> \u4e2d\u4f7f\u7528\u7684\u6807\u8bc6\u7b26</li> </ul> </li> </ul> <p></p>"},{"location":"src/language/js/webrtc/#answer-sdp","title":"answer sdp","text":""},{"location":"src/language/js/webrtc/#ice-candidate","title":"ice candidate","text":""},{"location":"src/language/js/webrtc/#signaling","title":"signaling","text":"<p>\u5c06\u6240\u6709\u6d88\u606f\u65e0\u5dee\u522b\u8f6c\u53d1\u7ed9\u6240\u6709\u4eba</p> Go<pre><code>package main\n\nimport (\n    \"log\"\n    \"net/http\"\n    \"github.com/gorilla/websocket\"\n)\n\ntype Message struct {\n    Id  string  `json:\"id\"`\n    Type string `json:\"type\"`\n    Sdp string  `json:\"sdp\"`\n    Ice string  `json:\"ice\"`\n}\n\nvar cs = make(map[*websocket.Conn]bool)  // 1. \u8fde\u63a5\u7684\u96c6\u5408\n\nfunc handleConnection(w http.ResponseWriter, r *http.Request) {\n    upgrader := websocket.Upgrader{\n        CheckOrigin: func(r *http.Request) bool {\n            return true\n        },\n    }\n    conn, err := upgrader.Upgrade(w, r, nil)\n    if err != nil {\n        log.Println(\"\u5347\u7ea7\u4e3a websocket \u5931\u8d25:\", err)\n        return\n    }\n    cs[conn] = true\n\n    defer conn.Close()          // \u8fde\u63a5\u5173\u95ed\u65f6\u5220\u9664\u8fde\u63a5\n    log.Println(\"\u8fde\u63a5\u6210\u529f:\", conn.LocalAddr())\n\n    for {\n        var msg Message\n        err := conn.ReadJSON(&amp;msg)\n        if err != nil {\n            log.Println(\"\u8bfb\u53d6\u6d88\u606f\u5931\u8d25:\", err)\n            return\n        }\n\n        log.Println(\"\u6536\u5230\u6d88\u606f:\", msg.Type)\n\n        for c := range cs {\n            if c != conn {\n                c.WriteJSON(msg)\n            }\n        }\n    }\n}\n\nfunc main() {\n    http.HandleFunc(\"/\", handleConnection)\n    http.ListenAndServeTLS(\":3002\", \"/etc/letsencrypt/live/xn--e6q212bhn0c.xn--6qq986b3xl/fullchain.pem\", \"/etc/letsencrypt/live/xn--e6q212bhn0c.xn--6qq986b3xl/privkey.pem\", nil)\n}\n</code></pre> <p></p>"},{"location":"src/language/js/webrtc/#1c1s","title":"1c1s","text":"JavaScript<pre><code>const signaling = new WebSocket('wss://xn--e6q212bhn0c.xn--6qq986b3xl:3002')            // \u4fe1\u4ee4\u670d\u52a1\u5668\nlet PC = null                                                                           // \u8fde\u63a5\n\nsignaling.onopen = () =&gt; {\n    console.log('\u4fe1\u4ee4\u670d\u52a1\u5668\uff1a\u6210\u529f\u8fde\u63a5\uff01')\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true}).then(stream =&gt; {   // 1. \u83b7\u53d6\u6d41\n        document.getElementById('local_H').srcObject = stream                           // 2. \u5c06\u6d41\u7ed1\u5b9a\u5230\u6807\u7b7e\n        PC = new RTCPeerConnection()                                                    // 3. \u521b\u5efa\u8fde\u63a5\n        PC.onicecandidate = (e) =&gt; {                                                    // 4. \u53d1\u9001 ice\n            if (e.candidate) {                                                          // \u4e00\u5b9a\uff0c\u4e00\u5b9a\uff0c\u4e00\u5b9a\u8981\u5728 new \u5b8c RTCPeerConnection \u540e\u9a6c\u4e0a\u8bbe\u7f6e onicecandidate\n                signaling.send(JSON.stringify({\n                    type: 'ice',\n                    ice: JSON.stringify(e.candidate)\n                }))\n            }\n            console.log('\u53d1\u9001 ice candidate', e.candidate)\n        }\n        stream.getTracks().forEach((track) =&gt; PC.addTrack(track, stream))               // 5. \u5c06\u6d41\u6dfb\u52a0\u5230\u8fde\u63a5\n        PC.createOffer().then(offer =&gt; {                                                // 6. \u521b\u5efa offer sdp\n            PC.setLocalDescription(offer)                                               // 7. \u8bbe\u7f6e\u672c\u5730 sdp\n            signaling.send(JSON.stringify(offer))                                       // 8. \u53d1\u9001 offer sdp\n            console.log('\u53d1\u9001 offer sdp', offer)\n        })})\n}\n\nsignaling.onmessage = async (event) =&gt; {                                                // 9. \u63a5\u6536 answer sdp\n    const msg = JSON.parse(event.data)                                                  \n    if (msg.type === 'answer') {\n        console.log('\u6536\u5230 answer sdp', msg)\n        PC.setRemoteDescription(msg)                                                    // 10. \u8bbe\u7f6e\u8fdc\u7a0b sdp\n    }\n}\n\nsignaling.onclose = () =&gt; {console.log('\u4fe1\u4ee4\u670d\u52a1\u5668\uff1a\u5173\u95ed\u8fde\u63a5\uff01')}\nsignaling.onerror = (error) =&gt; {console.log('\u4fe1\u4ee4\u670d\u52a1\u5668\uff1a\u9519\u8bef\u8fde\u63a5\uff01', error)}\n</code></pre> JavaScript<pre><code>const signaling = new WebSocket('wss://xn--e6q212bhn0c.xn--6qq986b3xl:3002')            // \u4fe1\u4ee4\u670d\u52a1\u5668\nlet PC = null                                                                           // \u8fde\u63a5\n\nsignaling.onmessage = async (event) =&gt; {\n    const msg = JSON.parse(event.data)\n    if (msg.type === 'offer') {                                                         // 1. \u6536\u5230 offer sdp\n        console.log('\u6536\u5230 offer sdp', msg)\n        PC = new RTCPeerConnection()                                                    // 2. \u521b\u5efa\u8fde\u63a5\n        PC.ontrack = (e) =&gt; {                                                           // 3. \u76d1\u542c\u8fde\u63a5\u4e0a\u7684\u6d41\n            document.getElementById('remote_H').srcObject = e.streams[0]\n        }\n        PC.setRemoteDescription(msg)                                                    // 4. \u8bbe\u7f6e\u8fdc\u7a0b sdp\n        const answer = await PC.createAnswer()                                          // 5. \u521b\u5efa answer sdp\n        PC.setLocalDescription(answer)                                                  // 6. \u8bbe\u7f6e\u672c\u5730 sdp\n        signaling.send(JSON.stringify(answer))                                          // 7. \u53d1\u9001 answer\n        console.log('\u53d1\u9001 answer sdp', answer)\n    } else if (msg.type === 'ice') {\n        console.log('\u6536\u5230 ice candidate', JSON.parse(msg.ice))\n        PC.addIceCandidate(JSON.parse(msg.ice))                                         // 8. \u6dfb\u52a0 ice\n    }\n}\n\nsignaling.onopen = () =&gt; {console.log('\u4fe1\u4ee4\u670d\u52a1\u5668\uff1a\u6210\u529f\u8fde\u63a5\uff01')}\nsignaling.onclose = () =&gt; {console.log('\u4fe1\u4ee4\u670d\u52a1\u5668\uff1a\u5173\u95ed\u8fde\u63a5\uff01')}\nsignaling.onerror = (error) =&gt; {console.log('\u4fe1\u4ee4\u670d\u52a1\u5668\uff1a\u9519\u8bef\u8fde\u63a5\uff01', error)}\n</code></pre>"},{"location":"src/language/js/webrtc/#nc1s","title":"nc1s","text":"JavaScript<pre><code>const signaling = new WebSocket('wss://xn--e6q212bhn0c.xn--6qq986b3xl:3002')            // \u4fe1\u4ee4\u670d\u52a1\u5668\nlet PC = {}                                                                             // \u8fde\u63a5\nlet STREAM = null                                                                       // \u6d41\n\nlet kill = {}\nsetInterval(() =&gt; {\n    let dddd = {}\n\n    for (let id in PC) {\n        if (PC[id].iceConnectionState === 'connected' || PC[id].iceConnectionState === 'completed') {\n            if(kill[id] !== 1) console.log('\u6b63\u5e38\u8fde\u63a5', id, kill[id])\n            kill[id] = 1\n        }else{\n            console.log('\u5f02\u5e38\u8fde\u63a5', id, kill[id])\n            kill[id]++\n            if (kill[id] &gt; 3) {\n                dddd[id] = 1\n            }\n        }\n    }\n\n    for (let id in dddd) {\n        console.log('\u65ad\u5f00\u8fde\u63a5', id)\n        // \u5220\u9664\u8fde\u63a5     \n        PC[id].getSenders().map(sender =&gt; PC[id].removeTrack(sender))\n        PC[id].onicecandidate = null\n        PC[id].oniceconnectionstatechange = null;\n        PC[id].ontrack = null\n        PC[id].close()\n        PC[id] = null\n        delete kill[id]\n        delete PC[id]\n    }\n}, 2000)\n\nsignaling.onopen = () =&gt; {\n    console.log('\u4fe1\u4ee4\u670d\u52a1\u5668\uff1a\u6210\u529f\u8fde\u63a5\uff01')\n    navigator.mediaDevices.getDisplayMedia({ video: true, audio: true}).then(stream =&gt; {// 1. \u83b7\u53d6\u6d41\n        document.getElementById('local_H').srcObject = stream                           // 2. \u5c06\u6d41\u7ed1\u5b9a\u5230\u6807\u7b7e\n        STREAM = stream                                                                 // 3. \u4fdd\u5b58\u6d41\n    })\n}\n\nsignaling.onmessage = async (event) =&gt; {                                                \n    const msg = JSON.parse(event.data)\n    if(msg.type === 'join') {\n        console.log('\u6536\u5230 join', msg.id)\n\n        PC[msg.id] = new RTCPeerConnection()                                            // 4. \u521b\u5efa\u8fde\u63a5\n        PC[msg.id].onicecandidate = (e) =&gt; {                                            // 5. \u53d1\u9001 ice\n            if (e.candidate) {                                                          // \u4e00\u5b9a\uff0c\u4e00\u5b9a\uff0c\u4e00\u5b9a\u8981\u5728 new \u5b8c RTCPeerConnection \u540e\u9a6c\u4e0a\u8bbe\u7f6e onicecandidate\n                signaling.send(JSON.stringify({\n                    type: 'ice',\n                    id: msg.id,\n                    ice: JSON.stringify(e.candidate)\n                }))\n            }\n            console.log('\u53d1\u9001 ice candidate \u5230', msg.id, e.candidate)\n        }\n        STREAM.getTracks().forEach((track) =&gt; PC[msg.id].addTrack(track, STREAM))       // 6. \u5c06\u6d41\u6dfb\u52a0\u5230\u8fde\u63a5\n        PC[msg.id].createOffer().then(offer =&gt; {                                        // 7. \u521b\u5efa offer sdp\n            PC[msg.id].setLocalDescription(offer)                                       // 8. \u8bbe\u7f6e\u672c\u5730 sdp\n            signaling.send(JSON.stringify({\n                type: 'offer',\n                id: msg.id,\n                sdp: offer.sdp\n            }))                                                                         // 9. \u53d1\u9001 offer sdp\n            console.log('\u53d1\u9001 offer sdp \u5230', msg.id, offer)\n        })\n\n    } else if (msg.type === 'answer') {                                                 // 10. \u63a5\u6536 answer sdp\n        console.log('\u6536\u5230 answer sdp \u6765\u81ea', msg.id, msg)\n        PC[msg.id].setRemoteDescription(msg)                                            // 11. \u8bbe\u7f6e\u8fdc\u7a0b sdp\n    }\n}\n\nsignaling.onclose = () =&gt; {console.log('\u4fe1\u4ee4\u670d\u52a1\u5668\uff1a\u5173\u95ed\u8fde\u63a5\uff01')}\nsignaling.onerror = (error) =&gt; {console.log('\u4fe1\u4ee4\u670d\u52a1\u5668\uff1a\u9519\u8bef\u8fde\u63a5\uff01', error)}\n</code></pre> JavaScript<pre><code>const signaling = new WebSocket('wss://xn--e6q212bhn0c.xn--6qq986b3xl:3002')            // \u4fe1\u4ee4\u670d\u52a1\u5668\nlet PC = null                                                                           // \u8fde\u63a5\nlet ID = null                                                                           // ID\n\nsignaling.onmessage = async (event) =&gt; {\n    const msg = JSON.parse(event.data)\n    if (msg.id !== ID) return\n\n    if (msg.type === 'offer') {                                                         // 1. \u6536\u5230 offer sdp\n        console.log('\u6536\u5230 offer sdp', msg)\n        PC = new RTCPeerConnection()                                                    // 2. \u521b\u5efa\u8fde\u63a5\n        PC.ontrack = (e) =&gt; {                                                           // 3. \u76d1\u542c\u8fde\u63a5\u4e0a\u7684\u6d41\n            document.getElementById('remote_H').srcObject = e.streams[0]\n        }\n        PC.setRemoteDescription({                                                       // 4. \u8bbe\u7f6e\u8fdc\u7a0b sdp\n            type: msg.type,\n            sdp: msg.sdp\n        })\n        const answer = await PC.createAnswer()                                          // 5. \u521b\u5efa answer sdp\n        PC.setLocalDescription(answer)                                                  // 6. \u8bbe\u7f6e\u672c\u5730 sdp\n        signaling.send(JSON.stringify({                                                 // 7. \u53d1\u9001 answer sdp\n            id: msg.id,\n            type: answer.type,\n            sdp: answer.sdp\n        }))                                                                             \n        console.log('\u53d1\u9001 answer sdp', answer)\n    } else if (msg.type === 'ice') {\n        console.log('\u6536\u5230 ice candidate', JSON.parse(msg.ice))\n        PC.addIceCandidate(JSON.parse(msg.ice))                                         // 8. \u6dfb\u52a0 ice\n    }\n}\n\nsignaling.onopen = () =&gt; {\n    console.log('\u4fe1\u4ee4\u670d\u52a1\u5668\uff1a\u6210\u529f\u8fde\u63a5\uff01')\n    // \u521b\u5efa\u552f\u4e00 ID\n    ID = Date.now().toString(36) + Math.random().toString(36).slice(2)\n    // \u53d1\u9001 \u8bf7\u6c42 \u5230\u4fe1\u4ee4\u670d\u52a1\u5668\n    signaling.send(JSON.stringify({type: 'join', id: ID}))\n}\nsignaling.onclose = () =&gt; {console.log('\u4fe1\u4ee4\u670d\u52a1\u5668\uff1a\u5173\u95ed\u8fde\u63a5\uff01')}\nsignaling.onerror = (error) =&gt; {console.log('\u4fe1\u4ee4\u670d\u52a1\u5668\uff1a\u9519\u8bef\u8fde\u63a5\uff01', error)}\n</code></pre>"},{"location":"src/language/js/webrtc/#1cs1cs","title":"1cs1cs","text":"JavaScript<pre><code>const signaling = new WebSocket('wss://xn--e6q212bhn0c.xn--6qq986b3xl:3002')            // \u4fe1\u4ee4\u670d\u52a1\u5668\nlet local_PC = null                                                                     // \u672c\u5730\u8fde\u63a5\nlet remote_PC = null                                                                    // \u8fdc\u7a0b\u8fde\u63a5\n\nconst config = {\n    iceServers: [\n        {urls: 'stun:daixll.tpddns.cn:3478'},\n        {urls: 'turn:daixll.tpddns.cn:3478', username: 'admin', credential: '123456'}\n    ]\n}\n\nsignaling.onopen = () =&gt; {\n    console.log('\u4fe1\u4ee4\u670d\u52a1\u5668\uff1a\u6210\u529f\u8fde\u63a5\uff01')\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true}).then(stream =&gt; {   // 1. \u83b7\u53d6\u6d41\n        document.getElementById('local_H').srcObject = stream                           // 2. \u5c06\u6d41\u7ed1\u5b9a\u5230\u6807\u7b7e\n        //local_PC = new RTCPeerConnection()                                            // 3. \u521b\u5efa\u8fde\u63a5\n        local_PC = new RTCPeerConnection({iceServers: [{urls: 'stun:xn--e6q212bhn0c.xn--6qq986b3xl:3478'},{urls: 'turn:xn--e6q212bhn0c.xn--6qq986b3xl:3478',username: 'admin',credential: '123456'}]})\n\n        document.getElementById('call_H').onclick = () =&gt; {\n            local_PC.onicecandidate = (e) =&gt; {                                          // 4. \u53d1\u9001 ice\n                if (e.candidate) {                                                      // \u4e00\u5b9a\uff0c\u4e00\u5b9a\uff0c\u4e00\u5b9a\u8981\u5728 new \u5b8c RTCPeerConnection \u540e\u9a6c\u4e0a\u8bbe\u7f6e onicecandidate\n                    signaling.send(JSON.stringify({\n                        type: 'ice',\n                        ice: JSON.stringify(e.candidate)\n                    }))\n                }\n                console.log('local_PC \u53d1\u9001 ice candidate', e.candidate)\n            }\n\n            stream.getTracks().forEach((track) =&gt; local_PC.addTrack(track, stream))     // 5. \u5c06\u6d41\u6dfb\u52a0\u5230\u8fde\u63a5\n\n            local_PC.createOffer().then(offer =&gt; {                                      // 6. \u521b\u5efa offer sdp\n                local_PC.setLocalDescription(offer)                                     // 7. \u8bbe\u7f6e\u672c\u5730 sdp\n                signaling.send(JSON.stringify(offer))                                   // 8. \u53d1\u9001 offer sdp\n                console.log('local_PC \u53d1\u9001 offer sdp', offer)\n            })\n        }\n    })\n}\n\nsignaling.onmessage = async (event) =&gt; {\n    const msg = JSON.parse(event.data)\n    if (msg.type === 'offer') {                                                         // 1. \u6536\u5230 offer sdp\n        console.log('remote_PC \u6536\u5230 offer sdp', msg)\n        //remote_PC = new RTCPeerConnection()                                           // 2. \u521b\u5efa\u8fde\u63a5\n        remote_PC = new RTCPeerConnection({iceServers: [{urls: 'stun:xn--e6q212bhn0c.xn--6qq986b3xl:3478'},{urls: 'turn:xn--e6q212bhn0c.xn--6qq986b3xl:3478',username: 'admin',credential: '123456'}]})\n        remote_PC.ontrack = (e) =&gt; {                                                    // 3. \u76d1\u542c\u8fde\u63a5\u4e0a\u7684\u6d41\n            document.getElementById('remote_H').srcObject = e.streams[0]\n        }\n        remote_PC.setRemoteDescription(msg)                                             // 4. \u8bbe\u7f6e\u8fdc\u7a0b sdp\n        const answer = await remote_PC.createAnswer()                                   // 5. \u521b\u5efa answer sdp\n        remote_PC.setLocalDescription(answer)                                           // 6. \u8bbe\u7f6e\u672c\u5730 sdp\n        signaling.send(JSON.stringify(answer))                                          // 7. \u53d1\u9001 answer\n        console.log('remote_PC \u53d1\u9001 answer sdp', answer)\n    } else if (msg.type === 'ice') {\n        console.log('remote_PC \u6536\u5230 ice candidate', JSON.parse(msg.ice))\n        remote_PC.addIceCandidate(JSON.parse(msg.ice))                                  // 8. \u6dfb\u52a0 ice\n    } else if (msg.type === 'answer') {\n        console.log('local_PC \u6536\u5230 answer sdp', msg)\n        local_PC.setRemoteDescription(msg)                                              // 10. \u8bbe\u7f6e\u8fdc\u7a0b sdp\n    }\n}\n\nsignaling.onclose = () =&gt; {console.log('\u4fe1\u4ee4\u670d\u52a1\u5668\uff1a\u5173\u95ed\u8fde\u63a5\uff01')}\nsignaling.onerror = (error) =&gt; {console.log('\u4fe1\u4ee4\u670d\u52a1\u5668\uff1a\u9519\u8bef\u8fde\u63a5\uff01', error)}\n</code></pre>"},{"location":"src/language/py/deeplearning/","title":"deeplearning","text":""},{"location":"src/language/py/deeplearning/#_1","title":"\u53c2\u8003","text":"<p>\u300a\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60\u300b</p>"},{"location":"src/language/py/deeplearning/#_2","title":"\u5b89\u88c5","text":"<ol> <li> <p>\u5b89\u88c5\u9a71\u52a8</p> Bash<pre><code>sudo apt-get install nvidia-driver-550\n</code></pre> </li> <li> <p>\u5b89\u88c5 CUDA Toolkit</p> <p>\u5b98\u65b9\u6587\u6863</p> </li> </ol>"},{"location":"src/language/py/env/","title":"env","text":""},{"location":"src/language/py/env/#miniconda","title":"miniconda","text":"<ol> <li> <p>\u4e0b\u8f7d\u5b89\u88c5\u811a\u672c</p> Bash<pre><code>wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\n</code></pre> </li> <li> <p>\u6267\u884c\u5b89\u88c5\u811a\u672c</p> <p>\u9ed8\u8ba4\u5b89\u88c5\u5728 <code>~/miniconda3</code> \u76ee\u5f55\u4e0b</p> Bash<pre><code>bash Miniconda3-latest-Linux-x86_64.sh -b\n</code></pre> Bash<pre><code>rm Miniconda3-latest-Linux-x86_64.sh\n</code></pre> </li> <li> <p>\u66f4\u65b0</p> Bash<pre><code>~/miniconda3/bin/conda update -n base -c defaults conda\n# -n \u6307\u5b9a\u73af\u5883\u4e3a base\n# -c \u6307\u5b9a\u6e90\u4e3a defaults\n# conda \u8f6f\u4ef6\u540d\n</code></pre> </li> <li> <p>\u914d\u7f6e\u73af\u5883\u53d8\u91cf</p> Bash<pre><code>echo 'export PATH=$HOME/miniconda3/bin:$PATH' &gt;&gt; ~/.bashrc\n</code></pre> Bash<pre><code>source ~/.bashrc\n</code></pre> </li> <li> <p>\u9a8c\u8bc1</p> Bash<pre><code>conda init\nsource ~/.bashrc\n</code></pre> </li> <li> <p>\u5220\u9664\u9ed8\u8ba4\u542f\u52a8 <code>base</code> \u73af\u5883</p> Bash<pre><code>conda config --set auto_activate_base false\n</code></pre> </li> </ol>"},{"location":"src/language/py/env/#for-windows","title":"for windows","text":"Bash<pre><code>curl https://repo.anaconda.com/miniconda/Miniconda3-latest-Windows-x86_64.exe -o .\\miniconda.exe\nstart /wait \"\" .\\miniconda.exe /S\ndel .\\miniconda.exe\nC:\\ProgramData\\miniconda3\\Scripts\\activate.bat\n</code></pre> <ul> <li> <p>\u5b89\u88c5</p> </li> <li> <p>\u6fc0\u6d3b</p> </li> </ul>"},{"location":"src/language/py/env/#command","title":"command","text":"<ul> <li> <p>\u67e5\u770b\u6240\u6709\u73af\u5883</p> Bash<pre><code>conda info -e\n</code></pre> </li> <li> <p>\u521b\u5efa\u73af\u5883     Bash<pre><code>conda create -n py27 python=2.7\n# \u521b\u5efa\u540d\u4e3a py27 \u7684\u73af\u5883\uff0c\u4f7f\u7528 Python 2.7\nconda create -n py36 python=3.6 django=1.11\n# \u521b\u5efa\u540d\u4e3a py36 \u7684\u73af\u5883\uff0c\u4f7f\u7528 Python 3.6\uff0c\u5b89\u88c5 Django 1.11\n</code></pre></p> </li> <li> <p>\u6fc0\u6d3b\u73af\u5883</p> Bash<pre><code>conda activate py27\n</code></pre> </li> <li> <p>\u9000\u51fa\u73af\u5883</p> Bash<pre><code>conda deactivate\n</code></pre> </li> <li> <p>\u5220\u9664\u73af\u5883</p> Bash<pre><code>conda remove -n py27 --all\n</code></pre> </li> <li> <p>\u67e5\u770b\u73af\u5883\u4e2d\u5df2\u5b89\u88c5\u7684\u8f6f\u4ef6</p> Bash<pre><code>conda list\n</code></pre> </li> <li> <p>\u5b89\u88c5\u8f6f\u4ef6</p> Bash<pre><code>conda install django\n</code></pre> </li> <li> <p>\u5378\u8f7d\u8f6f\u4ef6</p> Bash<pre><code>conda remove django\n</code></pre> </li> </ul> <p></p>"},{"location":"src/language/py/env/#pip","title":"pip","text":"<ul> <li>\u4e0b\u8f7d <code>wget https://bootstrap.pypa.io/get-pip.py</code></li> <li>\u5b89\u88c5 <code>python get-pip.py</code></li> <li>\u6d4b\u8bd5 <code>python -m pip --version</code></li> </ul> <p>\u67e5\u770b\u5f53\u524d\u8f6f\u4ef6\u5305</p> <ul> <li><code>pip list</code></li> </ul> <p></p>"},{"location":"src/language/py/env/#python","title":"\u901a\u8fc7\u6e90\u7801\u6784\u5efa\u7279\u5b9a\u7248\u672c\u7684 Python","text":"<p>\u4ee5\u4e0b\u662f\u5728 <code>Ubuntu 20.04</code> \u4e0a\u6784\u5efa <code>Python 3.12.0</code> \u7684\u6b65\u9aa4\u3002</p> <ol> <li> <p>\u4e0b\u8f7d\u6e90\u7801\u5305</p> Bash<pre><code>wget https://www.python.org/ftp/python/3.12.0/Python-3.12.0.tar.xz\n</code></pre> </li> <li> <p>\u4e0b\u8f7d\u4f9d\u8d56\u5305</p> Bash<pre><code>apt install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libsqlite3-dev wget libbz2-dev\n</code></pre> </li> <li> <p>\u89e3\u538b\u6e90\u7801\u5305</p> Bash<pre><code>tar -xvf Python-3.12.0.tar.xz\n</code></pre> </li> <li> <p>\u8fd0\u884c\u914d\u7f6e\u811a\u672c</p> Bash<pre><code>cd Python-3.12.0\n./configure --enable-optimizations\n</code></pre> </li> <li> <p>\u7f16\u8bd1</p> Bash<pre><code>make -j8    # \u591a\u7ebf\u7a0b\u7f16\u8bd1\n</code></pre> </li> <li> <p>\u5b89\u88c5</p> Bash<pre><code>make altinstall\n</code></pre> </li> <li> <p>\u9a8c\u8bc1</p> Bash<pre><code>python3.12 -V\n</code></pre> </li> </ol>"},{"location":"src/language/py/openpyxl/","title":"openpyxl","text":"<p>\u5b98\u7f51\u6587\u6863</p>"},{"location":"src/language/py/openpyxl/#_1","title":"\u5de5\u4f5c\u8584","text":"<ul> <li>\u6253\u5f00\u5de5\u4f5c\u8584</li> </ul> Python<pre><code>wb = openpyxl.load_workbook('wb.xlsx')\n</code></pre> <ul> <li>\u65b0\u5efa\u5de5\u4f5c\u8584</li> </ul> Python<pre><code>wb = openpyxl.Workbook()\n</code></pre> <ul> <li>\u4fdd\u5b58\u5de5\u4f5c\u8584\uff08\u4fdd\u5b58\u4e4b\u524d\u7684\u64cd\u4f5c\uff09</li> </ul> Python<pre><code>wb.save('wb.xlsx')\n</code></pre>"},{"location":"src/language/py/openpyxl/#_2","title":"\u5de5\u4f5c\u8868","text":"<ul> <li> <p>\u6253\u5f00\u8868 Python<pre><code>Sheet1 = wb['Sheet1']\n</code></pre></p> </li> <li> <p>\u65b0\u5efa\u8868</p> </li> </ul> Python<pre><code>one = wb.create_sheet('one', 0) # \u63d2\u5165\u5230\u6700\u524d\u9762\ntwo = wb.create_sheet('two')    # \u63d2\u5165\u5230\u6700\u540e\u9762\n</code></pre> <ul> <li>\u5220\u9664\u8868</li> </ul> Python<pre><code>wb.remove(sheet1)\n</code></pre> <ul> <li>\u67e5\u770b\u6240\u6709\u8868</li> </ul> Python<pre><code>print(wb.sheetnames)\n</code></pre> <ul> <li>\u66f4\u6539\u8868\u540d</li> </ul> Python<pre><code>Sheet1.title = 'Sheet2'\n</code></pre>"},{"location":"src/language/py/openpyxl/#row","title":"\u884c row","text":"<ul> <li>\u6700\u5927\u884c</li> </ul> Python<pre><code>print(Sheet1.max_row)\n</code></pre>"},{"location":"src/language/py/openpyxl/#column","title":"\u5217 column","text":"<ul> <li>\u6700\u5927\u5217</li> </ul> Python<pre><code>print(Sheet1.max_column)\n</code></pre>"},{"location":"src/language/py/openpyxl/#cell","title":"\u5355\u5143\u683c cell","text":"<ul> <li>\u83b7\u53d6\u5355\u5143\u683c\u7684\u503c</li> </ul> Python<pre><code>print(Sheet1['A1'].value)\nprint(Sheet1.cell(row = 1, column = 1).value)\n</code></pre> <ul> <li>\u8bbe\u7f6e\u5355\u5143\u683c\u7684\u503c</li> </ul> Python<pre><code>Sheet1['A1'] = 'world'\nSheet1.cell(row = 1, column = 1).value = 'world'\n</code></pre>"},{"location":"src/language/py/tornado/","title":"tornado","text":"<p>\u5b98\u7f51</p>"},{"location":"src/language/py/tornado/#_1","title":"tornado","text":""},{"location":"src/more/xd/","title":"Xd","text":"<ul> <li>Ubuntu <code>20.04.6</code></li> <li>Python <code>3.8</code></li> <li>GCC <code>9.4.0</code></li> <li>NUPACK <code>4.0.1.8</code></li> <li>Rosetta <code>rosetta.binary.ubuntu.release-362.tar.bz2</code><ul> <li>SCons <code>4.5.2</code></li> </ul> </li> <li>rDock <code>23.11.97_ubuntu-20.04_g++_x86_64</code></li> </ul> <ul> <li>run_3dRNA_DNA <code>-</code>\uff08\u6682\u65f6\u672a\u7528\uff09</li> <li>PyRosetta4 <code>pyrosetta-2023.47+release.5fe66cd241a-cp38-cp38-linux_x86_64.whl</code> \uff08\u6682\u65f6\u672a\u7528\uff09</li> <li>vscode <code>1.84.2</code>\uff08\u53ef\u9009\uff09</li> </ul>"},{"location":"src/more/xd/#nupack","title":"NUPACK","text":"<p>\u7528\u4e8e\u6838\u9178\u7ed3\u6784\u9884\u6d4b\u548c\u70ed\u529b\u5b66\u6027\u8d28\u8ba1\u7b97\uff0c\u8f93\u51fa\u4e8c\u7ef4\u7ed3\u6784 \u4e0b\u8f7d / \u6587\u6863</p> <ul> <li> <p>\u5b89\u88c5</p> <ol> <li> <p>\u521b\u5efa\u865a\u62df\u73af\u5883</p> Bash<pre><code>conda create -n XD python=3.8\n</code></pre> </li> <li> <p>\u5b89\u88c5\u4f9d\u8d56\u8f6f\u4ef6</p> <p>Bash<pre><code>source activate # \u53ef\u80fd\u9700\u8981\u5148\u6fc0\u6d3b\u73af\u5883\n</code></pre> Text Only<pre><code>conda activate XD\nconda install numpy scipy pip matplotlib pandas jupyterlab\n</code></pre></p> </li> <li> <p>\u5b89\u88c5 <code>NUPACK</code></p> Bash<pre><code>python3 -m pip install -U nupack -f ./nupack-4.0.1.8/package\n</code></pre> </li> </ol> </li> </ul> <p>Utilities example</p> <ul> <li> <p>\u8f93\u5165</p> <ul> <li>Sequence\uff08\u6838\u9178\u5e8f\u5217\uff09\uff0c\u5f62\u5982 <code>ACGT...</code></li> <li>Structure Constraints\uff08\u7ed3\u6784\u7ea6\u675f\uff09\uff0c\uff1f</li> <li>Temperature\uff08\u6e29\u5ea6\uff09\uff0c</li> <li>Ion Concentration\uff08\u79bb\u5b50\u6d53\u5ea6\uff09\uff0c</li> <li>...</li> </ul> </li> <li> <p>\u8f93\u51fa</p> <ul> <li>\u5e8f\u5217 <code>AUCG...</code></li> <li>\u4e8c\u7ea7\u7ed3\u6784 <code>((...))</code></li> </ul> </li> </ul> Python<pre><code>from nupack import *\n\nmy_model = Model(material='dna', celsius=37)\n'''\nmeterial:\n    dna (*)\n    rna\ncelsius(\u6444\u6c0f\u5ea6):\n    37 (*)\n'''\n\n# Define walker sequences\nwalker_seq = ['augcugcccccugugugaagca']\n\n# Define intended walker structure \nwalker_struc = '(20.23+.23)20'\n\n# Suboptimal proxy structures and energies\nmy_subopt = subopt(strands=walker_seq, model=my_model, energy_gap=1.1)\n\n\n# Print out seq\n#for i in walker_seq:\n#    print(i)\n\n# Print out components of the result for the given complex\nprint('\\nSuboptimal proxy structure(s):\\n\\nseq: ', walker_seq[0])\n\nfor i, s in enumerate(my_subopt):\n    print('    %2d: %s (%.2f kcal/mol)' % (i, s.structure, s.energy))\n</code></pre> <p></p>"},{"location":"src/more/xd/#rosetta","title":"Rosetta","text":"<p>123 \u6ce8\u518c / \u4e0b\u8f7d / \u6587\u6863</p> <ul> <li>\u5b89\u88c5<ol> <li>\u89e3\u538b\u7f29     Bash<pre><code>tar -xvjf rosetta.binary.ubuntu.release-362.tar.bz2\n</code></pre></li> <li> <p>\u4e0b\u8f7d\u6784\u5efa\u5de5\u5177 SCons</p> <ol> <li>\u89e3\u538b\u7f29     Bash<pre><code>tar -zxvf scons-4.5.2.tar.gz\n</code></pre></li> <li>\u5b89\u88c5     Bash<pre><code>cd scons-4.5.2\npython setup.py install\n</code></pre></li> <li>\u9a8c\u8bc1     Bash<pre><code>scons --version\n</code></pre><ol> <li>\u4e0b\u8f7d\u4f9d\u8d56 Bash<pre><code>sudo apt-get install lib32z1-dev\n</code></pre></li> <li>\u6784\u5efa Bash<pre><code>cd rosetta.binary.ubuntu.release-362/main/source\n./scons.py -j8 mode=release bin\n</code></pre></li> </ol> </li> </ol> </li> </ol> </li> </ul> <p>farfar2</p> <ul> <li> <p>\u8f93\u5165</p> <ul> <li>\u5e8f\u5217 <code>AUCG...</code></li> <li>\u4e8c\u7ea7\u7ed3\u6784 <code>((...))</code></li> </ul> </li> <li> <p>\u8f93\u51fa</p> <ul> <li>\u4e09\u7ea7\u7ed3\u6784\uff08<code>.pdb</code>\uff09</li> </ul> </li> </ul> Bash<pre><code>/home/jiao/Desktop/'rosetta.binary.ubuntu.release-362'/main/source/bin/rna_denovo.linuxgccrelease -sequence \"ucaggu aagcag\" -secstruct \"(....( )....)\" -nstruct 2 -out:file:silent test.out -minimize_rna -dump\n</code></pre> <p></p>"},{"location":"src/more/xd/#rdock","title":"rDock","text":"<p>\u9884\u6d4b\u5c0f\u5206\u5b50\u4e0e\u86cb\u767d\u8d28\u6216\u5176\u4ed6\u751f\u7269\u5206\u5b50\u7684\u7ed3\u5408\u65b9\u5f0f\u548c\u7ed3\u5408\u80fd\u529b \u4e0b\u8f7d / \u6587\u6863</p> <p></p> <ul> <li> <p>\u5b89\u88c5</p> <ol> <li>\u4e0b\u8f7d\u4f9d\u8d56     Bash<pre><code>sudo apt install -y make git libpopt0 libpopt-dev g++\n</code></pre></li> <li>\u4e0b\u8f7d rDock \u53ca\u6784\u5efa     Bash<pre><code>git clone https://github.com/CBDD/rDock\ncd rDock\nmake\n</code></pre></li> <li>\u9a8c\u8bc1     Bash<pre><code>cd bin\n./rbcavity -help\n</code></pre></li> </ol> </li> </ul> <p>\u8f93\u5165</p> <ul> <li>\u86cb\u767d\u8d28\u7ed3\u6784\uff08<code>.pdb</code>\uff09</li> <li>\u5c0f\u5206\u5b50\u7ed3\u6784\uff08<code>.mol2</code>\uff09</li> <li>\u8bc4\u5206\u51fd\u6570</li> <li>...</li> </ul> <p>\u8f93\u51fa</p> <ul> <li>\u5206\u5b50\u5bf9\u63a5\u7ed3\u679c</li> <li>\u8bc4\u5206\u4fe1\u606f</li> </ul> <p></p>"},{"location":"src/more/xd/#pyrosetta4","title":"PyRosetta4","text":"<p>\u5bf9\u86cb\u767d\u8d28\u8fdb\u884c\u7ed3\u6784\u9884\u6d4b\u3001\u5206\u5b50\u5bf9\u63a5\u3001\u86cb\u767d\u8d28\u8bbe\u8ba1\u7b49 \u6ce8\u518c / \u4e0b\u8f7d / \u6587\u6863</p> <ul> <li> <p>\u5b89\u88c5</p> <ol> <li>\u8fdb\u5165\u865a\u62df\u73af\u5883     Bash<pre><code>conda activate XD\n</code></pre></li> <li> <p>\u5b89\u88c5</p> Bash<pre><code>pip install pyrosetta-2023.47+release.5fe66cd241a-cp38-cp38-linux_x86_64.whl\n</code></pre> </li> </ol> </li> </ul> <p>\u8f93\u5165</p> <ul> <li>\u86cb\u767d\u8d28\u7ed3\u6784\uff08<code>.pdb</code>\uff09</li> <li>\u8bc4\u5206\u51fd\u6570</li> <li>\u4efb\u52a1\u5b9a\u4e49</li> </ul> <p>\u8f93\u51fa</p> <ul> <li>\u4f18\u5316\u540e\u7684\u86cb\u767d\u8d28\u7ed3\u6784\uff08<code>.pdb</code>\uff09</li> <li>\u8bc4\u5206\u4fe1\u606f</li> <li>...</li> </ul> <p></p>"},{"location":"src/more/xd/#_1","title":"\u73af\u5883\u6784\u5efa\u5168\u6d41\u7a0b","text":"<ul> <li>\u5347\u7ea7\u7cfb\u7edf<ol> <li><code>sudo apt update &amp;&amp; sudo apt upgrade &amp;&amp; sudo apt dist-upgrade &amp;&amp; sudo apt autoremove</code> </li> </ol> </li> <li>py \u73af\u5883<ol> <li>\u7cfb\u7edf\u81ea\u5e26 <code>python3.8.10</code>\uff0c\u4f7f\u7528 <code>python3.8.10 --version</code> \u53ef\u4ee5\u9a8c\u8bc1</li> <li>\u4e0b\u8f7d\u5305\u7ba1\u7406\u5668 <code>pip3</code>\uff0c\u4f7f\u7528 <code>sudo apt install python3-pip</code></li> </ol> </li> <li>\u5b89\u88c5 nupack<ol> <li>\u4f7f\u7528\u6d4f\u89c8\u5668\u4e0b\u8f7d NUPACK 4.0.1.9</li> <li>\u6dfb\u52a0\u6267\u884c\u6743\u9650 <code>chmod +x nupack-4.0.1.9.zip</code></li> <li>\u5c06\u5176\u89e3\u538b\u81f3\u684c\u9762 <code>unzip -d ~/Desktop/ nupack-4.0.1.9.zip</code></li> <li>\u624b\u52a8\u5b89\u88c5 <code>pip3 install -U nupack -f ~/Desktop/nupack-4.0.1.9/package/</code></li> </ol> </li> <li>\u6d4b\u8bd5<ol> <li><code>sudo apt install vim</code></li> <li><code>vim TestNupack.py</code><ul> <li>\u8f93\u5165 <code>i</code> \u8fdb\u5165\u63d2\u5165\u6a21\u5f0f</li> <li>\u7c98\u8d34\u4ee3\u7801     Python<pre><code>from nupack import *\nmy_model = Model(material='dna', celsius=37)\nwalker_seq = ['augcugcccccugugugaagca']\nwalker_struc = '(20.23+.23)20'\nmy_subopt = subopt(strands=walker_seq, model=my_model, energy_gap=1.1)\nprint('\\nSuboptimal proxy structure(s):\\n\\nseq: ', walker_seq[0])\n\nfor i, s in enumerate(my_subopt):\n    print('    %2d: %s (%.2f kcal/mol)' % (i, s.structure, s.energy))\n</code></pre></li> <li>\u6309\u4e0b <code>Esc</code> \u952e\uff0c\u518d\u8f93\u5165 <code>:wq</code>\uff0c\u4fdd\u5b58\u9000\u51fa</li> </ul> </li> <li>\u8fd0\u884c <code>python3 TestNupack.py</code><ul> <li>\u770b\u5230\u5982\u4e0b\u6d88\u606f\uff0c\u8bf4\u660e\u5b89\u88c5\u6210\u529f     Bash<pre><code>Suboptimal proxy structure(s):\n\nseq:  augcugcccccugugugaagca\n     0: .((((.............)))) (-1.65 kcal/mol)\n     1: .((((.............)))) (-1.65 kcal/mol)\n     2: .((((.(.........).)))) (-1.56 kcal/mol)\n     3: .((((.(.........).)))) (-1.56 kcal/mol)\n     4: ..(((.............))). (-1.29 kcal/mol)\n     5: ..(((.............))). (-1.29 kcal/mol)\n     6: ..(((.(.........).))). (-1.20 kcal/mol)\n     7: .((((.(.(.....).).)))) (-0.96 kcal/mol)\n     8: .(((...............))) (-0.67 kcal/mol)\n     9: .((((.(..(....).).)))) (-0.66 kcal/mol)\n</code></pre></li> </ul> </li> </ol> </li> <li> <p>\u4e0b\u8f7d Rosetta</p> <ol> <li>\u4e0b\u8f7d Rosetta</li> <li>\u6dfb\u52a0\u6743\u9650 <code>chmod +x rosetta.binary.ubuntu.release-371.tar.bz2</code></li> <li>\u89e3\u538b <code>tar -zvjf rosetta.binary.ubuntu.release-371.tar.bz2 -C ~/Desktop/</code></li> </ol> </li> <li> <p>\u5b89\u88c5\u6784\u5efa\u5de5\u5177 SCons </p> <ol> <li>\u4e0b\u8f7d SCons</li> <li>\u6dfb\u52a0\u6267\u884c\u6743\u9650 <code>chmod +x SCons-4.7.0.tar.gz</code></li> <li>\u89e3\u538b <code>tar -zxvf SCons-4.7.0.tar.gz -C ~/Desktop/</code></li> <li>\u5b89\u88c5 <code>cd ~/Desktop/SCons-4.7.0/ &amp;&amp; sudo python3 setup.py install</code></li> <li>\u9a8c\u8bc1 <code>scons --version</code></li> </ol> </li> <li> <p>\u4e0b\u8f7d\u4f9d\u8d56</p> <ol> <li><code>sudo apt install lib32z1-dev</code></li> </ol> </li> <li> <p>\u6784\u5efa Rosetta</p> <ol> <li>\u53bb\u76ee\u6807\u76ee\u5f55 <code>cd rosetta.binary.ubuntu.release-371/main/source/</code></li> <li>\u641e\u4e2a\u8f6f\u94fe\u63a5 <code>sudo ln -s /usr/bin/python3 /usr/bin/python</code></li> <li>\u8fd0\u884c <code>sudo ./scons.py -j20 mode=release bin</code><ul> <li><code>-j20</code> \u662f\u6307\u7528 20 \u4e2a\u7ebf\u7a0b</li> </ul> </li> <li>\u521b\u5efa\u6587\u4ef6\u5939 <code>mkdir ~/Desktop/TestRosetta &amp;&amp; cd ~/Desktop/TestRosetta</code></li> <li>\u6d4b\u8bd5 <code>~/Desktop/rosetta.binary.ubuntu.release-371/main/source/bin/rna_denovo.linuxgccrelease -sequence \"ucaggu aagcag\" -secstruct \"(....( )....)\" -nstruct 2 -out:file:silent test.out -minimize_rna -dump</code><ul> <li>\u8fd0\u884c\u7ed3\u675f\uff0c\u51fa\u73b0\u4e0b\u9762\u51e0\u4e2a\u6587\u4ef6\u5219\u8bf4\u660e\u6210\u529f     <code>add_chunks.pdb  init.pdb  random_moves.pdb  start_0.pdb  test.out</code></li> </ul> </li> </ol> </li> <li> <p>\u5728 py \u4e2d\u8c03\u7528 rosetta</p> <p><code>pip3 install pandas openpyxl</code></p> <p>\u8fd0\u884c\u7a0b\u5e8f\u4e4b\u524d\uff0c\u9700\u8981\u65b0\u5efa\u4e00\u4e2a <code>res</code> \u76ee\u5f55\uff0c\u5b58\u653e\u6240\u6709\u7684\u7ed3\u679c</p> Python<pre><code>from nupack import *\nimport pandas as pd\nimport subprocess\nimport concurrent.futures\n\n# farfar shell \ndef farfar2(seq, sec):\n    res = \"/home/jiao/Desktop/'rosetta.binary.ubuntu.release-371'/main/source/bin/rna_denovo.linuxgccrelease\"\n    res = res + \" -sequence \\\"\"\n    res = res + seq\n    res= res + \"\\\" -secstruct \\\"\"\n    res = res + sec\n    res = res + \"\\\"\"\n    res = res + \" -minimize_rna -dump\"\n    return res\n\ndef task(seq, sec):\n    process = subprocess.Popen([\"mkdir\", seq+sec], stdout=subprocess.PIPE, stderr=subprocess.PIPE, cwd=\"./res/\")\n    stdout, stderr = process.communicate()\n    process = subprocess.Popen(farfar2(seq, sec), shell=True, stdout=subprocess.PIPE, text=True, cwd=\"./res/\"+seq+sec)\n    stdout, stderr = process.communicate()\n    print(stdout)\n\ndef main():\n    # nupack\n    df = pd.read_excel('list_40bit.xlsx', header=None)\n    walker_seq = df.iloc[:, 1:2]\n    my_model = Model(material='dna', celsius=37)\n\n    with concurrent.futures.ThreadPoolExecutor(max_workers=20) as executor:\n        for _, seq in walker_seq.iterrows():\n            i = str(seq.values)[2:-2].lower()\n            my_subopt = subopt(strands=i, model=my_model, energy_gap=1.1)\n\n            futures = [executor.submit(task, i, str(j.structure)) for j in my_subopt]\n\n        concurrent.futures.wait(futures)\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> </li> </ul>"},{"location":"src/more/old/A_Tour_of_Qt/","title":"Index","text":"<p>Qt\u6559\u7a0b\u6e90\u7801</p>"},{"location":"src/more/old/A_Tour_of_Socket/","title":"Index","text":"<p>Socket \u6559\u7a0b\u6e90\u7801</p>"},{"location":"src/more/old/CPP/C%2B%2B/","title":"\u53c2\u8003","text":"<p>\u5173\u4e8e C/C++ \u7684\u5b66\u4e60\u5fc3\u5f97\uff1a</p> <ol> <li>\u5b66\u4e60 \u57fa\u672c\u8bed\u6cd5\uff1a\u6700\u5feb\u901f\u7684\u4e0a\u624b\u65b9\u5f0f\u662f\u56fd\u5185\u81ea\u5b66\u7f51\u7ad9 \u83dc\u9e1f\u6559\u7a0b \u7b49 + \u6d1b\u8c37OJ \u7b49\uff0c\u518d\u770b\u770b\u89c6\u9891\u7b49\u3002<ul> <li>\u89c6\u9891\u63a8\u8350\uff1a\u3010Youtube\u3011 The Cherno / \u3010bilibili\u3011 The Cherno(\u642c\u8fd0)</li> <li>\u6d1b\u8c37OJ \u53ea\u9700\u8981\u5b8c\u6210\u5165\u95e8\u7cfb\u5217\u7684\u9898\u76ee\u5373\u53ef\uff0c\u4f46\u5982\u679c\u4f60\u672a\u6765\u60f3\u8981\u66f4\u597d\u7684\u4ece\u4e8b\u5f00\u53d1\u76f8\u5173\u7684\u5de5\u4f5c\uff0c\u5efa\u8bae\u5f00\u59cb \u7cfb\u7edf\u5730 \u5b66\u4e60\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\uff0c\u540c\u65f6\uff0c\u5bf9\u7f51\u7edc\u3001OS\u3001\u6570\u636e\u5e93\u7b49\u65b9\u9762\u4e5f\u8981\u6709\u4e00\u5b9a\u7684\u4e86\u89e3\u3002</li> <li>\u5b66\u6709\u4f59\u529b\uff0c\u53ef\u4ee5\u770b\u770b\u300aC++ Primer\u300b \u3001\u300aC \u548c\u6307\u9488\u300b\u7b49\u4e66\u7c4d\u3002</li> </ul> </li> </ol> <p></p> <ol> <li>\u5b66\u4e60 C++ STL\uff1a\u5982\u679c\u4f60\u6709\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u7684\u57fa\u7840\uff0c\u5176\u5b9e\u4e5f\u5c31\u4e0d\u5fc5\u518d\u5b66\u4e60 C++ STL \u4e86\uff0c\u56e0\u4e3a C++ STL \u672c\u8d28\u4e0a\u5c31\u662f\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u7684\u5b9e\u73b0\u3002<ul> <li>C\u8bed\u8a00\u4e2d\u6587\u7f51\uff1aC++ STL\u5feb\u901f\u5165\u95e8</li> <li>\u4e66\u7c4d\uff1a\u4faf\u6377 - \u300aSTL\u6e90\u7801\u5256\u6790\u300b</li> </ul> </li> </ol> <p></p> <ol> <li>\u5b66\u4e60 \u73b0\u4ee3C++ C++ 11/14/17/20\uff1a\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5e9e\u5927\u7684\u8bdd\u9898\uff0c\u6d89\u53ca\u4e86\u5f88\u591a\u65b9\u9762\uff0c\u6700\u9ad8\u6548\u7684\u65b9\u5f0f\u662f\u770b\u4e66\u3002<ul> <li>\u4f18\u5148\u5b66\u4e60\u65b0\u7279\u6027\uff0c\u6216\u8005\u8bf4\uff0c\u4f18\u5148\u5b66\u4e60\u65b0\u7279\u6027\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u53bb\u4e86\u89e3\u65b0\u7279\u6027\u7684\u5b9e\u73b0\u539f\u7406\u3002</li> <li>\u7f51\u7edc\u7f16\u7a0b \u548c \u5e76\u53d1\u7f16\u7a0b \u90e8\u5206\uff0c\u5efa\u8bae\u5355\u72ec\u5b66\u4e60\u3002</li> <li>\u4e66\u7c4d\uff1a\u73b0\u4ee3 C++ \u6559\u7a0b\u3001\u300aC++ XX\u9ad8\u7ea7\u7f16\u7a0b\u300b\u3001\u300a\u73b0\u4ee3C++ \u767d\u76ae\u4e66\u300b\uff08\u8bfe\u5916\u9605\u8bfb\uff09\u3002</li> <li>\u8fd1\u671f\u51fa\u7248\u7684\u300aC++ \u4e4b\u65c5\uff08\u7b2c\u4e09\u7248\uff09\u300b\u3001\u300aC++ Core Guildelines\u89e3\u6790\u300b\u4e5f\u662f\u975e\u5e38\u4e0d\u9519\u7684\u4e66\u7c4d\u3002</li> </ul> </li> </ol> <p></p> <ol> <li>\u5b66\u4e60 \u9762\u5411\u5bf9\u8c61\uff1a\u7528C++\u4e4b\u7236 \u672c\u8d3e\u5c3c \u7684\u8bdd\u8bf4\uff0cC++\u662f\u652f\u6301\u9762\u5411\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\uff0cC++\u662f\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\u3002\u201c\u9762\u5411\u5bf9\u8c61\u4e0d\u662f C++ \u7684\u6240\u6709\uff0c\u800c\u4ec5\u4ec5\u662f\u5176\u652f\u6301\u7684\u591a\u79cd\u7f16\u7a0b\u8303\u5f0f\uff08\u9762\u5411\u8fc7\u7a0b\u3001\u9762\u5411\u5bf9\u8c61\u3001\u6cdb\u578b\u7f16\u7a0b\u3001\u51fd\u6570\u5f0f\u7f16\u7a0b\uff09\u4e2d\u7684\u4e00\u79cd\u201d\u3002<ul> <li>\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff1a\u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001\u3002</li> <li>\u65e2\u7136\u9762\u5411\u5bf9\u8c61\u662f\u4e00\u79cd\u601d\u60f3\uff0c\u6211\u4eec\u5e94\u8be5\u8df3\u8131\u51fa\u8bed\u8a00\u7684\u9650\u5236\uff0c\u53bb\u601d\u8003\u5982\u4f55\u8bbe\u8ba1\u4e00\u4e2a\u9762\u5411\u5bf9\u8c61\u7684\u7cfb\u7edf\u3002</li> <li>\u4e66\u7c4d\uff1a\u300a\u8bbe\u8ba1\u6a21\u5f0f\u7684\u827a\u672f\u2014\u2014\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u5185\u529f\u4fee\u70bc\u4e4b\u9053\u300b\u3001\u300ahead first\u8bbe\u8ba1\u6a21\u5f0f\u300b\u3002</li> <li>\u67b6\u6784\u4e3a\u9053\u3001\u8bbe\u8ba1\u4e3a\u672f\u3002\u8bbe\u8ba1\u6a21\u5f0f\u662f\u786e\u5b9a\u67b6\u6784\u4e0b\u7684\u6700\u4f73\u5b9e\u8df5\u3002</li> </ul> </li> </ol> <p></p> <ul> <li> <p>cppreference\uff1aC++ \u53c2\u8003\u624b\u518c</p> </li> <li> <p>Microsoft Visual C++\uff1a\u5fae\u8f6f\u5b98\u65b9 C++ \u53c2\u8003\u624b\u518c</p> </li> </ul> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B/#c","title":"\u57fa\u4e8e C","text":""},{"location":"src/more/old/CPP/C%2B%2B/#c_1","title":"C\u662f\u5982\u4f55\u5de5\u4f5c\u7684","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_2","title":"\u7f16\u8bd1\u5668\u662f\u5982\u4f55\u5de5\u4f5c\u7684","text":""},{"location":"src/more/old/CPP/C%2B%2B/#todo","title":"todo","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_3","title":"\u94fe\u63a5\u5668\u662f\u5982\u4f55\u5de5\u4f5c\u7684","text":""},{"location":"src/more/old/CPP/C%2B%2B/#todo_1","title":"todo","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_4","title":"\u57fa\u672c\u6570\u636e\u7c7b\u578b","text":"<p>\u9884\u4e60\uff1a C \u6570\u636e\u7c7b\u578b C \u53d8\u91cf C \u5e38\u91cf \u7ec3\u4e60\uff1a NOI 1.1 \u7f16\u7a0b\u57fa\u7840\u4e4b\u8f93\u5165\u8f93\u51fa NOI 1.2 \u7f16\u7a0b\u57fa\u7840\u4e4b\u53d8\u91cf\u5b9a\u4e49\u3001\u8d4b\u503c\u53ca\u8f6c\u6362</p> <p>\u5728 C \u4e2d\uff0c\u6709\u4ee5\u4e0b\u51e0\u79cd\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff1a</p>"},{"location":"src/more/old/CPP/C%2B%2B/#_5","title":"\u6574\u578b","text":"\u7c7b\u578b \u5b57\u8282\u6570 signed unsigned <code>short</code> 2 \\(-2^{15}\\) \u5230 \\(2^{15} - 1\\) <code>%hd</code> 0 \u5230 \\(2^{16} - 1\\) <code>%hu</code> <code>int</code> 4 \\(-2^{31}\\) \u5230 \\(2^{31} - 1\\) <code>%d</code> 0 \u5230 \\(2^{32} - 1\\) <code>%u</code> <code>long long</code> 8 \\(-2^{63}\\) \u5230 \\(2^{63} - 1\\) <code>%lld</code> 0 \u5230 \\(2^{64} - 1\\) <code>%llu</code> <p>\u7279\u522b\u7684\uff0c\u4e3a\u4e86\u517c\u5bb9\u6027\uff0c\u6709\u4e86\u7cbe\u786e\u5bbd\u5ea6\u6574\u6570\u7c7b\u578b\uff08exact-width integers types\uff09\u7684\u5b9a\u4e49\u3002</p> <p><code>#include &lt;stdint.h&gt;</code></p> \u7c7b\u578b \u5b57\u8282\u6570 signed unsigned <code>int8_t</code> 1 \\(-2^{7}\\) \u5230 \\(2^{7} - 1\\) 0 \u5230 \\(2^{8} - 1\\) <code>int16_t</code> 2 \\(-2^{15}\\) \u5230 \\(2^{15} - 1\\) 0 \u5230 \\(2^{16} - 1\\) <code>int32_t</code> 4 \\(-2^{31}\\) \u5230 \\(2^{31} - 1\\) 0 \u5230 \\(2^{32} - 1\\) <code>int64_t</code> 8 \\(-2^{63}\\) \u5230 \\(2^{63} - 1\\) 0 \u5230 \\(2^{64} - 1\\) <p>\u7279\u522b\u7684\uff0cGCC\u7f16\u8bd1\u5668\u8fd8\u652f\u6301 <code>__int128_t</code> \u7c7b\u578b\uff0c\u5373128\u4f4d\u6574\u578b\u3002</p> <p>\u9057\u61be\u7684\uff0c\u56e0\u4e3a\u662f\u7f16\u8bd1\u5668\u6269\u5c55\uff0c\u6240\u4ee5\u4e0d\u662f\u6807\u51c6\u7684C\u8bed\u8a00\uff0c\u65e0\u6cd5\u76f4\u63a5 printf\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B/#_6","title":"\u6d6e\u70b9\u578b","text":"\u7c7b\u578b \u5b57\u8282\u6570 \u7cbe\u5ea6 \u683c\u5f0f\u5316 <code>float</code> 4 \\(10^{-7}\\) <code>%f</code> <code>double</code> 8 \\(10^{-15}\\) <code>%lf</code>"},{"location":"src/more/old/CPP/C%2B%2B/#_7","title":"\u5b57\u7b26\u578b","text":"\u7c7b\u578b \u5b57\u8282\u6570 \u683c\u5f0f\u5316 <code>char</code> 1 <code>%c</code> <p>\u5e38\u7528\u7684 ASCII \u7801\u8868\uff1a</p> \u5b57\u7b26 ASCII \u7801 <code>\\0</code> 0 <code>0</code> 48 <code>A</code> 65 <code>a</code> 97"},{"location":"src/more/old/CPP/C%2B%2B/#_8","title":"\u6307\u9488","text":"<p>\u6307\u9488\u4e5f\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u5b83\u7528\u4e8e\u5b58\u50a8\u5185\u5b58\u5730\u5740\u3002</p> \u7c7b\u578b \u5b57\u8282\u6570 \u683c\u5f0f\u5316 <code>void *</code> 8 <code>%p</code> <p>\u548c\u5176\u4ed6\u6570\u636e\u7c7b\u578b\u4e00\u6837 * <code>int</code> \u5b58\u50a8\u6570\u5b57 * <code>char</code> \u5b58\u50a8\u5b57\u7b26 * <code>double</code> \u5b58\u50a8\u6d6e\u70b9\u6570 * <code>void *</code> \u5b58\u50a8\u5185\u5b58\u5730\u5740</p> <p>\u90a3\u4e3a\u4f55\u6709 <code>char *</code>\u3001<code>int *</code>\u3001<code>double *</code> \u7b49\u7c7b\u578b\u5462\uff1f \u6307\u660e\u6307\u9488\u6307\u5411\u7684\u6570\u636e\u7c7b\u578b\uff1a 1. \u6307\u9488\u7684\u7b97\u672f\u64cd\u4f5c     \u4e0d\u540c\u7c7b\u578b\u7684\u6307\u9488\u8fd0\u7b97\u65f6\uff0c\u6b65\u957f\u4e0d\u540c\u3002     * <code>char</code> \u5360\u7528 1 \u5b57\u8282\uff0c <code>char *</code> \u6b65\u957f\u4e3a 1\u3002         C++<pre><code>char c = '6';   // c \u7684\u5730\u5740\u4e3a 0xa\nchar *p = c;    // p \u7684 \u503c \u4e3a 0xa\np = p + 1;      // p \u7684 \u503c \u4e3a 0xb\n</code></pre></p> Text Only<pre><code>* `int` \u5360\u7528 4 \u5b57\u8282\uff0c `int *` \u6b65\u957f\u4e3a 4\u3002\n    ```cpp\n    int i = 6;      // i \u7684\u5730\u5740\u4e3a 0x1\n    int *p = i;     // p \u7684 \u503c \u4e3a 0x1\n    p = p + 1;      // p \u7684 \u503c \u4e3a 0x5\n    ```\n</code></pre> <ol> <li>\u7c7b\u578b\u5b89\u5168     \u7f16\u8bd1\u5668\u4f1a\u5728\u7f16\u8bd1\u65f6\u68c0\u67e5\u6307\u9488\u7684\u7c7b\u578b\uff0c     \u4ece\u800c\u907f\u514d\u4e0d\u540c\u7c7b\u578b\u7684\u6307\u9488\u76f4\u63a5\u8d4b\u503c\u6216\u6bd4\u8f83\uff0c     \u786e\u4fdd\u4e86\u5728\u7a0b\u5e8f\u4e2d\u6b63\u786e\u4f7f\u7528\u6307\u9488\u3002</li> </ol> C<pre><code>#include &lt;stdio.h&gt;\n\nint main(){\n    char c = '6';\n    char t = '?';\n    char *p = &amp;c;\n\n    // \u53d8\u91cf c \u7684\u503c\n    // \u53d8\u91cf c \u7684\u5730\u5740\n    // \u6307\u9488 p \u7684\u503c\n    // \u6307\u9488 p \u7684\u5730\u5740\n    // \u901a\u8fc7\u6307\u9488 p \u8bbf\u95ee\u53d8\u91cf c \u7684\u503c\n    puts(\"c\u7684\u5730\u5740 \u548c p\u7684\u503c\uff0c\u90fd\u662f\u4e00\u6837\u7684 | *p \u5c31\u662f c\u7684\u503c\");\n    printf(\"\\nc                &amp;c               p                &amp;p               *p\\n\");\n    printf(\"%-16c %-16p %-16p %-16p %-16c\\n\\n\", c, &amp;c, p, &amp;p, *p);\n\n    puts(\"c+1\u7684\u5730\u5740 \u548c p+1\u7684\u503c\uff0c\u90fd\u662f\u4e00\u6837\u7684 | *p+1 \u5c31\u662f t\u7684\u503c\");\n\n    printf(\"\\nc                &amp;c+1             p+1              &amp;p+1             *(p+1)\\n\");\n    printf(\"%-16c %-16p %-16p %-16p %-16c\\n\\n\", c, &amp;c+1, p+1, &amp;p+1, *(p+1));\n\n    puts(\"\u8f93\u5165\u4e00\u4e2a\u6570\uff0c\u5230 p+1 \u7684\u503c\u91cc\u9762\u53bb\uff1a\");\n    scanf(\"%c\", p+1);\n    puts(\"c+1\u7684\u5730\u5740 \u548c p+1\u7684\u503c\uff0c\u90fd\u662f\u4e00\u6837\u7684 | *p+1 \u5c31\u662f t\u7684\u503c\");\n\n    printf(\"\\nc                &amp;c+1             p+1              &amp;p+1             *(p+1)\\n\");\n    printf(\"%-16c %-16p %-16p %-16p %-16c\\n\\n\", c, &amp;c+1, p+1, &amp;p+1, *(p+1));\n\n    puts(\"\u8f93\u51fat\u7684\u503c\uff1a\");\n\n    printf(\"%c\", t);\n}\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_9","title":"\u805a\u5408\u7c7b\u578b","text":"<p>\u805a\u5408\u7c7b\u578b\u662f\u7531\u591a\u4e2a\u57fa\u672c\u7c7b\u578b\u7ec4\u6210\u7684\u6570\u636e\u7c7b\u578b\u3002</p> <p>\u6570\u7ec4</p> <p>\u6570\u7ec4\u7684\u672c\u8d28\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u6570\u7ec4\u540d\u662f\u6570\u7ec4\u9996\u5143\u7d20\u7684\u5730\u5740\u3002</p> C<pre><code>int a[100];         // \u5b9a\u4e49\u4e00\u4e2a\u5927\u5c0f\u4e3a 100 \u7684\u6570\u7ec4\nint b[] = {1,2,3,4};// \u5b9a\u4e49\u4e00\u4e2a\u5927\u5c0f\u4e3a 4 \u7684\u6570\u7ec4\uff0c\u5143\u7d20\u4e3a 1,2,3,4\nint c[100] = {1};   // \u5b9a\u4e49\u4e00\u4e2a\u5927\u5c0f\u4e3a 100 \u7684\u6570\u7ec4\uff0c\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a 1\uff0c\u5176\u4ed6\u5143\u7d20\u4e3a 0\n</code></pre> <p>\u7ed3\u6784\u4f53</p> <ul> <li>\u6570\u7ec4\uff1a\u591a\u4e2a \u76f8\u540c \u5143\u7d20\u7684\u96c6\u5408</li> <li>\u7ed3\u6784\u4f53\uff1a\u591a\u4e2a \u4e0d\u540c \u7684\u5143\u7d20\u7684\u96c6\u5408</li> </ul> C<pre><code>struct PII{\n    int fst;\n    int sed;\n};\n\nPII a;              // \u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\nPII b[10];          // \u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u6570\u7ec4      \n</code></pre> C<pre><code>a.fst = 1;          // \u8bbf\u95ee\u7ed3\u6784\u4f53\u53d8\u91cf\u7684\u6210\u5458\nscanf(\"%d\", &amp;a.fst);// \u8f93\u5165\u7ed3\u6784\u4f53\u53d8\u91cf\u7684\u6210\u5458\n</code></pre> <p>\u8054\u5408\u4f53</p> <p>\u8054\u5408\u4f53\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7ed3\u6784\u4f53\uff0c\u5b83\u7684\u6240\u6709\u6210\u5458\u5171\u7528\u4e00\u6bb5\u5185\u5b58\u7a7a\u95f4\u3002 \u5185\u5b58\u7a7a\u95f4\u7684\u5927\u5c0f\u4e3a\u6700\u5927\u6210\u5458\u7684\u5927\u5c0f\u3002</p> C<pre><code>union UIC{\n    int x;\n    char y;\n};\n\nUIC a;               // \u5b9a\u4e49\u4e00\u4e2a\u8054\u5408\u4f53\u53d8\u91cf\nUIC b[10];           // \u5b9a\u4e49\u4e00\u4e2a\u8054\u5408\u4f53\u6570\u7ec4\n</code></pre> <p>\u5728 <code>UIC</code> \u4e2d\uff0c<code>x</code> \u548c <code>y</code> \u5171\u7528\u4e00\u6bb5\u5185\u5b58\u7a7a\u95f4\uff0c\u5b83\u4eec\u7684\u5730\u5740\u662f\u4e00\u6837\u7684\u3002 \u5185\u5b58\u7a7a\u95f4\u7684\u5927\u5c0f\u4e3a <code>sizeof(int)</code></p> C<pre><code>a.x = 1;             // \u8bbf\u95ee\u8054\u5408\u4f53\u53d8\u91cf\u7684\u6210\u5458\nscanf(\"%d\", &amp;a.x);   // \u8f93\u5165\u8054\u5408\u4f53\u53d8\u91cf\u7684\u6210\u5458\n</code></pre> <p>C\uff0c\u5c31\u662f\u4e00\u4e2a\u73a9\u5730\u5740\u7684\u8bed\u8a00\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nunion UIC {\n    int x;\n    char y;\n};\n\nint main() {\n    UIC a;              // \u5b9a\u4e49\u4e00\u4e2a\u8054\u5408\u4f53\u53d8\u91cf\uff0c\u5f00\u8f9f 4 \u4e2a\u5b57\u8282\u7684\u5185\u5b58\u7a7a\u95f4\n    char* p = &amp;(a.y);   // \u6307\u9488 p \u6307\u5411\u8054\u5408\u4f53\u53d8\u91cf\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282\n\n    p[0] = 'A';    // 0100 0001\n    p[1] = 'A';\n    p[2] = 'A';\n    p[3] = 'A';\n\n    printf(\"%d\", a.x);  // 1094795585\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B/#_10","title":"\u57fa\u672c\u6570\u636e\u8fd0\u7b97","text":"<p>\u9884\u4e60\uff1a C \u8fd0\u7b97\u7b26 \u7ec3\u4e60\uff1a NOI 1.3 \u7f16\u7a0b\u57fa\u7840\u4e4b\u7b97\u672f\u8868\u8fbe\u5f0f\u4e0e\u987a\u5e8f\u6267\u884c</p> <p>\u9009\u62e9\u6700\u5408\u9002\u7684\u6570\u636e\u7c7b\u578b\u53c2\u4e0e\u8fd0\u7b97</p> <p>\u6ce8\u610f\uff01</p> <ul> <li>\u5c0f\u6570\u5728\u53c2\u4e0e\u8fd0\u7b97\u65f6\uff0c\u4f1a\u5b58\u5728 \u6d6e\u70b9\u8bef\u5dee\uff0c\u5bfc\u81f4\u7ed3\u679c\u4e0d\u51c6\u786e\u3002     \u4f8b\u5982\uff0c<code>1.0</code> \u88ab\u4fdd\u5b58\u4e3a <code>1.0000000000000002</code>\u3002     \u5728 <code>float</code> \u7c7b\u578b\u4e2d\uff0c\u5c24\u4e3a\u660e\u663e\u3002\u8ffd\u6c42\u7cbe\u786e\u7684\u8ba1\u7b97\uff0c\u5c3d\u91cf\u4f7f\u7528 <code>double</code> \u7c7b\u578b\u3002</li> </ul>"},{"location":"src/more/old/CPP/C%2B%2B/#_11","title":"\u7b97\u672f\u8fd0\u7b97","text":"<p><code>+</code> <code>-</code> <code>*</code> <code>/</code> <code>%</code></p> <ul> <li>\u6ce8\u610f\u64cd\u4f5c\u6570\u7684\u6570\u636e\u8303\u56f4\uff0c\u9632\u6b62\u6ea2\u51fa\u3002</li> <li>\u6ce8\u610f\u9664\u6570\u4e3a 0 \u7684\u60c5\u51b5\u3002</li> <li>\u6ce8\u610f\u5b57\u7b26\u578b\u548c\u6574\u578b\u7684\u8f6c\u6362\u3002</li> </ul> <p><code>++</code> </p> <ul> <li><code>a++</code> / <code>a--</code>\uff0c\u5148\u4f7f\u7528 <code>a</code> \u7684\u503c\uff0c\u518d\u5bf9 <code>a</code> \u8fdb\u884c\u81ea\u589e/\u81ea\u51cf\u3002</li> <li><code>++a</code> / <code>--a</code>\uff0c\u5148\u5bf9 <code>a</code> \u8fdb\u884c\u81ea\u589e/\u81ea\u51cf\uff0c\u518d\u4f7f\u7528 <code>a</code> \u7684\u503c\u3002</li> </ul>"},{"location":"src/more/old/CPP/C%2B%2B/#_12","title":"\u5173\u7cfb\u8fd0\u7b97","text":"<p><code>&gt;</code> <code>&lt;</code> <code>&gt;=</code> <code>&lt;=</code> <code>==</code> <code>!=</code></p> <ul> <li>\u5c0f\u6570\u5728\u8fdb\u884c\u6bd4\u8f83\u65f6\uff0c\u9700\u8981\u9650\u5b9a\u7cbe\u5ea6\u8fdb\u884c\u6bd4\u8f83</li> <li>\u5b57\u7b26\u578b\u548c\u6574\u578b\u7684\u6bd4\u8f83\uff0c\u4f1a\u5148\u5c06\u5b57\u7b26\u578b\u8f6c\u6362\u4e3a\u6574\u578b\uff0c\u518d\u8fdb\u884c\u6bd4\u8f83\u3002</li> </ul>"},{"location":"src/more/old/CPP/C%2B%2B/#_13","title":"\u903b\u8f91\u8fd0\u7b97","text":"<p><code>&amp;&amp;</code> <code>||</code> <code>!</code></p> <ul> <li>\u903b\u8f91\u8fd0\u7b97\u7684\u7ed3\u679c\u662f <code>0</code> \u6216 <code>1</code>\uff0c\u53ef\u4ee5\u548c\u6574\u578b\u8fdb\u884c\u8fd0\u7b97\u3002</li> <li>\u903b\u8f91\u8fd0\u7b97\u7684\u77ed\u8def\u7279\u6027\u3002</li> </ul>"},{"location":"src/more/old/CPP/C%2B%2B/#_14","title":"\u4f4d\u8fd0\u7b97","text":"<ul> <li>\u4f4d\u8fd0\u7b97\u7684\u64cd\u4f5c\u6570\u5fc5\u987b\u662f\u6574\u578b\u3002</li> </ul> <p><code>&lt;&lt;</code></p> <ul> <li><code>a &lt;&lt; b</code>\uff0c\u5c06 <code>a</code> \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u5de6\u79fb <code>b</code> \u4f4d\uff0c\u53f3\u8fb9\u7a7a\u51fa\u7684\u4f4d\u7528 <code>0</code> \u586b\u5145\u3002</li> <li><code>a &lt;&lt; b</code>\uff0c\u76f8\u5f53\u4e8e <code>a * 2^b</code>\u3002</li> </ul> <p><code>&gt;&gt;</code> * \u503c\u5f97\u6ce8\u610f\uff01 <code>-5 &gt;&gt; 1</code> \u7684\u7ed3\u679c\u662f <code>-3</code>\uff0c\u800c\u4e0d\u662f <code>-2</code>\u3002     \u56e0\u4e3a <code>-5</code> \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a <code>1111 1111 1111 1111 1111 1111 1111 1011</code>     \u53f3\u79fb\u4e00\u4f4d\u540e\uff0c\u53d8\u6210\u4e86 <code>1111 1111 1111 1111 1111 1111 1111 1101</code>\uff0c\u5373 <code>-3</code>\u3002     \u56e0\u6b64\uff0c\u5e76\u4e0d\u662f\u7b80\u5355\u7684\u9664\u4ee5 <code>2</code>\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B/#_15","title":"\u8d4b\u503c\u8fd0\u7b97","text":"<p><code>+=</code> <code>-=</code> <code>*=</code> <code>/=</code> <code>%=</code> <code>&lt;&lt;=</code> <code>&gt;&gt;=</code></p> <p>\u7b80\u5355\u5199\u6cd5\u7f62\u4e86\u3002</p> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B/#_16","title":"\u5206\u652f\u7ed3\u6784","text":"<p>\u9884\u4e60\uff1a C \u5224\u65ad \u7ec3\u4e60\uff1a luogu \u5206\u652f\u7ed3\u6784 NOI 1.4 \u7f16\u7a0b\u57fa\u7840\u4e4b\u903b\u8f91\u8868\u8fbe\u5f0f\u4e0e\u6761\u4ef6\u5206\u652f</p>"},{"location":"src/more/old/CPP/C%2B%2B/#_17","title":"\u5faa\u73af\u7ed3\u6784","text":"<p>\u9884\u4e60\uff1a C \u5faa\u73af \u7ec3\u4e60\uff1a luogu \u5faa\u73af\u7ed3\u6784 NOI 1.5 \u7f16\u7a0b\u57fa\u7840\u4e4b\u5faa\u73af\u7ed3\u6784</p>"},{"location":"src/more/old/CPP/C%2B%2B/#memory-areas","title":"Memory Areas","text":"<p>C \u5728\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u5c06\u5185\u5b58\u5927\u81f4\u5206\u4e3a \u4ee3\u7801\u533a\uff0c\u5168\u5c40\u533a\uff0c\u6808\u533a\uff0c\u5806\u533a \u56db\u4e2a\u533a\u57df\u3002 \u4e0d\u540c\u7684\u533a\u57df\u5b58\u50a8\u4e0d\u540c\u7684\u6570\u636e\uff0c\u8d4b\u4e88\u4e0d\u540c\u7684 \u751f\u547d\u5468\u671f\uff0c\u80fd\u591f\u66f4\u7075\u6d3b\u5730\u8fdb\u884c\u7f16\u7a0b\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B/#code-segment","title":"Code Segment","text":"<p>\u4ee3\u7801\u533a\uff0c\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u5b58\u653e \u6267\u884c\u6307\u4ee4 \u7684\u5730\u65b9\u3002 \u4ee3\u7801\u533a\u662f\u53ea\u8bfb\u7684\uff0c\u4e0d\u5141\u8bb8\u4fee\u6539\u3002 \u5f53\u4e00\u4e2a <code>.c</code> \u6587\u4ef6\uff0c\u5f00\u59cb\u8fd0\u884c\u65f6\uff0c\u4ece <code>ROM</code> \u52a0\u8f7d\u5230 <code>RAM</code>\uff0c\u6210\u4e3a\u4ee3\u7801\u533a\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B/#data-segment","title":"Data Segment","text":"<p>\u6570\u636e\u533a\uff08\u5e38\u91cf\u533a\uff09\uff0c\u7528\u6765\u5b58\u50a8 \u9759\u6001\u53d8\u91cf\u3001\u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u6570\u636e\u3002 \u5728\u8fd9\u4e2a\u533a\u57df\u4e2d\uff0c\u6570\u636e\u7684\u5927\u5c0f\u548c\u7ed3\u6784\u5728\u7a0b\u5e8f\u7f16\u8bd1\u65f6\u5c31\u5df2\u7ecf\u786e\u5b9a\u3002</p> <ol> <li>\u5168\u5c40\u53d8\u91cf\uff1a \u5982\u679c\u4f60\u5728\u7a0b\u5e8f\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u5b83\u4f1a\u88ab\u5b58\u50a8\u5728\u6570\u636e\u6bb5\u4e2d\u3002\u4f8b\u5982\uff1a</li> </ol> C<pre><code>int globalVar = 10;\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>globalVar</code>\u662f\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u5b83\u7684\u521d\u59cb\u503c\u4e3a10\uff0c\u4f1a\u88ab\u5b58\u50a8\u5728\u6570\u636e\u6bb5\u4e2d\u3002</p> <ol> <li>\u9759\u6001\u53d8\u91cf\uff1a \u9759\u6001\u53d8\u91cf\uff08\u5305\u62ec\u9759\u6001\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff09\u4e5f\u4f1a\u88ab\u5b58\u50a8\u5728\u6570\u636e\u6bb5\u4e2d\u3002\u4f8b\u5982\uff1a</li> </ol> C<pre><code>void function() {\n    static int staticVar = 5;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>staticVar</code>\u662f\u4e00\u4e2a\u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff0c\u5b83\u7684\u503c\u5728\u51fd\u6570\u8c03\u7528\u4e4b\u95f4\u4fdd\u6301\u4e0d\u53d8\uff0c\u5b58\u50a8\u5728\u6570\u636e\u6bb5\u4e2d\u3002</p> <ol> <li>\u5e38\u91cf\uff1a \u5b57\u7b26\u4e32\u5e38\u91cf\u548c\u5176\u4ed6\u5e38\u91cf\u6570\u636e\u4e5f\u88ab\u5b58\u50a8\u5728\u6570\u636e\u6bb5\u4e2d\u3002\u4f8b\u5982\uff1a</li> </ol> C<pre><code>const char hello[] = \"Hello, World!\";\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5b57\u7b26\u4e32\u5e38\u91cf\"Hello, World!\"\u4f1a\u88ab\u5b58\u50a8\u5728\u6570\u636e\u6bb5\u4e2d\uff0c\u800c<code>hello</code>\u6570\u7ec4\u5219\u4f1a\u5728\u6808\u6216\u5806\u4e0a\u5206\u914d\u5185\u5b58\uff0c\u5b58\u50a8\u5728\u6570\u636e\u6bb5\u4e2d\u7684\u5730\u5740\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B/#stack","title":"Stack","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint *p;\n\nvoid a(){\n    int x = 666;\n\n    p = &amp;x;\n\n    printf(\"a\u51fd\u6570 y:\\n%d %p\\n\", x, &amp;x);\n}\n\nvoid b(){\n    int y = 888; \n    printf(\"b\u51fd\u6570 y:\\n%d %p\\n\", y, &amp;y);\n}\n\nint main(){\n    a();\n\n    printf(\"\u4e3b\u51fd\u6570 p:\\n%d %p\\n\", *p, p);\n\n    b();\n    printf(\"\u4e3b\u51fd\u6570 p:\\n%d %p\\n\", *p, p);\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#heap","title":"Heap","text":"C++<pre><code>#include &lt;stdio.h&gt;\n\nint *p;\n\nvoid a(){\n    int* x = new int(666);\n\n    p = x;\n\n    printf(\"a\u51fd\u6570 y:\\n%d %p\\n\", *x, x);\n\n    // \u624b\u52a8\u91ca\u653e\u5185\u5b58\n    // delete x;\n}\n\nvoid b(){\n    int* y = new int(888); \n    printf(\"b\u51fd\u6570 y:\\n%d %p\\n\", *y, y);\n}\n\nint main(){\n    a();\n\n    printf(\"\u4e3b\u51fd\u6570 p:\\n%d %p\\n\", *p, p);\n\n    b();\n    printf(\"\u4e3b\u51fd\u6570 p:\\n%d %p\\n\", *p, p);\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#oop","title":"OOP","text":"<p>\u5047\u8bbe\uff0c\u6211\u4eec\u9700\u8981\u63a5\u53d7\u4e00\u4e2a\u4e0d\u786e\u5b9a\u7684\u8f93\u5165\uff0c \u5982\u679c\u8fd9\u4e2a\u8f93\u5165\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8f93\u51fa\u8fd9\u4e2a\u6574\u6570\u7684\u5e73\u65b9\uff0c \u5426\u5219\uff0c\u4e0d\u8f93\u51fa\u3002</p> <p>\u4ee5\uff0c\u9762\u5411\u8fc7\u7a0b \u7684\u601d\u60f3\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a</p> C++<pre><code>// \u5b9a\u4e49\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u63a5\u53d7\u8f93\u5165\nstd::string s;\ncin&gt;&gt;s;\n// \u5224\u65ad\u8f93\u5165\u662f\u5426\u4e3a\u6574\u6570\nbool isInt = true;\nfor(int i = 0; i &lt; s.size(); i++)\n    if(s[i] &lt; '0' || s[i] &gt; '9'){\n        isInt = false;\n        break;\n    }\n// \u5224\u65ad\u8f93\u5165\u662f\u5426\u8d85\u8fc7 int \u7684\u8303\u56f4\nif(isInt)\n    if(s.size() &gt; 10 || (s.size() == 10 &amp;&amp; s &gt; \"2147483647\"))\n        isInt = false;\n// \u8f93\u51fa\nif(isInt)\n    cout&lt;&lt;s;\nelse\n    cout&lt;&lt;\"\u4e0d\u662f\u6574\u6570\";\n</code></pre> <p>\u4ee5\uff0c\u9762\u5411\u5bf9\u8c61 \u7684\u601d\u60f3\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a</p> C++<pre><code>Input *userInput = new Input(); // \u5b9a\u4e49\u4e00\u4e2a\u8f93\u5165\u7c7b\nuserInput-&gt;getNum();            // \u63a5\u53d7\u8f93\u5165\nuserInput-&gt;printNum();          // \u8f93\u51fa\ndelete input;                   // \u91ca\u653e\u5185\u5b58\n</code></pre> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u9762\u5411\u5bf9\u8c61 \u7684\u601d\u60f3\uff0c\u4f7f\u5f97\u4ee3\u7801\u66f4\u52a0\u7b80\u6d01\u3001\u6613\u8bfb\u3001\u6613\u7ef4\u62a4\u3002</p> <p>\u4f46\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\uff0c\u9762\u5411\u5bf9\u8c61 \u601d\u60f3\u5c31\u662f\u6700\u597d\u7684\uff0c\u53ea\u662f\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\uff0c\u9762\u5411\u5bf9\u8c61 \u601d\u60f3\u66f4\u52a0\u9002\u7528\u3002</p> <p>\u4e8e\u662f C++ \u5f15\u5165\u4e86 \u7c7b \u7684\u6982\u5ff5\uff0c\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u66f4\u52a0\u65b9\u4fbf\u5730\u4f7f\u7528 \u9762\u5411\u5bf9\u8c61 \u601d\u60f3\u3002</p> <p></p> <p>\u7c7b\u7684\u57fa\u672c\u601d\u60f3\u662f \u6570\u636e\u62bd\u8c61 \u548c \u5c01\u88c5\u3002 \u6570\u636e\u62bd\u8c61 \u662f\u4e00\u79cd\u4f9d\u8d56\u4e8e \u63a5\u53e3 \u548c \u5b9e\u73b0 \u5206\u79bb\u7684\u7f16\u7a0b\uff08\u8bbe\u8ba1\uff09\u6280\u672f\u3002</p> <p>\u4f8b\u5982\uff0c\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u529f\u80fd\uff0c\u6b64\u529f\u80fd\u9700\u8981 * \u82e5\u5e72\u4e2a\u53d8\u91cf * \u82e5\u5e72\u4e2a\u53d8\u91cf\u9700\u8981\u8fdb\u884c\u82e5\u5e72\u4e2a\u64cd\u4f5c\uff08\u51fd\u6570\uff09</p> <p>\u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u53d8\u91cf\u548c\u51fd\u6570\u5c01\u88c5\u5728\u4e00\u4e2a\u7c7b\u4e2d\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86 \u6570\u636e\u62bd\u8c61 \u548c \u5c01\u88c5\u3002</p> <p>\u66f4\u52a0\u5177\u4f53\u7684\uff0c\u6211\u4eec\u8981\u8bbe\u8ba1\u4e00\u4e2a\u6c34\u676f\u7c7b * \u6c34\u676f\u6709\u6c34\u91cf * \u6c34\u676f\u53ef\u4ee5\u52a0\u6c34 * \u6c34\u676f\u53ef\u4ee5\u5012\u6c34</p> <p>\u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 \u6c34\u91cf \u548c \u52a0\u6c34\u5012\u6c34 \u5c01\u88c5\u5728\u4e00\u4e2a\u7c7b\u4e2d\uff0c\u8fd9\u6837\u5c31\u662f\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u7684\u4f7f\u7528\u8fd9\u4e2a\u6c34\u676f\u4e86\u3002</p> <p>\u5bf9\u4e8e\u4f7f\u7528\u7c7b\u7684\u6211\u4eec\u800c\u8a00\uff0c\u53ea\u9700\u8981\u77e5\u9053\u6c34\u676f\u6709\u6c34\u91cf\uff0c\u53ef\u4ee5\u52a0\u6c34\u5012\u6c34\u5373\u53ef\uff0c\u52a0\u6c34\u5012\u6c34\u5c31\u662f \u63a5\u53e3\u3002</p> <p>\u81f3\u4e8e\uff0c\u8fd9\u4e2a\u6c34\u80fd\u4e0d\u80fd\u52a0\uff0c\u80fd\u52a0\u591a\u5c11\uff0c\u80fd\u5012\u591a\u5c11\uff0c\u8fd9\u4e9b\u90fd\u662f \u5b9e\u73b0\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u77e5\u9053\u3002</p> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B/#_18","title":"\u5c01\u88c5\uff1a\u5b9a\u4e49\u4e00\u4e2a\u62bd\u8c61\u6570\u636e\u7c7b\u578b","text":"<p>\u5c01\u88c5\u662f\u6307\u5c06 \u6570\u636e \u548c \u64cd\u4f5c\u6570\u636e\u7684\u51fd\u6570 \u7ed1\u5b9a\u5728\u4e00\u8d77\uff0c\u6570\u636e\u88ab\u4fdd\u62a4\u5728\u5185\u90e8\uff0c\u5916\u90e8\u7a0b\u5e8f\u53ea\u80fd\u901a\u8fc7\u5df2\u5b9a\u4e49\u7684\u63a5\u53e3\u8bbf\u95ee\u6570\u636e\uff0c\u8fd9\u6837\u5c31\u786e\u4fdd\u4e86\u6570\u636e\u7684\u5b8c\u6574\u6027\u3001\u5b89\u5168\u6027\u3002</p> <p>\u5728\u8fd9\u91cc\uff0c\u62bd\u8c61\u6570\u636e\u7c7b\u578b\uff0c\u5c31\u662f \u7c7b\u3002</p> C++<pre><code>// Cup.h\n#pragma once\n\nclass Cup\n{\npublic:\n    Cup(const int w=99);// \u6784\u9020\u51fd\u6570\n    ~Cup();                // \u6790\u6784\u51fd\u6570\n\n    int getWater() const;        // \u53d6\u5f97\u6c34\u91cf\n    void addWater(const int w);    // \u52a0\u6c34\n    void pourWater(const int w);// \u5012\u6c34\nprivate:\n    int* _water;    // \u6c34\u91cf\n    int* _volume;    // \u5bb9\u91cf\n};\n</code></pre> <ul> <li> <p><code>Cup(const int w=99);</code></p> <ul> <li><code>int w</code>\uff0c\u6b64\u51fd\u6570\u9700\u8981\u4f20\u5165\u4e00\u4e2a <code>int</code> \u7c7b\u578b\u7684\u53c2\u6570\u3002</li> <li><code>const</code>\uff0c\u6b64\u51fd\u6570\u4e0d\u4f1a\u4fee\u6539\u4f20\u5165\u7684\u53c2\u6570\u3002</li> <li><code>=99</code>\uff0c\u6b64\u51fd\u6570\u7684\u9ed8\u8ba4\u53c2\u6570\u4e3a <code>99</code>\uff0c\u5982\u679c\u4e0d\u4f20\u5165\u53c2\u6570\uff0c\u90a3\u4e48\u5c31\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\u3002</li> </ul> </li> <li> <p><code>int getWater() const;</code></p> <ul> <li><code>int</code>\uff0c\u6b64\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a <code>int</code> \u7c7b\u578b\u7684\u503c\u3002</li> <li><code>const</code>\uff0c\u6b64\u51fd\u6570\u4e0d\u4f1a\u4fee\u6539\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u3002</li> </ul> </li> </ul> C++<pre><code>// Cup.cpp\n#include \"Cup.h\"\n\nCup::Cup(const int w) {\n    this -&gt; _water = new int;    \n    _volume = new int;\n\n    *_water = 0;        // \u521d\u59cb\u6c34\u91cf\u4e3a0\n    *_volume = w;        // \u5bb9\u91cf\u4e3aw\n}\n\nCup::~Cup() {\n    delete _water;        // \u91ca\u653e\u6c34\u91cf\n    delete _volume;        // \u91ca\u653e\u5bb9\u91cf\n}\n\nint Cup::getWater() const {\n    return *_water;\n}\n\nvoid Cup::addWater(const int w) {\n    // \u52a0\u6c34\u52a0\u5230\u6700\u5927\u5bb9\u91cf\n    if (*_water + w &gt; *_volume) {\n        *_water = *_volume;\n        return;\n    }\n    *_water += w;\n}\n\nvoid Cup::pourWater(const int w) {\n    // \u5012\u6c34\u5012\u5230\u6700\u5c11\u5bb9\u91cf\n    if (*_water - w &lt; 0) {\n        *_water = 0;\n        return;\n    }\n    *_water -= w;\n}\n</code></pre> <ul> <li><code>this -&gt; _water = new int;</code><ul> <li><code>this</code> \u6307\u5411\u5f53\u524d\u5bf9\u8c61\uff0c<code>this -&gt; _water</code> \u6307\u5411\u5f53\u524d\u5bf9\u8c61\u7684 <code>_water</code> \u6210\u5458\u53d8\u91cf\u3002</li> <li>\u5f53\u6211\u4eec\u8c03\u7528 <code>_water</code> \u65f6\uff0c\u5b9e\u9645\u4e0a\u662f\u8c03\u7528 <code>this -&gt; _water</code>\u3002</li> <li>\u4efb\u4f55\u4e00\u4e2a\u6210\u5458\u90fd\u6709\u4e00\u4e2a\u9690\u542b\u7684 <code>this</code> \u6307\u9488\uff0c\u6307\u5411\u8c03\u7528\u5b83\u7684\u5bf9\u8c61\u3002</li> </ul> </li> </ul> C++<pre><code>// main.cpp\n#include \"Cup.h\"\n#include &lt;iostream&gt;\n\nint main() {\n    Cup* cup = new Cup(100);\n    std::cout&lt;&lt;cup-&gt;getWater()&lt;&lt;std::endl;\n    // \u8f93\u51fa 0\n    cup-&gt;addWater(150);\n    std::cout&lt;&lt;cup-&gt;getWater()&lt;&lt;std::endl;\n    // \u8f93\u51fa 100\n    cup-&gt;pourWater(50);\n    std::cout&lt;&lt;cup-&gt;getWater()&lt;&lt;std::endl;\n    // \u8f93\u51fa 50\n    delete cup;\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_19","title":"\u7ee7\u627f\uff1a\u5b9a\u4e49\u4e00\u4e2a\u57fa\u7c7b\u7684\u6d3e\u751f\u7c7b","text":"<p>\u6211\u4eec\u66f4\u60f3\uff0c\u6765\u4e00\u676f \u871c\u96ea\u51b0\u51b0\ud83e\udd64\uff01</p> <p>\u6211\u4eec\u7b80\u5355\u8003\u8651\u4e00\u4e0b\uff1a | \u6c34\u676f | \u871c\u96ea\u51b0\u51b0 | |:-:|:-:| | \u6c34\u91cf | \u6c34\u91cf | | \u52a0\u6c34 | \u52a0\u6c34 | | \u5012\u6c34 | \u5012\u6c34 | | - | \u52a0\u6ce2\u6ce2\u8106 | | - | \u52a0\u828b\u5706 | | - | \u5c0f\u6599\u8868 | </p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u871c\u96ea\u51b0\u51b0\u662f\u6c34\u676f\u7684\u4e00\u79cd\uff0c\u871c\u96ea\u51b0\u51b0\u7ee7\u627f\u4e86\u6c34\u676f\u7684\u6240\u6709\u4e1c\u897f\uff0c\u540c\u65f6\uff0c\u871c\u96ea\u51b0\u51b0\u8fd8\u6709\u81ea\u5df1\u7684\u4e1c\u897f\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u5c31\u6ca1\u6709\u5fc5\u8981\u91cd\u65b0\u5b9a\u4e49\u4e00\u4e2a\u871c\u96ea\u51b0\u51b0\u7c7b\uff0c\u53ea\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u6c34\u676f\u7c7b\u7684\u6d3e\u751f\u7c7b\uff0c\u5373\u53ef\u3002</p> C++<pre><code>// mxbb.h\n#pragma once\n#include \"Cup.h\"\n#include &lt;iostream&gt;\n\nclass Mxbb : public Cup {\n\npublic:\n    Mxbb(const int s = 0);\n    ~Mxbb();\n    void addX();        // \u52a0\u5575\u5575\u8106\n    void addY();        // \u52a0\u828b\u5706\n    void query() const;    // \u67e5\u8be2\u5c0f\u6599\u6dfb\u52a0\u60c5\u51b5\n\nprivate:\n    bool* _x;    // \u5575\u5575\u8106\n    bool* _y;    // \u828b\u5706\n\n    int calc(const int s);    // \u6839\u636e\u4e2d\u5927\u8d85\u676f\u8ba1\u7b97\u5bb9\u91cf\n};\n</code></pre> <p><code>class Mxbb : public Cup</code> * <code>Mxbb</code> \u7c7b\u7ee7\u627f\u4e86 <code>Cup</code> \u7c7b\u3002 * <code>public</code>\uff0c\u7ee7\u627f\u65b9\u5f0f\u4e3a\u516c\u6709\u7ee7\u627f\u3002\u6b64\u8bdd\u9898\u6682\u4e0d\u8ba8\u8bba\u3002</p> C++<pre><code>#include \"Mxbb.h\"\n\nint Mxbb::calc(const int s) {\n    int res = 500;              // \u4e2d\u676f\u5bb9\u91cf\u4e3a500\n    if (s == 2) res = 700;      // \u5927\u676f\u5bb9\u91cf\u4e3a700\n    else if (s == 3) res = 1000;// \u8d85\u5927\u676f\u5bb9\u91cf\u4e3a1000\n    return res;\n}\n\nMxbb::Mxbb(const int s) : Cup(calc(s)), _x(nullptr), _y(nullptr){\n    // \u5b50\u7c7b \u6784\u9020\u51fd\u6570 \u7684\u521d\u59cb\u5316\u5de5\u4f5c\n    // \u9700\u8981\u663e\u5f0f\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\n\n    _x = new bool;\n    _y = new bool;\n    *_x = false;    // \u521d\u59cb\u65e0\u5575\u5575\u8106\n    *_y = false;    // \u521d\u59cb\u65e0\u828b\u5706\n}\n\nMxbb::~Mxbb() {\n    // \u5b50\u7c7b \u6790\u6784\u51fd\u6570 \u7684\u6e05\u7406\u5de5\u4f5c\n    // \u4e0d\u9700\u8981\u663e\u5f0f\u8c03\u7528\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u5b83\u4f1a\u81ea\u52a8\u88ab\u8c03\u7528\n\n    delete _x;\n    delete _y;\n}\n\nvoid Mxbb::addX() {\n    *_x = true;\n}\n\nvoid Mxbb::addY() {\n    *_y = true;\n}\n\nvoid Mxbb::query() const{\n    std::cout &lt;&lt; \"\u828b\u5706\u5976\u8336\u7684\u5c0f\u6599\u6709\";\n    if (*_x) std::cout &lt;&lt; \" \u5575\u5575\u8106\";\n    if (*_y) std::cout &lt;&lt; \" \u828b\u5706\";\n    std::cout &lt;&lt; std::endl;\n}\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_20","title":"\u516c\u6709\u3001\u79c1\u6709\u3001\u4fdd\u62a4","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_21","title":"\u591a\u6001\uff1a\u5b9a\u4e49\u4e00\u4e2a\u57fa\u7c7b\u7684\u865a\u51fd\u6570","text":""},{"location":"src/more/old/CPP/C%2B%2B/#cstdio-stdioh","title":"\u5173\u4e8e cstdio \u548c stdio.h","text":"<p><code>cstdio</code> \u662f C++ \u6807\u51c6\u5e93\u7684\u5934\u6587\u4ef6\uff0c\u5176\u4e2d\u5b9a\u4e49\u4e86 C \u8bed\u8a00\u6807\u51c6\u5e93\u7684\u51fd\u6570\uff0c\u8fd9\u4e9b\u51fd\u6570\u88ab\u653e\u7f6e\u5728 std \u547d\u540d\u7a7a\u95f4\u4e2d\u3002\u56e0\u6b64\uff0c\u5728 C++ \u4e2d\u4f7f\u7528 <code>cstdio</code> \u65f6\uff0c\u9700\u8981\u52a0\u4e0a <code>std::</code> \u524d\u7f00\uff0c\u4f8b\u5982 <code>std::printf</code>\u3001<code>std::fopen</code>\u7b49\u3002</p> <p><code>stdio.h</code> \u662f C \u8bed\u8a00\u6807\u51c6\u5e93\u7684\u5934\u6587\u4ef6\uff0c\u5176\u4e2d\u5b9a\u4e49\u4e86 C \u8bed\u8a00\u6807\u51c6\u5e93\u7684\u51fd\u6570\uff0c\u8fd9\u4e9b\u51fd\u6570\u88ab\u653e\u7f6e\u5728\u5168\u5c40\u547d\u540d\u7a7a\u95f4\u4e2d\u3002\u56e0\u6b64\uff0c\u5728 C \u8bed\u8a00\u4e2d\u4f7f\u7528 <code>stdio.h</code> \u65f6\uff0c\u4e0d\u9700\u8981\u52a0\u4e0a <code>std::</code> \u524d\u7f00\uff0c\u4f8b\u5982 <code>printf</code>\u3001<code>fopen</code>\u7b49\u3002</p> <p>\u4f46\u662f\uff0c\u4e3a\u4e86\u4fdd\u6301\u8bed\u8a00\u7684\u5411\u540e\u517c\u5bb9\u6027\uff0c\u8fd9\u4e9b\u6807\u51c6\u5e93\u51fd\u6570\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728\u5168\u5c40\u4f5c\u7528\u57df\uff08\u5373\u4e0d\u52a0 <code>std::</code> \u524d\u7f00\uff09\u4e2d\u4f7f\u7528\uff0c\u800c\u4e0d\u4f1a\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef\u3002\u8fd9\u662f\u4e00\u4e2a\u5386\u53f2\u9057\u7559\u7684\u7279\u6027\uff0c\u4f46\u4e0d\u662f\u63a8\u8350\u7684\u505a\u6cd5\uff0c\u66f4\u63a8\u8350\u4f7f\u7528 <code>std::printf</code> \u7b49\u5e26\u6709 <code>std::</code> \u524d\u7f00\u7684\u5f62\u5f0f\uff0c\u4ee5\u786e\u4fdd\u4ee3\u7801\u7684\u6e05\u6670\u6027\u548c\u53ef\u8bfb\u6027\uff0c\u907f\u514d\u6f5c\u5728\u7684\u547d\u540d\u51b2\u7a81\u95ee\u9898\u3002</p> <p></p> <p>\u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4 <code>jiao</code>\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a <code>printf</code> \u51fd\u6570\uff0c\u8f93\u51fa <code>666</code>\u3002 \u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u8c03\u7528\u4e86 <code>jiao</code> \u547d\u540d\u7a7a\u95f4\u4e2d\u7684 <code>printf</code> \u51fd\u6570\uff0c\u8f93\u51fa <code>666</code>\uff0c \u8c03\u7528\u6807\u51c6\u5e93\u4e2d\u7684 <code>std::printf</code> \u51fd\u6570\uff0c\u8f93\u51fa <code>777</code>\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nnamespace jiao{\n    void printf(){\n        std::cout&lt;&lt;\"666\";\n    };\n}\n\nint main(){\n    jiao::printf();     // 666\n    std::printf(\"777\"); // 777\n    return 0;\n}\n</code></pre> <p></p> <p>\u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u6ca1\u6709\u5f15\u5165 <code>std</code> \u547d\u540d\u7a7a\u95f4\uff0c\u6240\u4ee5 <code>std::printf</code> \u4f1a\u62a5\u9519\u3002</p> C++<pre><code>//#include &lt;iostream&gt;   // iostream \u4f1a\u5f15\u5165 std::printf\n#include &lt;stdio.h&gt;      // \u975ecstdio\uff0c\u6ca1\u6709\u5f15\u5165 std \u7684\u6982\u5ff5\n\nnamespace jiao{\n    void printf(){\n        //std::cout&lt;&lt;\"666\";\n    };\n}\n\nint main(){\n    jiao::printf();\n    printf(\"777\");\n    std::printf(\"888\"); // \u547d\u540d\u7a7a\u95f4 \"std\" \u4e2d\u6ca1\u6709 \"printf\"\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B/#string","title":"string","text":"<p>\u5907\u5fd8 C++<pre><code>// i2s\ns = std::to_string(i);\n</code></pre> C++<pre><code>// s2i\ni = std::stoll(s);\n</code></pre></p> <p>\u5b57\u7b26\u4e32\u5e38\u5e38\u4f1a\u6709\u8fd9\u51e0\u4e2a\u5934\u6587\u4ef6\uff1a</p> C++<pre><code>#include &lt;string&gt;\n#include &lt;string.h&gt;\n#include &lt;cstring&gt;\n</code></pre> <p>\u5bf9\u4e8e <code>string.h</code> \u548c <code>cstring</code>\uff0c\u672c\u8d28\u4e0a\u90fd\u662f C \u8bed\u8a00\u4e2d\u7684\u5934\u6587\u4ef6\u3002 <code>cstring</code> \u76f8\u8f83\u4e8e <code>string.h</code>\uff0c\u591a\u4e86\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u8ba8\u8bba <code>string</code> \u548c <code>cstring</code>\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B/#string_1","title":"string","text":"<p><code>string</code> \u64cd\u4f5c\u7684\u662f C++ \u4e2d\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u5c31\u662f <code>std::string</code>\u3002</p> <p>\u503c\u5f97\u4e00\u63d0 \u7684\u662f\uff0c\u6211\u4eec\u5f80\u5f80\u4e0d\u9700\u8981\u5f15\u5165 <code>string</code> \u5934\u6587\u4ef6\uff0c\u56e0\u4e3a <code>string</code> \u5934\u6587\u4ef6\u5df2\u7ecf\u88ab <code>iostream</code> \u5f15\u5165\u4e86\u3002</p> <p><code>string</code> \u662f\u4e00\u4e2a\u7c7b\uff0c\u6240\u4ee5\u5b83\u6709\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u3001\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3001\u8d4b\u503c\u8fd0\u7b97\u7b26\u7b49\u7b49\u3002</p> <p></p> <ul> <li>\u6784\u9020\u51fd\u6570</li> </ul> C++<pre><code>string s1;          // \u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0cs1 \u4e3a\u7a7a\u5b57\u7b26\u4e32\nstring s2(s1);      // \u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0cs2 \u4e3a s1 \u7684\u62f7\u8d1d\nstring s3(\"hello\"); // \u7528\u5b57\u7b26\u4e32\u521d\u59cb\u5316 s3\nstring s4(10, 'a'); // \u7528 10 \u4e2a 'a' \u521d\u59cb\u5316 s4\n</code></pre> <ul> <li>\u8d4b\u503c\u8fd0\u7b97\u7b26</li> </ul> C++<pre><code>string s1, s2;\ns1 = s2;            // s1 \u4e3a s2 \u7684\u62f7\u8d1d\nstring s3 = \"hello\";\ns1 = s3;            // s1 \u4e3a s3 \u7684\u62f7\u8d1d\n</code></pre> <ul> <li>\u6bd4\u8f83\u8fd0\u7b97\u7b26</li> </ul> <p>\u5148\u6309\u5b57\u5178\u5e8f\u6bd4\u8f83\uff0c\u5982\u679c\u76f8\u7b49\uff0c\u518d\u6bd4\u8f83\u957f\u5ea6\u3002</p> C++<pre><code>string a = \"aa\";\nstring b = \"ab\";\na &lt; b;  // true \n</code></pre> C++<pre><code>string a = \"bb\";\nstring b = \"bba\";\na &lt; b;  // true \n</code></pre> <ul> <li>\u63d2\u5165\u5143\u7d20</li> </ul> C++<pre><code>string s = \"hello\";\ns.insert(1, \"6\");   \n// \u5c06 6 \u63d2\u5165\u5230 s \u4e0b\u6807\u4e3a 1 \u7684\u4f4d\u7f6e\n// \u8f93\u51fa h6ello\n</code></pre> <ul> <li>\u5220\u9664\u5143\u7d20</li> </ul> C++<pre><code>string s = \"hello\";\ns.erase(0, 2);      \n// \u5c06 s \u4e0b\u6807\u4e3a 0 \u7684\u5b57\u7b26\u5f00\u59cb\u7684 2 \u4e2a\u5b57\u7b26\u5220\u9664\n// \u8f93\u51fa llo\n</code></pre> <ul> <li>\u66ff\u6362\u5143\u7d20</li> </ul> C++<pre><code>string s = \"hello\";\ns.replace(0, 2, \"6\");   \n// \u5c06 s \u4e0b\u6807\u4e3a 0 \u7684\u5b57\u7b26\u5f00\u59cb\u7684 2 \u4e2a\u5b57\u7b26\u66ff\u6362\u4e3a 6\n// \u8f93\u51fa 6llo\n</code></pre> <ul> <li>\u67e5\u627e\u5143\u7d20</li> </ul> C++<pre><code>string s = \"hello\";\nint idx = s.find(\"ll\"); \n// \u67e5\u627e s \u4e2d\u7b2c\u4e00\u4e2a \"ll\" \u7684\u4f4d\u7f6e\uff0c\u8fd4\u56de\u76ee\u6807\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u4e0b\u6807\n// \u8f93\u51fa 2\n</code></pre> <ul> <li>\u83b7\u53d6\u5b50\u4e32</li> </ul> C++<pre><code>string s = \"hello\";\ns.substr(2, 2);     \n// \u83b7\u53d6 s \u4e2d\u4e0b\u6807\u4e3a 2 \u7684\u5b57\u7b26\u5f00\u59cb\u7684 2 \u4e2a\u5b57\u7b26\n// \u8f93\u51fa ll\n</code></pre> <ul> <li>\u83b7\u53d6\u957f\u5ea6</li> </ul> C++<pre><code>string s = \"hello\";\ns.size();           \n// \u83b7\u53d6 s \u7684\u957f\u5ea6\n// \u8f93\u51fa 5\n</code></pre> <ul> <li>\u8f6c\u6362\u4e3a C \u98ce\u683c\u5b57\u7b26\u4e32</li> </ul> C++<pre><code>string s = \"hello\";\ns.c_str();          \n// \u5c06 s \u8f6c\u6362\u4e3a C \u98ce\u683c\u5b57\u7b26\u4e32\n</code></pre> <ul> <li>\u8f6c\u6362\u4e3a\u6574\u6570</li> </ul> C++<pre><code>string s = \"123\";\nstoi(s);            // \u5c06 s \u8f6c\u6362\u4e3a\u6574\u6570\nstoll(s);           // \u5c06 s \u8f6c\u6362\u4e3a\u957f\u6574\u6570\n</code></pre> <ul> <li>\u8f6c\u6362\u4e3a\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570</li> </ul> C++<pre><code>string s = \"123.456\";\nstod(s);            // \u5c06 s \u8f6c\u6362\u4e3a\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\n</code></pre> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B/#cstring","title":"cstring","text":"<p><code>cstring</code> \u64cd\u4f5c\u7684\u662f C \u98ce\u683c\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u5c31\u662f\u4ee5 <code>\\0</code> \u7ed3\u5c3e\u7684\u5b57\u7b26\u6570\u7ec4\u3002</p> <p>C \u98ce\u683c\u7684\u5b57\u7b26\u4e32\u6709\u4e09\u79cd\u5199\u6cd5\uff1a</p> C++<pre><code>int main(){\n    char str1[6] = \"hello\";\n    char str2[] = \"hello\";\n    char *str3 = \"hello\";\n}\n</code></pre> <ul> <li> <p><code>str1</code>      \u6b64\u5199\u6cd5\u4f1a\u5728 <code>str1[5]</code> \u7684\u4f4d\u7f6e\u63d2\u5165 <code>\\0</code>\u3002     \u6570\u636e\u4fdd\u5b58\u5728\u6808\u4e2d\u3002</p> </li> <li> <p><code>str2</code>     \u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5c06 <code>str2</code> \u7684\u957f\u5ea6\u8bbe\u7f6e\u4e3a 6\uff0c\u4e14\u5728 <code>str2[5]</code> \u7684\u4f4d\u7f6e\u63d2\u5165 <code>\\0</code>\u3002     \u6570\u636e\u4fdd\u5b58\u5728\u6808\u4e2d\u3002</p> </li> <li> <p><code>str3</code>     \u6b64\u5199\u6cd5\u4f1a\u5728\u5e38\u91cf\u533a\uff08\u5e38\u91cf\u533a\u4e0d\u53ef\u66f4\u6539\uff09\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u5c06 <code>str3</code> \u6307\u5411\u8be5\u5b57\u7b26\u4e32\u7684\u9996\u5730\u5740\u3002     \u6570\u636e\u4fdd\u5b58\u5728\u5e38\u91cf\u533a\uff0c<code>str3</code> \u672c\u8eab \u4fdd\u5b58\u5728\u6808\u4e2d\u3002</p> </li> </ul> <p>\u663e\u7136\uff0c<code>str1</code> \u548c <code>str2</code> \u662f\u7b49\u4ef7\u7684\u3002\u6211\u4eec\u90fd\u77e5\u9053\uff0c\u6570\u7ec4\u540d\u5176\u5b9e\u662f\u4e00\u4e2a\u6307\u9488\uff0c \u6240\u4ee5 <code>str1</code> \u548c <code>str2</code> \u90fd\u662f\u6307\u5411\u6808\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u800c <code>str3</code> \u5219\u662f\u6307\u5411\u5e38\u91cf\u533a\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002</p> C++<pre><code>// \u8f93\u51fa\u5730\u5740\nfor(int i = 0; i &lt; 6; i++) \n    printf(\"%x %x\\n\", str1 + i, &amp;str1[i]);\n// \u8f93\u51fa\u5185\u5bb9\nfor(int i = 0; i &lt; 6; i++)\n    printf(\"%c %c\\n\", *(str1 + i), str1[i]);\n</code></pre> Text Only<pre><code>19d5f2ec 19d5f2ec\n19d5f2ed 19d5f2ed\n19d5f2ee 19d5f2ee\n19d5f2ef 19d5f2ef\n19d5f2f0 19d5f2f0\n19d5f2f1 19d5f2f1\nh h\ne e\nl l\nl l\no o\nNUL NUL\n</code></pre> <p>\u5982\u679c\u628a <code>str3</code> \u6307\u5411 <code>str1</code>\uff0c\u5373 <code>str3 = str1</code>\uff0c\u90a3\u4e48 <code>str3</code> \u5c31\u6307\u5411\u4e86\u6808\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002 \u7d27\u63a5\u7740\uff0c\u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u590d\u5236\uff0c\u6362\u6210 <code>str3</code>\uff0c\u8f93\u51fa\u7ed3\u679c\u4e00\u6bdb\u4e00\u6837\u3002</p> <p>\u8fd9\u5c31\u662f C \u98ce\u683c\u7684\u5b57\u7b26\u4e32\u3002\u672c\u8d28\u4e0a\u90fd\u662f\u6307\u9488\uff0c\u6307\u5411\u4e00\u4e2a\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\u3002</p> <p>\u83dc\u9e1f\u6559\u7a0b \u8be6\u7ec6\u4ecb\u7ecd\u4e86 <code>cstring</code> \u7684\u7528\u6cd5\uff0c\u4e0b\u9762\u662f\u4e00\u4e9b\u5e38\u7528\u7684\u51fd\u6570\uff1a</p> <p></p> <ul> <li><code>strlen</code> \u83b7\u53d6\u5b57\u7b26\u4e32\u957f\u5ea6 <code>size_t strlen(const char *s);</code></li> </ul> C++<pre><code>unsigned int len = strlen(str);\n</code></pre> <p><code>strlen</code> \u8ba1\u7b97\u4ece <code>str</code> \u5f00\u59cb\uff0c\u5230 <code>\\0</code> \u7ed3\u675f\u7684\u957f\u5ea6\u3002 \u6240\u4ee5\uff0c\u5982\u679c <code>str</code> \u4e2d\u95f4\u6709 <code>\\0</code>\uff0c\u90a3\u4e48 <code>strlen</code> \u53ea\u4f1a\u8fd4\u56de\u5230 <code>\\0</code> \u7684\u957f\u5ea6\u3002</p> <p>\u5bb9\u6613\u6df7\u6dc6\u7684\u662f\uff0c<code>sizeof</code> \u7684\u529f\u80fd\u662f\u8ba1\u7b97\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\u7684\u5927\u5c0f\uff0c\u8fd9\u4e2a\u7c7b\u578b\u53ef\u4ee5\u662f\u6570\u7ec4\u3001\u51fd\u6570\u3001\u6307\u9488\u3001\u5bf9\u8c61\u7b49\uff0c\u5355\u4f4d\u4e3a\u5b57\u8282\u3002</p> <ul> <li><code>memset</code> \u8bbe\u7f6e\u5b57\u7b26\u4e32\u5185\u5bb9 <code>void *memset(void *s, int c, size_t n);</code></li> </ul> C++<pre><code>memset(str, 'a', sizeof str);\n</code></pre> <p><code>memset</code> \u6309\u5b57\u8282\u5bf9 <code>str</code> \u8fdb\u884c\u521d\u59cb\u5316\uff0c<code>sizeof str</code> \u4e3a <code>str</code> \u7684\u5927\u5c0f\uff0c\u5355\u4f4d\u4e3a\u5b57\u8282\u3002 \u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c<code>memset</code> \u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f <code>int</code> \u7c7b\u578b\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u53ea\u4f1a\u53d6 <code>char</code> \u7684\u4f4e 8 \u4f4d\u3002 </p> <p>\u5728\u7b97\u6cd5\u7ade\u8d5b\u4e2d\uff0c\u6211\u4eec\u5e38\u5e38\u4f1a\u4f7f\u7528 <code>memset(g, 0x3f, sizeof g)</code> \u6765\u521d\u59cb\u5316\u4e00\u4e2a\u6570\u7ec4\u3002 \u5b9e\u9645\u4e0a\uff0c<code>0x3f</code> \u7684\u4e8c\u8fdb\u5236\u4e3a <code>0011 1111</code>\u3002<code>memset</code> \u4f1a\u5c06 <code>g</code> \u7684\u6bcf\u4e2a\u5b57\u8282\u90fd\u8bbe\u7f6e\u4e3a <code>0011 1111</code>\u3002 \u5047\u8bbe <code>g</code> \u7684\u7c7b\u578b\u4e3a <code>int</code>\uff0c\u4e00\u4e2a <code>int</code>\uff0c4 \u4e2a\u5b57\u8282\uff0c\u90a3\u4e48 <code>g</code> \u4e2d\u6bcf\u4e2a\u5143\u7d20</p> <ul> <li>\u4e8c\u8fdb\u5236\u4e3a <code>0011 1111 0011 1111 0011 1111 0011 1111</code>\u3002</li> <li>\u5341\u8fdb\u5236\u4e3a <code>1061109567</code>\u3002</li> </ul> C++<pre><code>char *strcpy(char *dest, const char *src);\nchar *strcat(char *dest, const char *src);\nint strcmp(const char *s1, const char *s2);\nchar *strchr(const char *s, int c);\nchar *strstr(const char *haystack, const char *needle);\nvoid *memcpy(void *dest, const void *src, size_t n);\n</code></pre> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B/#stream","title":"stream","text":"<p>\u6d41\uff0cC++ \u4e2d\u7684\u4e00\u79cd\u62bd\u8c61\u6982\u5ff5\uff0c\u7528\u4e8e\u8868\u793a\u6570\u636e\u5728\u7a0b\u5e8f\u548c\u5916\u90e8\u8bbe\u5907\uff08\u5982\u6587\u4ef6\u3001\u952e\u76d8\u3001\u5c4f\u5e55\u7b49\uff09\u4e4b\u95f4\u7684\u6d41\u52a8\u3002</p> <ul> <li>\u7f13\u51b2\u533a\uff1a\u7f13\u51b2\u533a\u662f\u4e00\u4e2a\u4e34\u65f6\u5b58\u50a8\u533a\u57df\uff0c\u7528\u4e8e\u5b58\u653e\u8f93\u5165\u8f93\u51fa\u7684\u6570\u636e\u3002     \u7528\u4e8e\u51cf\u5c11\u5bf9\u8f93\u5165\u8f93\u51fa\u8bbe\u5907\u7684\u8bbf\u95ee\u6b21\u6570\uff0c\u4ece\u800c\u63d0\u9ad8\u6548\u7387\u3002\uff08\u7f13\u51b2\u533a\u66f4\u5feb\uff0c\u8f93\u5165\u8f93\u51fa\u8bbe\u5907\u66f4\u6162\uff09</li> <li> <p>\u72b6\u6001\uff1a\u6d41\u5177\u6709\u4e0d\u540c\u72b6\u6001\uff1a</p> <ul> <li><code>good()</code>\uff1a\u6d41\u6b63\u5e38\u3002</li> <li><code>bad()</code>\uff1a\u6d41\u5d29\u6e83\u3002</li> <li><code>fail()</code>\uff1a\u6d41\u64cd\u4f5c\u5931\u8d25\u3002</li> <li><code>eof()</code>\uff1a\u6d41\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\u3002</li> </ul> C++<pre><code>if(std::cin.good()) std::cout &lt;&lt; \"good\" &lt;&lt; std::endl;\n</code></pre> </li> </ul>"},{"location":"src/more/old/CPP/C%2B%2B/#io-stream","title":"io stream","text":"<p><code>iostream</code>\uff1a\u6807\u51c6\u8f93\u5165\u8f93\u51fa\u6d41\uff0c\u7528\u4e8e\u63a7\u5236\u53f0\u8f93\u5165\u8f93\u51fa\u3002</p> C++<pre><code>std::cin &gt;&gt; x;    // \u4ece\u63a7\u5236\u53f0\u8f93\u5165\nstd::cout &lt;&lt; x ;  // \u8f93\u51fa\u5230\u63a7\u5236\u53f0\n</code></pre> <ul> <li> <p>\u8bfb\u5165     C++<pre><code>// 100 a\nint a;\nchar c;\n</code></pre></p> <ul> <li><code>cin</code> C++<pre><code>std::cin &gt;&gt; a &gt;&gt; c;\n</code></pre>     \u6b63\u786e\u8bfb\u5165\uff0c<code>a = 100</code>\uff0c<code>c = 'a'</code>\u3002</li> <li><code>scanf</code> C++<pre><code>scanf(\"%d%c\", &amp;a, &amp;c);\n</code></pre>     \u4e0d\u7b26\u5408\u9884\u671f\uff0c<code>a = 100</code>\uff0c<code>c = ' '</code>\u3002</li> </ul> </li> <li> <p>\u8f93\u51fa</p> <ul> <li> <p><code>endl</code> C++<pre><code>std::cout &lt;&lt; a &lt;&lt; std::endl;\n</code></pre>     \u8f93\u51fa <code>a</code> \u5e76\u6362\u884c\uff0c\u540c\u65f6\u5237\u65b0\u7f13\u51b2\u533a\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n\nint main(){\n    // \u7acb\u5373\u8f93\u51fa\n    std::cout &lt;&lt; \"hello\" &lt;&lt; std::endl;\n    // \u7a0b\u5e8f\u81ea\u52a8\u5224\u65ad\u4f55\u65f6\u8f93\u51fa\n    std::cout &lt;&lt; \"world\";\n\n    while(1);\n    return 0;\n}\n</code></pre> </li> <li> <p><code>flush</code> C++<pre><code>std::cout &lt;&lt; a &lt;&lt; std::flush;\nstd::flush(std::cout);\n</code></pre>     \u8f93\u51fa <code>a</code>\uff0c\u4f46\u4e0d\u6362\u884c\uff0c\u540c\u65f6\u5237\u65b0\u7f13\u51b2\u533a\u3002</p> </li> <li> <p>\u5173\u95ed C / C++ \u7684\u8f93\u5165\u8f93\u51fa\u540c\u6b65     C++<pre><code>std::ios::sync_with_stdio(false);        \n</code></pre></p> <ul> <li>\u5173\u95ed\u4e4b\u540e\uff0c<code>cin</code> \u548c <code>scanf</code> \u7684\u8f93\u5165\u987a\u5e8f\u4e0d\u518d\u4fdd\u8bc1\u4e00\u81f4\u3002</li> </ul> </li> <li> <p>\u5173\u95ed\u7f13\u51b2\u533a     C++<pre><code>std::cin.tie(nullptr); std::cout.tie(nullptr);\n</code></pre></p> <ul> <li>\u7406\u8bba\u4e0a\uff0c\u5173\u95ed\u4e4b\u540e\uff0c<code>cin</code> \u548c <code>cout</code> \u4e0d\u518d\u7ed1\u5b9a\uff0c<code>cin</code> \u7684\u8f93\u5165\u4e0d\u4f1a\u5237\u65b0 <code>cout</code> \u7684\u8f93\u51fa\u3002</li> </ul> </li> </ul> </li> </ul>"},{"location":"src/more/old/CPP/C%2B%2B/#iomanip","title":"iomanip","text":"<ul> <li> <p><code>setw</code> \u8bbe\u7f6e\u5b57\u6bb5\u5bbd\u5ea6     C++<pre><code>std::cout &lt;&lt; std::setw(5) &lt;&lt; 123 &lt;&lt; std::endl;\n// \"  123\"\n</code></pre></p> </li> <li> <p><code>setfill</code> \u8bbe\u7f6e\u586b\u5145\u5b57\u7b26     C++<pre><code>std::cout &lt;&lt; std::setw(5) &lt;&lt; std::setfill('G') &lt;&lt; 123 &lt;&lt; std::endl;\n// \"GG123\"\n</code></pre></p> </li> <li> <p><code>fixed</code> <code>setprecision</code> \u8bbe\u7f6e\u6d6e\u70b9\u6570\u7684\u5c0f\u6570\u7cbe\u5ea6     C++<pre><code>std::cout &lt;&lt; std::setw(5) &lt;&lt; std::fixed &lt;&lt; std::setprecision(2) &lt;&lt; 3.1415926 &lt;&lt; std::endl;\n// \" 3.14\"\n</code></pre></p> </li> <li> <p><code>left</code> <code>right</code> \u63a7\u5236\u5b57\u6bb5\u4e2d\u6570\u636e\u7684\u5bf9\u9f50\u65b9\u5f0f     C++<pre><code>std::cout &lt;&lt; std::setw(5) &lt;&lt; std::left &lt;&lt; 123 &lt;&lt; std::endl;\n// \"123  \"\n</code></pre></p> </li> </ul>"},{"location":"src/more/old/CPP/C%2B%2B/#cerr","title":"cerr","text":"<p><code>cerr</code>\uff1a\u6807\u51c6\u9519\u8bef\u6d41\uff0c\u7acb\u5373\u8f93\u51fa\u5230\u63a7\u5236\u53f0\uff0c\u4e0d\u4f1a\u7f13\u51b2\u3002</p> C++<pre><code>std::cerr &lt;&lt; \"error\" &lt;&lt; std::endl;\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#f-stream","title":"f stream","text":"<p><code>fstream</code>\uff1a\u6587\u4ef6\u8f93\u5165\u8f93\u51fa\u6d41\uff0c\u7528\u4e8e\u6587\u4ef6\u8f93\u5165\u8f93\u51fa\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B/#ifstream","title":"ifstream","text":"<p>\u4ece\u6587\u4ef6\u8bfb\u5165\u6570\u636e\u3002</p> <ol> <li> <p>\u6253\u5f00\u6587\u4ef6 C++<pre><code>std::ifstream ifs(\"in.txt\");\n\nif(!ifs.is_open()){\n    std::cerr &lt;&lt; \"\u6253\u5f00\u6587\u4ef6\u5931\u8d25\" &lt;&lt; std::endl;\n    return 1;\n}\n</code></pre></p> </li> <li> <p>\u8bfb\u53d6\u6587\u4ef6</p> </li> <li> <p>\u6309 <code>\\n</code> \u8bfb\u53d6     C++<pre><code>std::string s;\nwhile(std::getline(ifs, s))\n    std::cout &lt;&lt; s &lt;&lt; std::endl;\n</code></pre></p> </li> <li> <p>\u6309 <code></code> \u8bfb\u53d6</p> C++<pre><code>std::string s;\nwhile(ifs &gt;&gt; s)\n    std::cout &lt;&lt; s &lt;&lt; std::endl;\n</code></pre> </li> <li> <p>\u79fb\u52a8\u6587\u4ef6\u6307\u9488</p> C++<pre><code>ifs.seekg(0, std::ios::beg);    // \u79fb\u52a8\u5230\u6587\u4ef6\u5f00\u5934\n</code></pre> <p>\u79fb\u52a8\u6587\u4ef6\u6307\u9488\u8fd8\u6709\u66f4\u591a\u7528\u6cd5\u3002\u8be6\u89c1 cppreference\u3002</p> </li> <li> <p>\u5173\u95ed\u6587\u4ef6</p> C++<pre><code>ifs.close();\n</code></pre> </li> </ol>"},{"location":"src/more/old/CPP/C%2B%2B/#ofstream","title":"ofstream","text":"<ol> <li> <p>\u6253\u5f00\u6587\u4ef6     C++<pre><code>std::ofstream ofs(\"out.txt\");\n</code></pre></p> </li> <li> <p>\u5199\u5165\u6587\u4ef6</p> C++<pre><code>ofs &lt;&lt; \"hello\" &lt;&lt; std::endl;\n</code></pre> </li> <li> <p>\u5173\u95ed\u6587\u4ef6</p> C++<pre><code>ofs.close();\n</code></pre> </li> </ol>"},{"location":"src/more/old/CPP/C%2B%2B/#s-stream","title":"s stream","text":"<p><code>sstream</code>\uff1a\u5b57\u7b26\u4e32\u8f93\u5165\u8f93\u51fa\u6d41\u3002\u63d0\u4f9b\u4e00\u79cd\u7075\u6d3b\u7684\u65b9\u5f0f\uff0c\u5c06\u5b57\u7b26\u4e32\u5f53\u4f5c\u6d41\u6765\u5904\u7406\u3002</p> <ul> <li> <p>\u521d\u59cb\u5316</p> C++<pre><code>std::stringstream ss;\n</code></pre> </li> <li> <p>\u5199\u5165</p> C++<pre><code>ss &lt;&lt; \"hello\";\nss &lt;&lt; 123;\nss &lt;&lt; 3.14;\n</code></pre> </li> <li> <p>\u8bfb\u53d6</p> C++<pre><code>std::string s;\nint a;\ndouble b;\n\nss &gt;&gt; s &gt;&gt; a &gt;&gt; b;\n</code></pre> </li> <li> <p>\u8fdb\u5236\u8f6c\u6362</p> <ul> <li> <p><code>dec</code> -&gt; <code>oct</code> / <code>hex</code> C++<pre><code>std::stringstream ss;\nstd::string s;\nint num = 666;\n\n// \u5c06 num \u4ee5\u516b\u8fdb\u5236\u5f62\u5f0f\u5199\u5165 ss\nss &lt;&lt; std::oct &lt;&lt; num;\nss &gt;&gt; s;\nstd::cout &lt;&lt; s &lt;&lt; std::endl;// 1232\n\nss.clear();\n\n// \u5c06 num \u4ee5\u5341\u516d\u8fdb\u5236\u5f62\u5f0f\u5199\u5165 ss\nss &lt;&lt; std::hex &lt;&lt; num;\nss &gt;&gt; s;\nstd::cout &lt;&lt; s &lt;&lt; std::endl;// 29a\n</code></pre></p> </li> <li> <p><code>oct</code> / <code>hex</code> -&gt; <code>dec</code> C++<pre><code>std::string a = \"1232\";\nstd::string b = \"29a\";\nint num;\n\nnum = std::stoi(a, nullptr, 8);\nstd::cout &lt;&lt; num &lt;&lt; std::endl;  // 666\n\nnum = std::stoi(b, nullptr, 16);\nstd::cout &lt;&lt; num &lt;&lt; std::endl;  // 666\n</code></pre></p> </li> </ul> </li> </ul> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B/#bitset","title":"bitset","text":"<p>\u5904\u7406\u4e8c\u8fdb\u5236\u4f4d\u7684\u7c7b\uff0c\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u6210\u5458\u51fd\u6570\u6765\u6267\u884c\u4f4d\u64cd\u4f5c\u3002 \u5728 <code>bitset</code> \u4e2d\uff0c\u6570\u636e\u4fdd\u5b58\u5f62\u5982\u6570\u7ec4\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B/#_22","title":"\u521b\u5efa","text":"C++<pre><code>bitset&lt;4&gt; b1;       // \u957f\u5ea6\u4e3a 4\uff1a0000\nbitset&lt;8&gt; b2(5);    // \u957f\u5ea6\u4e3a 8\uff1a0000 0101\nbitset&lt;8&gt; b3(\"101\");// \u957f\u5ea6\u4e3a 8\uff1a0000 0101\n\nb1.reset();         // \u5168\u90e8\u7f6e 0\nb1.set();           // \u5168\u90e8\u7f6e 1\nb1.set(i);          // i \u4f4d\u7f6e 1\nb1.set(i, 0);       // i \u4f4d\u7f6e 0\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_23","title":"\u8f6c\u6362","text":"C++<pre><code>string a = b1.to_string();\nunsigned long long b = b1.to_ullong();\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_24","title":"\u4f4d\u64cd\u4f5c","text":"C++<pre><code>bitset&lt;4&gt; b1(\"1100\");\nbitset&lt;4&gt; b2(\"1001\");\n\n// \u6309\u4f4d\u53d6\u53cd\ncout &lt;&lt; ~b1 &lt;&lt; endl;        // 0011\n// \u6309\u4f4d\u4e0e\ncout &lt;&lt; (b1 &amp; b2) &lt;&lt; endl;  // 1000\n// \u6309\u4f4d\u6216\ncout &lt;&lt; (b1 | b2) &lt;&lt; endl;  // 1101\n// \u6309\u4f4d\u5f02\u6216\ncout &lt;&lt; (b1 ^ b2) &lt;&lt; endl;  // 0101\n// \u53f3\u79fb\ncout &lt;&lt; (b2 &gt;&gt; 2) &lt;&lt; endl;  // 0010\n// \u5de6\u79fb\ncout &lt;&lt; (b2 &lt;&lt; 2) &lt;&lt; endl;  // 0100\n\n// \u67d0\u4e00\u4f4d\u53d6\u53cd\nb1.flip(i);\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_25","title":"\u6210\u5458\u51fd\u6570","text":"C++<pre><code>bitset&lt;16&gt; b1(6666);    // 0001 1010 0000 1010\n\n// \u4f7f\u7528 [] \u8f93\u51fa\nfor(int i=b1.size()-1; i&gt;=0; i--) cout&lt;&lt;b1[i];\ncout&lt;&lt;endl;\n\n// \u7edf\u8ba1\u4e8c\u8fdb\u5236\u4e2d 1 \u7684\u4e2a\u6570\ncout&lt;&lt;b1.count()&lt;&lt;endl; // 5\n// \u6c42bitset\u7684\u5927\u5c0f\ncout&lt;&lt;b1.size()&lt;&lt;endl;  // 16\n// \u5224\u65ad\u67d0\u4f4d\uff08\u4ece\u53f3\u5230\u5de6\uff0c\u4e0b\u6807\u4ece 0 \u5f00\u59cb\uff09\u662f\u5426\u4e3a 1\ncout&lt;&lt;b1.test(9)&lt;&lt;endl; // true\n\n// \u5224\u65ad\u662f\u5426\u5168\u4e3a 0\ncout&lt;&lt;b1.none()&lt;&lt;endl;  // 0\n// \u5224\u65ad\u662f\u5426\u5168\u4e3a 1\ncout&lt;&lt;b1.all()&lt;&lt;endl;   // 0\n// \u5224\u65ad\u662f\u5426\u6709 1\ncout&lt;&lt;b1.any()&lt;&lt;endl;   // 1\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#regex","title":"regex","text":"<p>\u6b63\u5219\u8868\u8fbe\u5f0f \u7684\u672c\u8d28\uff0c\u5c31\u662f\u67d0\u79cd \u5b57\u7b26\u7ec4\u5408\u3002 </p>"},{"location":"src/more/old/CPP/C%2B%2B/#_26","title":"\u5b9a\u4e49\u6b63\u5219\u8868\u8fbe\u5f0f","text":"C++<pre><code>std::regex r(R\"((\\d{1,3}\\.){3}\\d{1,3})\");\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_27","title":"\u5224\u65ad\u4e32","text":"<p>\u7528\u4e8e\u5224\u65ad\u6574\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f\u3002</p> C++<pre><code>std::regex_match(\"127.0.0.1\", r);   // true\nstd::regex_match(\"a127.0.0.1\", r);  // false\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_28","title":"\u67e5\u627e / \u53d6\u51fa\u5339\u914d\u5b50\u4e32","text":"<p>\u7528\u4e8e\u67e5\u627e\u5b57\u7b26\u4e32\u4e2d\u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5b50\u4e32\u3002</p> <ol> <li>\u4f7f\u7528 <code>std::sregex_iterator</code></li> </ol> <p>C++ \u4e2d\u7528\u4e8e\u5904\u7406\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u7ed3\u679c\u7684\u8fed\u4ee3\u5668\u7c7b\u3002</p> C++<pre><code>for(auto i=std::sregex_iterator(s.begin(), s.end(), r); i!=std::sregex_iterator(); i++)\n    std::cout &lt;&lt; (*i).str() &lt;&lt; std::endl;\n</code></pre> <ol> <li>\u4f7f\u7528 <code>std::regex_search</code></li> </ol> C++<pre><code>std::smatch matches;\nwhile (std::regex_search(s, matches, r)) {\n    std::cout &lt;&lt; matches.str() &lt;&lt; std::endl;\n    s = matches.suffix().str(); // \u83b7\u53d6\u5f53\u524d\u5339\u914d\u5b50\u4e32\u4e4b\u540e\u7684\u5b50\u4e32\n}\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_29","title":"\u66ff\u6362\u5339\u914d\u5b50\u4e32","text":"<p>\u66ff\u6362\u6240\u6709\u5339\u914d\u5b50\u4e32\uff1a</p> C++<pre><code>// \u5c06 s \u4e2d\u6240\u6709\u5339\u914d r \u7684\u5b50\u4e32\u66ff\u6362\u4e3a \"666\"\uff0c\u4fdd\u5b58\u5230 ss \u4e2d\nstd::string ss = std::regex_replace(s, r, \"sss\");\n</code></pre> <p>\u66ff\u6362\u7b2c\u4e00\u4e2a\u5339\u914d\u5b50\u4e32\uff1a</p> C++<pre><code>// \u5c06 s \u4e2d\u7b2c\u4e00\u4e2a\u5339\u914d r \u7684\u5b50\u4e32\u66ff\u6362\u4e3a \"666\"\uff0c\u4fdd\u5b58\u5230 ss \u4e2d\nstd::string ss = std::regex_replace(s, r, \"666\", std::regex_constants::format_first_only);\n</code></pre> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B/#template","title":"template","text":"<p>template\uff1a\u53d8\u53c2\u6570\u6a21\u677f\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B/#template_1","title":"\u5728\u51fd\u6570\u4e2d\u4f7f\u7528 template","text":"<p>\u53ef\u4ee5\u8ba9\u51fd\u6570\u63a5\u53d7\u4efb\u610f\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u800c\u4e0d\u662f\u56fa\u5b9a\u7684\u7c7b\u578b\u3002</p> C++<pre><code>template&lt;typename T&gt;\nvoid Tswap(T *a, T *b){\n    T temp = *a;\n    *a = *b;\n    *b = temp;\n}\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#template_2","title":"\u5728\u7c7b\u4e2d\u4f7f\u7528 template","text":"<p>\u53ef\u4ee5\u8ba9\u7c7b\u63a5\u53d7\u4efb\u610f\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u800c\u4e0d\u662f\u56fa\u5b9a\u7684\u7c7b\u578b\u3002</p> C++<pre><code>template&lt;typename T&gt;\nclass queue {\npublic:\n    void push(T x){\n        q[tail++] = x;\n    };\n    void pop(){\n        head++;\n    };\n    T front(){\n        return q[head];\n    };\n    int size(){\n        return this-&gt;tail-this-&gt;head;\n    }\nprivate:\n    T q[100];\n    int head = 0;\n    int tail = 0;\n};\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#variant","title":"variant","text":"<p>\u57fa\u4e8e\u6a21\u677f\u7684\u7c7b\u578b\u5b89\u5168\u8054\u5408\u3002</p> C++<pre><code>#include &lt;variant&gt;\n</code></pre> C++<pre><code>std::variant&lt;int, double, std::string&gt; uids;\n</code></pre> <p>\u8f93\u51fa\u4e4b\u524d\uff0c\u9700\u8981\u68c0\u67e5\u7c7b\u578b\u662f\u5426\u7b26\u5408\u9884\u671f\u3002</p> C++<pre><code>uids = 123;\nuids = 3.14;\nuids = \"Hello_world!\";\n\nif(std::holds_alternative&lt;int&gt;(uids))\n    std::cout &lt;&lt; std::get&lt;int&gt;(uids) &lt;&lt; std::endl;\nelse\n    // \u9519\u8bef\u5904\u7406\n</code></pre> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B/#functional","title":"functional","text":""},{"location":"src/more/old/CPP/C%2B%2B/#lambda","title":"lambda","text":"<p>lambda\uff1a\u533f\u540d\u51fd\u6570 / \u95ed\u5305\u3002</p> <p>\u5141\u8bb8\u5728\u9700\u8981\u51fd\u6570\u5bf9\u8c61\uff08\u6bd4\u5982\u4f20\u9012\u7ed9\u7b97\u6cd5\u3001STL \u5bb9\u5668\u7b49\uff09\u7684\u5730\u65b9\uff0c\u4ee5\u4e00\u79cd\u66f4\u4e3a\u7b80\u6d01\u7684\u65b9\u5f0f\u5b9a\u4e49\u533f\u540d\u51fd\u6570\u3002</p> C++<pre><code>[capture](parameters) -&gt; return_type { body_of_lambda }\n</code></pre> <ul> <li>capture\uff1a\u6355\u83b7\u5217\u8868\uff0c\u6355\u83b7\u5916\u90e8\u53d8\u91cf\u3002</li> <li>parameters\uff1a\u53c2\u6570\u5217\u8868\u3002</li> <li>return_type\uff1a\u8fd4\u56de\u503c\u7c7b\u578b\u3002</li> <li>body_of_lambda\uff1a\u51fd\u6570\u4f53\u3002</li> </ul> C++<pre><code>#include &lt;iostream&gt;\n\nint main() {\n    int x=1;\n    int y=2;\n\n    // \u4f7f\u7528Lambda\u8868\u8fbe\u5f0f\u76f4\u63a5\u5b9a\u4e49\u5e76\u8c03\u7528\n    // Lambda\u6355\u83b7x, y\u53d8\u91cf\uff0c\u5e76\u4f20\u9012\u53c2\u6570x+y, y*y\n    int result = \n        [x, y](int a, int b) -&gt; int {\n            return x + y + a + b;\n        }(x+y, y*y); \n\n    std::cout &lt;&lt; \"Result: \" &lt;&lt; result &lt;&lt; std::endl; // \u8f93\u51fa 10\n\n    return 0;\n}\n</code></pre> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;functional&gt;\n\nint main() {\n    int x=1;\n    int y=2;\n\n    std::function&lt;int(int, int)&gt; f = [x, y](int a, int b) -&gt; int{\n        return x + y + a + b;\n    };\n\n    std::cout &lt;&lt; f(x*x, y+y) &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B/#function","title":"function","text":"<p>function\uff1a\u7528\u6765\u5305\u88c5\u4efb\u4f55\u53ef\u4ee5\u88ab\u8c03\u7528\u7684\u5bf9\u8c61\uff0c\u5305\u62ec\u51fd\u6570\u6307\u9488\u3001\u51fd\u6570\u5bf9\u8c61\u3001Lambda \u8868\u8fbe\u5f0f\u3001\u6210\u5458\u51fd\u6570\u6307\u9488\u7b49\uff0c\u4ece\u800c\u63d0\u4f9b\u4e86\u4e00\u79cd\u7edf\u4e00\u7684\u65b9\u5f0f\u6765\u5904\u7406\u5404\u79cd\u53ef\u8c03\u7528\u5bf9\u8c61\u3002</p> C++<pre><code>#include &lt;functional&gt;\nstd::function&lt;return_type(parameter_types)&gt; function_name;\n</code></pre> <ul> <li>return_type\uff1a\u8fd4\u56de\u503c\u7c7b\u578b\u3002</li> <li>parameter_types\uff1a\u53c2\u6570\u7c7b\u578b\u3002</li> <li>function_name\uff1a\u51fd\u6570\u540d\u3002</li> </ul> <p>\u4f7f\u7528\u6210\u5458\u51fd\u6570\u6307\u9488</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;functional&gt;\n\nclass MyClass {\npublic:\n    int multiply(int a, int b) {\n        return a * b;\n    }\n};\n\nint main() {\n    MyClass obj;\n    std::function&lt;int(MyClass&amp;, int, int)&gt; func = &amp;MyClass::multiply;\n    std::cout &lt;&lt; func(obj, 3, 4) &lt;&lt; std::endl;  // \u8f93\u51fa 12\n\n    return 0;\n}\n</code></pre> <p>\u4f7f\u7528\u51fd\u6570\u6307\u9488</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;functional&gt;\n\nint add(int a, int b) {\n    return a + b;\n}\n\nint main() {\n    std::function&lt;int(int, int)&gt; func = add;\n    std::cout &lt;&lt; func(3, 4) &lt;&lt; std::endl;  // \u8f93\u51fa 7\n\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B/#_30","title":"\u79fb\u52a8\u8bed\u4e49\u548c\u53f3\u503c\u5f15\u7528","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_31","title":"\u667a\u80fd\u6307\u9488","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_32","title":"\u5f02\u5e38\u5904\u7406","text":"<p>\u5f02\u5e38\u6307\u7684\u662f\u7a0b\u5e8f\u8fd0\u884c\u65f6\u53d1\u751f\u7684\u9519\u8bef\uff0c\u6bd4\u5982\u9664\u96f6\u9519\u8bef\u3001\u6570\u7ec4\u8d8a\u754c\u7b49\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B/#try-catch-throw","title":"try catch throw","text":"<ul> <li> <p><code>try</code>     \u5c06\u53ef\u80fd\u5f15\u53d1\u5f02\u5e38\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u8bed\u53e5\u5c01\u95ed\u8d77\u6765\u3002</p> C++<pre><code>try{\n    // \u53ef\u80fd\u5f15\u53d1\u5f02\u5e38\u7684\u8bed\u53e5\n    throw;  // \u629b\u51fa\u5f02\u5e38\n}catch(...){\n    // \u5f02\u5e38\u5904\u7406\n    throw;  // \u91cd\u65b0\u629b\u51fa\u5f02\u5e38\n}\n</code></pre> </li> <li> <p><code>catch</code>     \u6355\u83b7\u5f02\u5e38\uff0c\u5904\u7406\u5f02\u5e38\u3002</p> </li> <li> <p><code>throw</code>     \u629b\u51fa\u5f02\u5e38\u3002</p> </li> </ul>"},{"location":"src/more/old/CPP/C%2B%2B/#raii","title":"RAII","text":"<p>RAII\uff08Resource Acquisition Is Initialization\uff09\uff1a\u8d44\u6e90\u83b7\u53d6\u5373\u521d\u59cb\u5316\u3002</p> <p>RAII \u7684\u6838\u5fc3\u601d\u60f3\u662f\uff0c\u5c06\u8d44\u6e90\u7684\u751f\u547d\u5468\u671f\u4e0e\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u7ed1\u5b9a\uff0c\u901a\u8fc7\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570\u6765\u91ca\u653e\u8d44\u6e90\u3002</p> <p>RAII \u662f C++ \u4e2d\u5e38\u7528\u7684\u4e00\u79cd\u8d44\u6e90\u7ba1\u7406\u65b9\u5f0f\uff0c\u4e5f\u662f\u667a\u80fd\u6307\u9488\u7684\u57fa\u672c\u539f\u7406\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;memory&gt;\n\nclass File{\npublic:\n    File(const std::string&amp; filename): _filename(filename){\n        // \u6587\u4ef6\u53ef\u8bfb\u5199\u53ef\u8ffd\u52a0\uff0c\u4e0d\u5b58\u5728\u5219\u521b\u5efa\n        _fs = std::make_unique&lt;std::fstream&gt;(_filename, std::ios::in | std::ios::out | std::ios::app);\n        // \u6253\u5f00\u5931\u8d25\n        if(!_fs-&gt;is_open())\n            throw std::runtime_error(\"\u6587\u4ef6\" + _filename + \"\u6253\u5f00\u5931\u8d25!\");\n    };\n\n    // \u6790\u6784\u51fd\u6570\n    ~File(){};\n\n    // \u8bfb\u53d6\u6587\u4ef6\n    void read(){\n        _fs-&gt;seekg(0, std::ios::beg);   // \u5b9a\u4f4d\u5230\u6587\u4ef6\u5934\n        std::string line;\n        while(getline(*_fs, line))\n            std::cout &lt;&lt; line &lt;&lt; std::endl;\n\n        if(!_fs-&gt;eof())\n            throw std::runtime_error(\"\u8bfb\u53d6\" + _filename + \"\u5931\u8d25!\");\n    }\n\n    // \u5199\u5165\u6587\u4ef6\n    void write(const std::string&amp; line){\n        *_fs &lt;&lt; line;\n\n        if(!_fs-&gt;good())\n            throw std::runtime_error(\"\u5199\u5165\" + _filename + \"\u5931\u8d25!\");\n    }\n\nprivate:\n    std::string _filename;\n    std::unique_ptr&lt;std::fstream&gt; _fs;\n};\n\nint main(){\n    try{\n        File f(\"t.txt\");\n        f.write(\"hello world\\n\");\n        f.read();\n    }catch(const std::exception&amp; e){\n        // \u5c1d\u8bd5\u4fee\u590d\n        std::cerr &lt;&lt; e.what() &lt;&lt; std::endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_33","title":"\u65ad\u8a00","text":"<p>\u65ad\u8a00\uff08Assertion\uff09\u662f\u5728\u7f16\u7a0b\u4e2d\u7528\u4e8e\u68c0\u67e5\u7a0b\u5e8f\u8fd0\u884c\u65f6\u662f\u5426\u6ee1\u8db3\u7279\u5b9a\u6761\u4ef6\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\u5b83\u662f\u4e00\u79cd\u7528\u4e8e\u9a8c\u8bc1\u7a0b\u5e8f\u5047\u8bbe\u662f\u5426\u6b63\u786e\u7684\u58f0\u660e\uff0c\u901a\u5e38\u5728\u5f00\u53d1\u548c\u8c03\u8bd5\u9636\u6bb5\u4f7f\u7528\u3002</p> C++<pre><code>#include &lt;cassert&gt;\n#include &lt;iostream&gt;\n\nint main(){\n    int x = 10;\n    assert(x &lt; 10); // \u5982\u679cx &gt;= 10\uff0c\u7a0b\u5e8f\u4f1a\u7ec8\u6b62\n    std::cout&lt;&lt;x&lt;&lt;std::endl;\n    return 0;\n}\n</code></pre> <p>\u5982\u679c\u5728\u7f16\u8bd1\u65f6\u5b9a\u4e49\u4e86 <code>NDEBUG</code>\uff0c\u90a3\u4e48 <code>assert</code> \u4f1a\u88ab\u5ffd\u7565\u3002</p> C++<pre><code>#define NDEBUG\n</code></pre> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B/#stl","title":"STL","text":"<p>jiao \u7684 CPP_STL</p> <p>STL\uff08standard template library\uff09\uff0c\u6cdb\u578b\u5e93\u3002 \u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7684\u6a21\u677f\u7c7b\u548c\u6a21\u677f\u51fd\u6570\uff0c\u652f\u6301\u5e38\u7528\u7684\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B/#_34","title":"\u5982\u679c\u4f60\u672a\u66fe\u63a5\u89e6\u8fc7\u6570\u636e\u7ed3\u6784","text":"<p>\u6211\u4eec\u7b80\u5355\u8003\u8651\u4e00\u4e0b\uff0c\u8fd9\u4e2a\u6570\u7ec4\uff1a</p> C++<pre><code>int a[666];\n</code></pre> <p>\u9996\u5148\u660e\u786e\uff1a</p> <ul> <li>\u5f53\u6211\u4eec\u58f0\u660e\u4e00\u4e2a\u6570\u7ec4\u65f6\uff0c\u7cfb\u7edf\u4f1a\u4e3a\u6211\u4eec\u5206\u914d\u4e00\u6bb5 \u8fde\u7eed \u7684\u5185\u5b58\u7a7a\u95f4\u3002</li> <li>\u800c\u6570\u7ec4\u7684\u540d\u5b57\uff0c\u5c31\u662f\u8fd9\u6bb5\u5185\u5b58\u7a7a\u95f4\u7684 \u9996\u5730\u5740\uff0c\u8fd9\u6bb5\u7a7a\u95f4\u7684 \u7b2c\u4e00\u4e2a \u5143\u7d20\u3002<ul> <li>\u8bbf\u95ee\u67d0\u5730\u5740\u4e0a\u7684\u6570\u636e\uff0c\u9700\u8981\u89e3\u5f15\u7528\uff0c\u5373 <code>*a</code>\u3002</li> </ul> </li> <li>\u663e\u7136\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8bbf\u95ee\u6570\u7ec4\u7684\u7b2c 2 \u4e2a\u5143\u7d20\uff0c\u5730\u5740\u662f <code>a+1</code>\uff0c\u5373 <code>*(a+1)</code>\u3002<ul> <li>\u6211\u4eec\u5e38\u7528\u7684 <code>a[i]</code>\uff0c\u5176\u5b9e\u5c31\u662f <code>*(a+i)</code>\u3002</li> </ul> </li> </ul> <p>\u56e0\u6b64\uff0c\u603b\u7ed3\u4e00\u4e0b\u5176\u4f18\u7f3a\u70b9\uff1a</p> <p>\u4f18\u70b9\uff1a</p> <ol> <li>\u53ef\u4ee5\u901a\u8fc7\u4e0b\u6807\uff08\u504f\u79fb\u91cf\uff09\u8bbf\u95ee\u5143\u7d20\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a <code>O(1)</code>\u3002</li> </ol> <p>\u7f3a\u70b9\uff1a</p> <ol> <li>\u56e0\u4e3a\u58f0\u660e\u65f6\u5c31\u5206\u914d\u4e86\u5185\u5b58\u7a7a\u95f4\uff0c\u6240\u4ee5\u6570\u7ec4\u7684\u5927\u5c0f\u662f \u56fa\u5b9a \u7684\u3002</li> <li>\u6211\u4eec\u65e0\u6cd5\u5728\u6570\u7ec4\u4e2d\u95f4\u63d2\u5165\uff08\u5220\u9664\uff09\u5143\u7d20\uff0c\u56e0\u4e3a\u8fd9\u4f1a\u7834\u574f\u6570\u7ec4\u7684\u8fde\u7eed\u6027\u3002<ul> <li>\u9664\u975e\u6211\u4eec\u5c06\u76ee\u6807 \u540e \u7684\u5143\u7d20\u5168\u90e8\u540e\u79fb\uff08\u524d\u79fb\uff09\uff0c\u7136\u540e\u518d\u63d2\u5165\uff08\u5220\u9664\uff09\u3002</li> </ul> </li> </ol> <p>\u4eba\u751f\u5982\u620f\uff0c\u6211\u4eec\u65e0\u6cd5\u63d0\u524d\u77e5\u6653\u5b83\u7684\u7bc7\u5e45\uff0c\u4e5f\u4e0d\u77e5\u5176\u4f55\u65f6\u8c22\u5e55\u3002 \u620f\u5982\u4eba\u751f\uff0c\u6709\u4eba\u5728\u67d0\u4e2a\u77ac\u95f4\u65e0\u5948\u79bb\u53bb\uff0c\u800c\u4e5f\u6709\u65b0\u7684\u9762\u5b54\u5728\u4e0d\u7ecf\u610f\u95f4\u52a0\u5165\u3002</p> <p>\u4e3a\u4e86\u80fd\u591f\u5728\u6570\u7ec4\u4e2d\u95f4\u63d2\u5165\uff08\u5220\u9664\uff09\u5143\u7d20\uff0c\u80af\u5b9a\u9700\u8981\u6446\u8131\u6570\u7ec4\u7684 \u8fde\u7eed\u6027\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u6570\u7ec4\u4e2d\u95f4\u7684\u5143\u7d20\uff0c\u662f\u901a\u8fc7\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5730\u5740\u52a0\u4e0a\u504f\u79fb\u91cf\u6765\u8bbf\u95ee\u7684\uff0c\u4e00\u65e6\u8fd9\u4e2a\u8fde\u7eed\u6027\u88ab\u6253\u7834\uff0c\u6211\u4eec\u5c31\u65e0\u6cd5\u901a\u8fc7\u504f\u79fb\u91cf\u6765\u8bbf\u95ee\u5143\u7d20\u4e86\u3002</p> <p>\u56e0\u6b64\uff0c\u5355\u5411\u94fe\u8868\u5c31\u5e94\u8fd0\u800c\u751f\u4e86\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B/#iterator","title":"\u8fed\u4ee3\u5668 iterator","text":"<p>\u8fed\u4ee3\u5668\u662f\u4e00\u79cd\u6cdb\u578b\u6307\u9488\uff0c\u5b83\u53ef\u4ee5\u6307\u5411\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u3002</p> C++<pre><code>\u5bb9\u5668::iterator it;\n</code></pre> <p>\u5177\u4f53\u7684\uff1a</p> C++<pre><code>vector&lt;int&gt;::iterator it;\nunordered_multimap&lt;int, int&gt;::iterator it;\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_35","title":"\u8fed\u4ee3\u5668\u7684\u7c7b\u578b","text":"<ul> <li><code>iterator</code>\uff1a\u666e\u901a\u8fed\u4ee3\u5668\u3002</li> <li><code>const_iterator</code>\uff1a\u5e38\u91cf\u8fed\u4ee3\u5668\uff0c\u53ea\u80fd\u8bfb\u53d6\uff0c\u4e0d\u80fd\u4fee\u6539\u3002</li> <li><code>reverse_iterator</code>\uff1a\u53cd\u5411\u8fed\u4ee3\u5668\uff0c\u4ece\u540e\u5f80\u524d\u904d\u5386\u3002</li> <li><code>const_reverse_iterator</code>\uff1a\u5e38\u91cf\u53cd\u5411\u8fed\u4ee3\u5668\uff0c\u4ece\u540e\u5f80\u524d\u904d\u5386\uff0c\u53ea\u80fd\u8bfb\u53d6\uff0c\u4e0d\u80fd\u4fee\u6539\u3002</li> </ul> <p>\u53cd\u5411\u8fed\u4ee3\u5668\u53ea\u80fd\u7528\u4e8e\u652f\u6301\u53cc\u5411\u8fed\u4ee3\u5668\u7684\u5bb9\u5668\uff0c<code>unordered</code> \u7cfb\u5217\u5bb9\u5668\u4e0d\u652f\u6301\u53cd\u5411\u8fed\u4ee3\u5668\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B/#_36","title":"\u83b7\u53d6\u8fed\u4ee3\u5668","text":"<p>\u5bb9\u5668\u62e5\u6709 <code>begin</code> \u548c <code>end</code> \u6210\u5458\u51fd\u6570\uff0c\u7528\u4e8e\u83b7\u53d6\u8fed\u4ee3\u5668\uff1a</p> <ul> <li><code>begin()</code>\uff1a\u6307\u5411\u5bb9\u5668\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u6b63\u5411\u8fed\u4ee3\u3002</li> <li><code>cbegin()</code>\uff1a\u6307\u5411\u5bb9\u5668\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u4e14\u53ea\u80fd\u8bfb\u53d6\uff0c\u4e0d\u80fd\u4fee\u6539\u3002</li> <li><code>rbegin()</code>\uff1a\u6307\u5411\u5bb9\u5668\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u53cd\u5411\u8fed\u4ee3\u3002</li> <li><code>crbegin()</code>\uff1a\u6307\u5411\u5bb9\u5668\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u4e14\u53ea\u80fd\u8bfb\u53d6\uff0c\u4e0d\u80fd\u4fee\u6539\u3002</li> </ul> <p></p> <ul> <li><code>end()</code>\uff1a\u6307\u5411\u5bb9\u5668\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684 \u4e0b\u4e00\u4e2a \u4f4d\u7f6e\uff0c\u6b63\u5411\u8fed\u4ee3\u3002</li> <li><code>cend()</code>\uff1a\u6307\u5411\u5bb9\u5668\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684 \u4e0b\u4e00\u4e2a \u4f4d\u7f6e\uff0c\u4e14\u53ea\u80fd\u8bfb\u53d6\uff0c\u4e0d\u80fd\u4fee\u6539\u3002</li> <li><code>rend()</code>\uff1a\u6307\u5411\u5bb9\u5668\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684 \u524d\u4e00\u4e2a \u4f4d\u7f6e\uff0c\u53cd\u5411\u8fed\u4ee3\u3002</li> <li><code>crend()</code>\uff1a\u6307\u5411\u5bb9\u5668\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684 \u524d\u4e00\u4e2a \u4f4d\u7f6e\uff0c\u4e14\u53ea\u80fd\u8bfb\u53d6\uff0c\u4e0d\u80fd\u4fee\u6539\u3002</li> </ul>"},{"location":"src/more/old/CPP/C%2B%2B/#_37","title":"\u64cd\u4f5c\u8fed\u4ee3\u5668","text":"<ul> <li><code>*it</code>\uff1a\u83b7\u53d6\u8fed\u4ee3\u5668\u6307\u5411\u7684\u5143\u7d20\u3002     \u7279\u522b\u7684\uff0c\u8bbf\u95ee\u5143\u7d20\u7684\u6210\u5458\u53d8\u91cf\u65f6 <code>(*it).first</code>\uff0c\u53ef\u4ee5\u7b80\u5199\u4e3a <code>it-&gt;first</code>\u3002</li> <li><code>it++</code>\uff1a\u8fed\u4ee3\u5668\u540e\u79fb\u3002</li> <li><code>it--</code>\uff1a\u8fed\u4ee3\u5668\u524d\u79fb\u3002</li> </ul>"},{"location":"src/more/old/CPP/C%2B%2B/#for","title":"\u8303\u56f4 for \u5faa\u73af","text":"<p>\u5728 <code>for</code> \u5faa\u73af\u4e2d\uff0c\u4f7f\u7528\u8fed\u4ee3\u5668\u904d\u5386\u5bb9\u5668\u3002</p> C++<pre><code>for(int i: v)\n    cout&lt;&lt;i&lt;&lt;\" \";\n// i \u4e3a v \u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\n// \u5e38\u5e38\u7b80\u5199\u4e3a\nfor(auto i: v)\n    cout&lt;&lt;i&lt;&lt;\" \";\n</code></pre> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B/#_38","title":"\u5e8f\u5217\u5f0f\u5bb9\u5668","text":"<p>\u6240\u8c13\u5e8f\u5217\u5f0f\u5bb9\u5668\uff0c\u5176\u4e2d\u7684\u5143\u7d20 \u53ef\u5e8f\uff0c\u4f46\u672a\u5fc5 \u6709\u5e8f\u3002</p> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B/#vector","title":"\u3010\u968f\u673a\u3011vector","text":"<p>\u52a8\u6001\u6570\u7ec4\uff0c\u652f\u6301\u81ea\u52a8\u6269\u5bb9\u3002 \u5185\u5b58\u7a7a\u95f4\u662f\u8fde\u7eed\u7684\uff0c\u6240\u4ee5\u652f\u6301\u968f\u673a\u8bbf\u95ee\uff0c \u6545\u5176\u8fed\u4ee3\u5668\u662f\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B/#_39","title":"\u521b\u5efa","text":"C++<pre><code>vector&lt;int&gt; v1;             // \u7a7a\u6570\u7ec4\nvector&lt;int&gt; v2(10);         // 10\u4e2a\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f0\nvector&lt;int&gt; v3(10, 1);      // 10\u4e2a\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f1\nvector&lt;int&gt; v4(v3);         // \u62f7\u8d1d\u6784\u9020\u51fd\u6570\nvector&lt;int&gt; v5({1, 2, 3, 4, 5}); // \u521d\u59cb\u5316\u5217\u8868\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_40","title":"\u589e\u52a0","text":"C++<pre><code>v1.push_back(6);            // \u5c3e\u90e8\u63d2\u5165\nv1.emplace_back(6);         // \u5c3e\u90e8\u63d2\u5165\n\nv1.insert(v1.begin(), 6);                   // \u63d2\u5728 v1.begin() \u4e4b\u524d\uff0c\u5373\u5934\u90e8\u63d2\u5165\nv1.insert(v1.begin(), 10, 6);               // \u63d2\u5728 v1.begin() \u4e4b\u524d\uff0c\u5373\u5934\u90e8\u63d2\u516510\u4e2a6\nv1.insert(v1.begin(), v2.begin(), v2.end());// \u63d2\u5165 v2 \u7684\u6240\u6709\u5143\u7d20\nv1.insert(v1.begin(), {1, 2, 3, 4, 5});     // \u63d2\u5165\u521d\u59cb\u5316\u5217\u8868\n\nv1.emplace(v1.end(), 6);                    // \u63d2\u5728 v1.end() \u4e4b\u524d\uff0c\u5373\u5c3e\u90e8\u63d2\u5165\nv1.emplace(v1.end(), 10, 6);                // \u63d2\u5728 v1.end() \u4e4b\u524d\uff0c\u5373\u5c3e\u90e8\u63d2\u516510\u4e2a6\nv1.emplace(v1.end(), v2.begin(), v2.end()); // \u63d2\u5165 v2 \u7684\u6240\u6709\u5143\u7d20\nv1.emplace(v1.end(), {1, 2, 3, 4, 5});      // \u63d2\u5165\u521d\u59cb\u5316\u5217\u8868\n</code></pre> <p><code>emplace</code> \u51fd\u6570\u7684\u53c2\u6570\u662f\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\uff0c\u800c <code>insert</code> \u51fd\u6570\u7684\u53c2\u6570\u662f\u5143\u7d20\u7684\u503c\u3002   C++<pre><code>v1.push_back(10)\nv1.emplace_back(10)\n</code></pre>  \u4e0a\u9762\u4e24\u884c\u4ee3\u7801\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\uff0c\u90fd\u662f\u5728 <code>v1</code> \u7684\u5c3e\u90e8\u63d2\u5165\u4e00\u4e2a\u503c\u4e3a <code>10</code> \u7684\u5143\u7d20\u3002   * <code>push_back</code>\uff1a\u5148\u5728\u5185\u5b58\u4e2d\u6784\u9020\u4e00\u4e2a <code>10</code>\uff0c\u7136\u540e\u5c06\u5176\u62f7\u8d1d\u5230 <code>v1</code> \u7684\u5c3e\u90e8\u3002   * <code>emplace_back</code>\uff1a\u76f4\u63a5\u5728 <code>v1</code> \u7684\u5c3e\u90e8\u6784\u9020\u4e00\u4e2a <code>10</code>\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B/#_41","title":"\u5220\u9664","text":"C++<pre><code>v1.clear();                 // \u6e05\u7a7a\u6570\u7ec4\n\nv1.pop_back();              // \u5c3e\u90e8\u5220\u9664\nv1.erase(v1.begin());       // \u5220\u9664 v1.begin() \u4f4d\u7f6e\u7684\u5143\u7d20\nv1.erase(v1.begin(), v1.end()); // \u5220\u9664 [v1.begin(), v1.end()) \u4e4b\u95f4\u7684\u5143\u7d20\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_42","title":"\u4fee\u6539","text":"C++<pre><code>v1[1] = 6;                  // \u5c06\u4e0b\u6807\u4e3a 1 \u7684\u5143\u7d20\u6539\u4e3a 6\nv1.at(1) = 6;               // \u5c06\u4e0b\u6807\u4e3a 1 \u7684\u5143\u7d20\u6539\u4e3a 6 (\u8d8a\u754c\u4f1a\u629b\u51fa\u5f02\u5e38)\n\nstd::vector&lt;int&gt;::iterator it = v1.begin();\n*it = 6;                    // \u5c06 it \u6307\u5411\u7684\u5143\u7d20\u6539\u4e3a 6\n</code></pre> C++<pre><code>// \u91cd\u65b0\u5206\u914d\u5143\u7d20\nv1.assign(10, 6);            // \u6570\u7ec4\u5927\u5c0f\u6539\u4e3a10\uff0c\u6240\u6709\u5143\u7d20\u90fd\u662f6\nv1.assign(v2.begin(), v2.end()); // \u62f7\u8d1d v2 \u7684\u6240\u6709\u5143\u7d20\nv1.assign({1, 2, 3, 4, 5});  // \u62f7\u8d1d\u521d\u59cb\u5316\u5217\u8868\n\n// \u66f4\u6539\u5bb9\u5668\u5927\u5c0f\nv1.resize(10);              // \u6570\u7ec4\u5927\u5c0f\u6539\u4e3a10\uff0c\u591a\u4f59\u7684\u5143\u7d20\u88ab\u5220\u9664\uff0c\u4e0d\u8db3\u7684\u5143\u7d20\u88ab\u8865 0\nv1.resize(10, 6);           // \u6570\u7ec4\u5927\u5c0f\u6539\u4e3a10\uff0c\u591a\u4f59\u7684\u5143\u7d20\u88ab\u5220\u9664\uff0c\u4e0d\u8db3\u7684\u5143\u7d20\u88ab\u8865 6\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_43","title":"\u67e5\u627e","text":"C++<pre><code>// v1.find\nauto it = v1.find(6);       // \u67e5\u627e\u7b2c\u4e00\u4e2a\u503c\u4e3a 6 \u7684\u5143\u7d20\uff0c\u8fd4\u56de\u8fed\u4ee3\u5668\nif(it != v1.end())          // \u627e\u4e0d\u5230\u65f6\uff0cit == v1.end()\n    cout&lt;&lt;*it&lt;&lt;endl;        // \u8f93\u51fa 6\n\n// \u901a\u8fc7\u8fed\u4ee3\u5668\u904d\u5386\nauto it = v.begin();\nwhile(it != v.end()){\n    cout&lt;&lt;*it&lt;&lt;\" \";\n    it++;\n}\n// \u901a\u8fc7 for \u5faa\u73af\u904d\u5386\nfor(auto i: v) cout&lt;&lt;i&lt;&lt;\" \";\n\nv1.empty();                 // \u5224\u65ad\u6570\u7ec4\u662f\u5426\u4e3a\u7a7a\nv1.size();                  // \u8fd4\u56de\u6570\u7ec4\u5927\u5c0f\nv1.max_size();              // \u8fd4\u56de\u6570\u7ec4\u6700\u5927\u5bb9\u91cf\n\nv1.front();                 // \u8fd4\u56de\u5934\u90e8\u5143\u7d20\nv1.back();                  // \u8fd4\u56de\u5c3e\u90e8\u5143\u7d20\n\nv1[0];                      // \u8fd4\u56de\u4e0b\u6807\u4e3a 0 \u7684\u5143\u7d20\nv1.at(0);                   // \u8fd4\u56de\u4e0b\u6807\u4e3a 0 \u7684\u5143\u7d20 (\u8d8a\u754c\u4f1a\u629b\u51fa\u5f02\u5e38)\n\nv1.data();                  // \u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u6307\u9488\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_44","title":"\u5176\u4ed6","text":"C++<pre><code>v1.capacity();              // \u8fd4\u56de\u6570\u7ec4\u5bb9\u91cf\nv1.shrink_to_fit();         // \u91ca\u653e\u591a\u4f59\u7684\u7a7a\u95f4\nv1.reserve(10);             // \u9884\u7559 10 \u4e2a\u5143\u7d20\u7684\u7a7a\u95f4\uff0c\u907f\u514d\u591a\u6b21\u6269\u5bb9\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#deque","title":"\u3010\u968f\u673a\u3011deque","text":"C++<pre><code>#include &lt;queue&gt;            // deque \u5934\u6587\u4ef6\n</code></pre> <p>\u5728 <code>vector</code> \u7684\u57fa\u7840\u4e0a\uff0c\u589e\u52a0\u4e86\u5728\u5934\u90e8\u63d2\u5165\u548c\u5220\u9664\u5143\u7d20\u7684\u64cd\u4f5c\u3002 \u7136\u540e\uff0c\u8fd9\u4e2a\u4e1c\u897f\u5c31\u53eb\u505a \u53cc\u7aef\u961f\u5217 \u4e86\u3002</p> C++<pre><code>dq.push_front(6);           // \u5934\u90e8\u63d2\u5165\ndq.emplace_front(6);        // \u5934\u90e8\u63d2\u5165\ndq.pop_front();             // \u5934\u90e8\u5220\u9664\n</code></pre> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B/#array","title":"\u3010\u968f\u673a\u3011array","text":"<p>\u56fa\u5b9a\u5927\u5c0f\u7684\u6570\u7ec4\uff0c\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u652f\u6301\u968f\u673a\u8bbf\u95ee\u3002 \u56e0\u4e3a\u56fa\u5b9a\u5927\u5c0f\uff0c\u6240\u4ee5\u4e0d\u652f\u6301\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\uff0c\u53ea\u80fd\u4fee\u6539\u5143\u7d20\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B/#_45","title":"\u521b\u5efa","text":"C++<pre><code>array&lt;int, 5&gt; a1;                   // 5\u4e2a\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f0\narray&lt;int, 5&gt; a3 = {1, 2, 3, 4, 5}; // \u521d\u59cb\u5316\u5217\u8868\n\n// \u4f7f\u7528\u8fed\u4ee3\u5668\narray&lt;int, 5&gt;::iterator it = a1.begin();\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#list","title":"list","text":"<p>\u53cc\u5411\u94fe\u8868\u3002 \u5185\u5b58\u7a7a\u95f4\u4e0d\u662f\u8fde\u7eed\u7684\uff0c\u6240\u4ee5\u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee\uff0c\u6545\u5176\u8fed\u4ee3\u5668\u662f\u53cc\u5411\u8fed\u4ee3\u5668\u3002 \u56e0\u4e3a\u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee\uff0c\u82e5\u60f3\u8981\u8bbf\u95ee\u4e0b\u6807\u4e3a <code>i</code> \u7684\u5143\u7d20\uff0c\u53ea\u80fd\u4ece\u5934\u90e8\u5f00\u59cb\u904d\u5386\uff0c\u76f4\u5230\u904d\u5386\u5230\u4e0b\u6807\u4e3a <code>i</code> \u7684\u5143\u7d20\uff08\u6216\u8005\u4ece\u5c3e\u90e8\u5f00\u59cb\u904d\u5386\uff09\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B/#forward_list","title":"forward_list","text":"<p>\u5355\u5411\u94fe\u8868\u3002 \u76f8\u8f83\u4e8e <code>list</code>\uff0c<code>forward_list</code> \u53ea\u80fd\u4ece\u5934\u90e8\u5f00\u59cb\u904d\u5386\uff0c\u4e0d\u80fd\u4ece\u5c3e\u90e8\u5f00\u59cb\u904d\u5386\u3002 \u4e5f\u4e0d\u652f\u6301 <code>size()</code> \u51fd\u6570\uff0c\u6240\u4ee5\u4e0d\u80fd\u83b7\u53d6\u94fe\u8868\u7684\u5927\u5c0f\u3002 \u4e5f\u4e0d\u652f\u6301 <code>push_back()</code> \u51fd\u6570\uff0c\u6240\u4ee5\u4e0d\u80fd\u5728\u5c3e\u90e8\u63d2\u5165\u5143\u7d20\u3002 \u652f\u6301\u5934\u90e8\u63d2\u5165\u5143\u7d20\uff0c\u6240\u4ee5\u6709 <code>push_front()</code> \u51fd\u6570\u3002\u8fd9\u4e5f\u610f\u5473\u7740\uff0c<code>forward_list</code> \u662f\u5e26\u6709\u5934\u7ed3\u70b9\u7684\u94fe\u8868\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B/#_46","title":"\u589e\u52a0","text":"C++<pre><code>fl1.push_front(0);                    // \u5934\u90e8\u63d2\u5165\nfl1.emplace_front(-1);                // \u5934\u90e8\u63d2\u5165\nfl1.pop_front();                    // \u5934\u90e8\u5220\u9664\n\nfl1.insert_after(fl1.begin(), 10);    // \u5728\u6307\u5b9a\u4f4d\u7f6e\u540e\u63d2\u5165\nfl1.emplace_after(fl1.begin(), 20); // \u5728\u6307\u5b9a\u4f4d\u7f6e\u540e\u63d2\u5165\nfl1.erase_after(fl1.begin());        // \u5728\u6307\u5b9a\u4f4d\u7f6e\u540e\u5220\u9664\n</code></pre> \u5355\u94fe\u8868\uff08C\u5b9e\u73b0\uff09 C++<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nstruct node{\n    int data;\n    node *next;\n\n    void insert_after(int x){\n        node *t = (node*)malloc(sizeof(node));    // \u7533\u8bf7\u65b0\u7684\u8282\u70b9\n        t-&gt;data = x;    // \u65b0\u8282\u70b9\u7684\u6570\u636e\u57df\u5b58\u653e x\n        t-&gt;next = next;    // \u65b0\u8282\u70b9\u7684 next \u6307\u5411\u5f53\u524d\u8282\u70b9\u7684 next\n\n        next = t;        // \u5f53\u524d\u8282\u70b9\u7684 next \u6307\u5411\u65b0\u8282\u70b9\n    }\n\n    void delete_after(){\n        node *t = next;    // t \u6307\u5411\u5f53\u524d\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\n        next = t-&gt;next;    // \u5f53\u524d\u8282\u70b9\u7684 next \u6307\u5411 t \u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\n        free(t);        // \u91ca\u653e t\n    }\n};\n\nint main(){\n    node *head = (node*)malloc(sizeof(node));\n    head-&gt;data = 0;        // \u5934\u8282\u70b9\u7684\u6570\u636e\u57df\u4e0d\u5b58\u653e\u6570\u636e\uff0c\u7528\u6765\u5b58\u653e\u94fe\u8868\u7684\u957f\u5ea6\n    head-&gt;next = NULL;    // \u5934\u8282\u70b9\u7684 next \u6307\u5411 NULL\n\n    node *p = head;\n    for(int i = 1; i &lt;= 10; i++){\n        p-&gt;insert_after(i);\n        p = p-&gt;next;\n    }\n\n    printf(\"\u94fe\u8868\uff1a\\n\");\n    for(p = head-&gt;next; p != NULL; p = p-&gt;next) printf(\"%d \", p-&gt;data);\n\n    p = head;\n    p = p-&gt;next; p = p-&gt;next;\n    p-&gt;delete_after();\n    p-&gt;delete_after();\n\n    printf(\"\\n\u5220\u9664\u7b2c3\u30014\u4e2a\u5143\u7d20\u540e\u7684\u94fe\u8868\uff1a\\n\");\n    for(p = head-&gt;next; p != NULL; p = p-&gt;next) printf(\"%d \", p-&gt;data);\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#-stack","title":"\u3010-\u3011stack","text":"<p>\u6808</p>"},{"location":"src/more/old/CPP/C%2B%2B/#_47","title":"\u521b\u5efa","text":"C++<pre><code>stack&lt;int&gt; s1;              // \u7a7a\u6808\nstack&lt;int&gt; s2(s1);          // \u62f7\u8d1d\u6784\u9020\u51fd\u6570\nstack&lt;int&gt; s3({1,2,3});     // \u521d\u59cb\u5316\u5217\u8868\uff0c1\u4e3a\u6808\u5e95\uff0c3\u4e3a\u6808\u9876\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_48","title":"\u589e\u52a0","text":"C++<pre><code>s1.push(6);                 // \u5165\u6808\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_49","title":"\u5220\u9664","text":"C++<pre><code>s1.pop();                   // \u51fa\u6808\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_50","title":"\u4fee\u6539","text":"<p>\u53ea\u80fd\u901a\u8fc7\u5165\u6808\u548c\u51fa\u6808\u6765\u4fee\u6539\u6808\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B/#_51","title":"\u67e5\u627e","text":"C++<pre><code>// \u904d\u5386\u6808 \u4f1a\u6e05\u7a7a\u6808\nwhile(!s1.empty()){\n    cout&lt;&lt;s1.top()&lt;&lt;\" \";\n    s1.pop();\n}\n\ns1.empty();                 // \u5224\u65ad\u6808\u662f\u5426\u4e3a\u7a7a\ns1.size();                  // \u8fd4\u56de\u6808\u5927\u5c0f\ns1.top();                   // \u8fd4\u56de\u6808\u9876\u5143\u7d20\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#-queue","title":"\u3010-\u3011queue","text":"<p>\u961f\u5217</p>"},{"location":"src/more/old/CPP/C%2B%2B/#_52","title":"\u521b\u5efa","text":"C++<pre><code>queue&lt;int&gt; q1;              // \u7a7a\u961f\u5217\nqueue&lt;int&gt; q2(q1);          // \u62f7\u8d1d\u6784\u9020\u51fd\u6570\nqueue&lt;int&gt; q3({1,2,3});     // \u521d\u59cb\u5316\u5217\u8868\uff0c1\u4e3a\u961f\u5934\uff0c3\u4e3a\u961f\u5c3e\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_53","title":"\u589e\u52a0","text":"C++<pre><code>q1.push(6);                 // \u5165\u961f\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_54","title":"\u5220\u9664","text":"C++<pre><code>q1.pop();                   // \u51fa\u961f\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_55","title":"\u4fee\u6539","text":"<p>\u53ea\u80fd\u901a\u8fc7\u5165\u961f\u548c\u51fa\u961f\u6765\u4fee\u6539\u961f\u5217\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B/#_56","title":"\u67e5\u627e","text":"C++<pre><code>// \u904d\u5386\u961f\u5217 \u4f1a\u6e05\u7a7a\u961f\u5217\nwhile(!q1.empty()){\n    cout&lt;&lt;q1.front()&lt;&lt;\" \";\n    q1.pop();\n}\n\nq1.empty();                 // \u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a\nq1.size();                  // \u8fd4\u56de\u961f\u5217\u5927\u5c0f\nq1.front();                 // \u8fd4\u56de\u961f\u5934\u5143\u7d20\nq1.back();                  // \u8fd4\u56de\u961f\u5c3e\u5143\u7d20\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#-priority_queue","title":"\u3010-\u3011priority_queue","text":"<p>\u4f18\u5148\u961f\u5217 (\u5806)</p> C++<pre><code>#include &lt;queue&gt;   // priority_queue \u5305\u542b\u5728 queue \u4e2d\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_57","title":"\u521b\u5efa","text":"C++<pre><code>priority_queue&lt;int&gt; p1;     // \u7a7a\u4f18\u5148\u961f\u5217\uff0c\u9ed8\u8ba4\u5927\u9876\u5806\npriority_queue&lt;int, vector&lt;int&gt;, greater&lt;int&gt;&gt; a;   // \u5c0f\u9876\u5806\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_58","title":"\u589e\u52a0","text":"C++<pre><code>p1.push(6);                 // \u5165\u961f\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_59","title":"\u5220\u9664","text":"C++<pre><code>p1.pop();                   // \u51fa\u961f\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_60","title":"\u4fee\u6539","text":"<p>\u6539\u4e0d\u4e86\u4e00\u70b9\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B/#_61","title":"\u67e5\u627e","text":"C++<pre><code>// \u904d\u5386\u4f18\u5148\u961f\u5217 \u4f1a\u6e05\u7a7a\u4f18\u5148\u961f\u5217\n// \u5982\u679c\u662f\u5927\u9876\u5806\uff0c\u904d\u5386\u51fa\u6765\u7684\u662f\u964d\u5e8f\u5e8f\u5217\nwhile(!p1.empty()){ \n    cout&lt;&lt;p1.top()&lt;&lt;\" \";\n    p1.pop();\n}\n\np1.empty();                 // \u5224\u65ad\u4f18\u5148\u961f\u5217\u662f\u5426\u4e3a\u7a7a\np1.size();                  // \u8fd4\u56de\u4f18\u5148\u961f\u5217\u5927\u5c0f\np1.top();                   // \u8fd4\u56de\u961f\u5934\u5143\u7d20\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_62","title":"\u5173\u8054\u5f0f\u5bb9\u5668","text":"<p>\u6240\u8c13\u5173\u8054\u5f0f\u5bb9\u5668\uff0c\u5c31\u662f\u5c06\u6570\u636e\u5143\u7d20\u7ec4\u7ec7\u6210\u952e\u503c\u5bf9\u7684\u5bb9\u5668\u3002</p> <ul> <li>\u5143\u7d20\u6309\u7167\u4e00\u5b9a\u7684\u6392\u5e8f\u89c4\u5219\u7ec4\u7ec7\u7684\uff0c\u800c\u4e0d\u662f\u50cf\u987a\u5e8f\u5bb9\u5668\u90a3\u6837\u6309\u7167\u5143\u7d20\u7684\u63d2\u5165\u987a\u5e8f\u7ec4\u7ec7\u7684\u3002</li> <li>\u5173\u8054\u5bb9\u5668\u7684\u5143\u7d20\u7c7b\u578b\u662fpair\u7c7b\u578b\uff0cpair\u7c7b\u578b\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u952e\u503c\uff0c\u7b2c\u4e8c\u4e2a\u5143\u7d20\u662f\u5b9e\u503c\u3002</li> </ul>"},{"location":"src/more/old/CPP/C%2B%2B/#_63","title":"\u6811","text":""},{"location":"src/more/old/CPP/C%2B%2B/#bst","title":"\u4e8c\u53c9\u641c\u7d22\u6811 BST","text":""},{"location":"src/more/old/CPP/C%2B%2B/#avlt","title":"\u5e73\u8861\u4e8c\u53c9\u6811 AVLT","text":""},{"location":"src/more/old/CPP/C%2B%2B/#bbst","title":"\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811 BBST","text":""},{"location":"src/more/old/CPP/C%2B%2B/#rbt","title":"\u7ea2\u9ed1\u6811 RBT","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_64","title":"\u6709\u5e8f","text":"<p>map \u548c set \u5e95\u5c42\u5b9e\u73b0\u662f \u7ea2\u9ed1\u6811\uff0c\u6240\u4ee5\u5176\u5143\u7d20\u662f\u6709\u5e8f\u7684\u3002</p> map set \u552f\u4e00 map set \u53ef\u91cd multimap multiset"},{"location":"src/more/old/CPP/C%2B%2B/#set","title":"set","text":""},{"location":"src/more/old/CPP/C%2B%2B/#multiset","title":"multiset","text":""},{"location":"src/more/old/CPP/C%2B%2B/#map","title":"map","text":""},{"location":"src/more/old/CPP/C%2B%2B/#multimap","title":"multimap","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_65","title":"\u65e0\u5e8f","text":"<p>unordered_map \u548c unordered_set \u5e95\u5c42\u5b9e\u73b0\u662f \u54c8\u5e0c\u8868\uff0c\u6240\u4ee5\u5176\u5143\u7d20\u662f\u65e0\u5e8f\u7684\u3002</p> unordered_map unordered_set \u552f\u4e00 unordered_map unordered_set \u53ef\u91cd unordered_multimap unordered_multiset"},{"location":"src/more/old/CPP/C%2B%2B/#unordered_set","title":"unordered_set","text":""},{"location":"src/more/old/CPP/C%2B%2B/#unordered_multiset","title":"unordered_multiset","text":""},{"location":"src/more/old/CPP/C%2B%2B/#unordered_map","title":"unordered_map","text":""},{"location":"src/more/old/CPP/C%2B%2B/#unordered_multimap","title":"unordered_multimap","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_66","title":"\u53c2\u8003","text":""},{"location":"src/more/old/CPP/C%2B%2B/#set_1","title":"set","text":"<p>\u96c6\u5408</p> <p>set \u7684\u5143\u7d20\u662f\u552f\u4e00\u7684\uff0c\u4e0d\u80fd\u91cd\u590d\u3002</p> <p>set \u7684\u5e95\u5c42\u5b9e\u73b0\u662f\u7ea2\u9ed1\u6811\uff0c\u6240\u4ee5 set \u7684\u5143\u7d20\u662f\u6709\u5e8f\u7684\u3002</p> C++<pre><code>#include &lt;set&gt;\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_67","title":"\u521b\u5efa","text":"C++<pre><code>set&lt;int&gt; s1;                // \u5143\u7d20\u7c7b\u578b\u662f int\nset&lt;pair&lt;string, int&gt;&gt; s2;  // \u5143\u7d20\u7c7b\u578b\u662f pair \u7c7b\u578b\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_68","title":"\u589e\u52a0","text":"C++<pre><code>s.insert(6);                // \u63d2\u5165\u5143\u7d20 6\ns2.insert({\"hello\", 6});    // \u63d2\u5165\u5143\u7d20 {\"hello\", 6}\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_69","title":"\u5220\u9664","text":"C++<pre><code>s.clear();                      // \u6e05\u7a7a\u6240\u6709\u5143\u7d20\ns.erase(6);                     // \u5220\u9664\u5143\u7d20 6\ns2.erase({\"hello\", 6});         // \u5220\u9664\u5143\u7d20 {\"hello\", 6}\ns.erase(s.begin());             // \u5220\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20\ns.erase(s.begin(), s.end());    // \u5220\u9664\u6240\u6709\u5143\u7d20\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_70","title":"\u4fee\u6539","text":"<p>\u6539\u4e0d\u4e86\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B/#_71","title":"\u67e5\u627e","text":"C++<pre><code>s.find(6);                      // \u67e5\u627e\u5143\u7d20 6 \u8fd4\u56de\u8fed\u4ee3\u5668\ns.count(6);                     // \u67e5\u627e\u5143\u7d20 6 \u7684\u4e2a\u6570\ns.lower_bound(6);               // \u67e5\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e 6 \u7684\u5143\u7d20 \u8fd4\u56de\u8fed\u4ee3\u5668\ns.upper_bound(6);               // \u67e5\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e 6 \u7684\u5143\u7d20 \u8fd4\u56de\u8fed\u4ee3\u5668\n\nauto it = s.equal_range(6);     // \u67e5\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e 6 \u548c \u7b2c\u4e00\u4e2a\u5927\u4e8e 6 \u7684\u5143\u7d20 \u8fd4\u56de\u8fed\u4ee3\u5668\ncout&lt;&lt;(*it.first)&lt;&lt;\" \"&lt;&lt;(*it.second);\n\n// \u904d\u5386\nfor(auto it = s.begin(); it != s.end(); it++) cout&lt;&lt;(*it)&lt;&lt;\" \";\nfor(auto i: s) cout&lt;&lt;i&lt;&lt;\" \";\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#unordered_set_1","title":"unordered_set","text":"<p>\u65e0\u5e8f\u96c6\u5408</p> <p>unordered_set \u7684\u5143\u7d20\u662f\u552f\u4e00\u7684\uff0c\u4e0d\u80fd\u91cd\u590d\u3002</p> <p>unordered_set \u7684\u5e95\u5c42\u5b9e\u73b0\u662f\u54c8\u5e0c\u8868\uff0c\u6240\u4ee5 unordered_set \u7684\u5143\u7d20\u662f\u65e0\u5e8f\u7684\u3002</p> C++<pre><code>#include &lt;unordered_set&gt;\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_72","title":"\u521b\u5efa","text":"C++<pre><code>unordered_set&lt;int&gt; s1;                // \u5143\u7d20\u7c7b\u578b\u662f int\nunordered_set&lt;pair&lt;string, int&gt;&gt; s2;  // \u5143\u7d20\u7c7b\u578b\u662f pair \u7c7b\u578b\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_73","title":"\u589e\u52a0","text":"C++<pre><code>s.insert(6);                // \u63d2\u5165\u5143\u7d20 6\ns2.insert({\"hello\", 6});    // \u63d2\u5165\u5143\u7d20 {\"hello\", 6}\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_74","title":"\u5220\u9664","text":"C++<pre><code>s.clear();                      // \u6e05\u7a7a\u6240\u6709\u5143\u7d20\ns.erase(6);                     // \u5220\u9664\u5143\u7d20 6\ns2.erase({\"hello\", 6});         // \u5220\u9664\u5143\u7d20 {\"hello\", 6}\ns.erase(s.begin());             // \u5220\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20\ns.erase(s.begin(), s.end());    // \u5220\u9664\u6240\u6709\u5143\u7d20\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_75","title":"\u4fee\u6539","text":"<p>\u6539\u4e0d\u4e86\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B/#_76","title":"\u67e5\u627e","text":"C++<pre><code>s.find(6);                      // \u67e5\u627e\u5143\u7d20 6 \u8fd4\u56de\u8fed\u4ee3\u5668\ns.count(6);                     // \u67e5\u627e\u5143\u7d20 6 \u7684\u4e2a\u6570\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#multiset_1","title":"multiset","text":"<p>\u53ef\u91cd\u96c6\u5408</p> <p>multiset \u7684\u5143\u7d20\u662f\u53ef\u4ee5\u91cd\u590d\u7684\u3002</p> <p>multiset \u7684\u5e95\u5c42\u5b9e\u73b0\u662f\u7ea2\u9ed1\u6811\uff0c\u6240\u4ee5 multiset \u7684\u5143\u7d20\u662f\u6709\u5e8f\u7684\u3002</p> C++<pre><code>#include &lt;set&gt;\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_77","title":"\u521b\u5efa","text":"C++<pre><code>multiset&lt;int&gt; s1;                // \u5143\u7d20\u7c7b\u578b\u662f int\nmultiset&lt;pair&lt;string, int&gt;&gt; s2;  // \u5143\u7d20\u7c7b\u578b\u662f pair \u7c7b\u578b\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_78","title":"\u589e\u52a0","text":"C++<pre><code>s.insert(6);                // \u63d2\u5165\u5143\u7d20 6\ns2.insert({\"hello\", 6});    // \u63d2\u5165\u5143\u7d20 {\"hello\", 6}\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_79","title":"\u5220\u9664","text":"C++<pre><code>s.clear();                      // \u6e05\u7a7a\u6240\u6709\u5143\u7d20\ns.erase(6);                     // \u5220\u9664\u5143\u7d20 6\ns2.erase({\"hello\", 6});         // \u5220\u9664\u5143\u7d20 {\"hello\", 6}\ns.erase(s.begin());             // \u5220\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20\ns.erase(s.begin(), s.end());    // \u5220\u9664\u6240\u6709\u5143\u7d20\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_80","title":"\u4fee\u6539","text":"<p>\u6539\u4e0d\u4e86\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B/#_81","title":"\u67e5\u627e","text":"C++<pre><code>s.find(6);                      // \u67e5\u627e\u5143\u7d20 6 \u8fd4\u56de\u8fed\u4ee3\u5668\ns.count(6);                     // \u67e5\u627e\u5143\u7d20 6 \u7684\u4e2a\u6570\ns.lower_bound(6);               // \u67e5\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e 6 \u7684\u5143\u7d20 \u8fd4\u56de\u8fed\u4ee3\u5668\ns.upper_bound(6);               // \u67e5\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e 6 \u7684\u5143\u7d20 \u8fd4\u56de\u8fed\u4ee3\u5668\n\ns.equal_range(6);               // \u67e5\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e 6 \u548c \u7b2c\u4e00\u4e2a\u5927\u4e8e 6 \u7684\u5143\u7d20 \u8fd4\u56de\u8fed\u4ee3\u5668\n// \u5982\u679c\u6ca1\u6709\u5927\u4e8e\u7b49\u4e8e 6 \u7684\u5143\u7d20\uff0c\u90a3\u4e48\u7b2c\u4e00\u4e2a\u8fed\u4ee3\u5668\u6307\u5411\u7b2c\u4e00\u4e2a\u5927\u4e8e 6 \u7684\u5143\u7d20\uff0c\u8fd4\u56de\u7684\u4e24\u4e2a\u8fed\u4ee3\u5668\u76f8\u7b49\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#unordered_multiset_1","title":"unordered_multiset","text":"C++<pre><code>#include &lt;unordered_set&gt;\n</code></pre> <p>\u65e0\u5e8f\u53ef\u91cd\u96c6\u5408</p> <p>unordered_multiset \u7684\u5143\u7d20\u662f\u53ef\u4ee5\u91cd\u590d\u7684\u3002</p> <p>unordered_multiset \u7684\u5e95\u5c42\u5b9e\u73b0\u662f\u54c8\u5e0c\u8868\uff0c\u6240\u4ee5 unordered_multiset \u7684\u5143\u7d20\u662f\u65e0\u5e8f\u7684\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B/#_82","title":"\u521b\u5efa","text":"C++<pre><code>multiset&lt;int&gt; s1;                // \u5143\u7d20\u7c7b\u578b\u662f int\nmultiset&lt;pair&lt;string, int&gt;&gt; s2;  // \u5143\u7d20\u7c7b\u578b\u662f pair \u7c7b\u578b\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B/#_83","title":"\u589e\u52a0","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_84","title":"\u5220\u9664","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_85","title":"\u4fee\u6539","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_86","title":"\u67e5\u627e","text":""},{"location":"src/more/old/CPP/C%2B%2B/#map_1","title":"map","text":"<p>\u6620\u5c04</p>"},{"location":"src/more/old/CPP/C%2B%2B/#_87","title":"\u521b\u5efa","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_88","title":"\u589e\u52a0","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_89","title":"\u5220\u9664","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_90","title":"\u4fee\u6539","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_91","title":"\u67e5\u627e","text":""},{"location":"src/more/old/CPP/C%2B%2B/#unordered_map_1","title":"unordered_map","text":"<p>\u65e0\u5e8f\u6620\u5c04</p>"},{"location":"src/more/old/CPP/C%2B%2B/#_92","title":"\u521b\u5efa","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_93","title":"\u589e\u52a0","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_94","title":"\u5220\u9664","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_95","title":"\u4fee\u6539","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_96","title":"\u67e5\u627e","text":""},{"location":"src/more/old/CPP/C%2B%2B/#multimap_1","title":"multimap","text":"<p>\u53ef\u91cd\u6620\u5c04</p>"},{"location":"src/more/old/CPP/C%2B%2B/#_97","title":"\u521b\u5efa","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_98","title":"\u589e\u52a0","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_99","title":"\u5220\u9664","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_100","title":"\u4fee\u6539","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_101","title":"\u67e5\u627e","text":""},{"location":"src/more/old/CPP/C%2B%2B/#unordered_multimap_1","title":"unordered_multimap","text":"<p>\u65e0\u5e8f\u53ef\u91cd\u6620\u5c04</p>"},{"location":"src/more/old/CPP/C%2B%2B/#_102","title":"\u521b\u5efa","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_103","title":"\u589e\u52a0","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_104","title":"\u5220\u9664","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_105","title":"\u4fee\u6539","text":""},{"location":"src/more/old/CPP/C%2B%2B/#_106","title":"\u67e5\u627e","text":""},{"location":"src/more/old/CPP/C%2B%2B%20Socket/","title":"Index","text":""},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#_1","title":"\u5f15\u5b50","text":"<p>\u6e90\u4ee3\u7801</p> <p>TCP / IP \u5206\u5c42\u6a21\u578b\uff1a</p> \u5c42 \u534f\u8bae \u5e94\u7528\u5c42 <code>HTTP</code> <code>FTP</code> <code>...</code> \u4f20\u8f93\u5c42 <code>TCP</code> <code>UDP</code> <code>...</code> \u7f51\u7edc\u5c42 <code>IPv4</code> <code>IPv6</code> <code>...</code> \u7269\u7406\u5c42 <code>LAN</code> <code>WLAN</code> <code>...</code> <p>\u8ba1\u7b97\u673a\u7ec4\u6210\u539f\u7406\uff1a</p> \u8bbe\u5907 \u529f\u80fd \u6570\u636e\u603b\u7ebf \u4f20\u8f93\u6570\u636e IO\u8bbe\u5907 \u8f93\u5165\u8f93\u51fa \u4e3b\u5b58\u50a8\u5668 \u5b58\u50a8\u6570\u636e CPU \u8ba1\u7b97\u6570\u636e <p>\u64cd\u4f5c\u7cfb\u7edf\uff1a</p> <ul> <li> <p>\uff08\u5185\u6838\u7a7a\u95f4\uff09\u7ba1\u7406\u8ba1\u7b97\u673a\u786c\u4ef6\u8d44\u6e90\u8fdb\u884c\u7ba1\u7406\u548c\u63a7\u5236</p> </li> <li> <p>\uff08\u7528\u6237\u7a7a\u95f4\uff09\u63d0\u4f9b\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\uff0c\u4f9b\u7528\u6237\u7a0b\u5e8f\u8c03\u7528</p> </li> <li> <p>\u8fdb\u7a0b\uff1a\u4e3a\u4e86\u8ba9\u8ba1\u7b97\u673a\u80fd\u591f\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u7a0b\u5e8f\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5f15\u5165\u4e86\u8fdb\u7a0b\u7684\u6982\u5ff5</p> </li> <li> <p>\u7ebf\u7a0b\uff1a\u7ebf\u7a0b\u662f CPU \u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u8fdb\u7a0b\u662f\u8d44\u6e90\u5206\u914d\u7684\u57fa\u672c\u5355\u4f4d</p> </li> </ul> <p></p> <p>\u53c2\u8003</p> <ul> <li> <p>\u4e66\u7c4d</p> <ul> <li>\u300aLinux \u591a\u7ebf\u7a0b\u670d\u52a1\u7aef\u7f16\u7a0b\uff1a\u4f7f\u7528 muduo C++ \u7f51\u7edc\u5e93\u300b</li> <li>\u300aLinux \u9ad8\u6027\u80fd\u670d\u52a1\u5668\u7f16\u7a0b\u300b \u6e38\u53cc</li> </ul> </li> <li> <p>\u535a\u5ba2</p> <ul> <li>30\u5929\u81ea\u5236C++\u670d\u52a1\u5668</li> <li>webServer</li> </ul> </li> </ul> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#1-io","title":"1 \u963b\u585e IO","text":"<p>\u5f53 \u8fdb\u7a0b \u53d1\u8d77 IO\u8bf7\u6c42 \u540e\uff0c\u5982\u679c \u5185\u6838 \u6ca1\u6709\u51c6\u5907\u597d\u6570\u636e\uff0c\u90a3\u4e48 \u8fdb\u7a0b \u5c06\u4e00\u76f4\u7b49\u5f85\uff0c\u76f4\u5230 \u5185\u6838 \u51c6\u5907\u597d\u6570\u636e\u4e3a\u6b62</p> <p>\u5f53\u7a0b\u5e8f\u53d1\u8d77\u53d1\u9001\u6570\u636e\u7684\u8bf7\u6c42\u65f6\uff0c\u5982\u679c\u53d1\u9001\u7f13\u51b2\u533a\u5df2\u6ee1\uff0c\u90a3\u4e48\u7a0b\u5e8f\u5c06\u4e00\u76f4\u7b49\u5f85\uff0c\u76f4\u5230\u53d1\u9001\u7f13\u51b2\u533a\u6709\u7a7a\u95f4\u4e3a\u6b62</p> <p>\u5f53\u7a0b\u5e8f\u53d1\u8d77\u63a5\u6536\u6570\u636e\u7684\u8bf7\u6c42\u65f6\uff0c\u5982\u679c\u63a5\u6536\u7f13\u51b2\u533a\u4e3a\u7a7a\uff0c\u90a3\u4e48\u7a0b\u5e8f\u5c06\u4e00\u76f4\u7b49\u5f85\uff0c\u76f4\u5230\u63a5\u6536\u7f13\u51b2\u533a\u6709\u6570\u636e\u4e3a\u6b62</p>"},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#tcp","title":"TCP","text":"<p>TCP \u901a\u4fe1\u6a21\u578b</p> <p>socket \u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u800c\u4e0d\u662f\u4e00\u79cd\u534f\u8bae\uff0c\u5176\u62bd\u8c61\u5728\u5e94\u7528\u5c42\u4e0e\u4f20\u8f93\u5c42\u4e4b\u95f4</p> \u51fd\u6570 \u670d\u52a1\u7aef 1 <code>socket()</code> \u521b\u5efa socket 2 <code>bind()</code> \u7ed1\u5b9a ip + port \u81f3\u8be5 socket \u4e0a 3 <code>listen()</code> \u76d1\u542c\u8be5 \u7aef\u53e3 4 <code>accept()</code> \u63a5\u53d7\u6765\u81ea\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u8bf7\u6c42 5 <code>recv()</code> \u4ece socket \u4e2d\u8bfb\u53d6\u5b57\u7b26 6 <code>close()</code> \u5173\u95ed socket \u51fd\u6570 \u5ba2\u6237\u7aef 1 <code>socket()</code> \u521b\u5efa socket 2 <code>connect()</code> \u8fde\u63a5\u6307\u5b9a ip + port 3 <code>send()</code> \u53d1\u9001\u6d88\u606f 4 <code>close()</code> \u5173\u95ed socket"},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#server","title":"server","text":"<ol> <li> <p>\u521b\u5efa\u5957\u63a5\u5b57 <code>socket()</code> C++<pre><code>#include &lt;sys/socket.h&gt; // socket()\n</code></pre></p> C++<pre><code>int server = socket(AF_INET, SOCK_STREAM, 0); // \u521b\u5efa\u5957\u63a5\u5b57\n</code></pre> <p>\u5f53 <code>socket()</code> \u51fd\u6570\u8c03\u7528\u6210\u529f\u65f6\uff0c\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5373 <code>socket</code>\uff0c\u5f53\u8c03\u7528\u5931\u8d25\u65f6\uff0c\u8fd4\u56de <code>-1</code></p> <ul> <li><code>AF_INET</code>\uff1aIPv4</li> <li><code>SOCK_STREAM</code>\uff1aTCP</li> <li><code>0</code>\uff1a\u81ea\u52a8\u9009\u62e9\u534f\u8bae\uff0c\u8fd9\u91cc\u662f <code>TCP</code> \u534f\u8bae</li> </ul> </li> </ol> <p></p> <ol> <li> <p>\u7ed1\u5b9a ip + port <code>bind()</code> C++<pre><code>#include &lt;cstring&gt;     // memset()\n#include &lt;arpa/inet.h&gt; // sockaddr\n</code></pre></p> C++<pre><code>// \u670d\u52a1\u7aef\u5730\u5740\nsockaddr_in server_addr;\nmemset(&amp;server_addr, '\\0', sizeof server_addr);\n// \u7ed9\u5730\u5740\u8d4b\u503c\nserver_addr.sin_family      = AF_INET;\nserver_addr.sin_addr.s_addr = inet_addr(\"0.0.0.0\");\nserver_addr.sin_port        = htons(10086);\n// \u7ed1\u5b9a\nbind(server, (sockaddr*)&amp;server_addr, sizeof server_addr);\n</code></pre> <p>\u5f53 <code>bind()</code> \u51fd\u6570\u8c03\u7528\u6210\u529f\u65f6\uff0c\u8fd4\u56de <code>0</code>\uff0c\u5f53\u8c03\u7528\u5931\u8d25\u65f6\uff0c\u8fd4\u56de <code>-1</code></p> <ul> <li><code>sockaddr_in</code>\uff1aIPv4 \u5957\u63a5\u5b57\u5730\u5740\u7ed3\u6784\u4f53</li> <li><code>sin_family</code>\uff1a\u5730\u5740\u65cf\uff0c\u8fd9\u91cc\u662f IPv4</li> <li><code>sin_addr.s_addr</code>\uff1aIPv4 \u5730\u5740</li> <li><code>sin_port</code>\uff1a\u7aef\u53e3\u53f7</li> </ul> <p></p> <p>\u4e3a\u4ec0\u4e48\u8981\u5f3a\u5236\u8f6c\u6362\u4e3a <code>sockaddr</code>\uff1f  \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528 <code>sockaddr_in</code> \u800c\u4e0d\u662f <code>sockaddr</code>\uff1f * <code>sockaddr</code> \u662f\u4e00\u4e2a\u901a\u7528\u7684\u5957\u63a5\u5b57\u5730\u5740\u7ed3\u6784\u4f53\uff0c\u53ef\u4ee5\u7528\u4e8e\u4efb\u4f55\u7c7b\u578b\u7684\u5957\u63a5\u5b57 * <code>sockaddr_in</code> \u662f\u4e00\u4e2a IPv4 \u5957\u63a5\u5b57\u5730\u5740\u7ed3\u6784\u4f53\uff0c\u53ea\u80fd\u7528\u4e8e IPv4 \u5957\u63a5\u5b57 * <code>sockaddr_in</code> \u662f <code>sockaddr</code> \u7684\u5b50\u7c7b\uff0c\u53ef\u4ee5\u5f3a\u5236\u8f6c\u6362\u4e3a <code>sockaddr</code> * \u9664\u4e86 <code>sockaddr_in</code>\uff0c\u8fd8\u6709 <code>sockaddr_in6</code>\u3001<code>sockaddr_un</code> \u7b49</p> </li> </ol> <p></p> <ol> <li> <p>\u76d1\u542c <code>listen()</code>      &gt; \u6210\u529f\uff1a\u8fd4\u56de <code>0</code>     &gt; \u5931\u8d25\uff1a\u8fd4\u56de <code>-1</code></p> C++<pre><code>// \u76d1\u542c\nlisten(server, 0);\n</code></pre> <ul> <li><code>0</code>\uff1a\u7b49\u5f85\u961f\u5217\u7684\u6700\u5927\u957f\u5ea6\uff0c\u76ee\u524d\u65e0\u9700\u5173\u6ce8</li> </ul> </li> </ol> <p></p> <ol> <li> <p>\u63a5\u53d7\u8fde\u63a5\u8bf7\u6c42 <code>accept()</code>      &gt; \u6210\u529f\uff1a\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c<code>fd &gt; 0</code>     &gt; \u5931\u8d25\uff1a\u8fd4\u56de <code>-1</code></p> C++<pre><code>sockaddr_in client_addr;\nsocklen_t   client_addr_len = sizeof client_addr;\nint client = accept(server, (sockaddr*)&amp;client_addr, &amp;client_addr_len);\n</code></pre> <ul> <li><code>socklen_t</code>\uff1a<code>sockaddr</code> \u7684\u957f\u5ea6\u7c7b\u578b</li> </ul> <p>\u4e3a\u4ec0\u4e48\u8fd9\u91cc\u9700\u8981\u4f20\u5165 <code>&amp;client_addr_len</code> \u800c\u4e0d\u662f <code>client_addr_len</code>\uff1f * <code>accept()</code> \u51fd\u6570\u4f1a\u4fee\u6539 <code>client_addr_len</code> \u7684\u503c\uff0c\u6240\u4ee5\u9700\u8981\u4f20\u5165\u6307\u9488</p> </li> </ol> <p></p> <ol> <li> <p>\u63a5\u6536\u6d88\u606f <code>recv()</code>      &gt; \u6210\u529f\uff1a\u8fd4\u56de\u63a5\u6536\u7684\u5b57\u8282\u6570     &gt; \u9519\u8bef\uff1a\u8fd4\u56de <code>-1</code>     &gt; \u5931\u8d25\uff1a\u8fd4\u56de <code>0</code>\uff0c\u5bf9\u7aef\u5173\u95ed\u8fde\u63a5</p> C++<pre><code>char buf[1024];\nmemset(buf, '\\0', sizeof buf);\nrecv(server, buf, sizeof buf, 0);\n</code></pre> <p>\u901a\u5e38\uff0c<code>recv()</code> \u51fd\u6570\u8fd4\u56de\u63a5\u6536\u5230\u7684\u5b57\u8282\u6570\uff0c\u5bf9\u7aef\u5173\u95ed\u8fd4\u56de <code>0</code>\uff0c\u5176\u4f59\u8fd4\u56de <code>-1</code></p> </li> </ol> <p></p> <ol> <li> <p>\u5173\u95ed\u5957\u63a5\u5b57 <code>close()</code></p> C++<pre><code>close(server);\n</code></pre> </li> </ol> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#client","title":"client","text":"<ol> <li> <p>\u521b\u5efa\u5957\u63a5\u5b57 <code>socket()</code></p> </li> <li> <p>\u8fde\u63a5\u6307\u5b9a ip + port <code>connect()</code>      &gt; \u6210\u529f\uff1a\u8fd4\u56de <code>0</code>     &gt; \u5931\u8d25\uff1a\u8fd4\u56de <code>-1</code></p> C++<pre><code>sockaddr_in server_addr;\nmemset(&amp;server_addr, '\\0', sizeof server_addr);\n// \u7ed9\u5730\u5740\u8d4b\u503c\nserver_addr.sin_family      = AF_INET;\nserver_addr.sin_addr.s_addr = inet_addr(\"127.0.0.1\");\nserver_addr.sin_port        = htons(10086);\n// \u8fde\u63a5\nconnect(client, (sockaddr*)&amp;server_addr, sizeof server_addr);\n</code></pre> </li> <li> <p>\u53d1\u9001\u6d88\u606f <code>send()</code>      &gt; \u6210\u529f\uff1a\u8fd4\u56de\u53d1\u9001\u7684\u5b57\u8282\u6570     &gt; \u9519\u8bef\uff1a\u8fd4\u56de <code>-1</code>     &gt; \u5931\u8d25\uff1a\u8fd4\u56de <code>0</code>\uff0c\u5bf9\u7aef\u5173\u95ed\u8fde\u63a5     C++<pre><code>char buf[1024];\nmemset(buf, '\\0', sizeof buf);\nscanf(\"%s\", buf);\nsend(client, buf, strlen(buf), 0);\n</code></pre></p> </li> <li> <p>\u5173\u95ed\u5957\u63a5\u5b57 <code>close()</code></p> C++<pre><code>close(client);\n</code></pre> </li> </ol> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#send-recv","title":"send \u548c recv","text":"<ul> <li><code>&gt; 0</code> \u53d1\u9001\u6216\u63a5\u6536\u7684\u5b57\u8282\u6570</li> <li><code>= 0</code> \u5bf9\u7aef\u5df2\u7ecf\u5173\u95ed\u8fde\u63a5</li> <li><code>&lt; 0</code> \u51fa\u73b0\u4e86\u9519\u8bef</li> </ul>"},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#tcp_1","title":"TCP \u4e09\u63e1\u56db\u6325","text":"<ul> <li> <p>\u8fde\u63a5</p> <ol> <li><code>\u5ba2\u6237\u7aef</code> \u8bf7\u6c42\u8fde\u63a5\uff0c<code>connect</code> \u963b\u585e</li> <li><code>\u670d\u52a1\u7aef</code> \u6536\u5230\u8bf7\u6c42\uff0c<code>accept</code> \u963b\u585e\uff0c\u540c\u65f6\u5411 <code>\u5ba2\u6237\u7aef</code> \u53d1\u9001\u786e\u8ba4\u4fe1\u606f</li> <li><code>\u5ba2\u6237\u7aef</code> \u786e\u8ba4\uff1b<code>connect</code> \u8fd4\u56de\uff1b\u540c\u65f6\u53d1\u9001\u4fe1\u606f\uff1b<code>accept</code> \u8fd4\u56de</li> </ol> </li> <li> <p>\u65ad\u5f00</p> <ol> <li><code>\u5ba2\u6237\u7aef</code> \u8bf7\u6c42\u65ad\u5f00\uff0c<code>close</code> \u963b\u585e</li> <li><code>\u670d\u52a1\u7aef</code> \u53d1\u9001\u786e\u8ba4\u4fe1\u606f\uff08\u6211\u5df2\u77e5\u6653\uff09</li> <li><code>\u670d\u52a1\u7aef</code> \u53d1\u9001\u8bf7\u6c42\u4fe1\u606f\uff08\u8bf7\u6c42\u65ad\u5f00\uff09\uff0c<code>close</code> \u963b\u585e</li> <li><code>\u5ba2\u6237\u7aef</code> \u6536\u5230\u786e\u8ba4\u4fe1\u606f\uff0c\u53d1\u9001\u786e\u8ba4\u4fe1\u606f\uff0c\u4fe9 <code>close</code> \u5148\u540e\u8fd4\u56de</li> </ol> </li> <li> <p>\u8fde\u63a5\u4e4b\u540e</p> <ol> <li><code>\u5ba2\u6237\u7aef</code> \u53d1\u9001\u4fe1\u606f\uff0c<code>send</code> \u963b\u585e</li> <li><code>\u670d\u52a1\u7aef</code> \u63a5\u6536\u4fe1\u606f\uff0c<code>recv</code> \u963b\u585e</li> <li><code>\u670d\u52a1\u7aef</code> \u53d1\u9001\u4fe1\u606f\uff0c<code>send</code> \u963b\u585e</li> <li><code>\u5ba2\u6237\u7aef</code> \u63a5\u6536\u4fe1\u606f\uff0c<code>recv</code> \u963b\u585e</li> <li>\u91cd\u590d 1-4\uff0c\u76f4\u5230 <code>\u5ba2\u6237\u7aef</code> \u6216 <code>\u670d\u52a1\u7aef</code> \u65ad\u5f00\u8fde\u63a5</li> </ol> </li> </ul> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#udp","title":"UDP","text":"<p>UDP \u901a\u4fe1\u6a21\u578b</p> \u51fd\u6570 \u670d\u52a1\u7aef 1 <code>socket()</code> \u521b\u5efa socket 2 <code>bind()</code> \u7ed1\u5b9a ip + port \u81f3\u8be5 socket \u4e0a 3 <code>recvfrom()</code> \u63a5\u6536\u6765\u81ea\u5ba2\u6237\u7aef\u7684\u6d88\u606f 4 <code>close()</code> \u5173\u95ed socket \u51fd\u6570 \u5ba2\u6237\u7aef 1 <code>socket()</code> \u521b\u5efa socket 2 <code>sendto()</code> \u53d1\u9001\u6d88\u606f 3 <code>close()</code> \u5173\u95ed socket"},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#server_1","title":"server","text":"<ol> <li> <p>\u521b\u5efa\u5957\u63a5\u5b57 <code>socket()</code></p> <p>C++<pre><code>int server = socket(AF_INET, SOCK_DGRAM, 0);    // \u521b\u5efa\u5957\u63a5\u5b57\n</code></pre> * <code>SOCK_DGRAM</code>\uff1aUDP * <code>0</code>\uff1a\u81ea\u52a8\u9009\u62e9\u534f\u8bae\uff0c\u8fd9\u91cc\u662f <code>UDP</code> \u534f\u8bae</p> </li> <li> <p>\u7ed1\u5b9a ip + port <code>bind()</code></p> C++<pre><code>// \u670d\u52a1\u7aef\u5730\u5740\nsockaddr_in server_addr;\nmemset(&amp;server_addr, '\\0', sizeof server_addr);\n// \u7ed9\u5730\u5740\u8d4b\u503c\nserver_addr.sin_family      = AF_INET;\nserver_addr.sin_addr.s_addr = inet_addr(\"0.0.0.0\");\nserver_addr.sin_port        = htons(10086);\n// \u7ed1\u5b9a\nbind(server, (sockaddr*)&amp;server_addr, sizeof server_addr);\n</code></pre> </li> <li> <p>\u63a5\u6536\u6d88\u606f <code>recvfrom()</code></p> C++<pre><code>// \u7f13\u51b2\u533a\nchar buf[1024];\nmemset(buf, '\\0', sizeof buf);\n// \u5ba2\u6237\u7aef\u5730\u5740\nsockaddr_in client_addr;\nmemset(&amp;client_addr, '\\0', sizeof client_addr);\nsocklen_t   client_addr_len = sizeof client_addr;\n// \u63a5\u6536\u6d88\u606f\nrecvfrom(server, buf, sizeof buf, 0, (sockaddr*)&amp;client_addr, &amp;client_addr_len);\n</code></pre> </li> <li> <p>\u5173\u95ed\u5957\u63a5\u5b57 <code>close()</code></p> C++<pre><code>close(server);\n</code></pre> </li> </ol>"},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#client_1","title":"client","text":"<ol> <li> <p>\u521b\u5efa\u5957\u63a5\u5b57 <code>socket()</code></p> C++<pre><code>int server = socket(AF_INET, SOCK_DGRAM, 0);    // \u521b\u5efa\u5957\u63a5\u5b57\n</code></pre> </li> <li> <p>\u53d1\u9001\u6d88\u606f <code>sendto()</code></p> C++<pre><code>// \u670d\u52a1\u7aef\u5730\u5740\nsockaddr_in server_addr;\nmemset(&amp;server_addr, '\\0', sizeof server_addr);\n// \u7ed9\u5730\u5740\u8d4b\u503c\nserver_addr.sin_family      = AF_INET;\nserver_addr.sin_addr.s_addr = inet_addr(\"127.0.0.1\");\nserver_addr.sin_port        = htons(10086);\n// \u53d1\u9001\u6d88\u606f\nchar buf[1024];\nmemset(buf, '\\0', sizeof buf);\nscanf(\"%s\", buf);\nsendto(client, buf, strlen(buf), 0, (sockaddr*)&amp;server_addr, sizeof server_addr);\n</code></pre> </li> <li> <p>\u5173\u95ed\u5957\u63a5\u5b57 <code>close()</code></p> C++<pre><code>close(client);\n</code></pre> </li> </ol> <p></p> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#boostasio","title":"Boost.Asio","text":"<p>\u76f4\u63a5\u4f7f\u7528\u5176\u63d0\u4f9b\u7684 <code>boost::asio::ip::tcp</code></p>"},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#server_2","title":"server","text":"C++<pre><code>#include &lt;boost/asio.hpp&gt;\n#include &lt;iostream&gt;\n\nusing namespace boost::asio;\n\nint main(int argc, char* argv[]){\n    // 1. \u521b\u5efa io_context \u4e0a\u4e0b\u6587\n    io_context io;\n    // \u521b\u5efa\u7aef\u70b9\n    ip::tcp::endpoint ep(ip::address::from_string(argv[1]), std::atoi(argv[2]));\n    // 2. \u521b\u5efa\u63a5\u53d7\u5668, \u5e76\u4e14\u4e0e io \u5173\u8054\n    ip::tcp::acceptor acceptor(io, ep);\n\n    while(true){\n        // 3. \u521b\u5efa\u5ba2\u6237\u7aef\u8fde\u63a5\u7528\u7684 socket\n        ip::tcp::socket socket(io);\n        // 4. \u7b49\u5f85\u5ba2\u6237\u7aef\u8fde\u63a5\n        acceptor.accept(socket);\n\n        while(true){\n            char buf[512];\n            memset(buf, '\\0', sizeof buf);\n\n            // 5. \u63a5\u6536\u6570\u636e\n            socket.read_some(buffer(buf));\n            std::cout &lt;&lt; buf &lt;&lt; std::endl;\n            // 6. \u53d1\u9001\u6570\u636e\n            std::cin.getline(buf, 512);\n            socket.write_some(buffer(buf));\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#client_2","title":"client","text":"C++<pre><code>#include &lt;boost/asio.hpp&gt;\n#include &lt;iostream&gt;\n\nusing namespace boost::asio;\n\nint main(int argc, char* argv[]){\n    // 1. \u521b\u5efa io_context \u4e0a\u4e0b\u6587\n    io_context io;\n    // 2. \u521b\u5efa socket, \u5e76\u4e14\u4e0e io \u5173\u8054\n    ip::tcp::socket socket(io);\n    // \u521b\u5efa\u7aef\u70b9\n    ip::tcp::endpoint ep(ip::address::from_string(argv[1]), std::atoi(argv[2]));\n    // 3. \u8fde\u63a5\u670d\u52a1\u5668\n    socket.connect(ep);\n\n    while(true){\n        char buf[512];\n        memset(buf, '\\0', sizeof buf);\n\n        // 4. \u53d1\u9001\u6570\u636e\n        std::cin.getline(buf, 512);\n        socket.write_some(buffer(buf));\n        // 5. \u63a5\u6536\u6570\u636e\n        socket.read_some(buffer(buf));\n        std::cout &lt;&lt; buf &lt;&lt; std::endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#2-io","title":"2 \u975e\u963b\u585e IO","text":"<p>\u5f53 \u8fdb\u7a0b \u53d1\u8d77 IO\u8bf7\u6c42 \u540e\uff0c\u5373\u4f7f \u5185\u6838 \u6ca1\u6709\u51c6\u5907\u597d\u6570\u636e\uff0c\u8fdb\u7a0b \u4e5f\u5c06\u7acb\u5373\u8fd4\u56de\uff0c\u4e0d\u4f1a\u7b49\u5f85\uff0c\u540c\u65f6 \u5185\u6838 \u4f1a\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u7801\uff0c\u544a\u8bc9 \u8fdb\u7a0b \u4e3a\u4ec0\u4e48\u6ca1\u6709\u51c6\u5907\u597d\u6570\u636e</p>"},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#_2","title":"\u975e\u963b\u585e\u8f93\u5165","text":"C++<pre><code>std::cin.sync_with_stdio(false);        // \u5173\u95ed\u540c\u6b65\nif(std::cin.rdbuf() -&gt; in_avail() &gt; 0)  // \u5982\u679c\u8f93\u5165\u7f13\u51b2\u533a\u6709\u6570\u636e\n    std::getline(std::cin, s);          // \u8bfb\u53d6\u6570\u636e\n</code></pre>"},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#c2s","title":"c2s","text":"<p>\u6b64\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 c2s \u901a\u4fe1\u6a21\u578b\uff1a \u591a\u4e2a \u5ba2\u6237\u7aef\u53ef\u4ee5\u4e0e \u4e00\u4e2a \u670d\u52a1\u7aef \u6536\u53d1\u4efb\u610f\u6761 \u6d88\u606f</p> <p><code>server</code>\uff1a</p> <ol> <li>\u521b\u5efa\u5957\u63a5\u5b57 <code>socket()</code></li> <li>\u7ed1\u5b9a ip + port <code>bind()</code></li> <li>\u76d1\u542c <code>listen()</code></li> <li> <p>\u8bbe\u7f6e\u5957\u63a5\u5b57\u4e3a\u975e\u963b\u585e <code>fcntl()</code> C++<pre><code>#include &lt;fcntl.h&gt;      // fcntl()\n</code></pre> C++<pre><code>fcntl(server, F_SETFL, O_NONBLOCK);\n</code></pre></p> <ul> <li><code>fcntl()</code>\uff1a\u63a7\u5236\u6587\u4ef6\u63cf\u8ff0\u7b26\u5c5e\u6027 <code>int fcntl(int fd, int cmd, ... /* arg */ );</code><ul> <li><code>fd</code>\uff1a\u6587\u4ef6\u63cf\u8ff0\u7b26</li> <li><code>cmd</code>\uff1a\u64cd\u4f5c\u547d\u4ee4\uff0c\u5bf9 <code>fd</code> \u8fdb\u884c\u64cd\u4f5c<ul> <li><code>F_SETFL</code>\uff1a\u8bbe\u7f6e\u6587\u4ef6\u63cf\u8ff0\u7b26\u72b6\u6001\u6807\u5fd7</li> <li><code>F_GETFL</code>\uff1a\u83b7\u53d6\u6587\u4ef6\u63cf\u8ff0\u7b26\u72b6\u6001\u6807\u5fd7</li> </ul> </li> <li><code>arg</code>\uff1a\u64cd\u4f5c\u547d\u4ee4\u7684\u53c2\u6570\uff0c\u6839\u636e <code>cmd</code> \u7684\u4e0d\u540c\u800c\u4e0d\u540c<ul> <li><code>O_NONBLOCK</code>\uff1a\u975e\u963b\u585e</li> <li><code>O_ASYNC</code>\uff1a\u5f02\u6b65</li> <li><code>O_SYNC</code>\uff1a\u540c\u6b65</li> </ul> </li> </ul> </li> </ul> </li> <li> <p>\u5faa\u73af\u63a5\u53d7\u8fde\u63a5\u8bf7\u6c42 <code>accept()</code></p> </li> <li>\u5faa\u73af\u63a5\u6536 <code>recv()</code> \u548c\u53d1\u9001 <code>send()</code> \u6d88\u606f</li> <li>\u5173\u95ed\u5957\u63a5\u5b57 <code>close()</code></li> </ol> <p><code>client</code>\uff1a</p> <ol> <li>\u521b\u5efa\u5957\u63a5\u5b57 <code>socket()</code></li> <li>\u8fde\u63a5\u6307\u5b9a ip + port <code>connect()</code></li> <li>\u8bbe\u7f6e\u5957\u63a5\u5b57\u4e3a\u975e\u963b\u585e <code>fcntl()</code></li> <li>\u5faa\u73af\u53d1\u9001 <code>send()</code> \u548c\u63a5\u6536 <code>recv()</code> \u6d88\u606f</li> <li>\u5173\u95ed\u5957\u63a5\u5b57 <code>close()</code></li> </ol> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#echo-server","title":"echo server","text":"<p>echo server\uff0c\u5373\u5ba2\u6237\u7aef\u53d1\u9001\u4ec0\u4e48\uff0c\u670d\u52a1\u7aef\u5c31\u56de\u590d\u4ec0\u4e48 \u5728 c2s \u7684\u57fa\u7840\u4e0a\uff0c\u521d\u6b65\u5c1d\u8bd5\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684\u601d\u60f3\u5b9e\u73b0\uff1a</p> <ul> <li><code>SockAddr</code>\uff1a\u5957\u63a5\u5b57\u5730\u5740\u7c7b</li> <li><code>Event</code>\uff1a\u4e8b\u4ef6\u7c7b\uff0c\u5305\u542b\u4e8b\u4ef6\u5904\u7406\u51fd\u6570</li> <li><code>Acceptor</code>\uff1a\u63a5\u6536\u5668\u7c7b</li> </ul> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#http-server","title":"http server","text":"<p>\u5728 echo server \u4e2d\uff0c\u4f7f\u7528 deal \u51fd\u6570\u5904\u7406\u63a5\u6536\u5230\u7684\u6d88\u606f\uff0c\u5982\u679c\u60f3\u5904\u7406 http \u8bf7\u6c42\uff0c\u53ea\u9700\u8981\u91cd\u5199 deal \u51fd\u6570\u5373\u53ef\uff1a * \u83b7\u53d6 http \u8bf7\u6c42\u7684\u8bf7\u6c42 * \u89e3\u6790 http \u8bf7\u6c42\u7684\u8bf7\u6c42 * \u6784\u9020 http \u54cd\u5e94\u7684\u54cd\u5e94 * \u53d1\u9001 http \u54cd\u5e94\u7684\u54cd\u5e94</p> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#c2c","title":"c2c","text":"<p>\u4e4b\u524d\u7684 c2s \u901a\u4fe1\u6a21\u578b\uff0c\u662f\u591a\u4e2a\u5ba2\u6237\u7aef\u4e0e\u4e00\u4e2a\u670d\u52a1\u7aef\u6536\u53d1\u4efb\u610f\u6761\u6d88\u606f\uff0c\u73b0\u5728\u6211\u4eec\u5c1d\u8bd5\u6784\u5efa\u4e00\u4e2a c2c \u901a\u4fe1\u6a21\u578b\uff1a</p> <ul> <li>\u6bcf\u4e2a\u5ba2\u6237\u7aef\u53ef\u4ee5\u4e0e\u4efb\u610f\u4e2a\u5ba2\u6237\u7aef\u5efa\u7acb\u8fde\u63a5</li> <li>\u6bcf\u4e2a\u5ba2\u6237\u7aef\u53ef\u4ee5\u4e0e\u4efb\u610f\u4e2a\u5ba2\u6237\u7aef\u6536\u53d1\u4efb\u610f\u6761\u6d88\u606f</li> </ul> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#3-io","title":"3 \u590d\u7528 IO","text":"<p>\u5728\u963b\u585e IO \u4e2d\uff0c\u5982\u4f55\u6ca1\u6709\u8fde\u63a5\u8bf7\u6c42\uff0c<code>accept()</code> \u51fd\u6570\u5c06\u4e00\u76f4\u963b\u585e\uff0c\u76f4\u5230\u6709\u8fde\u63a5\u8bf7\u6c42\u4e3a\u6b62\uff0c<code>recv()</code> \u548c <code>send()</code> \u51fd\u6570\u4e5f\u662f\u5982\u6b64\uff0c\u5982\u679c\u6ca1\u6709\u6570\u636e\uff0c\u5c06\u4e00\u76f4\u963b\u585e\uff0c\u76f4\u5230\u6709\u6570\u636e\u4e3a\u6b62\u3002</p> <p>\u5728\u975e\u963b\u585e IO \u4e2d\uff0c\u6211\u4eec\u91c7\u53d6\u5faa\u73af\u7684\u65b9\u5f0f\uff0c\u4e0d\u65ad\u7684\u8c03\u7528 <code>accept()</code>\u3001<code>recv()</code>\u3001<code>send()</code> \u51fd\u6570\uff0c\u5982\u679c\u6ca1\u6709\u63a5\u6536\u5230\u8fde\u63a5\u8bf7\u6c42\u6216\u6570\u636e\uff0c\u90a3\u4e48\u51fd\u6570\u5c06\u7acb\u5373\u8fd4\u56de\uff0c\u4e0d\u4f1a\u7b49\u5f85\uff0c\u540c\u65f6\u5185\u6838\u4f1a\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u7801\uff0c\u544a\u8bc9\u8fdb\u7a0b\u4e3a\u4ec0\u4e48\u6ca1\u6709\u51c6\u5907\u597d\u6570\u636e\u3002</p> <p>\u5728 IO \u590d\u7528 \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>select()</code>\u3001<code>poll()</code>\u3001<code>epoll()</code> \u51fd\u6570\uff0c\u5c06\u591a\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u6ce8\u518c\u5230\u5185\u6838\u4e2d\uff0c\u5f53\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u51c6\u5907\u597d\u6570\u636e\u65f6\uff0c\u5185\u6838\u5c06\u901a\u77e5\u8fdb\u7a0b\uff0c\u8fdb\u7a0b\u518d\u8c03\u7528 <code>accept()</code>\u3001<code>recv()</code>\u3001<code>send()</code> \u51fd\u6570\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u5faa\u73af\u8c03\u7528\u8fd9\u4e9b\u51fd\u6570\u4e86\u3002</p>"},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#c2s_epoll","title":"c2s_epoll","text":"<p>\u5728 c2s \u7684\u57fa\u7840\u4e0a\uff0c\u4f7f\u7528 <code>epoll()</code> \u51fd\u6570\u5b9e\u73b0 IO \u590d\u7528\uff0c\u5ba2\u6237\u7aef\u662f\u975e\u963b\u585e\u7684\u666e\u901a\u5ba2\u6237\u7aef\u3002</p> <p></p> <p>eventpoll\uff0c\u4e8b\u4ef6\u8f6e\u8be2\uff0cLinux \u5185\u6838\u5b9e\u73b0IO\u591a\u8def\u590d\u7528\uff08IO multiplexing\uff09\u7684\u4e00\u4e2a\u5b9e\u73b0</p> <p>\u76f4\u89c2\u6765\u8bf4\uff0cI/O \u590d\u7528\u7684\u4f5c\u7528\u5c31\u662f\uff1a\u8ba9\u7a0b\u5e8f\u80fd\u591f\u5728\u5355\u8fdb\u7a0b\u3001\u5355\u7ebf\u7a0b\u7684\u6a21\u5f0f\u4e0b\uff0c\u540c\u65f6\u5904\u7406 \u591a\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26 \u7684 I/O \u8bf7\u6c42</p> <ul> <li>\u5e95\u5c42\u521b\u5efa\u4e00\u4e2a \u7ea2\u9ed1\u6811 \u548c \u5c31\u7eea\u94fe\u8868\uff08\u53cc\u5411\u94fe\u8868\uff09</li> <li> <p>\u7ea2\u9ed1\u6811 \u5b58\u50a8\u6240\u76d1\u63a7\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u8282\u70b9\u6570\u636e\uff0c\u5c31\u7eea\u94fe\u8868 \u5b58\u50a8\u5c31\u7eea\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u8282\u70b9\u6570\u636e</p> </li> <li> <p><code>epoll_create1</code> \u521b\u5efa\u4e00\u4e2a epoll \u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u4e8b\u4ef6\u8f6e\u8be2\u7684\u5b9e\u4f8b\uff0c\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5373\u4e8b\u4ef6\u6811</p> C++<pre><code>#include &lt;sys/epoll.h&gt;  // epoll_create1()\n</code></pre> C++<pre><code>int epollfd = epoll_create1(0);\n</code></pre> <ul> <li><code>0</code>\uff1a\u7b49\u5f85\u961f\u5217\u7684\u6700\u5927\u957f\u5ea6</li> </ul> </li> <li> <p><code>int epoll_ctl(\u4e8b\u4ef6\u6811, \u64cd\u4f5c, \u6587\u4ef6\u63cf\u8ff0\u7b26, \u4e8b\u4ef6)</code></p> <ul> <li>\u64cd\u4f5c\uff1a<ul> <li><code>EPOLL_CTL_ADD</code>\uff1a\u6ce8\u518c\u65b0\u7684\u4e8b\u4ef6\u5230\u4e8b\u4ef6\u6811</li> <li><code>EPOLL_CTL_MOD</code>\uff1a\u4fee\u6539\u5df2\u7ecf\u6ce8\u518c\u7684\u4e8b\u4ef6</li> <li><code>EPOLL_CTL_DEL</code>\uff1a\u5220\u9664\u5df2\u7ecf\u6ce8\u518c\u7684\u4e8b\u4ef6</li> </ul> </li> <li>\u4e8b\u4ef6\uff1a<ul> <li><code>EPOLLIN</code>\uff1a\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u53ef\u4ee5\u8bfb <code>recv</code> \uff08\u5305\u62ec\u5bf9\u7aefSOCKET\u6b63\u5e38\u5173\u95ed\uff09</li> <li><code>EPOLLPRI</code>\uff1a\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u6709\u7d27\u6025\u7684\u6570\u636e\u53ef\u8bfb\uff08\u8fd9\u91cc\u5e94\u8be5\u8868\u793a\u6709\u5e26\u5916\u6570\u636e\u5230\u6765\uff09</li> <li><code>EPOLLOUT</code>\uff1a\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u53ef\u4ee5\u5199 <code>send</code>\uff08\u5305\u62ec\u5bf9\u7aefSOCKET\u6b63\u5e38\u5173\u95ed\uff09</li> <li><code>EPOLLERR</code>\uff1a\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u53d1\u751f\u9519\u8bef</li> <li><code>EPOLLHUP</code>\uff1a\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u88ab\u6302\u65ad</li> <li><code>EPOLLET</code>\uff1a\u5c06 EPOLL \u8bbe\u4e3a\u8fb9\u7f18\u89e6\u53d1(Edge Triggered)\u6a21\u5f0f</li> <li><code>EPOLLONESHOT</code>\uff1a\u53ea\u76d1\u542c\u4e00\u6b21\u4e8b\u4ef6\uff0c\u5f53\u76d1\u542c\u5b8c\u8fd9\u6b21\u4e8b\u4ef6\u4e4b\u540e\uff0c\u5220\u9664</li> </ul> </li> </ul> </li> <li> <p><code>int epoll_wait(\u4e8b\u4ef6\u6811, \u4e8b\u4ef6\u6570\u7ec4, \u4e8b\u4ef6\u6570\u7ec4\u5927\u5c0f, \u8d85\u65f6\u65f6\u95f4)</code></p> <ul> <li>\u4e8b\u4ef6\u6570\u7ec4\uff1a<code>epoll_event</code> \u7ed3\u6784\u4f53\u6570\u7ec4</li> <li>\u8d85\u65f6\u65f6\u95f4\uff1a<code>-1</code> \u963b\u585e\uff0c<code>0</code> \u7acb\u5373\u8fd4\u56de\uff0c<code>&gt;0</code> \u7b49\u5f85\u6307\u5b9a\u65f6\u95f4</li> </ul> </li> </ul> <p></p> <p>\u4e00\u4e9b\u6570\u636e\u7ed3\u6784</p> <ul> <li><code>epoll_event</code> \u4e8b\u4ef6\u7ed3\u6784\u4f53\uff0c\u7528\u4e8e\u6ce8\u518c\u4e8b\u4ef6     C++<pre><code>#include &lt;sys/epoll.h&gt;  // epoll_event\n</code></pre> C++<pre><code>struct epoll_event\n{\n    uint32_t events;    // \u4e8b\u4ef6\u7c7b\u578b\n    epoll_data_t data;  // \u7528\u6237\u6570\u636e\uff0c\u4e00\u4e2a\u8054\u5408\u4f53\n};\n</code></pre><ul> <li><code>events</code>\uff1a\u4e8b\u4ef6\u7c7b\u578b</li> <li><code>data</code>\uff1a\u7528\u6237\u6570\u636e<ul> <li><code>epoll_data_t</code>\uff1a\u7528\u6237\u6570\u636e\u7c7b\u578b     C++<pre><code>typedef union epoll_data\n{\n    void *ptr;      // \u6307\u9488\n    int fd;         // \u6587\u4ef6\u63cf\u8ff0\u7b26\n    uint32_t u32;   // 32\u4f4d\u65e0\u7b26\u53f7\u6574\u6570\n    uint64_t u64;   // 64\u4f4d\u65e0\u7b26\u53f7\u6574\u6570\n} epoll_data_t;\n</code></pre></li> </ul> </li> </ul> </li> </ul>"},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#4-io","title":"4 \u4fe1\u53f7\u9a71\u52a8 IO","text":""},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#tcp_2","title":"TCP","text":""},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#5-io","title":"5 \u5f02\u6b65 IO","text":"<p>\u524d 4 \u79cd IO \u6a21\u578b\u90fd\u662f\u540c\u6b65 IO\uff0c\u5373\u7528\u6237\u8fdb\u7a0b\u53d1\u8d77 IO \u8bf7\u6c42\u540e\uff0c\u9700\u8981\u7b49\u5f85\u5185\u6838\u5b8c\u6210 IO \u64cd\u4f5c\u540e\u624d\u80fd\u7ee7\u7eed\u6267\u884c\u3002</p> <p>\u5f02\u6b65 IO \u6a21\u578b\uff0c\u7528\u6237\u8fdb\u7a0b\u53d1\u8d77 IO \u8bf7\u6c42\u540e\uff0c\u4e0d\u9700\u8981\u7b49\u5f85\u5185\u6838\u5b8c\u6210 IO \u64cd\u4f5c\uff0c\u7528\u6237\u8fdb\u7a0b\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\uff0c\u5f53\u5185\u6838\u5b8c\u6210 IO \u64cd\u4f5c\u540e\uff0c\u4f1a\u901a\u77e5\u7528\u6237\u8fdb\u7a0b\u3002</p> C++<pre><code>#include &lt;boost/asio.hpp&gt;\n#include &lt;iostream&gt;\n\nusing namespace boost::asio;\n\nint main(){\n    io_context io;\n\n    steady_timer t3(io, chrono::seconds(3));\n    t3.async_wait([](const boost::system::error_code&amp;){\n        std::cout &lt;&lt; \"t: \" &lt;&lt; 666 &lt;&lt; std::endl; });\n    steady_timer t2(io, chrono::seconds(2));\n    t2.async_wait([](const boost::system::error_code&amp;){\n        std::cout &lt;&lt; \"t: \" &lt;&lt; 888 &lt;&lt; std::endl; });\n    steady_timer t1(io, chrono::seconds(1));\n    t1.async_wait([](const boost::system::error_code&amp;){\n        std::cout &lt;&lt; \"t: \" &lt;&lt; 999 &lt;&lt; std::endl; });\n    io.run();   // \u5904\u7406\u5df2\u63d0\u4ea4\u7684\u5f02\u6b65\u4efb\u52a1\uff0c\u76f4\u5230\u6240\u6709\u4efb\u52a1\u5b8c\u6210\n\n    std::cout &lt;&lt; \"-------------------\" &lt;&lt; std::endl;\n\n    for(int i=1; i&lt;=5; i++){\n        steady_timer t(io, chrono::seconds(1));\n        t.wait();\n        std::cout &lt;&lt; \"t: \" &lt;&lt; i &lt;&lt; std::endl;\n    }\n\n    return 0;\n}\n</code></pre> <p>\u7a0b\u5e8f\u8fd0\u884c\u540e\u4e00\u79d2\uff0c<code>999</code>\uff0c<code>888</code>\uff0c<code>666</code> \u4f1a\u95f4\u9694\u4e00\u79d2\uff0c\u4f9d\u6b21\u8f93\u51fa\u3002 \u800c\u540e\uff0c<code>t: 1</code>\u3001<code>t: 2</code>\u3001<code>t: 3</code>\u3001<code>t: 4</code>\u3001<code>t: 5</code> \u4f1a\u4f9d\u6b21\u8f93\u51fa\u3002</p> <p>\u524d\u8005\u662f\u5f02\u6b65\u7684\uff0c\u800c\u540e\u8005\u662f\u540c\u6b65\u7684\uff0c\u901a\u8fc7\u4ee3\u7801\u4e0d\u96be\u7406\u89e3\uff1a\u540c\u6b65\u7684\u662f <code>wait()</code>\uff0c\u963b\u585e\uff1b\u5f02\u6b65\u7684\u662f <code>async_wait()</code>\uff0c\u4e0d\u963b\u585e\uff0c\u4efb\u52a1\u5728 <code>io.run()</code> \u4e4b\u540e\uff0c\u7531\u540e\u53f0\u5904\u7406\u3002 </p>"},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#tcp_server","title":"TCP_Server","text":""},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#udp_server","title":"UDP_Server","text":"<p>boost\u5b98\u7f51\u7684udp\u5f02\u6b65</p> C++ <p></p>"},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#errno","title":"errno","text":"| \u9519\u8bef\u7801 | \u522b\u540d | \u9519\u8bef\u63cf\u8ff0 | note |  | :-: | :-: | :-: | :-: | | 4 | `EINTR` | \u4fe1\u53f7\u4e2d\u65ad | \u901a\u5e38\u662f\u7531\u4e8e\u7528\u6237\u6309\u4e0b\u4e86 `Ctrl + C` | | 9 | | \u6587\u4ef6\u63cf\u8ff0\u7b26\u65e0\u6548 | | | 11 | `EAGAIN` `EWOULDBLOCK`| \u64cd\u4f5c\u88ab\u963b\u585e | \u975e\u963b\u585e\u4e0b\uff0c\u6ca1\u6709\u6570\u636e\u53ef\u8bfb\u6216\u5199 | | 98 | | \u5730\u5740\u5df2\u7ecf\u5728\u4f7f\u7528 | \u901a\u5e38\u662f `bind()` \u65f6\uff0c\u5730\u5740\u5df2\u7ecf\u88ab\u5360\u7528 | | 107 |  | \u4f20\u8f93\u7ec8\u70b9\u6ca1\u6709\u8fde\u63a5 | |"},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#http","title":"HTTP","text":"<p>HTTP \u534f\u8bae\u662f\u57fa\u4e8e TCP \u534f\u8bae\u7684\u5e94\u7528\u5c42\u534f\u8bae\uff0c\u9ed8\u8ba4\u7aef\u53e3\u53f7\u662f 80\uff08HTTPS\u662f 443\uff09\uff0cHTTP \u534f\u8bae\u7684\u901a\u4fe1\u6a21\u578b\u662f \u8bf7\u6c42-\u54cd\u5e94 \u6a21\u578b</p> <ul> <li>\u8bf7\u6c42\uff0c\u5373\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u7aef\u53d1\u9001\u7684\u6d88\u606f</li> <li>\u54cd\u5e94\uff0c\u5373\u670d\u52a1\u7aef\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u6d88\u606f</li> </ul> <p>HTTP \u534f\u8bae\u7684\u8bf7\u6c42\u6d88\u606f\u548c\u54cd\u5e94\u6d88\u606f\u90fd\u662f\u7531 \u8bf7\u6c42 / \u54cd\u5e94\u884c\u3001\u8bf7\u6c42 / \u54cd\u5e94\u5934\u3001\u8bf7\u6c42 / \u54cd\u5e94\u4f53 \u7ec4\u6210</p> <ul> <li> <p>\u8bf7\u6c42\u884c \u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff1a\u8bf7\u6c42\u65b9\u6cd5\u3001\u8bf7\u6c42\u8def\u5f84\u3001HTTP\u7248\u672c</p> <ul> <li> <p>\u8bf7\u6c42\u65b9\u6cd5\uff1a</p> <ul> <li>GET\uff1a</li> <li>\u7528\u9014\uff1a \u8bf7\u6c42\u83b7\u53d6\u6307\u5b9a\u8d44\u6e90.\u4e0d\u5e94\u8be5\u5bf9\u670d\u52a1\u5668\u7aef\u6570\u636e\u4ea7\u751f\u4efb\u4f55\u5f71\u54cd\u3002</li> <li> <p>\u793a\u4f8b\uff1a <code>GET /index.html</code>\uff0c\u83b7\u53d6\u9996\u9875\u4fe1\u606f\u3002</p> </li> <li> <p>POST\uff1a</p> </li> <li>\u7528\u9014\uff1a \u7528\u4e8e\u5411\u6307\u5b9a\u8d44\u6e90\u63d0\u4ea4\u6570\u636e\uff0c\u8bf7\u6c42\u670d\u52a1\u5668\u8fdb\u884c\u5904\u7406\u3002\u5e38\u7528\u4e8e\u63d0\u4ea4\u8868\u5355\u6570\u636e\u6216\u4e0a\u4f20\u6587\u4ef6\u3002</li> <li> <p>\u793a\u4f8b\uff1a <code>POST /users</code>\uff0c\u63d0\u4ea4\u7528\u6237\u6ce8\u518c\u8868\u5355\u3002</p> </li> <li> <p>PUT\uff1a</p> </li> <li>\u7528\u9014\uff1a \u8bf7\u6c42\u670d\u52a1\u5668\u5b58\u50a8\u4e00\u4e2a\u8d44\u6e90\u3002\u901a\u5e38\u662f\u66f4\u65b0\u5df2\u5b58\u5728\u7684\u8d44\u6e90\u6216\u521b\u5efa\u65b0\u8d44\u6e90\u3002</li> <li> <p>\u793a\u4f8b\uff1a <code>PUT /products/123</code>\uff0c\u66f4\u65b0\u4ea7\u54c1\u7f16\u53f7\u4e3a123\u7684\u5546\u54c1\u4fe1\u606f\u3002</p> </li> <li> <p>DELETE\uff1a</p> </li> <li>\u7528\u9014\uff1a \u8bf7\u6c42\u670d\u52a1\u5668\u5220\u9664\u6307\u5b9a\u7684\u8d44\u6e90\u3002</li> <li> <p>\u793a\u4f8b\uff1a <code>DELETE /users/456</code>\uff0c\u5220\u9664\u7528\u6237\u7f16\u53f7\u4e3a456\u7684\u7528\u6237\u4fe1\u606f\u3002</p> </li> <li> <p>HEAD\uff1a</p> </li> <li>\u7528\u9014\uff1a \u8bf7\u6c42\u83b7\u53d6\u6307\u5b9a\u8d44\u6e90\u7684\u54cd\u5e94\u5934\u4fe1\u606f\uff0c\u800c\u4e0d\u83b7\u53d6\u54cd\u5e94\u4f53\u7684\u5185\u5bb9\u3002\u901a\u5e38\u7528\u4e8e\u68c0\u67e5\u8d44\u6e90\u662f      \u5426\u5b58\u5728\u6216\u83b7\u53d6\u8d44\u6e90\u7684\u5143\u4fe1\u606f\u3002</li> <li> <p>\u793a\u4f8b\uff1a <code>HEAD /documents/789</code>\uff0c\u68c0\u67e5\u6587\u6863\u7f16\u53f7\u4e3a789\u7684\u8d44\u6e90\u662f\u5426\u5b58\u5728\u3002</p> </li> <li> <p>OPTIONS\uff1a</p> </li> <li>\u7528\u9014\uff1a \u8bf7\u6c42\u83b7\u53d6\u76ee\u6807\u8d44\u6e90\u6240\u652f\u6301\u7684\u901a\u4fe1\u9009\u9879\u3002\u7528\u4e8e\u67e5\u8be2\u670d\u52a1\u5668\u652f\u6301\u7684HTTP\u65b9\u6cd5\u3002</li> <li> <p>\u793a\u4f8b\uff1a <code>OPTIONS /products</code>\uff0c\u67e5\u8be2\u670d\u52a1\u5668\u652f\u6301\u7684HTTP\u65b9\u6cd5\u3002</p> </li> <li> <p>TRACE\uff1a</p> </li> <li>\u7528\u9014\uff1a \u7528\u4e8e\u8ffd\u8e2a\u8def\u5f84\u3002\u53d1\u9001\u8bf7\u6c42\u65f6\uff0c\u670d\u52a1\u5668\u4f1a\u8fd4\u56de\u8be5\u8bf7\u6c42\u6240\u7ecf\u8fc7\u7684\u670d\u52a1\u5668\u8def\u5f84\u3002\u4e3b\u8981\u7528      \u4e8e\u8c03\u8bd5\u548c\u6d4b\u8bd5\u3002</li> <li> <p>\u793a\u4f8b\uff1a <code>TRACE /debug</code>\uff0c\u8ffd\u8e2a\u8bf7\u6c42\u7684\u8def\u5f84\u3002</p> </li> <li> <p>CONNECT\uff1a</p> </li> <li>\u7528\u9014\uff1a \u7528\u4e8e\u5efa\u7acb\u4e0e\u76ee\u6807\u8d44\u6e90\u7684\u96a7\u9053\u8fde\u63a5\uff0c\u901a\u5e38\u7528\u4e8e\u52a0\u5bc6\u8fde\u63a5\uff0c\u5982HTTPS\u3002</li> <li>\u793a\u4f8b\uff1a <code>CONNECT www.example.com:443</code>\uff0c\u4e0e\u76ee\u6807\u670d\u52a1\u5668\u5efa\u7acb\u52a0\u5bc6\u8fde\u63a5\u3002</li> </ul> </li> <li> <p>\u8bf7\u6c42\u8def\u5f84\uff1a<code>/</code>\u3001<code>/index.html</code>\u3001<code>/jiao.html</code>\u3001<code>...</code></p> <ul> <li>\u6211\u4eec\u5c06\u8bf7\u6c42\u8def\u5f84\u79f0\u4e3a <code>URI</code>\uff0c\u5373\u7edf\u4e00\u8d44\u6e90\u6807\u8bc6\u7b26\uff0c\u800c <code>URL</code> \u662f <code>URI</code> \u7684\u5b50\u96c6</li> </ul> </li> <li> <p>HTTP\u7248\u672c\uff1a<code>HTTP/1.0</code>\u3001<code>HTTP/1.1</code>\u3001<code>HTTP/2.0</code> </p> </li> </ul> </li> <li> <p>\u8bf7\u6c42\u5934 \u7531\u8bf7\u6c42\u5934\u5b57\u6bb5\u548c\u8bf7\u6c42\u5934\u5b57\u6bb5\u503c\u7ec4\u6210\uff0c\u6bcf\u4e2a\u8bf7\u6c42\u5934\u5b57\u6bb5\u90fd\u6709\u7279\u5b9a\u7684\u542b\u4e49\uff0c\u5e38\u89c1\u7684\u8bf7\u6c42\u5934\u5b57\u6bb5\u6709\uff1a</p> <ul> <li><code>Accept</code>\uff1a\u6307\u5b9a\u5ba2\u6237\u7aef\u80fd\u591f\u63a5\u6536\u7684\u5185\u5bb9\u7c7b\u578b</li> <li><code>Accept-Encoding</code>\uff1a\u6307\u5b9a\u5ba2\u6237\u7aef\u80fd\u591f\u63a5\u6536\u7684\u5185\u5bb9\u7f16\u7801\u65b9\u5f0f</li> <li><code>Accept-Language</code>\uff1a\u6307\u5b9a\u5ba2\u6237\u7aef\u80fd\u591f\u63a5\u6536\u7684\u8bed\u8a00</li> <li><code>Connection</code>\uff1a\u6307\u5b9a\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u7aef\u7684\u8fde\u63a5\u7c7b\u578b</li> <li><code>Host</code>\uff1a\u6307\u5b9a\u8bf7\u6c42\u7684\u4e3b\u673a\u540d\u548c\u7aef\u53e3\u53f7</li> <li><code>User-Agent</code>\uff1a\u6307\u5b9a\u5ba2\u6237\u7aef\u7684\u7c7b\u578b</li> <li><code>Referer</code>\uff1a\u6307\u5b9a\u8bf7\u6c42\u7684\u6765\u6e90\u9875\u9762</li> <li><code>Cookie</code>\uff1a\u6307\u5b9a\u8bf7\u6c42\u7684 Cookie</li> <li><code>Content-Type</code>\uff1a\u6307\u5b9a\u8bf7\u6c42\u4f53\u7684\u7c7b\u578b</li> <li><code>Content-Length</code>\uff1a\u6307\u5b9a\u8bf7\u6c42\u4f53\u7684\u957f\u5ea6</li> <li><code>Authorization</code>\uff1a\u6307\u5b9a\u8bf7\u6c42\u7684\u6388\u6743\u4fe1\u606f</li> <li><code>If-Modified-Since</code>\uff1a\u6307\u5b9a\u8bf7\u6c42\u7684\u8d44\u6e90\u7684\u6700\u540e\u4fee\u6539\u65f6\u95f4</li> <li><code>If-None-Match</code>\uff1a\u6307\u5b9a\u8bf7\u6c42\u7684\u8d44\u6e90\u7684 ETag \u503c</li> </ul> </li> </ul> <p></p> <ul> <li>\u8bf7\u6c42\u4f53 \u5177\u4f53\u7684\u6570\u636e<ul> <li>\u901a\u5e38\u662f\u5728 post \u8bf7\u6c42\u4e2d\uff0c\u5c06\u8868\u5355\u6570\u636e\u653e\u5728\u8bf7\u6c42\u4f53\u4e2d</li> </ul> </li> </ul> <p></p> <ul> <li> <p>\u54cd\u5e94\u884c \u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff1aHTTP\u7248\u672c\u3001\u72b6\u6001\u7801\u3001\u72b6\u6001\u7801\u63cf\u8ff0</p> <ul> <li>HTTP\u7248\u672c\uff1a<code>HTTP/1.0</code>\u3001<code>HTTP/1.1</code>\u3001<code>HTTP/2.0</code></li> <li>\u72b6\u6001\u7801\uff1a<code>200</code>\u3001<code>404</code>\u3001<code>500</code>\u3001<code>...</code></li> <li>\u72b6\u6001\u7801\u63cf\u8ff0\uff1a<code>OK</code>\u3001<code>Not Found</code>\u3001<code>Internal Server Error</code>\u3001<code>...</code></li> <li>\u4f8b\u5982\uff1a<code>HTTP/1.1 200 OK</code></li> </ul> </li> </ul> <p></p> <ul> <li>\u54cd\u5e94\u5934 \u7531\u54cd\u5e94\u5934\u5b57\u6bb5\u548c\u54cd\u5e94\u5934\u5b57\u6bb5\u503c\u7ec4\u6210\uff0c\u6bcf\u4e2a\u54cd\u5e94\u5934\u5b57\u6bb5\u90fd\u6709\u7279\u5b9a\u7684\u542b\u4e49\uff0c\u5e38\u89c1\u7684\u54cd\u5e94\u5934\u5b57\u6bb5\u6709\uff1a<ul> <li><code>Content-Type</code>\uff1a\u6307\u5b9a\u54cd\u5e94\u4f53\u7684\u7c7b\u578b</li> <li><code>Content-Length</code>\uff1a\u6307\u5b9a\u54cd\u5e94\u4f53\u7684\u957f\u5ea6</li> <li><code>Content-Encoding</code>\uff1a\u6307\u5b9a\u54cd\u5e94\u4f53\u7684\u7f16\u7801\u65b9\u5f0f</li> <li><code>Content-Language</code>\uff1a\u6307\u5b9a\u54cd\u5e94\u4f53\u7684\u8bed\u8a00</li> <li><code>Content-Disposition</code>\uff1a\u6307\u5b9a\u54cd\u5e94\u4f53\u7684\u5904\u7406\u65b9\u5f0f</li> <li><code>Set-Cookie</code>\uff1a\u6307\u5b9a\u54cd\u5e94\u7684 Cookie</li> <li><code>Location</code>\uff1a\u6307\u5b9a\u54cd\u5e94\u7684\u91cd\u5b9a\u5411\u5730\u5740</li> <li><code>Last-Modified</code>\uff1a\u6307\u5b9a\u54cd\u5e94\u7684\u8d44\u6e90\u7684\u6700\u540e\u4fee\u6539\u65f6\u95f4</li> <li><code>ETag</code>\uff1a\u6307\u5b9a\u54cd\u5e94\u7684\u8d44\u6e90\u7684 ETag \u503c</li> </ul> </li> </ul> <p></p> <ul> <li>\u54cd\u5e94\u4f53 \u5177\u4f53\u7684\u6570\u636e<ul> <li>\u4f8b\u5982\u7f51\u9875\u7684 HTML \u4ee3\u7801</li> <li>\u4f8b\u5982\u56fe\u7247\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u3001pdf\u6587\u4ef6\u7b49</li> </ul> </li> </ul> <p></p>"},{"location":"src/more/old/CPP/C%2B%2B%20Socket/#rtprtcp","title":"RTP/RTCP","text":""},{"location":"src/more/old/algorithm/","title":"\u53c2\u8003","text":"<p>\u4e66\u7c4d\uff1a </p> <ul> <li>\u963f\u91cc\u4e91\u76d8</li> </ul> <p>\u9898\u5355\uff1a</p> <ul> <li>\u4fe1\u606f\u5b66\u5965\u8d5b\u4e00\u672c\u901a</li> <li>noi oj</li> <li>\u6d1b\u8c37\u5b98\u65b9\u9898\u5355</li> <li>USACO Training / \u4e2a\u4eba\u6574\u7406</li> <li>AcWing \u7b97\u6cd5\u57fa\u7840\u8bfe / \u63d0\u9ad8\u8bfe / \u8fdb\u9636\u8bfe</li> <li>kuangbin \u4e13\u9898</li> </ul> <p>\u6bd4\u8d5b\uff1a</p> <ul> <li>Acwing \u5468\u8d5b</li> <li>\u529b\u6263 \u5468\u8d5b</li> <li>\u725b\u5ba2 \u5468\u8d5b</li> <li>\u6d1b\u8c37 \u6708\u8d5b</li> </ul> <p>\u4e94\u5e74\u7b97\u7ade\u4e09\u5e74\u6a21\u62df\uff1a    1. USACO-Bronze    2. CCF-J    3. CIE    3. [CCF-CSP]    4. \u84dd\u6865\u676f    5. [\u8003\u7814\u771f\u9898]</p> <ol> <li>\u5165\u95e8</li> <li>\u987a\u5e8f\u7ed3\u6784</li> <li>\u5206\u652f\u7ed3\u6784</li> <li>\u5faa\u73af\u7ed3\u6784</li> <li>\u6570\u7ec4</li> <li>\u5b57\u7b26\u4e32</li> <li> <p>\u51fd\u6570\u4e0e\u7ed3\u6784\u4f53</p> </li> <li> <p>\u57fa\u7840</p> </li> <li>\u679a\u4e3e\u4e0e\u6a21\u62df</li> <li>\u9012\u5f52\u4e0e\u9012\u63a8</li> <li>\u524d\u7f00\u548c\u4e0e\u5dee\u5206</li> <li>\u6392\u5e8f</li> <li>[\u54c8\u5e0c\u4e0e\u79bb\u6563\u5316]</li> <li>\u4e8c\u5206</li> <li>[\u53cc\u6307\u9488]</li> <li>[\u8d2a\u5fc3]</li> <li>[\u500d\u589e]</li> <li> <p>[\u6784\u9020]</p> </li> <li> <p>\u641c\u7d22</p> </li> <li>DFS</li> <li>BFS</li> <li>[\u641c\u7d22\u8fdb\u9636]</li> <li>[A/IDA/\u8fed\u4ee3]</li> <li> <p>[\u6a21\u62df\u9000\u706b\u4e0e\u722c\u5c71]</p> </li> <li> <p>\u52a8\u6001\u89c4\u5212</p> </li> <li>\u6570\u5b57\u4e09\u89d2\u5f62\u6a21\u578b</li> <li>\u5b50\u5e8f\u5217\u6a21\u578b</li> <li>\u80cc\u5305\u6a21\u578b</li> <li>\u72b6\u6001\u673a\u6a21\u578b</li> <li>[\u7ebf\u6027DP]</li> <li>[\u533a\u95f4DP]</li> <li>[\u6811\u5f62DP]</li> <li>\u72b6\u538bDP</li> <li>[\u5355\u8c03\u961f\u5217\u4f18\u5316DP]</li> <li>[\u659c\u7387\u4f18\u5316DP]</li> <li>[\u8ba1\u6570DP]</li> <li>[\u6570\u4f4dDP]</li> <li>[\u63d2\u5934DP]</li> <li> <p>[\u56db\u8fb9\u4e0d\u7b49\u5f0f]</p> </li> <li> <p>\u5b57\u7b26\u4e32</p> </li> <li>[\u5b57\u7b26\u4e32\u54c8\u5e0c]</li> <li>[\u5b57\u5178\u6811(Trie)]</li> <li>[KMP]</li> <li>[\u540e\u7f00\u6570\u7ec4(SA)]</li> <li> <p>[\u81ea\u52a8\u673a]</p> </li> <li> <p>\u6570\u5b66</p> </li> <li>\u6570\u7684\u8fd0\u7b97</li> <li>\u5b9a\u7406\uff1a\u6570\u8bba</li> <li>\u8d28\u6570</li> <li>\u5b9a\u7406\uff1a\u7ec4\u5408\u6570\u5b66</li> <li>[\u7ebf\u6027\u4ee3\u6570]</li> <li> <p>[\u535a\u5f08\u8bba]</p> </li> <li> <p>\u6570\u636e\u7ed3\u6784</p> </li> <li>\u94fe\u8868</li> <li>\u6808</li> <li>\u961f\u5217</li> <li>[ST\u8868]</li> <li>\u5e76\u67e5\u96c6</li> <li>\u4e8c\u53c9\u7d22\u5f15\u6811</li> <li>[\u7ebf\u6bb5\u6811]</li> <li>[\u5e73\u8861\u6811]</li> <li>[\u5b57\u5178\u6811]</li> <li>[\u821e\u8e48\u94fe]</li> <li>[\u6811\u94fe\u5256\u5206]</li> <li> <p>[\u52a8\u6001\u68ee\u6797(LCT)]</p> </li> <li> <p>\u56fe\u8bba</p> </li> <li>\u4e8c\u53c9\u6811</li> <li>\u6700\u77ed\u8def</li> <li>[\u62d3\u6251\u6392\u5e8f]</li> <li>\u6700\u5c0f\u751f\u6210\u6811</li> <li>[\u4e8c\u5206\u56fe]</li> <li>[\u7f51\u7edc\u6d41]</li> <li> <p>[2-SAT]</p> </li> <li> <p>\u8ba1\u7b97\u51e0\u4f55</p> </li> <li>[\u8ddd\u79bb]</li> </ol>"},{"location":"src/more/old/algorithm/index_new/","title":"\u5f15\u5b50","text":"<ol> <li> <p>\u5728\u9879\u76ee\u76ee\u5f55\u4e0b\u521b\u5efa\u8fd0\u884c\u811a\u672c <code>ac.sh</code></p> Bash<pre><code>cppVersion=\"c++17\"\nrunTime=\"3s\"\nkeepLine=\"30000\"\n\necho -n '\u23f3' &gt; 'exes/out' &amp;&amp; \\\ng++ -g -std=\"$cppVersion\" ac.cpp -o exes/ac &amp;&amp; \\\ncat 'exes/in' | \\\ntimeout \"$runTime\" sh -c \"'exes/ac' &gt; 'exes/out.raw'\"\n\nif [ $? -ne 0 ]; then\n    echo -e \"\\033[0;31m TLE \"$runTime\" \\033[0m\"\nfi  # \u68c0\u67e5 timeout \u547d\u4ee4\u7684\u9000\u51fa\u72b6\u6001\n\nhead -n \"$keepLine\" 'exes/out.raw' &gt; 'exes/out'\n</code></pre> </li> <li> <p>\u6240\u6709\u6587\u4ef6\u7ed3\u6784\u5982\u6b64\uff1a     Text Only<pre><code>\u251c\u2500\u2500 exes/\n|   \u251c\u2500\u2500 ac\n|   \u251c\u2500\u2500 in\n|   \u251c\u2500\u2500 out\n|   \u251c\u2500\u2500 out.raw\n|\n\u251c\u2500\u2500 ac.cpp\n\u251c\u2500\u2500 ac.sh\n</code></pre></p> </li> </ol> <p></p>"},{"location":"src/more/old/algorithm/index_new/#_2","title":"\u5165\u95e8","text":""},{"location":"src/more/old/algorithm/index_new/#_3","title":"\u57fa\u7840","text":""},{"location":"src/more/old/algorithm/index_new/#_4","title":"\u4e8c\u5206","text":"<ul> <li>\u4f5c\u7528\uff1a</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a</li> <li>\u6838\u5fc3\u601d\u60f3\uff1a</li> </ul> C++<pre><code>while(l&lt;r){\n    int mid = l+r &gt;&gt; 1;\n    if(a[mid] &gt;= x) r=mid;  // \u53f3\u8fb9\u662f\u5408\u6cd5\u7684, r\u5411\u4e2d\u95f4\u9760\n    else l=mid+1;\n}\n\nwhile(l&lt;r){\n    int mid = l+r+1 &gt;&gt; 1;\n    if(a[mid] &lt;= x) l=mid;  // \u5de6\u8fb9\u662f\u5408\u6cd5\u7684, l\u5411\u4e2d\u95f4\u9760\n    else r=mid-1;\n}\n\nint* b = lower_bound(a, a + 10, 3); // \u8fd4\u56de \u7b2c\u4e00\u4e2a 3 \u7684\u5730\u5740\nvector&lt;int&gt;::iterator i = upper_bound(a.begin(), a.end(), 2);   // \u8fd4\u56de\u8fed\u4ee3\u5668\n</code></pre>"},{"location":"src/more/old/algorithm/index_new/#_5","title":"\u641c\u7d22","text":""},{"location":"src/more/old/algorithm/index_new/#_6","title":"\u52a8\u89c4","text":""},{"location":"src/more/old/algorithm/index_new/#_7","title":"\u5b57\u7b26\u4e32","text":""},{"location":"src/more/old/algorithm/index_new/#kmp","title":"KMP","text":"<ul> <li>\u4f5c\u7528\uff1a\u5b57\u7b26\u4e32\u4e2d\u67e5\u627e\u5b50\u4e32</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n+m)\\)\uff0c\\(n\\) \u4e3a\u5b57\u7b26\u4e32\u957f\u5ea6\uff0c\\(m\\) \u4e3a\u5b50\u4e32\u957f\u5ea6</li> <li>\u6838\u5fc3\u601d\u60f3\uff1a\u901a\u8fc7\u9884\u5904\u7406\u5b50\u4e32\uff0c\u751f\u6210\u90e8\u5206\u5339\u914d\u8868\uff08\u524d\u7f00\u51fd\u6570\uff09\uff0c\u5229\u7528\u6b64\u8868\u5728\u5339\u914d\u8fc7\u7a0b\u4e2d\u8df3\u8fc7\u5339\u914d\u7684\u90e8\u5206</li> </ul> C++<pre><code>vector&lt;int&gt; KMP(string s, string p){    // \u8fd4\u56de\u6240\u6709\u5339\u914d\u7684\u4f4d\u7f6e\n    int n=s.size(), m=p.size();\n    s = \" \" + s, p = \" \" + p;\n    vector&lt;int&gt; res, ne(m+1);\n    for(int i=2, j=0; i&lt;=m; i++){       // \u9884\u5904\u7406\u5f97\u90e8\u5206\u5339\u914d\u8868\n        while(j &amp;&amp; p[j+1]!=p[i]) j=ne[j];\n        if(p[i] == p[j+1]) j++;\n        ne[i]=j;\n    }   // m - ne[m] \u4e3a\u6700\u5c0f\u5faa\u73af\u5b50\u4e32\u7684\u957f\u5ea6\n    for(int i=1, j=0; i&lt;=n; i++){       // KMP \u5339\u914d\n        while(j &amp;&amp; p[j+1]!=s[i]) j=ne[j];\n        if(s[i] == p[j+1]) j++;\n        if(j == m){\n            j = ne[j];                  // \u5f53\u5339\u914d\u6210\u529f\u65f6\u7ee7\u7eed\n            res.push_back(i-m);\n        }\n    }\n    return res;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/index_new/#trie","title":"Trie","text":"<ul> <li>\u4f5c\u7528\uff1a\u5b58\u50a8\u5b57\u7b26\u4e32\u96c6\u5408\uff0c\u53ef\u67e5\u8be2\u67d0\u4e2a\u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u6b21\u6570</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u63d2\u5165\u4e0e\u641c\u7d22\u5747\u4e3a \\(O(n)\\)\uff0c\u7a7a\u95f4\u5360\u7528\u5c0f</li> <li>\u6838\u5fc3\u601d\u60f3\uff1a\u9010\u5b57\u7b26\u5b58\u50a8\uff0c\u5229\u7528\u5b57\u7b26\u4e32\u7684\u516c\u5171\u524d\u7f00\u6765\u8282\u7701\u5b58\u50a8\u7a7a\u95f4\uff0c\u5e76\u52a0\u5feb\u67e5\u8be2\u901f\u5ea6</li> </ul> C++<pre><code>class Trie{\npublic:\n    Trie(int n=1e5):\n        son(n+1, vector&lt;int&gt;(27)),  // \u4ec5\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\n        idx(0){};\n    ~Trie(){};\n\n    void insert(string &amp;s){\n        int p = 0;                  // deep\n        for(auto &amp;c: s){\n            if(!son[p][c-'a'])\n                son[p][c-'a'] = ++idx;\n            p = son[p][c-'a'];\n        }\n        cnt[p]++;\n    }\n\n    int query(string &amp;s){           // \u6b64\u5b57\u7b26\u51fa\u73b0\u6b21\u6570\n        int p = 0;\n        for(auto &amp;c: s){\n            if(!son[p][c-'a'])\n                return 0;\n            p = son[p][c-'a'];\n        }\n        return cnt[p];\n    }\n\nprivate:\n    vector&lt;vector&lt;int&gt;&gt; son;        // \u6811\n    map&lt;int, int&gt; cnt;              // \u67d0\u8282\u70b9\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\u6570\u91cf\n    int idx;                        // \u5f53\u524d\u63d2\u5165\u8282\u70b9\u7684\u503c\n};\n</code></pre>"},{"location":"src/more/old/algorithm/index_new/#_8","title":"\u6570\u5b66","text":""},{"location":"src/more/old/algorithm/index_new/#_9","title":"\u5f02\u6216\u6027\u8d28","text":""},{"location":"src/more/old/algorithm/index_new/#_10","title":"\u5927\u6570\u8fd0\u7b97","text":"<ul> <li>\u4f5c\u7528\uff1a\u9ad8\u7cbe\u5ea6 \u52a0\u51cf\u4e58\u9664\u5e42</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u4e00\u6b21\u52a0\u51cf\u4e58\u9664\u4e3a \\(O(n)\\)\uff0c\u4e00\u6b21\u5e42\u8fd0\u7b97\u4e3a \\(O(\\log n)\\)\uff0c\u524d\u8005\u7684 \\(n\\) \u4e3a\u6570\u5b57\u7684\u957f\u5ea6\uff0c\u540e\u8005\u7684 \\(n\\) \u4e3a \\(num^n\\)</li> <li>\u6838\u5fc3\u601d\u60f3\uff1a</li> </ul> C++<pre><code>string ADD(string A, string B, bool flg = 1) { // \u9ed8\u8ba4 \u6b63\u5e8f(\u6b63\u6574\u6570)\u8f93\u5165 \u6b63\u5e8f\u8f93\u51fa\n    if (flg) reverse(A.begin(), A.end()), reverse(B.begin(), B.end());\n    string res; int add = 0;\n    for (int i = 0; i &lt; A.size() || i &lt; B.size() || add; i++) {\n        if (i &lt; A.size()) add += A[i] - '0';// \u53d6\u503c\n        if (i &lt; B.size()) add += B[i] - '0';// \u53d6\u7684A,B\u76f8\u540c\u4f4e\u4f4d\n        res += add % 10 + '0';              // +\n        add /= 10;                          // \u8fdb\u4f4d\n    }\n    if (flg) reverse(res.begin(), res.end());\n    return res; // flg == 0 \u5012\u53d9\u8f93\u5165\u8f93\u51fa\u6a21\u5f0f (\u5728\u8fde\u7eed\u8ba1\u7b97\u65f6\u51cf\u5c11reverse\u6b21\u6570,\u4ee5\u63d0\u5347\u6027\u80fd)\n}\n\nstring SUB(string A, string B) {  // \u6b63\u5e8f\u8f93\u5165 \u6b63\u5e8f\u8f93\u51fa\n    if (!(A.size() &gt; B.size() || (A.size() == B.size() &amp;&amp; A &gt;= B)))\n        return \"-\" + SUB(B, A);   // \u975e A &gt; B \u7684\u60c5\u51b5\n    reverse(A.begin(), A.end()); reverse(B.begin(), B.end());\n    string res;                 // \u4f4e\u4f4d\u5411\u9ad8\u4f4d\u51cf\n    for (int i = 0, t = 0; i &lt; A.size(); i++) {\n        int ai = A[i] - '0';                // \u6362\u6210 int\n        int bi = i &lt; B.size() ? B[i] - '0' : 0; // B\u4f4d\u6570\u4e0d\u591f\n        t = ai - bi - t;                    // \u51cf\u53bb\n        res.push_back((t + 10) % 10 + '0'); // \u4fdd\u8bc1\u662f\u6b63\u6570\n        if (t &lt; 0) t = 1;                   // \u501f\u8d70\u4e86\u4e00\u4f4d\n        else t = 0;\n    }\n    while (res.size() &gt; 1 &amp;&amp; res.back() == '0') res.pop_back();\n    reverse(res.begin(), res.end());\n    return res;\n}\n\nstring MUL(string A, int b) { // \u6b63\u5e8f\u8f93\u5165 \u6b63\u5e8f\u8f93\u51fa\n    reverse(A.begin(), A.end());\n    string res;\n    int x = 0;\n    for (int i = 0; i &lt; A.size() || x; i++) {\n        if (i &lt; A.size()) x += (A[i] - '0') * b;\n        res.push_back(x % 10 + '0');\n        x /= 10;\n    }   // \u53bb\u524d\u5bfc0\n    while (res.size() &gt; 1 &amp;&amp; res.back() == '0') res.pop_back();\n    reverse(res.begin(), res.end());\n    return res;\n}\n\nstring DIV(string A, int b, int&amp; r) {    // A / b = res ... r \n    string res;    // \u6b63\u5e8f(\u6b63\u6574\u6570)\u8f93\u5165 \u6b63\u5e8f\u8f93\u51fa\n    r = 0;\n    for (int i = 0; i &lt; A.size(); i++) {\n        int ai = A[i] - '0';\n        r = r * 10 + ai;            // r\u4ece\u9ad8\u4f4d\u4e0b\u6765,\u6545*10\n        res.push_back(r / b + '0'); // \u6574\u6570\u4f4d\u538b\u5165res\n        r %= b;                     // \u4f59\u6570\n    }\n    while (res.size() &gt; 1 &amp;&amp; res.front() == '0') res.erase(res.begin(), res.begin() + 1);\n    return res; // \u53bb\u9664\u524d\u5bfc 0 \n}\n\nLL qmi(LL a, LL k, LL p){       // a^k == a^(k/2)^2\n    if(k==0) return 1;          // \u6b21\u65b9\u4e3a 0\n    LL res = qmi(a, k&gt;&gt;1, p);   // \u8ba1\u7b97 a^(k/2)\n    if(!(k&amp;1)) return (res%p * res%p) % p; \n    return (res%p * res%p * a) % p; // \u5bf9\u4e8e\u4e0d\u80fd\u9664\u5c3d\u7684, \u8fd8\u9700\u518d *a\n}\n</code></pre>"},{"location":"src/more/old/algorithm/index_new/#_11","title":"\u8fdb\u5236\u8f6c\u6362","text":"<ul> <li>\u4f5c\u7528\uff1a\u5c06 \\(num_a\\) \u8f6c\u6362\u4e3a \\(num_b\\)</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\u5176\u4e2d \\(n\\) \u4e3a \\(num\\) \u7684\u957f\u5ea6</li> <li>\u6838\u5fc3\u601d\u60f3\uff1a</li> </ul> C++<pre><code>string num_a2b(string num, int a, int b) {\n    string res = \"0\", p = \"1\"; // \u5c06 a \u8fdb\u5236\u4e0b\u7684 num \u8f6c\u6362\u4e3a 10 \u8fdb\u5236\n    for (int i = num.size() - 1; i &gt;= 0; i--) {\n        int t; // \u5224\u65ad\u5f53\u524d\u4f4d\u6570\u5b57\u662f\u591a\u5c11\n        if (num[i] &gt;= '0' &amp;&amp; num[i] &lt;= '9') t = num[i] - '0';\n        if (num[i] &gt;= 'A' &amp;&amp; num[i] &lt;= 'Z') t = num[i] - 'A' + 10;\n        //if(num[i]&gt;='a' &amp;&amp; num[i]&lt;='z') t=num[i]-'a'+10;\n        res = ADD(res, MUL(p, t));//res+=t*p; // t*(a^0, a^1, a^2)\n        p = MUL(p, a); //p*=a; // (a^0, a^1, a^2)\n    }\n    if (b == 10) return res;\n    num = res; res = \"\"; // \u5c06 10 \u8fdb\u5236\u4e0b\u7684 num \u8f6c\u6362\u4e3a b \u8fdb\u5236\n    while (num != \"0\") {\n        int r;\n        num = DIV(num, b, r);\n        if (r &gt;= 0 &amp;&amp; r &lt;= 9) r += '0';\n        else r += 'A' - 10;\n        res += r;\n    }\n    reverse(res.begin(), res.end());\n    return res;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/index_new/#_12","title":"\u7ebf\u7b5b / \u6b27\u62c9\u7b5b","text":"<ul> <li>\u4f5c\u7528\uff1a\u751f\u6210\u7d20\u6570</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</li> <li>\u6838\u5fc3\u601d\u60f3\uff1a\u8ba9\u6bcf\u4e2a\u5408\u6570\u53ea\u88ab\u5b83\u7684\u6700\u5c0f\u8d28\u56e0\u5b50\u7b5b\u9009\u4e00\u6b21</li> </ul> C++<pre><code>bool st[N]={1, 1};  // 0,1 \u4e0d\u662f\u7d20\u6570\nint primes[N];      // \u7d20\u6570\u96c6, primes[0] \u4e3a\u7d20\u6570\u4e2a\u6570\n\nvoid makePrimes(int n){// \u751f\u6210 [2,n] \u7684\u7d20\u6570\n    for(int i=2; i&lt;=n; i++){\n        if(!st[i]) primes[++(*primes)]=i;   // \u767b\u8bb0\u7d20\u6570\n        for(int j=1; j&lt;=(*primes) &amp;&amp; primes[j]&lt;=n/i; j++){\n            st[primes[j]*i]=1;              // \u7b5b\u6389\n            if(i%primes[j]==0) break;       // i \u662f primes[j] \u7684\u500d\u6570\n        }   // \u5982\u679c i \u662f primes[j] \u7684\u500d\u6570, primes[j] \u5c31\u662f\u5176\u6700\u5c0f\u8d28\u56e0\u5b50\n    }       // \u56e0\u6b64, \u6211\u4eec\u4e0d\u5fc5\u7528\u5176\u4ed6\u8d28\u56e0\u5b50\u53bb\u7b5b\u4e86\n}\n</code></pre>"},{"location":"src/more/old/algorithm/index_new/#_13","title":"\u516d\u500d\u539f\u7406","text":"<ul> <li>\u4f5c\u7528\uff1a\u5224\u65ad\u67d0\u6570\u662f\u5426\u662f\u7d20\u6570</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a</li> <li>\u6838\u5fc3\u601d\u60f3\uff1a\u7d20\u6570\u53ea\u53ef\u80fd\u51fa\u73b0\u5728 \\(6\\) \u7684\u500d\u6570\u9644\u8fd1\uff0c\u5927\u4e8e \\(3\\) \u7684\u8d28\u6570\u4e00\u5b9a\u4e3a \\(6 * i \\pm 1\\)</li> </ul> C++<pre><code>bool isPrime(LL x){\n    if(x==2 || x==3   || x==5   ) return 1;\n    if(x&lt;2  ||(x%6!=1 &amp;&amp; x%6!=5)) return 0; // \u4e0d\u4e0e6\u7684\u500d\u6570\u76f8\u90bb \n    for(LL i=5; i&lt;=x/i; i+=6)  // \u4e0e6\u76f8\u90bb, \u4f46\u53c8\u6709\u4e86\u56e0\u5b50 \n        if(x%i==0 || x%(i+2)==0) return 0;\n    return 1;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/index_new/#_14","title":"\u6570\u636e\u7ed3\u6784","text":""},{"location":"src/more/old/algorithm/index_new/#_15","title":"\u6808","text":""},{"location":"src/more/old/algorithm/index_new/#_16","title":"\u961f\u5217","text":""},{"location":"src/more/old/algorithm/index_new/#_17","title":"\u5355\u8c03\u6808","text":""},{"location":"src/more/old/algorithm/index_new/#_18","title":"\u5355\u8c03\u961f\u5217","text":""},{"location":"src/more/old/algorithm/index_new/#_19","title":"\u5e76\u67e5\u96c6","text":"<ol> <li> <p>\u6734\u7d20\u5e76\u67e5\u96c6</p> </li> <li> <p>\u4f5c\u7528\uff1a</p> </li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a</li> <li>\u6838\u5fc3\u601d\u60f3\uff1a</li> </ol> C++<pre><code>// \u521d\u59cb\u5316\nfor(int i=1; i&lt;=n; i++) p[i]=i;     // \u81ea\u5df1\u662f\u81ea\u5df1\u7684\u7956\u5148\n// \u67e5\u627e\nint find(int x){                    // \u627e x \u7684\u7956\u5148\n    if(p[x] != x) p[x] = find(p[x]);// \u5982\u679c x \u7684\u7956\u5148\u4e0d\u662f\u81ea\u5df1\n    return p[x];                    // \u4f1a\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u5408\u5e76\n}\n// \u5408\u5e76\np[find(a)] = find(b);               // a -&gt; b\n</code></pre> <ol> <li> <p>\u7ef4\u62a4\u6570\u91cf\u7684\u5e76\u67e5\u96c6</p> </li> <li> <p>\u4f5c\u7528\uff1a</p> </li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a</li> <li>\u6838\u5fc3\u601d\u60f3\uff1a</li> </ol>"},{"location":"src/more/old/algorithm/index_new/#_20","title":"\u7ebf\u6bb5\u6811","text":"C++<pre><code>#include &lt;stdio.h&gt;\n\ntypedef long long int LL;\n\n#define N 1000010\n#define max(a, b) ((a) &gt; (b) ? (a) : (b))\n#define min(a, b) ((a) &lt; (b) ? (a) : (b))\n\ntypedef struct {\n    int l, r;\n    LL mul;     // lazytag \u4e58\n    LL add;     // lazytag \u52a0\n    LL upd;     // lazytag \u6539\n    int d;      // \u662f\u5426\u6709 upd \u64cd\u4f5c\n    LL sum;     // \u7ef4\u62a4\u7684\u7ed3\u679c\u4eec\n    LL mmax;    \n    LL mmin;\n} node;\n\nnode tr[4*N];\nLL a[N];\n//LL MOD = 1e18;\nLL inf = 1e18;\n\nvoid pushup(int u){\n    tr[u].sum = (tr[u&lt;&lt;1].sum + tr[u&lt;&lt;1|1].sum);// % MOD;\n    tr[u].mmax = max(tr[u&lt;&lt;1].mmax, tr[u&lt;&lt;1|1].mmax);\n    tr[u].mmin = min(tr[u&lt;&lt;1].mmin, tr[u&lt;&lt;1|1].mmin);\n}   // \u5c06 u \u8282\u70b9\u5de6\u53f3\u5b50\u6811\u7684\u4fe1\u606f\u66f4\u65b0\u5230 u \u8282\u70b9\uff0c\u901a\u5e38\u662f\u7ed3\u679c\u4e0a\u4f20\n\nvoid pushdown(int u){\n    int l = u &lt;&lt; 1;\n    int r = u &lt;&lt; 1 | 1;\n\n    if(tr[u].d == 1){   // \u5b58\u5728\u4fee\u6539\n        // \u66f4\u65b0 \u503c\n        tr[l].sum = (tr[u].upd * (tr[l].r - tr[l].l + 1));// % MOD;\n        tr[r].sum = (tr[u].upd * (tr[r].r - tr[r].l + 1));// % MOD;\n        tr[l].mmax= tr[u].upd;\n        tr[r].mmax= tr[u].upd;\n        tr[l].mmin= tr[u].upd;\n        tr[r].mmin= tr[u].upd;\n        // \u66f4\u65b0\u61d2\u6807\n        tr[l].upd = tr[u].upd;\n        tr[r].upd = tr[u].upd;\n        tr[l].d = 1;\n        tr[r].d = 1;\n        // \u9700\u8981\u4e00\u5e76\u6e05\u9664\u5b50\u6811 mul add\n        tr[l].mul = 1;\n        tr[r].mul = 1;\n        tr[l].add = 0;\n        tr[r].add = 0;\n        // \u7236\u8282\u70b9 lazytag \u6062\u590d\u521d\u59cb\n        tr[u].upd = 0;\n        tr[u].d = 0;\n    }\n\n    // \u66f4\u65b0\u503c\n    tr[l].sum = (tr[u].mul * tr[l].sum + tr[u].add * (tr[l].r - tr[l].l + 1));// % MOD;\n    tr[r].sum = (tr[u].mul * tr[r].sum + tr[u].add * (tr[r].r - tr[r].l + 1));// % MOD;\n    tr[l].mmax= (tr[u].mul * tr[l].mmax+ tr[u].add);// % MOD;\n    tr[r].mmax= (tr[u].mul * tr[r].mmax+ tr[u].add);// % MOD;\n    tr[l].mmin= (tr[u].mul * tr[l].mmin+ tr[u].add);// % MOD;\n    tr[r].mmin= (tr[u].mul * tr[r].mmin+ tr[u].add);// % MOD;\n    // \u66f4\u65b0\u61d2\u6807\n    tr[l].mul = tr[l].mul  * tr[u].mul;// % MOD;\n    tr[r].mul = tr[r].mul  * tr[u].mul;// % MOD;\n    tr[l].add = (tr[l].add * tr[u].mul + tr[u].add);// % MOD;\n    tr[r].add = (tr[r].add * tr[u].mul + tr[u].add);// % MOD;\n    // \u7236\u8282\u70b9 lazytag \u6062\u590d\u521d\u59cb\n    tr[u].mul = 1;\n    tr[u].add = 0;\n\n}   // \u5c06 u \u8282\u70b9\u7684\u4fe1\u606f\u66f4\u65b0\u5230 u \u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\uff0c\u4e3b\u8981\u662f\u61d2\u6807\u8bb0\u66f4\u65b0\n\n\nvoid modify_mul(int u, int l, int r, LL v){\n    if(l &gt; tr[u].r  || tr[u].l &gt; r) return; // \u6ca1\u6709\u4ea4\u96c6\n    if(l &lt;= tr[u].l &amp;&amp; tr[u].r &lt;= r){       // \u5b8c\u5168\u5305\u542b\n        tr[u].mul = (tr[u].mul * v);// % MOD;\n        tr[u].add = (tr[u].add * v);// % MOD;\n        // \u4fee\u6539 u\uff08\u76f4\u63a5\u901a\u8fc7 v \u4fee\u6539\uff09\n        tr[u].sum = (tr[u].sum * v);// % MOD; \n        tr[u].mmax= (tr[u].mmax* v);// % MOD; \n        tr[u].mmin= (tr[u].mmin* v);// % MOD; \n        return;\n    }\n    pushdown(u);\n    modify_mul(u&lt;&lt;1,   l, r, v);\n    modify_mul(u&lt;&lt;1|1, l, r, v);\n    pushup(u);\n}\n\n\nvoid modify_add(int u, int l, int r, LL v){\n    if(l &gt; tr[u].r  || tr[u].l &gt; r) return;\n    if(l &lt;= tr[u].l &amp;&amp; tr[u].r &lt;= r){\n        tr[u].add = (tr[u].add + v);// % MOD;\n        // \u4fee\u6539 u\uff08\u76f4\u63a5\u901a\u8fc7 v \u4fee\u6539\uff09\n        tr[u].sum = (tr[u].sum + v * (tr[u].r - tr[u].l + 1));// % MOD;\n        tr[u].mmax= (tr[u].mmax+ v);// % MOD;\n        tr[u].mmin= (tr[u].mmin+ v);// % MOD;\n        return;\n    }\n    pushdown(u);\n    modify_add(u&lt;&lt;1,   l, r, v);\n    modify_add(u&lt;&lt;1|1, l, r, v);\n    pushup(u);\n}\n\nvoid modify_upd(int u, int l, int r, LL v){\n    if(l &gt; tr[u].r  || tr[u].l &gt; r) return;\n    if(l &lt;= tr[u].l &amp;&amp; tr[u].r &lt;= r){\n        tr[u].mul = 1;  // \u65e0\u89c6\n        tr[u].add = 0;  // \u65e0\u89c6\n        tr[u].upd = v;\n        tr[u].d = 1;    // \u5b58\u5728\u4fee\u6539\n        // \u4fee\u6539 u\uff08\u76f4\u63a5\u901a\u8fc7 v \u4fee\u6539\uff09\n        tr[u].sum = (v * (tr[u].r - tr[u].l + 1));// % MOD;\n        tr[u].mmax= v;\n        tr[u].mmin= v;\n        return;\n    }\n    pushdown(u);\n    modify_upd(u&lt;&lt;1,   l, r, v);\n    modify_upd(u&lt;&lt;1|1, l, r, v);\n    pushup(u);\n}\n\nnode query(int u, int l, int r) {\n    if(l &gt; tr[u].r || tr[u].l &gt; r){\n        node T = {0, 0, 1, 0, 0, 0, 0, -inf, inf};\n        return T;\n    }\n    if(l &lt;= tr[u].l &amp;&amp; tr[u].r &lt;= r) return tr[u];\n    pushdown(u);\n    node ans;   // \u5408\u5e76\u7b54\u6848\n    node left = query(u&lt;&lt;1,   l, r);\n    node right= query(u&lt;&lt;1|1, l, r);\n    ans.sum = (left.sum + right.sum);// % MOD;\n    ans.mmax= max(left.mmax, right.mmax);\n    ans.mmin= min(left.mmin, right.mmin);\n    return ans;\n}\n\nvoid build(int u, int l, int r){\n    tr[u].l = l;\n    tr[u].r = r;\n    tr[u].mul = 1;\n    // \u5176\u4f59\u4e3a 0\n    if(l == r) {\n        tr[u].sum = a[l];\n        tr[u].mmax= a[l];\n        tr[u].mmin= a[l];\n    }else{\n        int mid = (l + r) &gt;&gt; 1;\n        build(u &lt;&lt; 1, l, mid);\n        build(u &lt;&lt; 1 | 1, mid + 1, r);\n        pushup(u);\n    }\n}\n\nint n, q;\n\nint main(){\n    scanf(\"%d%d\", &amp;n, &amp;q);\n    for(int i=1; i&lt;=n; i++) scanf(\"%lld\", a+i);\n\n    build(1, 1, n);\n\n    for(int i=1; i&lt;=n; i++){\n        LL op, l, r, v;\n        scanf(\"%lld %lld %lld\", &amp;op, &amp;l, &amp;r);\n        if(op == 1){\n            scanf(\"%lld\", &amp;v);\n            modify_upd(1, l, r, v);\n        }else if(op == 2){\n            scanf(\"%lld\", &amp;v);\n            modify_add(1, l, r, v);\n        }else if(op == 3){\n            printf(\"%lld\\n\", query(1, l, r).mmax);\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/index_new/#_21","title":"\u56fe\u8bba","text":""},{"location":"src/more/old/algorithm/index_new/#lca","title":"LCA","text":""},{"location":"src/more/old/algorithm/index_new/#_22","title":"\u8ba1\u7b97\u51e0\u4f55","text":""},{"location":"src/more/old/algorithm/index_new/#game","title":"game","text":""},{"location":"src/more/old/algorithm/index_new/#ccf-j","title":"CCF-J","text":""},{"location":"src/more/old/algorithm/index_new/#cie","title":"CIE","text":""},{"location":"src/more/old/algorithm/index_new/#gesp","title":"GESP","text":""},{"location":"src/more/old/algorithm/0%20%E5%85%A5%E9%97%A8/%E5%87%BD%E6%95%B0/","title":"\u51fd\u6570\u8c03\u7528","text":"Luogu P5735 \u3010\u6df1\u57fa7.\u4f8b1\u3011\u8ddd\u79bb\u51fd\u6570 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cmath&gt;\nusing namespace std;\n\n#define fst first\n#define sed second\ntypedef pair&lt;double, double&gt; PII;\n\ndouble dis(PII a, PII b){\n    return sqrt((pow(b.fst-a.fst, 2)+pow(b.sed-a.sed, 2)));\n}\n\nint main(){\n    //freopen(\"in\", \"r\", stdin); freopen(\"out\", \"w\", stdout);\n    PII x, y, z;\n    cin&gt;&gt;x.fst&gt;&gt;x.sed;\n    cin&gt;&gt;y.fst&gt;&gt;y.sed;\n    cin&gt;&gt;z.fst&gt;&gt;z.sed;\n\n    printf(\"%.2lf\", dis(x,y)+dis(y,z)+dis(x,z));\n\n    return 0;\n}\n</code></pre> Luogu P5736 \u3010\u6df1\u57fa7.\u4f8b2\u3011\u8d28\u6570\u7b5b code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint n;\n\nbool is_prime(int x){\n    if(x&lt;=1) return 0;\n    for(int i=2; i&lt;=x/i; i++)\n        if(x%i == 0) return 0;\n    return 1;\n}\n\nint main(){\n    cin&gt;&gt;n;\n    while(cin&gt;&gt;n)\n        if(is_prime(n)) \n            cout&lt;&lt;n&lt;&lt;\" \";\n\n    return 0;\n}\n</code></pre> Luogu P5737 \u3010\u6df1\u57fa7.\u4f8b3\u3011\u95f0\u5e74\u5c55\u793a code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\n#define pb push_back\n\nvector&lt;int&gt; ans;\n\nbool ck(int y){\n    if( y%400==0 || (y%4==0 &amp;&amp; y%100) ) return 1;\n    return 0;\n}\n\nint main(){\n    //freopen(\"in\", \"r\", stdin); freopen(\"out\", \"w\", stdout);\n    int a, b; cin&gt;&gt;a&gt;&gt;b;\n    while(a&lt;=b){\n        if(ck(a)) ans.pb(a);\n        a++;\n    }\n    cout&lt;&lt;ans.size()&lt;&lt;\"\\n\";\n    for(auto i: ans)\n        cout&lt;&lt;i&lt;&lt;\" \";\n    return 0;\n}\n</code></pre> Luogu P5738 \u3010\u6df1\u57fa7.\u4f8b4\u3011\u6b4c\u5531\u6bd4\u8d5b code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint n, m;\ndouble ans=-1;\n\ndouble res(int *arr){\n    int a=11, b=-1, c=0;\n    for(int i=0; i&lt;m; i++){\n        c+=arr[i];\n        a=min(a, arr[i]);\n        b=max(b, arr[i]);\n    }\n    return (c-a-b+0.0) / (m-2.0);\n}\n\nint main(){\n    //freopen(\"in\", \"r\", stdin); freopen(\"out\", \"w\", stdout);\n    cin&gt;&gt;n&gt;&gt;m;\n    while(n--){\n        int a[m];\n        for(int i=0; i&lt;m; i++) scanf(\"%d\", a+i);\n        ans=max(ans, res(a));\n    }\n    printf(\"%.2lf\", ans);\n\n    return 0;\n}\n</code></pre> Luogu P5739 \u3010\u6df1\u57fa7.\u4f8b7\u3011\u8ba1\u7b97\u9636\u4e58 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint f(int n){\n    return n==1 ? 1: n * f(n-1);\n}\n\nint main(){\n    //freopen(\"in\", \"r\", stdin); freopen(\"out\", \"w\", stdout);\n    int n; cin&gt;&gt;n;\n    cout&lt;&lt;f(n);\n    return 0;\n}\n</code></pre> Luogu P5461 \u8d66\u514d\u6218\u4fd8 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = (1&lt;&lt;10)+10;\n\nint g[N][N];\nint n;\n\nvoid deal(int xs, int xm, int xe, int ys, int ym, int ye, int l){\n    if(xs&gt;=xe) return ;\n    if(ys&gt;=ye) return ;\n\n    for(int i=ys; i&lt;=ym; i++)\n        for(int j=xs; j&lt;=xm; j++)\n            g[i][j]=0;\n\n    deal(xm+1, (xm+xe)/2, xe, ys, (ys+ym)/2, ym, l/2);\n    deal(xm+1, (xm+xe)/2, xe, ym+1, (ym+ye)/2, ye, l/2);\n    deal(xs, (xs+xm)/2, xm, ym+1, (ym+ye)/2, ye, l/2);\n}\n\nint main(){\n    //freopen(\"in\", \"r\", stdin); freopen(\"out\", \"w\", stdout);\n    cin&gt;&gt;n; n=1&lt;&lt;n;    \n    for(int i=1; i&lt;=n; i++) \n        for(int j=1; j&lt;=n; j++)\n            g[i][j]=1;\n\n    deal(1, n/2, n, 1, n/2, n, n/2);\n\n    for(int i=1; i&lt;=n; i++, cout&lt;&lt;\"\\n\")\n        for(int j=1; j&lt;=n; j++)\n            cout&lt;&lt;g[i][j]&lt;&lt;\" \";\n\n    return 0;\n}\n</code></pre> Luogu P1304 \u54e5\u5fb7\u5df4\u8d6b\u731c\u60f3 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1e4+10;\n\nbool p[N];  // p[2] = 1, \u8868\u793a 2 \u662f\u7d20\u6570\nint n;\n\nvoid make_primes(int m){\n    for(int i=2; i&lt;=m; i++){// \u5224\u65adi\u662f\u4e0d\u662f\u7d20\u6570\n        bool flg=1;\n        for(int j=2; j&lt;=i/j &amp;&amp; flg; j++)\n            if( i%j == 0) flg=0;\n        if(flg) p[i]=1; // i\u662f\u7d20\u6570\n    }\n}\n\nint main(){\n    cin&gt;&gt;n;\n    make_primes(n); // n\u4ee5\u5185\u7684\u7d20\u6570\u96c6\n\n    //for(int i=1; i&lt;=n; i++) cout&lt;&lt;i&lt;&lt;\" \"&lt;&lt;p[i]&lt;&lt;\"\\n\";\n\n    for(int i=4; i&lt;=n; i+=2)\n        for(int j=2; j&lt;=n; j++)\n            if(p[j] &amp;&amp; p[i-j]){\n                printf(\"%d=%d+%d\\n\", i, j, i-j);\n                break;\n            }\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/0%20%E5%85%A5%E9%97%A8/%E5%87%BD%E6%95%B0/#_2","title":"\u7ed3\u6784\u4f53","text":"Luogu P5740 \u3010\u6df1\u57fa7.\u4f8b9\u3011\u6700\u5389\u5bb3\u7684\u5b66\u751f code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\nusing namespace std;\n\nconst int N=1e3;\n\nint n;    \nstring A;\nint B=-1, C=-1, D=-1;\n\nint main(){\n    //freopen(\"in.txt\", \"r\", stdin); freopen(\"out.txt\", \"w\", stdout);\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++){\n        string a;\n        int b, c, d;\n        cin&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d;\n        if(b+c+d &gt; B+C+D){\n            A=a;\n            B=b;\n            C=c;\n            D=d;\n        }\n    } \n    cout&lt;&lt;A&lt;&lt;\" \"&lt;&lt;B&lt;&lt;\" \"&lt;&lt;C&lt;&lt;\" \"&lt;&lt;D&lt;&lt;\" \";\n\n    return 0;\n}\n</code></pre> Luogu P5741 \u3010\u6df1\u57fa7.\u4f8b10\u3011\u65d7\u9f13\u76f8\u5f53\u7684\u5bf9\u624b - \u52a0\u5f3a\u7248 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nconst int N=1e3+10;\n\nstruct stu{\n    string n;\n    int a, b, c, d;\n};\n\nstu arr[N];\nint n;\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++){\n        cin&gt;&gt;arr[i].n&gt;&gt;arr[i].a&gt;&gt;arr[i].b&gt;&gt;arr[i].c; \n        arr[i].d = arr[i].a + arr[i].b + arr[i].c;\n    }\n\n    for(int i=1; i&lt;=n; i++)\n        for(int j=i+1; j&lt;=n; j++)\n            if( abs(arr[j].d - arr[i].d) &lt;= 10 &amp;&amp;\n                abs(arr[j].a - arr[i].a) &lt;= 5 &amp;&amp;\n                abs(arr[j].b - arr[i].b) &lt;= 5 &amp;&amp;\n                abs(arr[j].c - arr[i].c) &lt;= 5 )\n                cout&lt;&lt;arr[i].n&lt;&lt;\" \"&lt;&lt;arr[j].n&lt;&lt;\"\\n\";\n\n    return 0;\n}\n</code></pre> Luogu P5742 \u3010\u6df1\u57fa7.\u4f8b11\u3011\u8bc4\u7b49\u7ea7 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main(){\n    int T; cin&gt;&gt;T;\n    while(T--){\n        int a, b, c;\n        cin&gt;&gt;a&gt;&gt;a&gt;&gt;b;\n        c=a*7+b*3;\n\n        if((a+b)&gt;140 &amp;&amp; c&gt;=800)\n            puts(\"Excellent\");\n        else\n            puts(\"Not excellent\");\n        //cout&lt;&lt;a&lt;&lt;\" \"&lt;&lt;b&lt;&lt;\"\\n\";\n    }\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/0%20%E5%85%A5%E9%97%A8/%E5%87%BD%E6%95%B0/#_3","title":"\u7ec3\u4e60","text":"Luogu P2415 \u96c6\u5408\u6c42\u548c code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cmath&gt;\nusing namespace std;\n\n// \u627e\u89c4\u5f8b\u7684\u9898\n// \u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\u662f\u76f8\u540c\u7684 2^(n-1)\n\nint main(){\n    long long x, res=0, n=0;\n    while(cin&gt;&gt;x) res+=x, n++;\n    cout&lt;&lt;res * (long long)pow(2, n-1);\n    return 0;\n}\n</code></pre> Luogu P5743 \u3010\u6df1\u57fa7.\u4e608\u3011\u7334\u5b50\u5403\u6843 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint n;\nlong long res=1;\n\nint main(){\n    cin&gt;&gt;n;\n\n    for(int i=1; i&lt;n; i++)\n        res = (res+1)*2;\n\n    cout&lt;&lt;res;\n\n    return 0;\n}\n</code></pre> Luogu P5744 \u3010\u6df1\u57fa7.\u4e609\u3011\u57f9\u8bad code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nint n;\n\nint main(){\n    cin&gt;&gt;n;\n    while(n--){\n        string s;\n        int a, b;\n        cin&gt;&gt;s&gt;&gt;a&gt;&gt;b;\n\n        cout&lt;&lt;s&lt;&lt;\" \"&lt;&lt;a+1&lt;&lt;\" \"&lt;&lt;min(600, (int)(b*1.2))&lt;&lt;\"\\n\";\n    }\n    return 0;\n}\n</code></pre> <p>\u6d1b\u8c37\u9898\u5355 \u51fd\u6570</p> <p>\u4e00\u672c\u901a \u7b2c\u4e00\u90e8\u5206 C++\u8bed\u8a00 --&gt; \u7b2c\u516d\u7ae0 \u51fd\u6570</p>"},{"location":"src/more/old/algorithm/0%20%E5%85%A5%E9%97%A8/%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/","title":"if else","text":"Luogu P5711 \u3010\u6df1\u57fa3.\u4f8b3\u3011\u95f0\u5e74\u5224\u65ad code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint n;\n\nint main(){\n    cin&gt;&gt;n;\n    if( (n%4==0 &amp;&amp; n%100!=0) || n%400==0 )\n        cout&lt;&lt;1;\n    else\n        cout&lt;&lt;0;\n\n    return 0;\n}\n</code></pre> Luogu P5712 \u3010\u6df1\u57fa3.\u4f8b4\u3011Apples code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main(){\n    int x; cin&gt;&gt;x;\n\n    if(x==0)\n        printf(\"Today, I ate 0 apple.\");\n    else if(x==1)\n        printf(\"Today, I ate 1 apple.\");\n    else \n        printf(\"Today, I ate %d apples.\", x);\n\n    return 0;\n}\n</code></pre> <p>\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684 <code>months</code> \u6570\u7ec4, \u5373\u53ef\u5feb\u901f\u5bf9\u5e74\u6708\u65e5\u8fdb\u884c\u5904\u7406</p> Luogu P5716 \u3010\u6df1\u57fa3.\u4f8b9\u3011\u6708\u4efd\u5929\u6570 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint months[]={0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};\n\nint main(){\n    int y, m;\n    cin&gt;&gt;y&gt;&gt;m;\n    if((y%4==0 &amp;&amp; y%100!=0) || (y%400==0))\n        months[2]=29;\n    cout&lt;&lt;months[m];\n    return 0;\n}\n</code></pre> <p>\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\u7684\u9898\u76ee, \u5e94\u8be5\u5982\u4f55\u5d4c\u5957 if else, \u4f7f\u5f97\u4ee3\u7801\u66f4\u7b80\u6d01, \u6e05\u6670?</p> Luogu P5717 \u3010\u6df1\u57fa3.\u4e608\u3011\u4e09\u89d2\u5f62\u5206\u7c7b code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;cmath&gt;\nusing namespace std;\n\nint a[3];\n\nint main(){\n    cin&gt;&gt;a[0]&gt;&gt;a[1]&gt;&gt;a[2];\n    sort(a, a+3);\n\n    if(a[0]+a[1]&gt;a[2]){  // \u4efb\u610f\u4e24\u8fb9\u548c\u5927\u4e8e\u7b2c\u4e09\u8fb9\n        if(pow(a[0], 2)+pow(a[1], 2) == pow(a[2], 2))\n            cout&lt;&lt;\"Right triangle\\n\";\n        if(pow(a[0], 2)+pow(a[1], 2) &gt; pow(a[2], 2))\n            cout&lt;&lt;\"Acute triangle\\n\";\n        if(pow(a[0], 2)+pow(a[1], 2) &lt; pow(a[2], 2))\n            cout&lt;&lt;\"Obtuse triangle\\n\";\n        if(a[0]==a[1] || a[1]==a[2]) \n            cout&lt;&lt;\"Isosceles triangle\\n\";\n        if(a[0]==a[1] &amp;&amp; a[2]==a[1])\n            cout&lt;&lt;\"Equilateral triangle\\n\";\n    }\n    else\n        cout&lt;&lt;\"Not triangle\\n\";\n    return 0;\n}\n</code></pre> Luogu P1424 \u5c0f\u9c7c\u7684\u822a\u7a0b\uff08\u6539\u8fdb\u7248\uff09 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint x, n, ans;\n\nint main(){\n    cin&gt;&gt;x&gt;&gt;n;\n    for(int m=1; m&lt;=n; m++){\n\n        if(x!=7 &amp;&amp; x!=6)\n            ans+=250;\n\n        if(x==7) x=1;\n        else x++;\n    }\n    cout&lt;&lt;ans;\n    return 0;\n}\n</code></pre> Luogu P1888 \u4e09\u89d2\u51fd\u6570 code  &gt; \u5927\u8fb9\u5bf9\u5927\u89d2, \u5c0f\u8fb9\u5bf9\u5c0f\u89d2, \u56e0\u6b64\u659c\u8fb9\u548c\u6700\u77ed\u8fb9\u5bf9\u5e94\u7684\u5c31\u662f\u6700\u5c0f\u9510\u89d2  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;cmath&gt;\nusing namespace std;\n\nint a[3];\n\nint gcd(int a, int b){\n    return b&gt;0 ? gcd(b, a%b):a;\n}\n\nint main(){\n    cin&gt;&gt;a[0]&gt;&gt;a[1]&gt;&gt;a[2];\n    sort(a, a+3);\n\n    cout&lt;&lt;a[0]/gcd(a[0], a[2])&lt;&lt;\"/\"&lt;&lt;a[2]/gcd(a[0], a[2]);\n\n    return 0;\n}\n</code></pre> Luogu P4414 [COCI2006-2007#2] ABC code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nint a[3];\n\nint main(){\n    for(int i=0; i&lt;3; i++) cin&gt;&gt;a[i];\n    sort(a, a+3);\n\n    string s;\n    cin&gt;&gt;s;\n    for(int i=0; i&lt;s.size(); i++)\n        if(s[i]=='A')\n            cout&lt;&lt;a[0]&lt;&lt;\" \";\n        else if(s[i]=='B')\n            cout&lt;&lt;a[1]&lt;&lt;\" \";\n        else\n            cout&lt;&lt;a[2]&lt;&lt;\" \";\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/0%20%E5%85%A5%E9%97%A8/%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/#switch-case","title":"switch case","text":"Luogu P2433 \u3010\u6df1\u57fa1-2\u3011\u5c0f\u5b66\u6570\u5b66 N \u5408\u4e00 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cmath&gt;\nusing namespace std;\n\nint n;\n\nint main(){\n    cin&gt;&gt;n;\n    switch(n){\n        case 1:{\n            cout&lt;&lt;\"I love Luogu!\\n\";\n            break;\n        }\n        case 2:{\n            cout&lt;&lt;2+4&lt;&lt;\" \"&lt;&lt;10-2-4&lt;&lt;\"\\n\";\n            break;\n        }\n        case 3:{\n            int a=14/4;\n            cout&lt;&lt;a&lt;&lt;\"\\n\";\n            cout&lt;&lt;a*4&lt;&lt;\"\\n\";\n            cout&lt;&lt;14-a*4&lt;&lt;\"\\n\";\n            break;\n        }\n        case 4:{\n            cout&lt;&lt;500.0/3&lt;&lt;\"\\n\";\n            break;\n        }\n        case 5:{\n            cout&lt;&lt;(260+220)/(12+20)&lt;&lt;\"\\n\";\n            break;\n        }\n        case 6:{\n            double a=6,b=9;\n            double c=sqrt(a*a+b*b);\n            cout&lt;&lt;c&lt;&lt;\"\\n\";\n            break;\n        }\n        case 7:{\n            int a=100;\n            a+=10;\n            cout&lt;&lt;a&lt;&lt;\"\\n\";\n            a-=20;\n            cout&lt;&lt;a&lt;&lt;\"\\n\";\n            a=0;\n            cout&lt;&lt;a&lt;&lt;\"\\n\";\n            break;\n        }\n        case 8:{\n            int r=5;\n            double pi=3.141593;\n            cout&lt;&lt;2*pi*r&lt;&lt;\"\\n\";\n            cout&lt;&lt;r*r*pi&lt;&lt;\"\\n\";\n            cout&lt;&lt;4.0/3*pi*r*r*r&lt;&lt;\"\\n\";\n            break;\n        }\n        case 9:{\n            cout&lt;&lt;(((1+1)*2+1)*2+1)*2&lt;&lt;\"\\n\";\n            break;\n        }\n        case 10:{\n            cout&lt;&lt;9&lt;&lt;\"\\n\";\n            break;\n        }\n        case 11:{\n            cout&lt;&lt;100.0/(8-5)&lt;&lt;\"\\n\";\n            break;\n        }\n        case 12:{\n            cout&lt;&lt;'M'-'A'+1&lt;&lt;\"\\n\";\n            cout&lt;&lt;char('A'-1+18)&lt;&lt;\"\\n\";\n            break;\n        }\n        case 13:{\n            int r1=4,r2=10;\n            double pi=3.141593;\n            double v=4.0/3*pi*r1*r1*r1+4.0/3*pi*r2*r2*r2;\n            v=pow(v,1.0/3);\n            printf(\"%.0lf\\n\",v);\n            break;\n        }\n        case 14:{\n            cout&lt;&lt;50&lt;&lt;\"\\n\";\n            break;\n        }\n    }\n    return 0;\n}\n</code></pre> <p>\u6d1b\u8c37\u9898\u5355 \u5206\u652f\u7ed3\u6784</p> <p>\u4e00\u672c\u901a \u7b2c\u4e00\u90e8\u5206 C++\u8bed\u8a00 --&gt; \u7b2c\u4e09\u7ae0 \u7a0b\u5e8f\u7684\u63a7\u5236\u7ed3\u6784</p>"},{"location":"src/more/old/algorithm/0%20%E5%85%A5%E9%97%A8/%E5%AD%97%E7%AC%A6%E4%B8%B2/","title":"\u5b57\u7b26\u4e32\u5904\u7406","text":"Luogu P5734 \u3010\u6df1\u57fa6.\u4f8b6\u3011\u6587\u5b57\u5904\u7406\u8f6f\u4ef6 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nconst int N=1;\n\nint q;\nstring s;\n\nint main(){\n    cin&gt;&gt;q&gt;&gt;s;\n    while(q--){\n        int op; cin&gt;&gt;op;\n        if(op==1){\n            string t; cin&gt;&gt;t;\n            s+=t;\n            cout&lt;&lt;s&lt;&lt;\"\\n\";\n        }\n        if(op==2){\n            int a, b; cin&gt;&gt;a&gt;&gt;b;\n            s = s.substr(a,b);\n            cout&lt;&lt;s&lt;&lt;\"\\n\";\n        }\n        if(op==3){\n            int a;\n            string t; cin&gt;&gt;a&gt;&gt;t;\n            s.insert(a, t);\n            cout&lt;&lt;s&lt;&lt;\"\\n\";\n        }\n        if(op==4){\n            string t; cin&gt;&gt;t;\n            int pos = s.find(t);\n            if(pos == s.npos)\n                cout&lt;&lt;\"-1\\n\";\n            else\n                cout&lt;&lt;pos&lt;&lt;\"\\n\";\n        }\n    }\n\n    return 0;\n}\n</code></pre> Luogu P1125 [NOIP2008 \u63d0\u9ad8\u7ec4] \u7b28\u5c0f\u7334 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;map&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nchar c;\n\nmap&lt;char, int&gt; cnt;\n\nbool is_prime(LL x){\n    if(x==2 || x==3   || x==5   ) return 1;\n    if(x&lt;2  ||(x%6!=1 &amp;&amp; x%6!=5)) return 0; // \u4e0d\u4e0e6\u7684\u500d\u6570\u76f8\u90bb \n    for(LL i=5; i&lt;=x/i; i+=6)  // \u4e0e6\u76f8\u90bb, \u4f46\u53c8\u6709\u4e86\u56e0\u5b50 \n        if(x%i==0 || x%(i+2)==0) return 0;\n    return 1;\n}\n\nint main(){\n    while(cin&gt;&gt;c)\n        cnt[ c ] ++ ;\n\n    int mmax = -1;\n    int mmin = 101;\n    for(auto [i, j]: cnt)\n        mmax = max(mmax, j),\n        mmin = min(mmin, j);\n\n    if(is_prime(mmax - mmin))\n        cout&lt;&lt;\"Lucky Word\"&lt;&lt;\"\\n\"&lt;&lt;mmax - mmin;\n    else\n        cout&lt;&lt;\"No Answer\\n0\";\n\n    return 0;\n}\n</code></pre> Luogu P1957 \u53e3\u7b97\u7ec3\u4e60\u9898 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;sstream&gt;\nusing namespace std;\n\nint s2i(string s){\n    stringstream ss;\n    ss&lt;&lt;s;\n    int res;\n    ss&gt;&gt;res;\n    return res;\n}\n\nstring i2s(int i){\n    stringstream ss;\n    ss&lt;&lt;i;\n    string res;\n    ss&gt;&gt;res;\n    return res;\n}\n\nint main(){\n    string s; cin&gt;&gt;s;\n    string t;\n\n    while(cin&gt;&gt;s){\n        string a, b;\n\n        if(s==\"a\" || s==\"b\" || s==\"c\"){\n            t = s;      // t\u662f\u8fd0\u7b97\u7b26\u53f7\n            cin&gt;&gt;a&gt;&gt;b;  // ab\u662f\u8fd0\u7b97\u7684\u503c\n        }\n        else{\n            cin&gt;&gt;b;\n            a = s;\n        }\n\n        if(t==\"a\")\n            cout&lt;&lt;a&lt;&lt;\"+\"&lt;&lt;b&lt;&lt;\"=\"&lt;&lt;s2i(a)+s2i(b)&lt;&lt;\"\\n\",\n            cout&lt;&lt;2+(a+b).size() + i2s(s2i(a)+s2i(b)).size()&lt;&lt;\"\\n\";\n        if(t==\"b\")\n            cout&lt;&lt;a&lt;&lt;\"-\"&lt;&lt;b&lt;&lt;\"=\"&lt;&lt;s2i(a)-s2i(b)&lt;&lt;\"\\n\",\n            cout&lt;&lt;2+(a+b).size() + i2s(s2i(a)-s2i(b)).size()&lt;&lt;\"\\n\";                \n        if(t==\"c\")\n            cout&lt;&lt;a&lt;&lt;\"*\"&lt;&lt;b&lt;&lt;\"=\"&lt;&lt;s2i(a)*s2i(b)&lt;&lt;\"\\n\",\n            cout&lt;&lt;2+(a+b).size() + i2s(s2i(a)*s2i(b)).size()&lt;&lt;\"\\n\";\n    }\n\n    return 0;\n}\n</code></pre> Luogu P1308 [NOIP2011 \u666e\u53ca\u7ec4] \u7edf\u8ba1\u5355\u8bcd\u6570 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nconst int N=1e6+10;\nint cnt, ans;\nstring a, b;\n\nint main(){\n    getline(cin, a);\n    getline(cin, b);\n    a = \" \"+a+\" \";\n    b = \" \"+b+\" \";\n    transform(a.begin(), a.end(), a.begin(), ::tolower);\n    transform(b.begin(), b.end(), b.begin(), ::tolower);\n\n    for(int i=0; i&lt;b.size(); i++){\n        bool flg=1;\n        for(int j=0; j&lt;a.size(); j++)\n            if(b[i+j] != a[j]) flg=0;\n\n        if(flg==1){\n            if(!cnt) ans=i;\n            cnt++;\n        }\n    }\n\n    if(!cnt) \n        cout&lt;&lt;-1;\n    else\n        cout&lt;&lt;cnt&lt;&lt;\" \"&lt;&lt;ans;\n    return 0;\n}\n</code></pre> Luogu P1553 \u6570\u5b57\u53cd\u8f6c\uff08\u5347\u7ea7\u7248\uff09 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nconst int N=1;\n\nstring s, a, b;\nbool flg;\n\nvoid p(string x){\n    if(x.size()==1){\n        cout&lt;&lt;x;\n        return ;\n    }   \n    int i=0;\n    int j=x.size()-1;\n    while(x[i]=='0') i++;\n    while(x[j]=='0') j--;\n    while(j&gt;=i) cout&lt;&lt;x[j--];\n}\n\nint main(){\n    cin&gt;&gt;s;\n    for(int i=0; i&lt;s.size(); i++){\n        if(s[i]=='.' || s[i]=='/' || s[i]=='%'){\n            p(a);\n            cout&lt;&lt;s[i];\n            flg=1;\n            continue;\n        }\n\n        if(flg) \n            b+=s[i];\n        else\n            a+=s[i];\n    }\n    p(b);\n\n    if(!flg) p(a);\n\n    return 0;\n}\n</code></pre> Luogu P1603 \u65af\u8bfa\u767b\u7684\u5bc6\u7801 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nint a[10], n;\nlong long res, ans=1e14;\n\nint main(){\n    string s;\n    while(cin&gt;&gt;s){\n        transform(s.begin(), s.end(), s.begin(), ::tolower);\n        if(s==\"one\" || s==\"another\" || s==\"a\" || s==\"first\") a[++n] = 1;\n        if(s==\"two\" || s==\"both\" || s==\"second\")    a[++n] = 4;\n        if(s==\"three\" || s==\"third\")  a[++n] = 9;\n        if(s==\"four\")   a[++n] = 16;\n        if(s==\"five\")   a[++n] = 25;\n        if(s==\"six\")    a[++n] = 36;\n        if(s==\"seven\")  a[++n] = 49;\n        if(s==\"eight\")  a[++n] = 64;\n        if(s==\"nine\")   a[++n] = 81;\n        if(s==\"ten\")    a[++n] = 0;\n        if(s==\"eleven\") a[++n] = 21;\n        if(s==\"twelve\") a[++n] = 44;\n        if(s==\"thirteen\")a[++n]= 69;\n        if(s==\"fourteen\")a[++n]= 96;\n        if(s==\"fifteen\")a[++n] = 25;\n        if(s==\"sixteen\")a[++n] = 56;\n        if(s==\"seventeen\")a[++n]=89;\n        if(s==\"eighteen\")a[++n]=24;\n        if(s==\"nineteen\")a[++n]= 61;\n        if(s==\"twenty\") a[++n] = 0;\n    } \n\n    //sort(a+1, a+1+n);\n    do{\n        res=0;\n        for(int i=1; i&lt;=n; i++)\n            res = res*100 + a[i];\n        ans = min(ans, res);\n    }while(next_permutation(a+1, a+1+n));\n\n    cout&lt;&lt;ans;\n\n    return 0;\n}\n</code></pre> Luogu P1598 \u5782\u76f4\u67f1\u72b6\u56fe code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nconst int N=410;\n\nint a[30];\nchar c, g[30][N];\nint mmax;\n\nint main(){\n    memset(g, ' ', sizeof g);\n    while(cin&gt;&gt;c) \n        if(c&gt;='A' &amp;&amp; c&lt;='Z') {\n            a[c-'A']++;   // \u6bcf\u4e2a\u5b57\u7b26\u7684\u6570\u91cf\n            mmax = max(mmax, a[c-'A']);\n        }\n\n    for(int i=0; i&lt;26; i++){\n        for(int j=mmax-a[i]+1; j&lt;=mmax; j++)\n            g[i][j] = '*';\n        g[i][mmax+1] = 'A'+i;\n    }\n\n    for(int j=1; j&lt;=mmax+1; j++){\n        for(int i=0; i&lt;25; i++)\n            cout&lt;&lt;g[i][j]&lt;&lt;\" \";\n        cout&lt;&lt;g[25][j]&lt;&lt;\"\\n\";\n    }\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/0%20%E5%85%A5%E9%97%A8/%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/","title":"\u5faa\u73af","text":"Luogu P5718 \u3010\u6df1\u57fa4.\u4f8b2\u3011\u627e\u6700\u5c0f\u503c code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint n, res=0x3f3f3f3f;\n\nint main(){\n    cin&gt;&gt;n;\n    while(n--){\n        int a; cin&gt;&gt;a;\n        res=min(res, a);\n    }\n    cout&lt;&lt;res;\n    return 0;\n}\n</code></pre> Luogu P5719 \u3010\u6df1\u57fa4.\u4f8b3\u3011\u5206\u7c7b\u5e73\u5747 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint n, k, m;\ndouble A, B;\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;k;\n    for(int i=1; i&lt;=n; i++)\n        if(i%k==0){\n            A+=i;\n            m++;\n        }\n        else\n            B+=i;\n    if(m==n){\n        printf(\"%.1lf 0.0\", A/m);\n        return 0;\n    }\n    printf(\"%.1lf %.1lf\", A/m, B/(n-m));\n    return 0;\n}\n</code></pre> Luogu P5720 \u3010\u6df1\u57fa4.\u4f8b4\u3011\u4e00\u5c3a\u4e4b\u68f0 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint a, cnt=1;\n\nint main(){\n    cin&gt;&gt;a;\n\n    while(a!=1){\n        a/=2;\n        cnt++;\n    }\n\n    cout&lt;&lt;cnt;\n    return 0;\n}\n</code></pre> Luogu P5721 \u3010\u6df1\u57fa4.\u4f8b6\u3011\u6570\u5b57\u76f4\u89d2\u4e09\u89d2\u5f62 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint n;\n\nint main(){\n    cin&gt;&gt;n;\n    int k=1;\n    for(int i=n; i&gt;=1; i--, puts(\"\"))\n        for(int j=1; j&lt;=i; j++)\n            printf(\"%02d\", k++);\n    return 0;\n}\n</code></pre> ybt 1101\uff1a\u4e0d\u5b9a\u65b9\u7a0b\u6c42\u89e3 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1;\n\nint main(){\n    int a, b, c, res=0;\n    cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;\n\n    for(int x=0; a*x&lt;=c; x++)\n        for(int y=0; a*x+b*y&lt;=c; y++)\n            if(a*x+b*y == c)\n                res++;\n\n    cout&lt;&lt;res;\n\n    return 0;\n}\n</code></pre> ybt 1100\uff1a\u91d1\u5e01 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1;\n\nint main(){\n    int n, res=0; cin&gt;&gt;n;\n\n    for(int i=1, j=1, k=1; i&lt;=n; i++, j++){   // i\u662f\u5f53\u524d\u5929\u6570, j\u662f\u8fde\u7eed\u5929\u6570\n        res+=k;\n        if(j==k) j=0, k++;\n    }\n\n    cout&lt;&lt;res;\n\n    return 0;\n}\n</code></pre> ybt 1096\uff1a\u6570\u5b57\u7edf\u8ba1 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1;\n\nint main(){\n    int l, r; cin&gt;&gt;l&gt;&gt;r;\n\n    int res=0;\n    for(int i=l; i&lt;=r; i++){\n        int x = i;\n        while(x){\n            if(x%10 == 2) res++;\n            x/=10;\n        }\n    }\n\n    cout&lt;&lt;res;\n\n    return 0;\n}\n</code></pre> ybt 2033\uff1a\u3010\u4f8b4.19\u3011\u9636\u4e58\u4e4b\u548c code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N=1;\nconst int MOD=1e6;\n\nLL n, s;\n\nint main(){\n    cin&gt;&gt;n;\n    for(LL i=1, j=1; i&lt;=n; i++){\n        j = (j*i)%MOD;  // i!\n        s = (s+j)%MOD;  // 1! + 2! + ... + n!\n    }\n    cout&lt;&lt;s;\n    return 0;\n}\n</code></pre> ybt 1085\uff1a\u7403\u5f39\u8df3\u9ad8\u5ea6\u7684\u8ba1\u7b97 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1;\n\ndouble n, s;\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=10; i++){\n        s += n + n/2;\n        n /= 2;\n    }\n    cout&lt;&lt;s-n&lt;&lt;\"\\n\"&lt;&lt;n;\n    return 0;\n}\n</code></pre> <p>\u7528\u51fd\u6570\u5c06\u5faa\u73af\u4e4b\u95f4\u5206\u5f00, \u4f7f\u4ee3\u7801\u6613\u8bfb\u6027\u66f4\u9ad8</p> ybt 1099\uff1a\u7b2cn\u5c0f\u7684\u8d28\u6570 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1;\n\nbool ck(int n){\n    for(int i=2; i&lt;=n/i; i++)\n        if(n%i == 0) return 0;\n    return 1;\n}\n\nint main(){\n    int n; cin&gt;&gt;n;\n    for(int i=2, j=0; ; i++){   // 1\u5565\u4e5f\u4e0d\u662f\n        if( ck(i)) j++;\n        if( j==n ){\n            cout&lt;&lt;i;\n            break;\n        }\n    }\n    return 0;\n}\n</code></pre> ybt 1098\uff1a\u8d28\u56e0\u6570\u5206\u89e3 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1;\n\nbool ck(int n){\n    for(int i=2; i&lt;=n/i; i++)\n        if(n%i == 0) return 0;\n    return 1;\n}\n\nint main(){\n    int n;\n    cin&gt;&gt;n;\n\n    for(int i=2; i&lt;=n; i++)\n        if(ck(i) &amp;&amp; n/i * i == n){\n            cout&lt;&lt;n/i;\n            break;\n        }\n\n    return 0;\n}\n</code></pre> Luogu P5723 \u3010\u6df1\u57fa4.\u4f8b13\u3011\u8d28\u6570\u53e3\u888b code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nbool ck(int n){\n    for(int i=2; i&lt;=n/i; i++)\n        if(n%i == 0) return 0;\n    return 1;\n}\n\nint main(){\n    int L; cin&gt;&gt;L;\n    for(int i=2, j=0, k=0; ; i++)\n        if(ck(i))\n            if( j+i&lt;=L){\n                j+=i;\n                k++;\n                cout&lt;&lt;i&lt;&lt;\"\\n\";\n            }\n            else{\n                cout&lt;&lt;k;\n                break;\n            }\n\n    return 0;\n}\n</code></pre> <p>\u524d\u7f6e\u77e5\u8bc6\u70b9: \u7b97\u672f\u57fa\u672c\u5b9a\u7406</p> ybt 2032\uff1a\u3010\u4f8b4.18\u3011\u5206\u89e3\u8d28\u56e0\u6570 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;map&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\nconst int N=1;\n\nmap&lt;int, int&gt; pf;   // Prime Factors, \u6bcf\u4e00\u5bf9\u6307 p^c\nint n;\n\nvoid get_pf(int n) {\n    pf.clear();\n    for(int i=2; i&lt;=n/i; i++)\n        while(n%i==0){\n            pf[i]++;\n            n/=i;\n        }\n    if(n&gt;1) pf[n]++;\n}\n\nint main(){\n    cin&gt;&gt;n; cout&lt;&lt;n&lt;&lt;\"=\";\n    get_pf(n);\n    queue&lt;int&gt; q;\n    for(auto [i, j]: pf)\n        for(int k=1; k&lt;=j; k++)\n            q.push(i);\n\n    while(q.size()){\n        cout&lt;&lt;q.front(), q.pop();\n        if(q.size()) cout&lt;&lt;\"*\";\n    }\n\n    return 0;\n}\n</code></pre> <p>\u5206\u6790\u9898\u610f, \u51cf\u5c11\u5faa\u73af\u5d4c\u5957\u7684\u5c42\u6570</p> ybt 2028\uff1a\u3010\u4f8b4.14\u3011\u767e\u94b1\u4e70\u767e\u9e21 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1;\n\nint main(){\n    for(int a=0; a*5&lt;=100; a++)\n        for(int b=0; a*5+b*3&lt;=100; b++){\n            int c=(100-a*5-b*3)*3; \n            if(a+b+c == 100)\n                cout&lt;&lt;a&lt;&lt;\" \"&lt;&lt;b&lt;&lt;\" \"&lt;&lt;c&lt;&lt;\"\\n\";\n        }\n    return 0;\n}\n</code></pre> <p>\u6d1b\u8c37\u9898\u5355 \u5faa\u73af\u7ed3\u6784</p> <p>\u4e00\u672c\u901a \u7b2c\u4e00\u90e8\u5206 C++\u8bed\u8a00 --&gt; \u7b2c\u56db\u7ae0 \u5faa\u73af\u7ed3\u6784\u7684\u7a0b\u5e8f\u8bbe\u8ba1</p>"},{"location":"src/more/old/algorithm/0%20%E5%85%A5%E9%97%A8/%E6%95%B0%E7%BB%84/","title":"\u6570\u7ec4","text":"Luogu P1428 \u5c0f\u9c7c\u6bd4\u53ef\u7231 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1e2+10;\nint n;\nint a[N];\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) cin&gt;&gt;a[i];\n\n    for(int i=1; i&lt;=n; i++){\n        int res = 0;\n        for(int j=1; j&lt;i; j++)\n            if(a[j] &lt; a[i]) res++;\n        cout&lt;&lt;res&lt;&lt;\" \";\n    }\n    return 0;\n}\n</code></pre> Luogu P2550 [AHOI2001]\u5f69\u7968\u6447\u5956 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nconst int N = 40;\n\nbool a[N], b[N];\nint ans[N], n;\n\nint main() {\n    cin &gt;&gt; n;\n\n    for (int i = 1; i &lt;= 7; i++) {\n        int x; scanf(\"%d\", &amp;x);\n        a[x] = 1;\n    }\n\n    for (int i = 1; i &lt;= n; i++) {\n        memset(b, 0, sizeof b);\n\n        for (int j = 1; j &lt;= 7; j++) {\n            int x; scanf(\"%d\", &amp;x);\n            b[x] = 1;\n        }\n\n        int res = 0;\n        for (int j = 1; j &lt;= 33; j++)\n            if (a[j] &amp;&amp; b[j]) \n                res++;\n\n        ans[res]++;\n    }\n\n    for (int i = 7; i &gt;= 1; i--)\n        cout &lt;&lt; ans[i] &lt;&lt; \" \";\n\n    return 0;\n}\n</code></pre> Luogu P5730 \u3010\u6df1\u57fa5.\u4f8b10\u3011\u663e\u793a\u5c4f code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nconst int N=1;\n\nstring num[10][5]={\n   {\"XXX\",\n    \"X.X\",\n    \"X.X\",\n    \"X.X\",\n    \"XXX\"},\n\n   {\"..X\",\n    \"..X\",\n    \"..X\",\n    \"..X\",\n    \"..X\"},\n\n   {\"XXX\",\n    \"..X\",\n    \"XXX\",\n    \"X..\",\n    \"XXX\"},\n\n   {\"XXX\",\n    \"..X\",\n    \"XXX\",\n    \"..X\",\n    \"XXX\"},\n\n   {\"X.X\",\n    \"X.X\",\n    \"XXX\",\n    \"..X\",\n    \"..X\"},\n\n   {\"XXX\",\n    \"X..\",\n    \"XXX\",\n    \"..X\",\n    \"XXX\"},\n\n   {\"XXX\",\n    \"X..\",\n    \"XXX\",\n    \"X.X\",\n    \"XXX\"},\n\n   {\"XXX\",\n    \"..X\",\n    \"..X\",\n    \"..X\",\n    \"..X\"},\n\n   {\"XXX\",\n    \"X.X\",\n    \"XXX\",\n    \"X.X\",\n    \"XXX\"},\n\n   {\"XXX\",\n    \"X.X\",\n    \"XXX\",\n    \"..X\",\n    \"XXX\"}\n};\n\nchar g[5][500];\n\nint main(){\n    int n; cin&gt;&gt;n;\n    string s; cin&gt;&gt;s;\n    memset(g, '.', sizeof g);\n    for(int k=0; k&lt;n; k++){\n\n        for(int i=0; i&lt;5; i++)\n            for(int j=0; j&lt;3; j++)\n                g[i][j+4*k] = num[ s[k]-'0' ][i][j];\n    }\n\n    for(int i=0; i&lt;5; i++, cout&lt;&lt;\"\\n\")\n        for(int j=0; j&lt;4*n-1; j++)\n            cout&lt;&lt;g[i][j];\n\n    return 0;\n}\n</code></pre> Luogu P2911 [USACO08OCT]Bovine Bones G code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=100;\n\nint a[N], b[N], c[N], res[N];\n\nint main(){\n    int s1, s2, s3; cin&gt;&gt;s1&gt;&gt;s2&gt;&gt;s3;\n    for(int i=1; i&lt;=s1; i++)\n        for(int j=1; j&lt;=s2; j++)\n            for(int k=1; k&lt;=s3; k++)\n                res[i+j+k]++;\n    for(int i=1; i&lt;=s1+s2+s3; i++)\n        if( res[i] &gt; res[99] )\n            res[0] = i, res[99]=res[i];\n    cout&lt;&lt;res[0];\n    return 0;\n}\n</code></pre> Luogu P5732 \u3010\u6df1\u57fa5.\u4e607\u3011\u6768\u8f89\u4e09\u89d2 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=30;\n\nint g[N][N];\n\nint main(){\n    g[1][1]=1;\n    for(int i=2; i&lt;=20; i++)\n        for(int j=1; j&lt;=20; j++)\n            g[i][j] = g[i-1][j-1] + g[i-1][j];\n\n    int n; cin&gt;&gt;n;\n\n    for(int i=1; i&lt;=n; i++, cout&lt;&lt;\"\\n\")\n        for(int j=1; j&lt;=i; j++)\n            cout&lt;&lt;g[i][j]&lt;&lt;\" \";\n\n\n    return 0;\n}\n</code></pre> <p>\u6d1b\u8c37\u9898\u5355 \u6570\u7ec4</p> <p>\u4e00\u672c\u901a \u7b2c\u4e00\u90e8\u5206 C++\u8bed\u8a00 --&gt; \u7b2c\u4e94\u7ae0 \u6570 \u7ec4</p>"},{"location":"src/more/old/algorithm/0%20%E5%85%A5%E9%97%A8/%E9%A1%BA%E5%BA%8F%E7%BB%93%E6%9E%84/","title":"\u4ec0\u4e48\u662fOJ ?","text":"<p>OJ(Online Judge)\u4e2d\u6587\u540d\u5728\u7ebf\u8bc4\u6d4b\u7cfb\u7edf \u8bc4\u4f30\u548c\u6bd4\u8f83\u4ee3\u7801\u7684<code>\u6b63\u786e\u6027</code>\u4e0e<code>\u6027\u80fd(\u65f6\u95f4\u590d\u6742\u5ea6\u4e0e\u7a7a\u95f4\u590d\u6742\u5ea6)</code></p> <ul> <li> <p><code>\u65f6\u95f4\u590d\u6742\u5ea6</code>,\u76f4\u89c2\u6765\u8bb2,\u6267\u884c\u4ee3\u7801\u7684\u6761\u6570   \u4ee5 1S \u4e3a\u4f8b   \u6267\u884c\u6b21\u6570\u4e0d\u80fd\u8d85\u8fc71e8,\u4e5f\u5c31\u662f\u5faa\u73af\u4e0d\u80fd\u8d85\u8fc71e8     </p> </li> <li> <p><code>\u7a7a\u95f4\u590d\u6742\u5ea6</code>,\u4f60\u4ee3\u7801\u4e2d,\u7533\u8bf7\u7a7a\u95f4\u7684\u5927\u5c0f   \u4ee5 128MB \u4e3a\u4f8b   \u4e00\u4e2aint\u662f32\u4f4d\u7684, \u90a3\u4e48\u5c31\u662f4\u4e2a\u5b57\u8282   \u6211\u4eec\u80fd\u7533\u8bf7\u7684int\u6570\u91cf\u4e0d\u80fd\u8d85\u8fc7 128 * 1024 * 1024 / 4 \u2248 3e7</p> </li> </ul> Hello,World! code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=3e7+10;\n\nint a[N];\n\nint main(){\n    for(int i=1; i&lt;=4e8; i++)\n        a[i % N] = i;\n\n    cout&lt;&lt;\"Hello,World!\";\n    return 0;\n}\n</code></pre> <p>OJ \u53ea\u68c0\u67e5\u4f60\u6700\u7ec8\u8f93\u51fa, \u5373\u4f60\u7684\u8f93\u51fa\u4e0e\u6b63\u786e\u7b54\u6848\u662f\u5426<code>\u5b8c\u5168\u76f8\u540c</code> \u56e0\u6b64, \u5728OJ\u773c\u91cc, \u6ca1\u6709\u6240\u8c13\u7684\u8fc7\u7a0b\u5206</p> Hello,World! code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main(){\n    printf(\"%c\", 'A'+7);\n    cout&lt;&lt;\"ello\";\n    putchar(',');\n    char g[10] = \"World\";\n    printf(\"%s\", g);\n    puts(\"!\");\n    return 0;\n}\n</code></pre> <p>\u6b63\u56e0\u4e3a\u8fd9\u79cd\u5224\u9898\u673a\u5236, OJ\u53ef\u4ee5\u8bf4\u662f\u9762\u5411\u6570\u636e\u7f16\u7a0b, \u6545\u548c\u6570\u5b66\u4e00\u6837, \u5177\u6709\u4e86\u4e00\u5b9a\u7684\u6280\u5de7\u6027</p>"},{"location":"src/more/old/algorithm/0%20%E5%85%A5%E9%97%A8/%E9%A1%BA%E5%BA%8F%E7%BB%93%E6%9E%84/#_1","title":"\u987a\u5e8f\u7ed3\u6784\u5b9e\u4f8b","text":"<p>\u6b64\u9898\u9700\u8981\u5206\u522b\u63d0\u53d6\u51fa\u767e, \u5341, \u4e2a\u4f4d\u7684\u6570\u540e, \u518d\u8fdb\u884c\u5904\u7406 \u5f53\u8f93\u5165\u7684\u6570\u4e3a <code>100</code> \u6216\u8005 <code>120</code> \u65f6, \u9700\u8981\u5206\u522b\u8f93\u51fa <code>1</code>, <code>21</code>, \u800c\u4e0d\u662f <code>001</code>, <code>021</code></p> ybt 2070\uff1a\u3010\u4f8b2.13\u3011\u6570\u5b57\u5bf9\u8c03 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nint main(){\n    int a, b, c, d;\n    cin&gt;&gt;d;\n    a = d/100;\n    b = d/10%10;\n    c = d%10;\n    cout&lt;&lt;c*100 + b*10 + a;\n    return 0;\n}\n</code></pre> <p>\u89c2\u5bdf\u6837\u4f8b, \u8f93\u5165 <code>100</code>, \u53cd\u5411\u8f93\u51fa <code>001</code> \u6211\u4eec\u4f9d\u65e7\u53ef\u4ee5\u50cf\u4e0a\u4e00\u9898\u4e00\u6837, \u63d0\u53d6\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570 \u53ea\u4e0d\u8fc7\u4e3a\u4e86\u8f93\u51fa0, \u5c31\u9700\u8981\u5c06\u6bcf\u4e00\u4e2a\u6570\u5206\u522b\u8f93\u51fa\u51fa\u53bb</p> <p>\u662f\u5426\u6709\u66f4\u7b80\u5355\u7684\u505a\u6cd5\u5462?</p> ybt 1031\uff1a\u53cd\u5411\u8f93\u51fa\u4e00\u4e2a\u4e09\u4f4d\u6570 code  &gt; \u76f4\u63a5\u5f53\u4f5c\u5b57\u7b26\u4e32\u5904\u7406, \u518d\u53cd\u5411\u8f93\u51fa\u5b57\u7b26\u4e32  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nint main(){\n    string s; cin&gt;&gt;s;\n    reverse(s.begin(), s.end());\n    cout&lt;&lt;s;\n    return 0;\n}\n</code></pre> ybt 1032\uff1a\u5927\u8c61\u559d\u6c34\u67e5 code  &gt; \u8fd9\u662f\u975e\u5e38\u57fa\u7840\u7684\u4e00\u79cd\u89e3\u9898\u601d\u60f3, \u901a\u8fc7\u679a\u4e3e\u559d\u4e00\u6876, \u4e24\u6876, ..., n\u6876\u6765\u5224\u65ad\u662f\u5426\u559d\u591f\u4e86  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cmath&gt;\nusing namespace std;\n\nconst double PI = acos(-1);\n\nint main(){\n    int h, r; cin&gt;&gt;h&gt;&gt;r;\n\n    for(int i=1; ; i++)\n        if(i*PI*r*r*h &gt;= 20000){\n            cout&lt;&lt;i;\n            return 0;\n        }\n    return 0;\n}\n</code></pre> ybt 1038\uff1a\u82f9\u679c\u548c\u866b\u5b50 code  &gt; \u6b64\u9898\u548c\u4e0a\u4e00\u9898\u7c7b\u4f3c, \u4f46\u6211\u4eec\u7528\u7684\u6570\u5b66\u65b9\u6cd5 &gt; \u6574\u4f53\u601d\u8def\u662f\u8ba1\u7b97\u866b\u5b50\u4e00\u5171\u5543\u4e86\u591a\u5c11\u4e2a\u82f9\u679c, \u6ce8\u610f\u8fd9\u91cc\u662f\u5543\u4e86, \u800c\u4e0d\u662f\u5543\u5b8c &gt; \u56e0\u6b64 y/x \u5e94\u8be5\u662f\u5411\u4e0a\u53d6\u6574, \u6545\u6709 (y+x-1) / x  C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main(){\n    int n, x, y;\n    cin&gt;&gt;n&gt;&gt;x&gt;&gt;y;\n    cout&lt;&lt;max(0, n - (y+(x-1)) / x);\n    return 0;\n}\n</code></pre>  &gt; \u503c\u5f97\u4e00\u63d0, \u5728C++\u4e2d, \u9664\u6cd5\u662f`\u54110\u53d6\u6574` &gt; `-5/2 = -2` \u800c\u4e0d\u662f `-3` &gt; \u4e0e\u4e4b\u5bf9\u5e94\u7684 &gt; `-5&gt;&gt;1 = -3` \u5f53\u7136, \u8fd9\u4e2a\u662f\u540e\u8bdd\u4e86   ybt 2071\uff1a\u3010\u4f8b2.14\u3011\u5e73\u5747\u5206 code  &gt; \u503c\u5f97\u4e00\u63d0, \u5728\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528\u4e0d\u540c\u7c7b\u578b\u7684\u64cd\u4f5c\u6570\u65f6, \u6839\u636e\u64cd\u4f5c\u6570\u4e2d\u7684\u6700\u5927\u7c7b\u578b\u6765\u9009\u62e9\u76f8\u5e94\u7684\u8fd0\u7b97\u7b26\u548c\u64cd\u4f5c\u6570 &gt; \u4f8b\u5982, \u5982\u679c\u4e00\u4e2a\u64cd\u4f5c\u6570\u662f\u6574\u6570\u7c7b\u578b, \u800c\u53e6\u4e00\u4e2a\u64cd\u4f5c\u6570\u662f\u6d6e\u70b9\u7c7b\u578b, \u5219\u4f1a\u81ea\u52a8\u5c06\u6574\u6570\u7c7b\u578b\u8f6c\u6362\u4e3a\u6d6e\u70b9\u7c7b\u578b\u6765\u8fdb\u884c\u8fd0\u7b97 &gt; \u8fd9\u79cd\u884c\u4e3a\u79f0\u4e3a\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362(Implicit Type Conversion)  C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main(){\n    int x, y; cin&gt;&gt;x&gt;&gt;y;\n    printf(\"%.4lf\", 1.0 * (x*87 + y*85) / (x+y));\n    return 0;\n}\n</code></pre> ybt 1036\uff1aA\u00d7B\u95ee\u9898 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nint main(){\n    int a, b; cin&gt;&gt;a&gt;&gt;b;    \n    cout&lt;&lt;1LL * a * b;\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/0%20%E5%85%A5%E9%97%A8/%E9%A1%BA%E5%BA%8F%E7%BB%93%E6%9E%84/#_2","title":"\u7ec3\u4e60","text":"Luogu P5707 \u3010\u6df1\u57fa2.\u4f8b12\u3011\u4e0a\u5b66\u8fdf\u5230 code  &gt; \u5206\u6790\u9898\u610f, \u7b80\u5316\u9898\u76ee, \u7b97\u4e0a\u5783\u573e\u5206\u7c7b\u65f6\u95f4, 7\u70b950\u5230\u8fbe\u5b66\u6821  C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main(){\n    int s, v;\n    cin&gt;&gt;s&gt;&gt;v;\n    // \u8ba1\u7b97\u5230\u5b66\u6821\u82b1\u8d39\u65f6\u95f4\n    int cost = (s+v-1)/v;\n\n    // \u4e00\u5171\u62e5\u6709\u7684\u65f6\u95f4\n    int M = 24*60 + 7*60 + 50;\n\n    // \u7528\u4e00\u5171\u62e5\u6709\u7684\u65f6\u95f4 - \u5230\u5b66\u6821\u82b1\u8d39\u7684\u65f6\u95f4\n    int ans = M-cost; \n\n    int m=ans%60;\n    int h=(ans/60)%24;\n    printf(\"%02d:%02d\", h, m);\n\n    return 0;\n}\n</code></pre> <p>\u6d1b\u8c37\u9898\u5355 \u987a\u5e8f\u7ed3\u6784</p> <p>\u4e00\u672c\u901a \u7b2c\u4e00\u90e8\u5206 C++\u8bed\u8a00 --&gt; \u7b2c\u4e8c\u7ae0 \u987a\u5e8f\u7ed3\u6784\u7a0b\u5e8f\u8bbe\u8ba1 --&gt; \u7b2c\u4e94\u8282 \u987a\u5e8f\u7ed3\u6784\u5b9e\u4f8b</p>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E5%89%8D%E7%BC%80%E5%92%8C/","title":"\u524d\u7f00\u548c","text":"<p>\u5f53\u6784\u9020\u597d\u4e00\u4e2a\u524d\u7f00\u548c\u6570\u7ec4 <code>O(n)</code>, \u53ef\u4ee5\u5728 <code>O(1)</code> \u7684\u65f6\u95f4\u5185\u67e5\u8be2\u5230\u533a\u95f4\u548c <code>(l-r)</code> \u7684\u548c  C++<pre><code>for(int i=1; i&lt;=n; i++) pre[i] = pre[i-1] + a[i]; \n</code></pre> C++<pre><code>pre[r] - pre[l-1] // \u5373 l-r \u7684\u533a\u95f4\u548c\n</code></pre></p>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E5%89%8D%E7%BC%80%E5%92%8C/#_2","title":"\u4e00\u7ef4","text":"Luogu P8218 \u3010\u6df1\u8fdb1.\u4f8b1\u3011\u6c42\u533a\u95f4\u548c code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1e5+10;\n\nint a[N];\nint n, m;\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", a+i), a[i]+=a[i-1];\n    cin&gt;&gt;m;\n    while(m--){\n        int l, r; scanf(\"%d%d\", &amp;l, &amp;r);\n        cout&lt;&lt;a[r]-a[l-1]&lt;&lt;\"\\n\";\n    }\n    return 0;\n}\n</code></pre> AcWing 4644. \u6c42\u548c code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N=2e5+10;\n\nLL a[N];\n\nint n;\nLL ans;\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) \n        scanf(\"%d\", a+i), a[i]+=a[i-1];\n\n    for(int i=1; i&lt;=n; i++)\n       ans += (a[i]-a[i-1])*(a[n]-a[i]); \n\n    cout&lt;&lt;ans;\n\n    return 0;\n}\n</code></pre> AcWing 3956. \u622a\u65ad\u6570\u7ec4(\u4e24\u6bb5) code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1e5+10;\n\nint a[N];\nint n;\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++)\n        scanf(\"%d\", a+i), a[i]+=a[i-1];\n\n    for(int i=1; i&lt;n; i++)\n        if( 2 * a[i] == a[n] )  // a[i] == a[n]-a[i]\n            (*a)++;\n\n    cout&lt;&lt;*a;\n\n    return 0;\n}\n</code></pre> AcWing 3956. \u622a\u65ad\u6570\u7ec4(\u4e09\u6bb5) code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N=1e5+10;\n\nint a[N];\nint n;\nLL res;\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++)\n        scanf(\"%d\", a+i), a[i]+=a[i-1];\n\n    if(a[n]%3==0)\n    for(int i=1; i&lt;=n-2; i++){\n        if( a[n]/3 == a[i] ) (*a)++;         \n        if( a[n]/3 == a[n]-a[i+1] ) res+=*a;    // \u6b64\u5199\u6cd5\u662f\u4fdd\u8bc1\u540e\u9762\u53ea\u6709\u4e00\u5768\n    }\n\n    cout&lt;&lt;res;\n\n    return 0;\n}\n</code></pre> AcWing 4297. \u622a\u65ad\u6570\u7ec4 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N = 2e5+10;\n\nLL a[N];\nint n;\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) \n        scanf(\"%lld\", a+i), a[i]+=a[i-1];\n\n    int l=1, r=n;\n\n    if(n!=1)\n    while(l&lt;r)\n        if( a[l] == a[n]-a[r-1] )\n            (*a) = a[l], l++;\n        else if( a[l] &lt; a[n]-a[r-1] ) l++;\n        else if( a[l] &gt; a[n]-a[r-1] ) r--;\n\n    cout&lt;&lt;(*a);\n\n    return 0;\n}\n</code></pre> AcWing 1230. K\u500d\u533a\u95f4 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N=1e5+10;\n\nLL a[N];\nLL cnt[N], sum, res;\n\nint n, k;\n\nint main(){\n    scanf(\"%d%d\", &amp;n, &amp;k);\n\n    /*\n    for(int i=1; i&lt;=n; i++)\n        scanf(\"%d\", a+i), a[i]+=a[i-1];\n\n    for(int r=1; r&lt;=n; r++)\n        for(int l=1; l&lt;=r; l++)\n            if( (a[r]-a[l-1]) % k ==0 ) res++;\n    cout&lt;&lt;res;\n    return 0;\n\n    // \u5f53 a[r]%k == a[l-1]%k, res++\n    // \u5bf9\u4e8e\u53f3\u8fb9\u90e8\u5206 a[l-1]%k \u800c\u8a00, \u5f53r\u56fa\u5b9a, l\u8303\u56f4( 1-1 -&gt; r-1 ), \u5373 [0,r-1]\n    // \u5f53 a[r]%k == a[0, r-1]%k, res++\n    */\n\n    cnt[ a[0]%k ]++;\n    for(int i=1; i&lt;=n; i++){\n        LL x;\n        scanf(\"%lld\", &amp;x), sum+=x;\n        res+=cnt[sum%k];\n        cnt[sum%k]++;\n    }\n\n    // \u6b64\u4ee3\u7801\u5ffd\u7565\u4e86 a[0] \u7684\u60c5\u51b5,\n    // \u5f53 a[r]%k == a[0]%k == 0, res++\n\n    cout&lt;&lt;res;\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E5%89%8D%E7%BC%80%E5%92%8C/#_3","title":"\u4e8c\u7ef4","text":"Luogu P1719 \u6700\u5927\u52a0\u6743\u77e9\u5f62 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=200;\n\nint g[N][N];\nint n, ans=-0x3f3f3f3f;\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++)\n        for(int j=1; j&lt;=n; j++)\n            scanf(\"%d\", &amp;g[i][j]), g[i][j] += g[i-1][j] + g[i][j-1] - g[i-1][j-1];\n\n    for(int x1=1; x1&lt;=n; x1++)  // \u679a\u4e3e\u5de6\u4e0a\u89d2\n    for(int y1=1; y1&lt;=n; y1++)\n    for(int x2=x1; x2&lt;=n; x2++)   // \u679a\u4e3e\u53f3\u4e0b\u89d2\n    for(int y2=y1; y2&lt;=n; y2++)\n        ans = max(ans, g[x2][y2] - g[x2][y1-1] - g[x1-1][y2] + g[x1-1][y1-1]);\n\n    cout&lt;&lt;ans;\n\n    return 0;\n}\n</code></pre> AcWing 99. \u6fc0\u5149\u70b8\u5f39 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=5e3+10;\n\nint a[N][N];\nint n, r, ans;  // \u70b9\u6570\u91cf\u548c\u70b8\u5f39\u8986\u76d6\nint x, y;       // \u5730\u56fe\u5927\u5c0f\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;r;\n    r=min(r, 5001); // r\u7684\u5927\u5c0f\u4e0d\u8981\u8d85\u8fc7\u5730\u56fe, \u5426\u5219\u8ba1\u7b97\u7684\u65f6\u5019\u4f1a\u8d8a\u754c\n    x=r, y=r;       // \u5982\u679cr\u66f4\u5927, \u4fdd\u8bc1x,y &gt;= r\n    for(int i=1; i&lt;=n; i++){\n        int xi, yi, w; cin&gt;&gt;xi&gt;&gt;yi&gt;&gt;w;\n        a[xi+1][yi+1] += w;\n        x = max(x, xi+1);   // \u5982\u679c r \u66f4\u5c0f, \u6b63\u5e38\u66f4\u65b0\u5730\u56fe\u8fb9\u754c\n        y = max(y, yi+1);\n    }\n    // \u505a\u4e8c\u7ef4\u524d\u7f00\u548c\n    for(int i=1; i&lt;=x; i++)\n        for(int j=1; j&lt;=y; j++)\n            a[i][j] += a[i-1][j] + a[i][j-1] - a[i-1][j-1];\n    // \u5f00\u59cb\u8ba1\u7b97\n    for(int i=r; i&lt;=x; i++)\n        for(int j=r; j&lt;=y; j++)\n            ans = max(ans, a[i][j] - a[i-r][j] - a[i][j-r] + a[i-r][j-r]);\n\n    cout&lt;&lt;ans;\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E5%89%8D%E7%BC%80%E5%92%8C/#_4","title":"\u5dee\u5206","text":"Luogu P2367 \u8bed\u6587\u6210\u7ee9 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=5e6+10;\n\nint a[N];\nint n, p;\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;p;\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", a+i);\n    for(int i=n; i&gt;=1; i--) a[i]-=a[i-1];\n\n    while(p--){\n        int x, y, z; scanf(\"%d%d%d\", &amp;x, &amp;y, &amp;z);\n        a[x] += z;\n        a[y+1] -= z;\n    }\n    for(int i=1; i&lt;=n; i++) a[i] += a[i-1];\n    a[0]=0x3f3f3f3f;\n    for(int i=1; i&lt;=n; i++) a[0] = min(a[0], a[i]);\n\n    cout&lt;&lt;a[0];\n    return 0;\n}\n</code></pre> AcWing 101. \u6700\u9ad8\u7684\u725b code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;set&gt;\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair&lt;int, int&gt; PII;\n\nconst int N=5e3+10;\n\nLL a[N];\nset&lt;PII&gt; cnt;\nint n, p, h, m;\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;p&gt;&gt;h&gt;&gt;m;\n    for(int i=1; i&lt;=m; i++){\n        int x, y; cin&gt;&gt;x&gt;&gt;y;\n        if(x&gt;y) swap(x, y);\n        if(cnt.count({x,y})) continue;\n        cnt.insert({x,y});\n        a[x+1]--;\n        a[y]++;\n    }\n    for(int i=1; i&lt;=n; i++) a[i]+=a[i-1];\n    LL c = labs(a[p]-h);\n    for(int i=1; i&lt;=n; i++) cout&lt;&lt;a[i]+c&lt;&lt;\"\\n\";\n    return 0;\n}\n</code></pre> AcWing 100. \u589e\u51cf\u5e8f\u5217 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1e5+10;\nint a[N];\nint n;\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) \n        scanf(\"%d\", a+i);\n    for(int i=n; i&gt;=2; i--)\n        a[i] = a[i] - a[i-1];\n    // \u5f53\u6240\u6709\u6570\u90fd\u76f8\u7b49\u7684\u65f6\u5019, \u5dee\u5206\u6570\u7ec4 a[2~n] \u90fd\u4e3a0    \n    // \u4fee\u6539\u539f\u6570\u7ec4\u4e00\u4e2a\u533a\u95f4, \u5373\u4fee\u6539\u5dee\u5206\u6570\u7ec4 a[l] ~ a[r+1] \n    // \u5c06\u5dee\u5206\u6570\u7ec4\u4e2d\u76f8\u5339\u914d\u7684\u52a0\u51cf min(p,q) \u603c\u6389, \u5269\u4e0b abs(p,q), \u5c31\u662f\u5269\u4e0b\u7684\u64cd\u4f5c\u6b21\u6570\n    // \u5bf9\u4e8e\u6700\u7ec8\u7ed3\u679c, \u603c\u6389\u7684\u80af\u5b9a\u90fd\u662f\u4e00\u79cd\u7ed3\u679c\n    // \u5269\u4e0b abs(p,q) \u79cd, ans\u5c31\u662fabs(p,q)+1\n\n    long long p=0, q=0;   // \u6b63\u6570\u548c\u53ca\u8d1f\u6570\u548c\n    for(int i=2; i&lt;=n; i++)\n        if(a[i]&gt;0) p+=a[i];\n        else       q-=a[i];\n\n    cout&lt;&lt;min(p,q)+abs(p-q)&lt;&lt;\"\\n\"&lt;&lt;abs(p-q)+1;\n\n    return 0;\n}\n</code></pre> Luogu P3397 \u5730\u6bef code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1e3+10;\n\nint g[N][N];\nint n, m;\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    while(m--){\n        int x1, y1, x2, y2; scanf(\"%d%d%d%d\", &amp;x1, &amp;y1, &amp;x2, &amp;y2);\n        for(int i=x1; i&lt;=x2; i++)\n            g[i][y1]++, g[i][y2+1]--;\n    }\n\n    for(int i=1; i&lt;=n; i++, cout&lt;&lt;\"\\n\")\n        for(int j=1; j&lt;=n; j++)\n            g[i][j] += g[i][j-1], \n            cout&lt;&lt;g[i][j]&lt;&lt;\" \";\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E5%89%8D%E7%BC%80%E5%92%8C/#_5","title":"\u7ec3\u4e60","text":"Luogu P1314 [NOIP2011 \u63d0\u9ad8\u7ec4] \u806a\u660e\u7684\u8d28\u76d1\u5458 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N=2e5+10;\n\nLL w[N], v[N]; // \u6bcf\u4e2a\u77ff\u77f3\u7684\u91cd\u91cf\u548c\u4ef7\u503c\nLL sw[N], sv[N];// \u77ff\u77f3\u533a\u95f4\nint L[N], R[N]; // \u533a\u95f4\nLL n, m, s;     // \u77ff\u77f3 \u533a\u95f4 \u6807\u51c6\u503c\n\nLL calc(LL W){ // \u6c42\u5728\u6807\u51c6 W \u4e0b, \u4ea7\u751f\u7684 y \u7684\u5927\u5c0f\n    for(int i=1; i&lt;=n; i++) sw[i] = sw[i-1] + (LL)(w[i]&gt;=W);\n    for(int i=1; i&lt;=n; i++) sv[i] = sv[i-1] + (LL)(w[i]&gt;=W)*v[i];\n\n    LL y=0;\n    for(int i=1; i&lt;=m; i++) // \u679a\u4e3e\u533a\u95f4\n        y += (sw[ R[i] ]-sw[ L[i]-1 ]) * (sv[ R[i] ]-sv[ L[i]-1 ]);\n    return y;\n}\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;s;\n    for(int i=1; i&lt;=n; i++) scanf(\"%lld%lld\", w+i, v+i);\n    for(int i=1; i&lt;=m; i++) scanf(\"%d%d\", L+i, R+i);\n\n    LL ans=1e18, l=1, r=1e12;\n    while(l&lt;=r){\n        LL mid = (l+r)/2;\n\n        LL y = calc(mid);  \n        ans = min(ans, llabs(y-s)); //cout&lt;&lt;mid&lt;&lt;\" \"&lt;&lt;y&lt;&lt;\"\\n\";\n\n        if(y &gt; s) l=mid+1;  // \u663e\u7136, y\u662f\u5355\u8c03\u9012\u51cf\u7684\n        else r=mid-1;\n    }\n    cout&lt;&lt;ans;\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E6%8E%92%E5%BA%8F/","title":"\u6392\u5e8f","text":"<p>\u56fe\u7247\u6765\u6e90: \u5341\u5927\u6392\u5e8f\u7b97\u6cd5\u603b\u7ed3</p>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E6%8E%92%E5%BA%8F/#stl","title":"STL","text":""},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E6%8E%92%E5%BA%8F/#_1","title":"\u6392\u5e8f","text":"sort()   `O(nlogn)` C++<pre><code>// int a[N] // \u4ece 1 \u5f00\u59cb\u5b58\nsort(a+1, a+1+n);\n\n// vector&lt;int&gt; b;\nsort(b.begin(), b.end());\n\n// \u4ece\u5927\u5230\u5c0f\nsort(a+1, a+1+n, greater&lt;int&gt;());\n</code></pre> sort() \u81ea\u5b9a\u4e49cmp() C++<pre><code>bool cmp(PII a, PII b){ // \u9700\u8981\u6bd4\u8f83\u7684\u4e24\u4e2a\u5143\u7d20\n    if(a.first &gt; b.first) return 1; // first\u66f4\u5927\u7684\u5728\u524d\u9762\n    if(a.first &lt; b.first) return 0; // first\u66f4\u5c0f\u7684\u5728\u540e\u9762\n    if(a.second &lt; b.second) return 1;   // second\u66f4\u5c0f\u7684\u5728\u524d\u9762\n    if(a.second &gt; b.second) return 0;   // second\u66f4\u5927\u7684\u5728\u540e\u9762\n    return 0;   // first\u964d\u5e8f, second\u5347\u5e8f\n}\n\nvoid solve(){\n    sort(a+1, a+1+n, cmp);\n    return ;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E6%8E%92%E5%BA%8F/#k","title":"\u7b2ck\u5927\u6570","text":"nth_element()  `O(n)`  C++<pre><code>// int a[N]\nnth_element(a+1, a+5, a+1+n);\n\n// \u4f7f\u7528\u81ea\u5b9a\u4e49cmp\u89c4\u5219\nnth_element(a+1, a+5, a+1+n, cmp);\n</code></pre>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E6%8E%92%E5%BA%8F/#_2","title":"\u5feb\u901f\u6392\u5e8f","text":"<ul> <li> <p>\u52a8\u753b\u6f14\u793a</p> </li> <li> <p>\u7b97\u6cd5\u8fc7\u7a0b:</p> </li> <li>\u5728\u5e8f\u5217\u4e2d\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u57fa\u51c6\u503c</li> <li>\u5c06\u6bd4\u57fa\u51c6\u503c\u5c0f\u7684\u6570, \u79fb\u52a8\u5230\u57fa\u51c6\u503c\u5de6\u8fb9; \u6bd4\u57fa\u51c6\u503c\u5927\u7684\u6570, \u79fb\u52a8\u5230\u57fa\u51c6\u503c\u53f3\u8fb9<ul> <li>\u5f62\u5982 <code>\u6bd4\u57fa\u51c6\u503c\u5c0f\u7684\u6570\u7684\u96c6\u5408</code> <code>\u57fa\u51c6\u503c</code> <code>\u6bd4\u57fa\u51c6\u503c\u5927\u7684\u6570\u7684\u96c6\u5408</code> </li> </ul> </li> <li>\u5982\u6b64\u5f80\u590d, \u5bf9\u96c6\u5408\u8fdb\u884c 1-2\u7684\u64cd\u4f5c</li> </ul> Luogu P1177 \u3010\u6a21\u677f\u3011\u5feb\u901f\u6392\u5e8f code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1e5+10;\n\nint n;\nint a[N];\n\nvoid quick_sort(int _a[], int l, int r){\n    if(l&gt;=r) return ;               // \u533a\u95f4\u4e3a\u7a7a, \u6216\u53ea\u6709\u4e00\u4e2a\n    int i=l-1, j=r+1, x=_a[l+r&gt;&gt;1]; // \u8fb9\u754c\u53d6\u4e24\u4fa7, \u6807\u7684\u9009\u4e2d\u95f4\n    while(i&lt;j){                 \n        do i++; while(_a[i]&lt;x);     // \u5b9a\u4f4d\u5230\u4e00\u4e2a&gt;=x\u7684\u6570\n        do j--; while(_a[j]&gt;x);     // \u5b9a\u4f4d\u5230\u4e00\u4e2a&lt;=x\u7684\u6570\n        if(i&lt;j) swap(_a[i], _a[j]); // \u5982\u679c\u4e24\u6570\u8fd8\u672a\u76f8\u9047, swap\n    }                               // \u9012\u5f52\u5de6\u8fb9, \u9012\u5f52\u53f3\u8fb9\n    quick_sort(_a, l, j), quick_sort(_a, j+1, r);\n}\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", a+i);\n    quick_sort(a, 1, n);\n    for(int i=1; i&lt;=n; i++) printf(\"%d \", a[i]);\n    return 0;\n}\n</code></pre> Luogu P1923 \u3010\u6df1\u57fa9.\u4f8b4\u3011\u6c42\u7b2c k \u5c0f\u7684\u6570 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=5e6+10;\nint a[N];\nint n, k;\n\nvoid quick_select(int _a[], int l, int r, int k){\n    if(l&gt;=r) return ;               // \u533a\u95f4\u4e3a\u7a7a, \u6216\u53ea\u6709\u4e00\u4e2a\n    int i=l-1, j=r+1, x=_a[l+r&gt;&gt;1]; // \u8fb9\u754c\u53d6\u4e24\u4fa7, \u6807\u7684\u9009\u4e2d\u95f4\n    while(i&lt;j){                 \n        do i++; while(_a[i]&lt;x);     // \u5b9a\u4f4d\u5230\u4e00\u4e2a&gt;=x\u7684\u6570\n        do j--; while(_a[j]&gt;x);     // \u5b9a\u4f4d\u5230\u4e00\u4e2a&lt;=x\u7684\u6570\n        if(i&lt;j) swap(_a[i], _a[j]); // \u5982\u679c\u4e24\u6570\u8fd8\u672a\u76f8\u9047, swap\n    }   // j-l+1 \u6307 \u6b64\u6570\u5728\u8fd9\u4e2a\u533a\u95f4\u4e2d\u7684\u4f4d\u7f6e\n    if(k&lt;=j-l+1) quick_select(_a, l, j, k); // \u5982\u679ck\u5728\u5de6\u8fb9, \u9012\u5f52\u5de6\u8fb9\n    else quick_select(_a, j+1, r, k-j+l-1); // \u53cd\u4e4b\u53f3\u8fb9\n}\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;k;\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", a+i);\n    quick_select(a, 1, n, k+1);\n    printf(\"%d\", a[k+1]);\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E6%8E%92%E5%BA%8F/#_3","title":"\u5f52\u5e76\u6392\u5e8f","text":"<ul> <li> <p>\u52a8\u753b\u6f14\u793a</p> </li> <li> <p>\u7b97\u6cd5\u8fc7\u7a0b:</p> </li> <li>\u5c06\u5e8f\u5217\u5206\u6210\u957f\u5ea6\u76f8\u540c\u7684\u4e24\u4e2a\u5b50\u5e8f\u5217, \u5206\u5230\u65e0\u6cd5\u7ee7\u7eed\u5206\u65f6(\u6bcf\u4e2a\u5e8f\u5217\u4e2d\u53ea\u6709\u4e00\u4e2a\u6570\u636e)</li> <li>\u5c06\u4e24\u4e2a\u6392\u597d\u5e8f\u7684\u5e8f\u5217\u8fdb\u884c\u5408\u5e76</li> </ul> \u6a21\u677f C++<pre><code>void merge_sort(int _a[], int l, int r){\n    if(l&gt;=r) return ;\n    int mid=l+r&gt;&gt;1;         // \u9012\u5f52\u5904\u7406\u5de6\u53f3\u4e24\u8fb9\n    merge_sort(a, l, mid), merge_sort(a, mid+1, r);\n    int tmp[r-l+1];\n    int k=0, i=l, j=mid+1;  // i, j\u53cc\u6307\u9488\n    while(i&lt;=mid &amp;&amp; j&lt;=r)   // \u5c06\u66f4\u5c0f\u7684\u653e\u5728\u5de6\u8fb9\n        if(_a[i] &lt;= _a[j])  tmp[k++]=_a[i++];\n        else                tmp[k++]=_a[j++];// ans+=mid-i+1; // \u7edf\u8ba1\u9006\u5e8f\u5bf9\u6570\u91cf\n    while(i&lt;=mid)   tmp[k++]=_a[i++];   // \u653e\u56de\n    while(j&lt;=r)     tmp[k++]=_a[j++];\n    for(int i=l, j=0; i&lt;=r; i++, j++) _a[i]=tmp[j]; \n}\n</code></pre> Luogu P1908 \u9006\u5e8f\u5bf9 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=5e5+10;\n\nint a[N];\nint n;\n\nlong long ans;\nvoid merge_sort(int _a[], int l, int r){\n    if(l&gt;=r) return ;\n    int mid=l+r&gt;&gt;1;         // \u9012\u5f52\u5904\u7406\u5de6\u53f3\u4e24\u8fb9\n    merge_sort(a, l, mid), merge_sort(a, mid+1, r);\n    int tmp[r-l+1];\n    int k=0, i=l, j=mid+1;  // i, j\u53cc\u6307\u9488\n    while(i&lt;=mid &amp;&amp; j&lt;=r)   // \u5c06\u66f4\u5c0f\u7684\u653e\u5728\u5de6\u8fb9\n        if(_a[i] &lt;= _a[j])  tmp[k++]=_a[i++];\n        else                tmp[k++]=_a[j++], ans+=mid-i+1; // \u7edf\u8ba1\u9006\u5e8f\u5bf9\u6570\u91cf\n    while(i&lt;=mid)   tmp[k++]=_a[i++];   // \u653e\u56de\n    while(j&lt;=r)     tmp[k++]=_a[j++];\n    for(int i=l, j=0; i&lt;=r; i++, j++) _a[i]=tmp[j]; \n}\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", a+i);\n    merge_sort(a, 1, n);\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E6%8E%92%E5%BA%8F/#_4","title":"\u5192\u6ce1\u6392\u5e8f","text":"Luogu P1116 \u8f66\u53a2\u91cd\u7ec4 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1e4+10;\n\nint a[N], n;\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++){\n        cin&gt;&gt;a[i];\n        for(int j=1; j&lt;i; j++)\n            if(a[i] &lt; a[j])\n                swap(a[i], a[j]), a[0]++;\n    }\n    cout&lt;&lt;a[0];\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E6%8E%92%E5%BA%8F/#_5","title":"\u7ec3\u4e60","text":"Luogu P1012 [NOIP1998 \u63d0\u9ad8\u7ec4] \u62fc\u6570 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nconst int N=30;\n\nstring a[N];\nint n;\n\nbool cmp(string x, string y){   // \u53d6\u6bcf\u4e00\u4f4d\u8fdb\u884c\u6bd4\u8f83 \u5927\u7684\u5728\u524d\u9762\n    for(int i=0, j=0; ; i++, j++){\n        if(i == x.size()) i=0;\n        if(j == y.size()) j=0;\n        if(x[i] &gt; y[j]) return 1;\n        if(x[i] &lt; y[j]) return 0;\n    }\n    return 0;\n}\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) cin&gt;&gt;a[i];\n    sort(a+1, a+1+n, cmp);\n    for(int i=1; i&lt;=n; i++) cout&lt;&lt;a[i];\n    return 0;\n}\n</code></pre> Luogu P1104 \u751f\u65e5 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\ntypedef long long LL;\n\ntypedef pair&lt;LL, string&gt; PIS;\n\nconst int N=1e2+10;\n\nPIS a[N];\nint n;\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++){\n        cin&gt;&gt;a[i].second;\n        LL y, m, d; cin&gt;&gt;y&gt;&gt;m&gt;&gt;d;\n        y = y*1000000 + m*10000 + d*100 + n-i;\n        a[i].first = y; \n    }\n\n    sort(a+1, a+1+n);\n\n    for(int i=1; i&lt;=n; i++)\n        cout&lt;&lt;a[i].second&lt;&lt;\"\\n\";\n\n    return 0;\n}\n</code></pre> Luogu P5143 \u6500\u722c\u8005 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cmath&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nconst int N=5e4+10;\n\nstruct T{\n    int x, y, z;\n};\n\nT a[N];\nint n;\ndouble ans;\n\nbool cmp(T X, T Y){\n    if(X.z &lt; Y.z) return 1;\n    else return 0;\n}\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) scanf(\"%d%d%d\", &amp;a[i].x, &amp;a[i].y, &amp;a[i].z);\n    sort(a+1, a+1+n, cmp);\n    for(int i=2; i&lt;=n; i++)\n        ans += sqrt(pow(a[i].x-a[i-1].x,2) + pow(a[i].y-a[i-1].y,2) + pow(a[i].z-a[i-1].z,2));\n    printf(\"%.3lf\", ans);\n    return 0;\n}\n</code></pre> <p>\u6d1b\u8c37\u9898\u5355 \u6392\u5e8f</p> <p>\u4e00\u672c\u901a \u7b2c\u4e8c\u90e8\u5206 \u57fa\u7840\u7b97\u6cd5 --&gt; \u7b2c\u4e8c\u7ae0 \u6570\u636e\u6392\u5e8f</p>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E6%A8%A1%E6%8B%9F/","title":"\u679a\u4e3e","text":"Luogu P2089 \u70e4\u9e21 code  \u6709 $10$ \u79cd\u914d\u6599\uff0c\u6bcf\u79cd\u914d\u6599\u53ef\u4f7f\u7528 $[1,3]$ \u514b\uff08\u6ce8\u610f\uff01\u6ca1\u6709 $0$ \u514b\uff09\uff0c\u6c42 $10$ \u79cd\u914d\u6599\u7ec4\u6210\u7684 $n$ \u514b\u65b9\u6848\u603b\u548c  - \u7b2c $1$ \u79cd\u914d\u6599 \u53ef\u4ee5\u9009\u62e9 $1$ \u514b\uff0c$2$ \u514b\uff0c$3$\u514b - \u7b2c $2$ \u79cd\u914d\u6599 \u53ef\u4ee5\u9009\u62e9 $1$ \u514b\uff0c$2$ \u514b\uff0c$3$\u514b - \u7b2c $3$ \u79cd\u914d\u6599 \u53ef\u4ee5\u9009\u62e9 $1$ \u514b\uff0c$2$ \u514b\uff0c$3$\u514b - ... - \u7b2c $i$ \u79cd\u914d\u6599 \u53ef\u4ee5\u9009\u62e9 $1$ \u514b\uff0c$2$ \u514b\uff0c$3$\u514b - ... - \u7b2c $10$ \u79cd\u914d\u6599 \u53ef\u4ee5\u9009\u62e9 $1$ \u514b\uff0c$2$ \u514b\uff0c$3$\u514b  \u6211\u4eec\u5c1d\u8bd5\u679a\u4e3e **\u6240\u6709\u914d\u6599** \u7684 **\u6240\u6709\u514b\u6570** \u7684\u65b9\u6848\uff0c\u518d\u68c0\u67e5\u4e00\u4e0b\uff0c\u6b64\u65b9\u6848\u7684\u603b\u514b\u6570\uff0c\u662f\u5426\u7b49\u4e8e $n$  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;queue&gt;\n#include &lt;sstream&gt;\nusing namespace std;\n\nconst int N=1;\nint n;\n\nqueue&lt;string&gt; q;\n\nstring i2s(int num){\n    string res;\n    stringstream ss;\n    ss&lt;&lt;num;\n    ss&gt;&gt;res;\n    return res;\n}\n\nint main(){\n    cin&gt;&gt;n;\n    for(int a=1; a&lt;=3; a++)\n    for(int b=1; b&lt;=3; b++)\n    for(int c=1; c&lt;=3; c++)\n    for(int d=1; d&lt;=3; d++)\n    for(int e=1; e&lt;=3; e++)\n    for(int f=1; f&lt;=3; f++)\n    for(int g=1; g&lt;=3; g++)\n    for(int h=1; h&lt;=3; h++)\n    for(int i=1; i&lt;=3; i++)\n    for(int j=1; j&lt;=3; j++)\n        if(a+b+c+d+e+f+g+h+i+j == n)\n            q.push(i2s(a) + i2s(b) + i2s(c) + i2s(d) + i2s(e) + i2s(f) + i2s(g) + i2s(h) + i2s(i) + i2s(j));\n    cout&lt;&lt;q.size()&lt;&lt;\"\\n\";\n\n    while(q.size()){\n        for(auto c: q.front()) cout&lt;&lt;c&lt;&lt;\" \";\n        cout&lt;&lt;\"\\n\";\n        q.pop();\n    }\n\n    return 0;\n}\n</code></pre> Luogu P1618 \u4e09\u8fde\u51fb\uff08\u5347\u7ea7\u7248\uff09 code  \u7528 $9$ \u4e2a\u6570\u5b57 $[1,9]$, \u7ec4\u6210 $3$ \u4e2a\u4e09\u4f4d\u6570  - \u4f8b $123,456,789$\uff0c\u5219 $A=123,B=456,C=789$  \u5982\u679c $A:B:C = 123:456:789$\uff0c\u5219\u65b9\u6848\u6570 $+1$  \u663e\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e **\u6bcf\u4e00\u4f4d** \u7684 **\u6240\u6709\u9009\u62e9**\uff0c\u9700\u8981\u6ce8\u610f\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u9009\u62e9\u8fc7\u4e86\uff0c\u5c31\u4e0d\u80fd\u9009\u62e9\u4e86  - \u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a `bool st[10]` \u7684\u6570\u7ec4\uff0c\u6765\u7ef4\u62a4 $i$ \u662f\u5426\u4f7f\u7528\u8fc7\uff0c\u4f7f\u7528\u8fc7\u4e3a $true$\uff0c\u672a\u4f7f\u7528\u4e3a $false$    \u6700\u540e\uff0c\u5224\u65ad\u7ec4\u6210\u7684 $3$ \u4e2a\u4e09\u4f4d\u6570\uff0c\u662f\u5426\u6ee1\u8db3 $A:B:C$  C++<pre><code>// \u5f85\u5b9e\u73b0\n</code></pre>  \u56e0\u4e3a $A:B:C$ \u7684\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u53ea\u8981\u6709 $A$\uff0c \u5219\u53ef\u4ee5\u7b97\u51fa $B,C$  \u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e $A$\uff0c\u8fdb\u800c\u901a\u8fc7\u6bd4\u4f8b\u7b97\u51fa $B,C$\uff0c\u6700\u540e\uff0c\u68c0\u67e5 $[1,9]$ \u662f\u5426 **\u90fd\u4f7f\u7528\u8fc7\u4e14\u4ec5\u4f7f\u7528\u8fc7\u4e00\u6b21**  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nint a,b,c;\nstring s = \"No!!!\";\n\nint main(){\n    cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;\n\n    for(int i=1; i&lt;=9 &amp;&amp; a &amp;&amp; b &amp;&amp; c; i++)\n    for(int j=1; j&lt;=9; j++)\n    for(int k=1; k&lt;=9; k++){\n        int x = i*100 + j*10 + k;\n        int y = x*b/a;\n        int z = x*c/a;\n        int xx = x;\n        int yy = y;\n        int zz = z;\n\n        int st[11];\n        memset(st, 0, sizeof st);\n\n        while(x) st[x%10]++, x/=10;\n        while(y) st[y%10]++, y/=10;\n        while(z) st[z%10]++, z/=10;\n\n        bool flg=1;\n        if(st[0]!=0) flg=0;\n        for(int i=1; i&lt;=9 &amp;&amp; flg; i++)\n            if(st[i]!=1) flg=0;\n\n        if(flg)\n            cout&lt;&lt;xx&lt;&lt;\" \"&lt;&lt;yy&lt;&lt;\" \"&lt;&lt;zz&lt;&lt;\"\\n\", s = \"\";\n    }\n\n    if(s==\"No!!!\") cout&lt;&lt;s;\n\n    return 0;\n}\n</code></pre> Luogu P2241 \u7edf\u8ba1\u65b9\u5f62\uff08\u6570\u636e\u52a0\u5f3a\u7248\uff09 code  \u7edf\u8ba1 $n * m$ \u5927\u5c0f\u7684\u77e9\u9635\u4e0a\uff0c\u6709\u591a\u5c11\u4e2a **\u6b63\u65b9\u5f62** \u548c **\u957f\u65b9\u5f62**  - \u957f\u65b9\u5f62\u6570\u91cf = \u77e9\u5f62\u6570\u91cf - \u6b63\u65b9\u5f62\u6570\u91cf  \u90a3\u4e48\u6b64\u9898\u5c31\u53ef\u4ee5\u8f6c\u6362\u4e3a\u6c42 **\u6b63\u65b9\u5f62** \u6570\u91cf\u548c **\u77e9\u5f62** \u6570\u91cf   \u9996\u5148\u8003\u8651 **\u6b63\u65b9\u5f62** \u6570\u91cf\uff1a  - \u8fb9\u957f\u4e3a $1$ \u7684\u6b63\u65b9\u5f62\u6570\u91cf = $n*m$  - \u8fb9\u957f\u4e3a $2$ \u7684\u6b63\u65b9\u5f62\u6570\u91cf = $(n-1)*(m-1)$ - \u8fb9\u957f\u4e3a $3$ \u7684\u6b63\u65b9\u5f62\u6570\u91cf = $(n-2)*(m-2)$ - ... - \u8fb9\u957f\u4e3a $i (i&lt;=min(n,m))$ \u7684\u6b63\u65b9\u5f62\u6570\u91cf = $(n - (i-1))*(m - (i-1))$  \u56e0\u6b64\uff0c**\u6b63\u65b9\u5f62** \u6570\u91cf:  $$\\sum_{i=1}^{min(n,m)} (n-i+1) * (m-i+1)$$  \u63a5\u4e0b\u6765\u8003\u8651 **\u77e9\u5f62** \u6570\u91cf\uff1a  - \u5bbd\u4e3a $1$\uff0c\u957f\u4e3a $1$ \u7684\u77e9\u5f62\u6570\u91cf = $n*m$ - \u5bbd\u4e3a $1$\uff0c\u957f\u4e3a $2$ \u7684\u77e9\u5f62\u6570\u91cf = $n*(m-1)$ - \u5bbd\u4e3a $1$\uff0c\u957f\u4e3a $3$ \u7684\u77e9\u5f62\u6570\u91cf = $n*(m-2)$ - ... - \u5bbd\u4e3a $1$\uff0c\u957f\u4e3a $m$ \u7684\u77e9\u5f62\u6570\u91cf = $n*(m-(m-1))$ - \u5bbd\u4e3a $2$\uff0c\u957f\u4e3a $1$ \u7684\u77e9\u5f62\u6570\u91cf = $(n-1)*m$ - \u5bbd\u4e3a $2$\uff0c\u957f\u4e3a $2$ \u7684\u77e9\u5f62\u6570\u91cf = $(n-1)*(m-1)$ - ... - \u5bbd\u4e3a $i (i&lt;=n)$\uff0c\u957f\u4e3a $j (j&lt;=m)$ \u7684\u77e9\u5f62\u6570\u91cf = $(n-(i-1))*(m-(j-1))$  \u56e0\u6b64\uff0c**\u77e9\u5f62** \u6570\u91cf\uff1a  $$\\sum_{i=1}^{n}\\sum_{j=1}^{m} (n-i+1)*(m-j+1)$$  \u8fd0\u7528\u6c42\u548c\u516c\u5f0f\uff1a  $= (1+n)*n/2 * (1+m)*m/2$ $= n*m*(1+n)*(1+m)/4$   C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nLL n, m;\nLL a, b;    // \u6b63\u65b9\u5f62\u6570\u91cf \u548c \u77e9\u5f62\u6570\u91cf\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=n &amp;&amp; i&lt;=m; i++)\n        a += (n-i+1) * (m-i+1);\n    cout&lt;&lt;a&lt;&lt;\" \"&lt;&lt;n*m*(n+1)*(m+1) / 4 - a;\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E6%A8%A1%E6%8B%9F/#_2","title":"\u6a21\u62df","text":""},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E6%A8%A1%E6%8B%9F/#_3","title":"\u65e5\u671f\u95ee\u9898","text":"AcWing 1229. \u65e5\u671f\u95ee\u9898 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;set&gt;\nusing namespace std;\n\nint months[13]={0,31,28,31,30,31,30,31,31,30,31,30,31};\nbool ck(int y, int m, int d){\n    months[2] = 28;\n    if(y&gt;=2060 || y&lt;1960) return 0; // \u5224\u65ad\u5e74\n    if(m&lt;1 || m&gt;12) return 0;       // \u5224\u65ad\u6708\n    if(y%400==0 || (y%4==0 &amp;&amp; y%100!=0)) months[2] = 29; \n    if(d&lt;1 || d&gt;months[m]) return 0;// \u5224\u65ad\u65e5\n    return 1;\n}\n\nint main(){\n    int y, m, d;\n    scanf(\"%d/%d/%d\", &amp;y, &amp;m, &amp;d);\n\n    set&lt;int&gt; pq;\n    if(ck(1900+y, m, d)) pq.insert( (1900+y)*1e4 + m*1e2 + d);\n    if(ck(2000+y, m, d)) pq.insert( (2000+y)*1e4 + m*1e2 + d);\n    if(ck(1900+d, y, m)) pq.insert( (1900+d)*1e4 + y*1e2 + m);\n    if(ck(2000+d, y, m)) pq.insert( (2000+d)*1e4 + y*1e2 + m);\n    if(ck(1900+d, m, y)) pq.insert( (1900+d)*1e4 + m*1e2 + y);\n    if(ck(2000+d, m, y)) pq.insert( (2000+d)*1e4 + m*1e2 + y);\n    for(auto x: pq) printf(\"%d-%02d-%02d\\n\", x/10000, x%10000/100, x%100);\n\n    return 0;\n}\n</code></pre> AcWing 3391. \u4eca\u5e74\u7684\u7b2c\u51e0\u5929\uff1f code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint months[13]={0,31,28,31,30,31,30,31,31,30,31,30,31};\nbool ck(int y, int m, int d){\n    months[2] = 28;\n    if(m&lt;1 || m&gt;12) return 0;       // \u5224\u65ad\u6708\n    if(y%400==0 || (y%4==0 &amp;&amp; y%100!=0)) months[2] = 29; \n    if(d&lt;1 || d&gt;months[m]) return 0;// \u5224\u65ad\u65e5\n    return 1;\n}\n\nint main(){\n    int y, m, d;\n    while(cin&gt;&gt;y&gt;&gt;m&gt;&gt;d){\n        int res=0, day=m*100+d;\n        for(int i=101; i&lt;=day; i++)\n            if(ck(y, i/100, i%100))\n                res++;\n        cout&lt;&lt;res&lt;&lt;\"\\n\";\n    }\n\n    return 0;\n}\n</code></pre> AcWing 3489. \u661f\u671f\u51e0 code  &gt; \u57fa\u59c6\u2022\u62c9\u5c14\u68ee\u516c\u5f0f\u53ef\u4ee5\u7531\u516c\u5386\u7684\u5e74\u6708\u65e5\u63a8\u5bfc\u51fa\u5f53\u5929\u7684\u661f\u671f &gt; `w = (d + 2m + 3(m + 1) / 5 + y + y / 4 - y / 100 + y / 400 + 1) % 7` &gt; * d \u4e3a\u65e5\u671f, \u8303\u56f4\u662f1-31 &gt; * m \u4e3a\u6708\u4efd, \u8303\u56f4\u662f3-14, \u5f53\u5e74\u76841, 2\u6708\u9700\u5904\u7406\u4e3a\u4e0a\u4e00\u5e74\u768413, 14\u6708(\u5373y-=1, m+=1\u62162) &gt; * y \u4e3a\u5e74\u4efd, \u5f53\u6708\u4efd\u4e3a1, 2\u65f6, y-=1 &gt; * w \u4e3a\u661f\u671f, \u8303\u56f4\u662f\u4e3a0-6, \u661f\u671f\u65e5\u75280\u8868\u793a, \u661f\u671f\u4e00\u4e3a1, \u4ee5\u6b64\u7c7b\u63a8, \u661f\u671f\u516d\u4e3a6  C++<pre><code>#include &lt;algorithm&gt;\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\n#include &lt;map&gt;\n\nusing namespace std;\n\nint months[13]={0,31,28,31,30,31,30,31,31,30,31,30,31};\nmap&lt;string, int&gt; month_name = {\n    {\"January\", 1},{\"February\", 2},{\"March\", 3},{\"April\", 4},\n    {\"May\", 5},{\"June\", 6},{\"July\", 7},{\"August\", 8},\n    {\"September\", 9},{\"October\", 10},{\"November\", 11},{\"December\", 12} };\n\nstring week_name[7] = {\n    \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\",\n    \"Friday\", \"Saturday\", \"Sunday\"};\n\nint main() {\n    int d, m, y;\n    string str;\n    while (cin &gt;&gt; d &gt;&gt; str &gt;&gt; y) {\n        m = month_name[str];\n        if(m==1||m==2) m += 12, y--;\n        cout&lt;&lt;week_name[ (d + 2 *m + 3 *(m+1)/5 + y + y/4 -y /100 + y/400)%7 ] &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E6%A8%A1%E6%8B%9F/#_4","title":"\u56de\u6587\u95ee\u9898","text":"AcWing 2867. \u56de\u6587\u65e5\u671f code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint months[13]={0,31,28,31,30,31,30,31,31,30,31,30,31};\nbool ck(int y, int m, int d){\n    months[2] = 28;\n    if(m&lt;1 || m&gt;12) return 0;       // \u5224\u65ad\u6708\n    if(y%400==0 || (y%4==0 &amp;&amp; y%100!=0)) months[2] = 29; \n    if(d&lt;1 || d&gt;months[m]) return 0;// \u5224\u65ad\u65e5\n    return 1;\n}\n\nbool flg=0;\n\nint main(){\n    int start; cin&gt;&gt;start;\n    int d, m, y=start/10000;\n\n    for(; ; y++){\n        m = y%10*10 + y%100/10;\n        d = y/100%10*10 + y/1000;\n\n        if(ck(y, m, d) &amp;&amp; y*1e4+m*1e2+d &gt; start){\n\n            if(!flg){\n                printf(\"%d%02d%02d\\n\", y, m, d);   \n                flg=1;\n            }\n\n            if(m == d &amp;&amp; m/10 != m%10){\n                printf(\"%d%02d%02d\\n\", y, m, d); \n                break;\n            }\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E6%A8%A1%E6%8B%9F/#_5","title":"\u7ea6\u745f\u592b\u73af","text":"AcWing 3559. \u56f4\u5708\u62a5\u6570 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nvoid solve(){\n    int n; cin&gt;&gt;n;\n    bool a[n];\n    memset(a, true, sizeof a);\n\n    int k=0, cnt=0;\n    for(int i=0; cnt&lt;n; i++){\n\n        if(a[i]){\n            k++;\n\n            if(k==3){\n                printf(\"%d \", i+1);\n                a[i]=0;\n                cnt++;\n                k=0;\n            }\n        }\n\n        // \u5230\u8fbe\u9996\u4f4d\n        if(i==n-1) i=-1;    \n    }\n\n    puts(\"\");\n\n    return ;\n}\n\nint main(){\n    int T; cin&gt;&gt;T; while(T--)\n    solve();\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E6%A8%A1%E6%8B%9F/#_6","title":"\u683c\u96f7\u7801\u95ee\u9898","text":""},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E6%A8%A1%E6%8B%9F/#_7","title":"\u6768\u8f89\u4e09\u89d2\u5f62","text":"AcWing 3418. \u6768\u8f89\u4e09\u89d2\u5f62 code C++<pre><code>#pragma GCC optimize(2)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n\n#include &lt;iostream&gt;\n#include &lt;cmath&gt;\nusing namespace std;\n\nconst int INF=0x3f3f3f3f;\n\ntypedef long long LL;\n\nLL f[30][30];\n\nLL c(int a, int b){\n    LL res=1;\n    for(int i=a, j=1; j&lt;=b; i--, j++)\n        res=res*i/j;\n    return res;\n}\n\nint main(){\n    LL n;\n    cin&gt;&gt;n;\n    if(n==1){\n        cout&lt;&lt;n;\n        return 0;\n    }\n\n    f[0][0]=1;\n    for(int i=1; i&lt;=20; i++){\n        f[i][0]=1;\n        for(int j=1; j&lt;=i; j++){\n            // \u8ba1\u7b97\n            f[i][j]=f[i-1][j-1]+f[i-1][j];\n\n            // \u5927\u4e8e1e9\u65e0\u610f\u4e49\uff0c\u76f4\u63a5\u8bbe\u7f6e\u4e3aINF\uff0c\u9632\u6b62\u4e0b\u9762\u7684\u503c\u7206LL\n            if(f[i][j]&gt;1e9) f[i][j]=INF; \n\n            // \u627e\u5230\u76ee\u6807\u503c\n            if(f[i][j]==n){\n                // (1 + (i+1 - 1))*(i)/2  (a1+an)*(n)/2  \uff08\u9996\u9879+\u672b\u9879\uff09*\uff08\u9879\u6570\uff09/ 2\n                cout&lt;&lt;1LL*(i+1)*(i)/2+j+1;\n                return 0;\n            }\n        }    \n    }\n\n    /*  \u987a\u5e8f\u627e\u4f1a\u8d85\u65f6\n    for(int i=2001; i&lt;=n; i++){\n        if(i==n){\n            cout&lt;&lt;1LL*(i+1)*(i)/2+2;\n            return 0;\n        }\n        if( i*(i-1)/2 ==n){\n            cout&lt;&lt;1LL*(i+1)*(i)/2+3;\n            return 0;\n        }\n    }\n    */\n\n    // \u7b54\u6848\u4e00\u5b9a\u5728c(i,1) c(i,2)\u4e2d\n    LL i=sqrt(2*n)+1;\n\n    if( c(i,2) == n)\n        cout&lt;&lt;i*(i+1)/2+3; // c(i,2)\n    else\n        cout&lt;&lt;n*(n+1)/2+2; // c(n,1)\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E6%A8%A1%E6%8B%9F/#_8","title":"\u8868\u8fbe\u5f0f\u6c42\u503c\u95ee\u9898","text":""},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E6%A8%A1%E6%8B%9F/#_9","title":"\u5176\u4ed6","text":"P1042 [NOIP2003 \u666e\u53ca\u7ec4] \u4e52\u4e53\u7403 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1;\nstring s;\n\nint main(){\n    string t;\n    while(cin&gt;&gt;t) s += t;\n    s = \" \" + s;\n\n    int a=0, b=0;\n    for(int i=1; i&lt;s.size()-1 &amp;&amp; s[i]!='E'; i++){\n        if(s[i]=='W') a++;\n        else b++;\n        if(i!=0 &amp;&amp; max(a,b)&gt;=11 &amp;&amp; i!=s.size()-2 &amp;&amp; abs(a-b)&gt;=2){\n            cout&lt;&lt;a&lt;&lt;\":\"&lt;&lt;b&lt;&lt;\"\\n\";\n            a=0, b=0;\n        }\n    }\n    cout&lt;&lt;a&lt;&lt;\":\"&lt;&lt;b&lt;&lt;\"\\n\\n\";\n    a=0, b=0;\n\n    for(int i=1; i&lt;s.size()-1 &amp;&amp; s[i]!='E'; i++){\n        if(s[i]=='W') a++;\n        else b++;\n        if(i!=0 &amp;&amp; max(a,b)&gt;=21 &amp;&amp; i!=s.size()-2 &amp;&amp; abs(a-b)&gt;=2){\n            cout&lt;&lt;a&lt;&lt;\":\"&lt;&lt;b&lt;&lt;\"\\n\";\n            a=0, b=0;\n        }\n    }\n    cout&lt;&lt;a&lt;&lt;\":\"&lt;&lt;b&lt;&lt;\"\\n\";\n\n    return 0;\n}\n</code></pre> P1563 [NOIP2016 \u63d0\u9ad8\u7ec4] \u73a9\u5177\u8c1c\u9898 code C++<pre><code>#define fst first\n#define sed second\n#include &lt;cstring&gt;\n#include &lt;iostream&gt;\nusing namespace std;\n\ntypedef pair&lt;bool, string&gt; pbs;\n\nconst int N=1e5+10;\n\n// 00 &lt;-\n// 01 -&gt;\n// 10 -&gt;\n// 11 &lt;-\n\npbs a[N];   // \u4eba\nint n, m;\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=n; i++) cin&gt;&gt;a[i].fst&gt;&gt;a[i].sed;\n\n    int idx=1;  // \u73b0\u5728\u4f4d\u7f6e\n    while(m--){\n        int f, l;\n        cin&gt;&gt;f&gt;&gt;l;\n\n        if(!a[idx].fst &amp;&amp; !f) f=0;\n        else if(!a[idx].fst &amp;&amp; f) f=1;\n        else if(a[idx].fst &amp;&amp; !f) f=1;\n        else if(a[idx].fst &amp;&amp; f) f=0;\n\n        if(f)\n            idx = (idx + l) % n;\n        else \n            idx = (idx + n - l) % n;\n\n        if(idx == 0) idx = n;\n    }\n\n    cout&lt;&lt;a[idx].sed;\n\n    return 0;\n}\n</code></pre> P4924 [1007] \u9b54\u6cd5\u5c11\u5973\u5c0fScarlet code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=510;\n\nint g[N][N], rg[N][N], tg[N][N];\nint n, m;\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1, t=1; i&lt;=n; i++)\n        for(int j=1; j&lt;=n; j++, t++)\n            g[i][j] = rg[i][j] = t;\n\n    while(m--){\n        int x, y, r, z;\n        cin&gt;&gt;x&gt;&gt;y&gt;&gt;r&gt;&gt;z;\n\n        int x1 = x - r, y1 = y - r;\n        int x2 = x + r, y2 = y + r;\n\n        for(int i=x1, ii=1; i&lt;=x2; i++, ii++)\n            for(int j=y1, jj=1; j&lt;=y2; j++, jj++)\n                tg[ii][jj] = g[i][j];\n\n        for(int i=1; i&lt;=2*r+1; i++)\n            for(int j=1; j&lt;=2*r+1; j++)\n                if(!z)      \n                    rg[j][2*r+2-i] = tg[i][j];\n                else\n                    rg[2*r+2-j][i] = tg[i][j];\n\n        for(int i=x1, ii=1; i&lt;=x2; i++, ii++)\n            for(int j=y1, jj=1; j&lt;=y2; j++, jj++)\n                g[i][j] = rg[ii][jj];\n    }\n\n    for(int i=1; i&lt;=n; i++, cout&lt;&lt;\"\\n\")\n        for(int j=1; j&lt;=n; j++, cout&lt;&lt;\" \")\n            cout&lt;&lt;g[i][j];\n\n    return 0;\n}\n</code></pre> P1328 [NOIP2014 \u63d0\u9ad8\u7ec4] \u751f\u6d3b\u5927\u7206\u70b8\u7248\u77f3\u5934\u526a\u5200\u5e03 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1;\n\nint n, na, nb, resa, resb;\nint A[210], B[210];   // \u51fa\u62f3\u987a\u5e8f\n\nbool pk(int a, int b){    // a \u8d62 b\n    if(a==0)\n    if(b==2 || b==3)  return 1;\n\n    if(a==1)\n    if(b==0 || b==3) return 1;\n\n    if(a==2)\n    if(b==1 || b==4) return 1;\n\n    if(a==3)\n    if(b==2 || b==4) return 1;\n\n    if(a==4)\n    if(b==0 || b==1) return 1;\n\n    return 0;\n}\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;na&gt;&gt;nb;\n    for(int i=1; i&lt;=na; i++) cin&gt;&gt;A[i];\n    for(int j=1; j&lt;=nb; j++) cin&gt;&gt;B[j];\n\n    for(int i=1, j=1; n; i==na?i=1:i++, j==nb?j=1:j++, n--)\n        resa+=pk(A[i], B[j]), resb+=pk(B[j], A[i]);\n\n    cout&lt;&lt;resa&lt;&lt;\" \"&lt;&lt;resb;\n\n    return 0;\n}\n</code></pre> P1518 [USACO2.4] \u4e24\u53ea\u5854\u59c6\u6c83\u65af\u725b The Tamworth Two code C++<pre><code>#define fst first\n#define sed second\n#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\ntypedef pair&lt;int, int&gt; PII;\n\nconst int dxy[4][2] = { {-1,0}, {0,1}, {1,0}, {0,-1} };\n\nchar g[20][20];\nint ff = 0, fc = 0; // \u4ed6\u4eec\u7684\u521d\u59cb\u65b9\u5411\nPII uf, uc;     // \u4ed6\u4eec\u7684\u521d\u59cb\u4f4d\u7f6e\n\nint main() {\n    for (int i = 1; i &lt;= 10; i++) {\n        string s; cin &gt;&gt; s;\n        for (int j = 1; j &lt;= 10; j++) {\n            g[i][j] = s[j - 1];\n\n            if (g[i][j] == 'F')\n                uf = { i,j };\n            if (g[i][j] == 'C')\n                uc = { i,j };\n        }\n    }\n\n    int res = 0;\n    while (++res) {\n\n        int nx = uf.fst + dxy[ff][0];\n        int ny = uf.sed + dxy[ff][1];\n\n        if (nx &lt; 1 || nx&gt;10 || ny &lt; 1 || ny&gt;10 || g[nx][ny] == '*') {\n            if (++ff == 4) ff = 0; // \u4e0d\u80fd\u8d70\u7684\u5730\u65b9\n        }\n        else {\n            uf = { nx, ny };  // \u66f4\u65b0\u4f4d\u7f6e\n        }\n\n        nx = uc.fst + dxy[fc][0];\n        ny = uc.sed + dxy[fc][1];\n\n        if (nx &lt; 1 || nx&gt;10 || ny &lt; 1 || ny&gt;10 || g[nx][ny] == '*') {\n            if (++fc == 4) fc = 0; // \u4e0d\u80fd\u8d70\u7684\u5730\u65b9\n        }\n        else {\n            uc = { nx, ny };  // \u66f4\u65b0\u4f4d\u7f6e\n        }\n\n        if (uf == uc) {\n            break;\n        }\n\n        if(res&gt;1e7) break;\n    }\n\n    printf(\"%d\", res&gt;1e7?0:res);\n\n    return 0;\n}\n</code></pre> P1067 [NOIP2009 \u666e\u53ca\u7ec4] \u591a\u9879\u5f0f\u8f93\u51fa code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nconst int N=1;\n\nint n;\nbool flg=1;\n\nint main(){\n    cin&gt;&gt;n;\n    n++;\n    while(n--){\n        int num; cin&gt;&gt;num;\n        if(!num) continue;\n\n        // \u7b26\u53f7\u8f93\u51fa\n        if(num&gt;0 &amp;&amp; !flg) cout&lt;&lt;\"+\"; \n        if(num&lt;0) cout&lt;&lt;\"-\";\n\n        // \u6570\u5b57\u8f93\u51fa\n        num=abs(num);\n        if(num!=1 || n==0) cout&lt;&lt;num;\n\n        // \u6b21\u65b9\u8f93\u51fa\n        if(n==1) {\n            cout&lt;&lt;\"x\";\n            continue;\n        }\n        if(n!=0) cout&lt;&lt;\"x^\"&lt;&lt;n;\n\n        // \u6709\u4e86\u8f93\u51fa\n        flg=0;\n    }\n\n    return 0;\n}\n</code></pre> P1098 [NOIP2007 \u63d0\u9ad8\u7ec4] \u5b57\u7b26\u4e32\u7684\u5c55\u5f00 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nconst int N=1;\n\nstring s;\nint n, p1, p2, p3;\n\nint main(){\n    cin&gt;&gt;p1&gt;&gt;p2&gt;&gt;p3;\n    cin&gt;&gt;s; n=s.size(); s=\" \"+s;\n\n    for(int i=1; i&lt;=n; i++){\n\n        if(s[i]=='-'){\n            char a = s[i-1], b = s[i+1];\n            string ts;\n\n            if(a&gt;='a' &amp;&amp; a&lt;='z' &amp;&amp; b&gt;='a' &amp;&amp; b&lt;='z' &amp;&amp; a&lt;b){   // \u5b57\u6bcd\n                if(a&lt;b) for(char c=a+1; c&lt;b; c++) ts += c;\n                if(p3 == 2) reverse(ts.begin(), ts.end());\n                if(p1 == 2) for(auto &amp;c: ts) c-=32;\n\n                for(int j=0; j&lt;ts.size(); j++)\n                    for(int k=0; k&lt;p2; k++)\n                        if(p1==3) cout&lt;&lt;\"*\";\n                        else cout&lt;&lt;ts[j];\n                continue;\n            }\n\n            if(a&gt;='0' &amp;&amp; a&lt;='9' &amp;&amp; b&gt;='0' &amp;&amp; b&lt;='9' &amp;&amp; a&lt;b){   // \u6570\u5b57\n                if(a&lt;b) for(char c=a+1; c&lt;b; c++) ts += c;\n                if(p3 == 2) reverse(ts.begin(), ts.end());\n\n                for(int j=0; j&lt;ts.size(); j++)\n                    for(int k=0; k&lt;p2; k++)\n                        if(p1==3) cout&lt;&lt;\"*\";\n                        else cout&lt;&lt;ts[j];\n                continue;\n            }\n        }\n\n        // \u5176\u4f59\u60c5\u51b5\n        cout&lt;&lt;s[i];\n    }\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E9%80%92%E5%BD%92/","title":"\u9012\u63a8","text":"ybt 1188\uff1a\u83f2\u6ce2\u90a3\u5951\u6570\u5217(2)  code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1e6+10;\n\nint f[N];\n\nint main(){\n    f[1] = f[2] = 1;\n    for(int i=3; i&lt;=1e6; i++)\n        f[i] = (f[i-2] + f[i-1])%1000;\n    int n; cin&gt;&gt;n;\n    while(n--){\n        int x; cin&gt;&gt;x;\n        cout&lt;&lt;f[x]&lt;&lt;\"\\n\";\n    }\n    return 0;\n}\n</code></pre> ybt 1312\uff1a\u3010\u4f8b3.4\u3011\u6606\u866b\u7e41\u6b96 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N=60;\n\nLL a[N], b[N];  // \u7b2c i \u4e2a\u6708\u7684\u6210\u866b\u6570\u91cf\u548c\u866b\u5375\u6570\u91cf\nint x, y, z;\n\nint main(){\n    cin&gt;&gt;x&gt;&gt;y&gt;&gt;z;\n    for(int i=1; i&lt;=x; i++) a[i]=1; // \u524d x \u4e2a\u6708\u90fd\u53ea\u67091\u5bf9\u6210\u866b\n    for(int i=x+1; i&lt;=z+1; i++){\n        b[i] = a[i-x] * y;      // \u4ea7\u751f\u591a\u5c11\u4e2a\u866b\u5375\n        a[i] = a[i-1] + b[i-2]; // \u6210\u866b\u6570\u91cf\n    }\n\n    cout&lt;&lt;a[z+1];\n    return 0;\n}\n</code></pre> ybt 1188\uff1a\u83f2\u6ce2\u90a3\u5951\u6570\u5217(2) code C++<pre><code>\n</code></pre>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E9%80%92%E5%BD%92/#_2","title":"\u7b80\u5355\u9012\u5f52\u95ee\u9898","text":"ybt 1158\uff1a\u6c421+2+3+... code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint n;\n\nint sum(int k){ // sum\u6c42 k + (k-1) + (k-2) + ... + 1 \u7684\u548c\n    if(k==1) return 1;\n    return k + sum(k-1);\n}\n\nint main(){\n    cin&gt;&gt;n;\n    cout&lt;&lt;sum(n);\n    return 0;\n}\n</code></pre> ybt 1163\uff1a\u963f\u514b\u66fc(Ackmann)\u51fd\u6570 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1;\n\nint akm(int m, int n){\n    if(m==0) return n+1;\n    if(m&gt;0 &amp;&amp; n==0) return akm(m-1, 1);\n    if(m&gt;0 &amp;&amp; n&gt;0) return akm(m-1, akm(m, n-1));\n}\n\nint main(){\n    int m, n; cin&gt;&gt;m&gt;&gt;n;\n    cout&lt;&lt;akm(m, n);\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E9%80%92%E5%BD%92/#_3","title":"\u7ecf\u5178\u9012\u5f52\u95ee\u9898","text":""},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E9%80%92%E5%BD%92/#_4","title":"\u9636\u4e58","text":"AcWing 819. \u9012\u5f52\u6c42\u9636\u4e58 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint fact(int n){\n    if(n&lt;=1) return 1;      // \u7ed3\u675f\u6761\u4ef6\n    int res = n * fact(n-1);// \u4e0b\u4e00\u5c42\n    return res;             // \u8fd4\u56defact(n)\u7684\u7ed3\u679c\n}\n\nint main(){\n    int n; cin&gt;&gt;n;\n    cout&lt;&lt;fact(n);\n    return 0;\n}\n</code></pre> AcWing 3611. \u9636\u4e58 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=20;\n\nint f[N]={1};   // \u9636\u4e58\u7684\u7ed3\u679c\nint n, y1, y2;  \n\nvoid fact(int u){\n    if(u&gt;n) return ;    // \u8fb9\u754c\u6761\u4ef6\n    f[u] = f[u-1]*u;    // \u8ba1\u7b97f[u]\n    u=u+1;              // \u4e0b\u4e00\u5c42\n    fact(u);\n}\n\nint main(){\n    cin&gt;&gt;n;\n    fact(1);\n    for(int i=1; i&lt;=n; i+=2) y1+=f[i];\n    for(int i=2; i&lt;=n; i+=2) y2+=f[i];\n    cout&lt;&lt;y1&lt;&lt;\" \"&lt;&lt;y2;\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E9%80%92%E5%BD%92/#_5","title":"\u6590\u6ce2\u62c9\u5951","text":"AcWing 820. \u9012\u5f52\u6c42\u6590\u6ce2\u90a3\u5951\u6570\u5217 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint n;\n\nint fib(int u){\n    if(u==1 || u==2) return 1;\n    return fib(u-1)+fib(u-2);\n}\n\nint main(){\n    cin&gt;&gt;n;\n    cout&lt;&lt;fib(n);\n    return 0;\n}\n</code></pre> AcWing 717. \u7b80\u5355\u6590\u6ce2\u90a3\u5951 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=50;\n\nint f[N]={0,1,1};\nint n;\n\nint fib(int u){\n    if(f[u]) return f[u];\n    f[u] = fib(u-1) + fib(u-2);\n    return f[u];\n}\n\nint main(){\n    cin&gt;&gt;n;\n    fib(n);\n    for(int i=0; i&lt;n; i++) cout&lt;&lt;f[i]&lt;&lt;\" \";\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E9%80%92%E5%BD%92/#_6","title":"\u6c49\u8bfa\u5854","text":"LC \u9762\u8bd5\u9898 08.06. \u6c49\u8bfa\u5854\u95ee\u9898 code C++ AcWing 96. \u5947\u602a\u7684\u6c49\u8bfa\u5854 code C++"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E9%80%92%E5%BD%92/#_7","title":"\u679a\u4e3e\u95ee\u9898","text":""},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E9%80%92%E5%BD%92/#_8","title":"\u9012\u5f52\u5b9e\u73b0\u6307\u6570\u578b\u679a\u4e3e","text":"<p>\u4ece \\([1,n]\\) \u4e2d\u9009\u62e9\u5176\u4e2d \\([0,n]\\) \u4e2a</p> <p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\uff0c\u6709\u4e24\u79cd\u9009\u62e9\uff0c\u9009\u62e9 \u6216 \u4e0d\u9009</p> <p>\u5982\u679c\u4ece\u5faa\u73af\u7684\u65b9\u6cd5\u8003\u8651\uff0c\u4e00\u5171\u6709 \\(n\\) \u5c42\u5faa\u73af\uff0c\u6bcf\u5c42\u5faa\u73af\u6709 \u9009\u62e9 \u6216 \u4e0d\u9009 \u4e24\u79cd\u9009\u62e9</p> <p>\u5982\u679c\u7528\u9012\u5f52\u5b9e\u73b0\u7684\u8bdd\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a \\(dfs(u)\\)\uff0c\u9009\u62e9 \\(a[u]\\) \u6216\u8005 \u4e0d\u9009 \\(a[u]\\) \u3002</p> <p>\u7ed3\u675f\u6761\u4ef6\u662f\u5f53\u524d \\(u\\) \u8d85\u8fc7\u7ed9\u5b9a\u6570\u7ec4 \\(a[N]\\) \u7684\u957f\u5ea6</p> AcWing 92. \u9012\u5f52\u5b9e\u73b0\u6307\u6570\u578b\u679a\u4e3e code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=20;\nint a[N];   \nbool st[N]; // \u6bcf\u4e2a\u6570\u662f\u5426\u9009\u62e9\nint n;\n\nvoid dfs(int u){\n    if(u&gt;n){\n        for(int i=1; i&lt;=n; i++) \n            if(st[i]) cout&lt;&lt;a[i]&lt;&lt;\" \";\n        cout&lt;&lt;\"\\n\";\n        return ;\n    }\n\n    // \u4e0d\u9009\n    st[u]=0;\n    dfs(u+1);\n    // \u9009\u62e9\n    st[u]=1;\n    dfs(u+1);\n}\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) a[i]=i;\n    dfs(1);\n    return 0;\n}\n</code></pre> AcWing 1572. \u9012\u5f52\u5b9e\u73b0\u6307\u6570\u578b\u679a\u4e3e II code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nconst int N=20;\nint a[N];   \nbool st[N]; // \u6bcf\u4e2a\u6570\u662f\u5426\u9009\u62e9\nint n;\n\nvoid dfs(int u){\n    if(u&gt;n){\n        for(int i=1; i&lt;=n; i++) \n            if(st[i]) cout&lt;&lt;a[i]&lt;&lt;\" \";\n        cout&lt;&lt;\"\\n\";\n        return ;\n    }\n\n    // \u9009\u62e9\n    st[u]=1;\n    dfs(u+1);\n\n    if(a[u] == a[u - 1] &amp;&amp; st[u - 1] ) return ;\n\n    // \u4e0d\u9009\n    st[u]=0;\n    dfs(u+1);\n}\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) cin&gt;&gt;a[i];\n    sort(a+1, a+1+n);\n    dfs(1);\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E9%80%92%E5%BD%92/#_9","title":"\u9012\u5f52\u5b9e\u73b0\u7ec4\u5408\u578b\u679a\u4e3e","text":"<p>\u4ece \\([1,n]\\) \u4e2d\u9009\u62e9\u5176\u4e2d \\(m\\) \u4e2a</p> <p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\uff0c\u4f9d\u7136\u662f\u6709\u4e24\u79cd\u9009\u62e9\uff0c\u9009\u62e9 \u6216 \u4e0d\u9009</p> <p>\u5982\u679c\u4ece\u5faa\u73af\u7684\u65b9\u6cd5\u8003\u8651\uff0c\u4e00\u5171\u6709 \\(n\\) \u5c42\u5faa\u73af\uff0c\u6bcf\u5c42\u5faa\u73af\u6709 \u9009\u62e9 \u6216 \u4e0d\u9009 \u4e24\u79cd\u9009\u62e9</p> <p>\u5982\u679c\u7528\u9012\u5f52\u5b9e\u73b0\u7684\u8bdd\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a \\(dfs(u)\\)\uff0c\u9009\u62e9 \\(a[u]\\) \u6216\u8005 \u4e0d\u9009 \\(a[u]\\) \u3002</p> <p>\u7ed3\u675f\u6761\u4ef6\u662f\u5f53\u524d \\(u\\) \u8d85\u8fc7\u7ed9\u5b9a\u6570\u7ec4 \\(a[N]\\) \u7684\u957f\u5ea6</p> <p>\u8f93\u51fa\u6761\u4ef6\u662f\u9009\u62e9\u7684\u4f4d\u6570 = \\(m\\)</p> AcWing 93. \u9012\u5f52\u5b9e\u73b0\u7ec4\u5408\u578b\u679a\u4e3e code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=30;\nint a[N];   \nbool st[N]; // \u6bcf\u4e2a\u6570\u662f\u5426\u9009\u62e9\nint n, m;\n\nvoid dfs(int u, int k){\n    // \u5df2\u7ecf\u9009\u62e9\u4e86 k \u4f4d, \u540e\u9762\u8fd8\u6709 n-u \u4f4d\u53ef\u4ee5\u9009\u62e9, \u52a0\u4e0a\u5f53\u524d\u7684\u4e00\u4e2a u\n    if(k + (n-u) + 1 &lt; m) return ;  // \u526a\u679d\n\n    if(u&gt;n){\n        if(k==m){\n            for(int i=1; i&lt;=n; i++) \n                if(st[i]) cout&lt;&lt;a[i]&lt;&lt;\" \";\n            cout&lt;&lt;\"\\n\";\n        }\n        return ;\n    }\n\n    // \u9009\u62e9\n    st[u]=1;\n    dfs(u+1, k+1);\n\n    // \u4e0d\u9009\n    st[u]=0;\n    dfs(u+1, k);\n}\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=n; i++) a[i]=i;\n    dfs(1, 0);\n    return 0;\n}\n</code></pre> AcWing 1573. \u9012\u5f52\u5b9e\u73b0\u7ec4\u5408\u578b\u679a\u4e3e II code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nconst int N = 30;\n\nbool st[N];\nint a[N];\n\nint n, m;\n\nvoid dfs(int u, int k) { // u\u4f4d \u5df2\u9009k\u4e2a\n\n    if (k + (n - u) + 1 &lt; m) return;    // \u526a\u679d\n\n    if (k == m) {\n        for (int i = 1; i &lt;= n; i++)\n            if (st[i]) printf(\"%d \", a[i]);\n        puts(\"\");\n        return;\n    }\n\n\n    st[u] = 1;\n    dfs(u + 1, k + 1);\n\n    st[u] = 0;\n\n    int uu = u;\n    while (a[u + 1] == a[uu]) u++;\n\n    dfs(u + 1, k);\n}\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; m;\n    for (int i = 1; i &lt;= n; i++) cin &gt;&gt; a[i];\n    sort(a + 1, a + 1 + n);\n    dfs(1, 0);\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E9%80%92%E5%BD%92/#_10","title":"\u9012\u5f52\u5b9e\u73b0\u6392\u5217\u578b\u679a\u4e3e","text":"<p>\u4ece \\([1,n]\\) \u4e2d\u9009\u62e9\u5176\u4e2d \\(n\\) \u4e2a</p> AcWing 94. \u9012\u5f52\u5b9e\u73b0\u6392\u5217\u578b\u679a\u4e3e code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=20;\n\nint a[N];\nbool st[N];\n\nint n;\n\nvoid dfs(int u){ // \u5f53\u524d\u4f4d\n\n    if(u&gt;n){\n        for(int i=1; i&lt;=n; i++) \n            printf(\"%d \", a[i]);\n        puts(\"\");\n        return ;\n    }\n\n    for(int i=1; i&lt;=n; i++)\n        if(!st[i]){\n            st[i]=1;\n            a[u]=i;\n            dfs(u+1);\n            st[i] = 0;\n        }\n}\n\nint main(){\n    cin&gt;&gt;n;\n    dfs(1);\n\n    return 0;\n}\n</code></pre> AcWing 1537. \u9012\u5f52\u5b9e\u73b0\u6392\u5217\u7c7b\u578b\u679a\u4e3e II code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nconst int N=20;\n\nint a[N];\nint res[N];\nbool st[N];\n\nint n;\n\nvoid dfs(int u){ // \u5f53\u524d\u4f4d\n\n    if(u&gt;n){\n        for(int i=1; i&lt;=n; i++) \n            printf(\"%d \", res[i]);\n        puts(\"\");\n        return ;\n    }\n\n    for(int i=1; i&lt;=n; i++)\n        if(!st[i]){\n            st[i]=1;\n            res[u]=a[i];\n            dfs(u+1);\n            st[i]=0;\n            while(a[i]==a[i+1]) i++;\n        }\n}\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) cin&gt;&gt;a[i];\n    sort(a+1, a+1+n);\n    dfs(1);\n\n    return 0;\n}\n</code></pre> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nconst int N=15;\n\nint a[N];\nint n; \n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", a+i);\n    sort(a+1, a+1+n);    \n\n    do{\n        for(int i=1; i&lt;=n; i++)\n            printf(\"%d \", a[i]);\n        puts(\"\");\n    }while(next_permutation(a+1, a+1+n));\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E9%80%92%E5%BD%92/#_11","title":"\u7ec3\u4e60","text":"Luogu P1157 \u7ec4\u5408\u7684\u8f93\u51fa code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=30;\n\nbool st[N]; // \u6bcf\u4e2a\u6570\u662f\u5426\u9009\u62e9\n\nint n, m;\n\nvoid dfs(int u, int k){\n    if(k &gt; m) return ;\n    if(u &gt; n){\n        if(k==m){\n            for(int i=1; i&lt;=n; i++)\n                if(st[i])\n                    printf(\"%3d\", i);\n            cout&lt;&lt;\"\\n\";\n        }\n        return ;\n    }\n\n    st[u] = 1;\n    dfs(u+1, k+1);\n\n    st[u] = 0;\n    dfs(u+1, k);\n}\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    dfs(1, 0);\n    return 0;\n}\n</code></pre> Luogu P1036 [NOIP2002 \u666e\u53ca\u7ec4] \u9009\u6570 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;set&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N=30;\n\nbool st[N];\nint a[N];\nint cnt;\nint n, m;\n\nbool is_prime(LL x){\n    if(x==2 || x==3   || x==5   ) return 1;\n    if(x&lt;2  ||(x%6!=1 &amp;&amp; x%6!=5)) return 0; // \u4e0d\u4e0e6\u7684\u500d\u6570\u76f8\u90bb \n    for(LL i=5; i&lt;=x/i; i+=6)  // \u4e0e6\u76f8\u90bb, \u4f46\u53c8\u6709\u4e86\u56e0\u5b50 \n        if(x%i==0 || x%(i+2)==0) return 0;\n    return 1;\n}\n\nvoid ck(){\n    LL res=0;\n    for(int i=1; i&lt;=n; i++) \n        if(st[i]) res += a[i];\n\n    if(is_prime(res)) \n        cnt++;\n}\n\nvoid dfs(int u, int k){ // u\u4f4d \u5df2\u9009k\u4e2a\n\n    if(k+(n-u)+1&lt;m) return ;    // \u526a\u679d\n\n    if(k==m){\n        ck();\n        return ;\n    }\n\n    st[u]=1;\n    dfs(u+1, k+1);\n\n    st[u]=0;\n    dfs(u+1, k);\n}\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=n; i++) cin&gt;&gt;a[i];\n    dfs(1, 0);\n\n    cout&lt;&lt;cnt;\n    return 0;\n}\n</code></pre> Luogu P2036 [COCI2008-2009#2] PERKET code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=15;\n\nint a[N], b[N];\nbool st[N];\nint n, ans=0x3f3f3f3f;\n\n\nvoid dfs(int u){\n\n    if(u &gt; n){\n        if((*st) == 1){ // \u7b2c\u4e00\u6b21\u8fdb\u5165, \u4e5f\u5c31\u662f\u5168\u4e3a 0 \u7684\u60c5\u51b5\u8df3\u8fc7\n            int A=1, B=0;\n            for(int i=1; i&lt;=n; i++) \n                if(st[i]) \n                    A*=a[i], B+=b[i];\n            ans = min(ans, abs(A-B));\n        }\n        (*st)=1;    \n        return ;\n    }\n\n    st[u]=0;\n    dfs(u+1);\n\n    st[u]=1;\n    dfs(u+1);\n}\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) scanf(\"%d%d\", a+i, b+i);\n\n    dfs(1);\n\n    cout&lt;&lt;ans;\n\n    return 0;\n}\n</code></pre> Luogu P1706 \u5168\u6392\u5217\u95ee\u9898 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nint n;\nint a[15];\nbool st[15];\n\n// \u5f53\u524d\u6570\u5b57\nvoid dfs(int u){\n    if(u&gt;n) {\n        for(int i=1; i&lt;=n; i++)\n            printf(\"%5d\", a[i]);\n        puts(\"\");\n        return ;\n    }\n\n    for(int i=1; i&lt;=n; i++)\n        if(!st[i]){\n            a[u]=i;\n            st[i]=1;\n            dfs(u+1);\n            st[i]=0;\n        }\n\n}\n\nint main(){\n    cin&gt;&gt;n;\n    dfs(1);\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E9%80%92%E5%BD%92/#_12","title":"\u56fe\u6848\u95ee\u9898","text":"AcWing 118. \u5206\u5f62 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;cmath&gt;\nusing namespace std;\n\nconst int N=2023;\n\nchar a[N][N];\n\nvoid dfs(int len, int x, int y){  // \u753b\u7684\u957f\u5ea6, \u5de6\u4e0a\u89d2\u5750\u6807\n    if(len==1){\n        a[x][y]='X';\n        return ;\n    }\n    dfs(len/3, x, y);                   // \u5de6\u4e0a\n    dfs(len/3, x, y+len/3*2);           // \u53f3\u4e0a\n    dfs(len/3, x+len/3, y+len/3);       // \u4e2d\u95f4\n    dfs(len/3, x+len/3*2, y);           // \u5de6\u4e0b\n    dfs(len/3, x+len/3*2, y+len/3*2);   // \u53f3\u4e0b\n    return ;\n}\n\nint main(){\n    int n;\n    while(cin&gt;&gt;n &amp;&amp; n!=-1){\n        memset(a, ' ', sizeof a);\n        dfs(pow(3, (n-1)), 0, 0);\n\n        for(int i=0; i&lt;pow(3, (n-1)); i++, puts(\"\"))\n            for(int j=0; j&lt;pow(3, (n-1)); j++)\n                printf(\"%c\", a[i][j]);\n        puts(\"-\");\n    }\n\n    return 0;\n}\n</code></pre> Luogu P1498 \u5357\u86ee\u56fe\u817e  code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n#include &lt;cmath&gt;\nusing namespace std;\n\nvector&lt;string&gt; res;\n\nint n;\n\nint main(){\n    cin&gt;&gt;n;\n    string a=\" /\\\\ \";\n    string b=\"/__\\\\\";\n\n    res.insert(res.begin(), b);\n    res.insert(res.begin(), a);\n\n    for(int i=1; i&lt;n; i++){ // \u5411\u4e0a\u590d\u5236\n        string pre;         // \u5411\u53f3\u590d\u5236\n        for(int j=1; j&lt;=pow(2, i); j++) pre+=\" \";\n        for(int j=1; j&lt;=pow(2, i); j++)\n            res.insert(res.begin(), pre+res[res.size()-j]+pre),\n            res[res.size()-j]+=res[res.size()-j];\n    }\n\n    for(auto s: res) cout&lt;&lt;s&lt;&lt;\"\\n\";\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E9%80%92%E5%BD%92/#_13","title":"\u65b9\u6848\u6570","text":"Luogu P2437 \u871c\u8702\u8def\u7ebf  code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nconst int N=1e3+10;\n\nstring a[N];   \n\nstring ADD(string A, string B, bool flg = 1) { // \u9ed8\u8ba4 \u6b63\u5e8f(\u6b63\u6574\u6570)\u8f93\u5165 \u6b63\u5e8f\u8f93\u51fa\n    if (flg) reverse(A.begin(), A.end()), reverse(B.begin(), B.end());\n    string res; int add = 0;    \n    for (int i = 0; i &lt; A.size() || i &lt; B.size() || add; i++) {\n        if (i &lt; A.size()) add += A[i] - '0';// \u53d6\u503c\n        if (i &lt; B.size()) add += B[i] - '0';// \u53d6\u7684A,B\u76f8\u540c\u4f4e\u4f4d\n        res += add % 10 + '0';              // +\n        add /= 10;                          // \u8fdb\u4f4d\n    }\n    if (flg) reverse(res.begin(), res.end());\n    return res; // flg == 0 \u5012\u53d9\u8f93\u5165\u8f93\u51fa\u6a21\u5f0f (\u5728\u8fde\u7eed\u8ba1\u7b97\u65f6\u51cf\u5c11reverse\u6b21\u6570,\u4ee5\u63d0\u5347\u6027\u80fd)\n}\n\nint main(){\n    int m, n; cin&gt;&gt;m&gt;&gt;n;\n    a[m] = \"1\";\n    a[m+1] = \"1\";\n\n    for(int i=m+2; i&lt;=n; i++)\n        a[i] = ADD(a[i-1], a[i-2]);\n\n    cout&lt;&lt;a[n];\n\n    return 0;\n}\n</code></pre> Luogu P1990 \u8986\u76d6\u5899\u58c1  code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1e6+10;\nconst int MOD=1e4;\nint n;\n\nint dp[N][3];   // \u524d i \u5217, \u7b2c i \u5217\u7684\u72b6\u6001\u662f(0,1,2) \u5168\u90e8\u4f38\u51fa\u3001\u4e0a\u9762\u4f38\u51fa\u3001\u4e0b\u9762\u4f38\u51fa \n\nint main(){\n    cin&gt;&gt;n;\n\n    dp[0][0]=1;\n\n    for(int i=0; i&lt;=n; i++){\n        dp[i+1][0] += dp[i][0]; dp[i+1][0]%=MOD;\n        dp[i+2][0] += dp[i][0]; dp[i+2][0]%=MOD;\n        dp[i+2][1] += dp[i][0]; dp[i+1][1]%=MOD;\n        dp[i+2][2] += dp[i][0]; dp[i+2][2]%=MOD;\n        dp[i+1][2] += dp[i][1]; dp[i+1][2]%=MOD;\n        dp[i+1][0] += dp[i][1]; dp[i+1][0]%=MOD;\n        dp[i+1][1] += dp[i][2]; dp[i+1][1]%=MOD;\n        dp[i+1][0] += dp[i][2]; dp[i+1][0]%=MOD;\n    }\n\n    cout&lt;&lt;dp[n][0];\n\n    return 0;\n}\n</code></pre> Luogu P1228 \u5730\u6bef\u586b\u8865\u95ee\u9898  code C++<pre><code>\n</code></pre>"},{"location":"src/more/old/algorithm/1%20%E5%9F%BA%E7%A1%80/%E9%80%92%E5%BD%92/#_14","title":"\u7ec3\u4e60","text":"Luogu P1928 \u5916\u661f\u5bc6\u7801  code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nstring ans, a;\nint i=0;\n\nbool isABC(char c){\n    if(c&gt;='A' &amp;&amp; c&lt;='Z') return 1;\n    return 0;\n}\n\nstring dfs(){\n    string res;\n    while(i&lt;a.size() &amp;&amp; isABC(a[i])) res+=a[i++];\n\n    if(a[i]=='['){\n        i++;\n        int n=0;\n        while(a[i]&gt;='0' &amp;&amp; a[i]&lt;='9') n=n*10+a[i++]-'0';\n        string t = dfs();\n        for(int j=1; j&lt;=n; j++) res+=t;\n        return res+dfs();\n    }\n\n    if(a[i]==']') {\n        i++;\n        return res;\n    }\n\n    return res;\n}\n\nint main(){\n    cin&gt;&gt;a;\n    while(i&lt;a.size())\n        ans+=dfs(), i++;\n    cout&lt;&lt;ans;\n\n    return 0;\n}\n</code></pre> AcWing 95. \u8d39\u89e3\u7684\u5f00\u5173 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nconst int N=10;\n\nint dxy[4][2]={ {-1,0}, {1,0}, {0,-1}, {0,1} };\n\n// \u5730\u56fe \u5730\u56fe\u5907\u4efd\nint g[N][N], backup[N][N];\nint ans=0x3f3f3f3f;\n\nbool check(){\n    for(int i=0; i&lt;5; i++)\n        if(!g[4][i]) return 0;\n    return 1;\n}\n\nvoid bf(){\n    for(int i=0; i&lt;5; i++)\n        for(int j=0; j&lt;5; j++)\n            backup[i][j]=g[i][j];\n}\n\nvoid rbf(){\n    for(int i=0; i&lt;5; i++)\n        for(int j=0; j&lt;5; j++)\n            g[i][j]=backup[i][j];\n}\n\nvoid change(int x, int y){\n    for(int i=0; i&lt;4; i++){\n        int nx=x+dxy[i][0];\n        int ny=y+dxy[i][1];\n        if(nx&lt;0 || ny&lt;0) continue;\n        g[nx][ny]^=1;\n    }\n    g[x][y]^=1;\n}\n\n// w\u662f\u5f53\u524d\u5df2\u7ecf\u6539\u53d8\u7684\u6b21\u6570\nvoid dfs(int u, int w){\n\n    // \u5230\u8fbe\u8fb9\u754c\n    if(u&gt;4){\n        // \u4fdd\u5b58\u5f53\u524d\u5730\u56fe\n        bf();\n        // \u76f4\u63a5\u8ba1\u7b97\u4e0b\u97624\u5c42\n        for(int i=1; i&lt;5 &amp;&amp; w&lt;=6; i++)\n            for(int j=0; j&lt;5; j++)\n                if(!g[i-1][j])\n                    change(i, j), w++;\n\n        if(w&lt;=6 &amp;&amp; check()) ans=min(ans, w);\n        // \u6062\u590d\u56de\u53bb\n        rbf();\n        return ;\n    }\n\n    // \u6539\u53d8\n    change(0, u);\n    dfs(u+1, w+1);\n    change(0, u);\n\n    // \u4e0d\u6539\u53d8\n    dfs(u+1, w);\n}\n\n\nint main(){\n    int n;\n    cin&gt;&gt;n;\n\n    while(n--){\n        ans=0x3f3f3f3f;\n\n        for(int i=0; i&lt;5; i++)\n            for(int j=0; j&lt;5; j++){\n                scanf(\"%1d\", &amp;g[i][j]);\n                backup[i][j]=g[i][j];\n            }\n\n        // \u7b2c\u4e00\u6392\u7684\u7b2c\u51e0\u4e2a\u70b9\n        // \u5df2\u7ecf\u6539\u53d8\u4e86\u51e0\u6b21\n        dfs(0, 0);\n\n        if(ans==0x3f3f3f3f)\n            puts(\"-1\");\n        else\n            cout&lt;&lt;ans&lt;&lt;\"\\n\";\n    }\n\n    return 0;\n}\n</code></pre> Luogu P1259 \u9ed1\u767d\u68cb\u5b50\u7684\u79fb\u52a8  code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nconst int N=110;\n\nstring a;\nint n;\n\nvoid dfs(int mid){    // \u5f53\u524d\u4e2d\u70b9\u4f4d\u7f6e\n\n    if(mid==3) return ;\n\n    cout&lt;&lt;a&lt;&lt;\"\\n\";\n\n    swap(a[mid-1], a[2*mid]);\n    swap(a[mid], a[2*mid+1]);\n\n    cout&lt;&lt;a&lt;&lt;\"\\n\";\n\n    swap(a[mid-1], a[2*mid-2]);\n    swap(a[mid], a[2*mid+1-2]);\n\n    dfs(mid-1);\n}\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) a+='o';\n    for(int i=1; i&lt;=n; i++) a+='*'; a+=\"--\";\n\n    dfs(n);\n\n    cout&lt;&lt;\"ooo*o**--\"; for(int i=1; i&lt;n-3; i++) cout&lt;&lt;\"*o\"; cout&lt;&lt;\"*\\n\";\n    cout&lt;&lt;\"o--*o**oo\"; for(int i=1; i&lt;n-3; i++) cout&lt;&lt;\"*o\"; cout&lt;&lt;\"*\\n\";\n    cout&lt;&lt;\"o*o*o*--o\"; for(int i=1; i&lt;n-3; i++) cout&lt;&lt;\"*o\"; cout&lt;&lt;\"*\\n\";\n    cout&lt;&lt;\"--o*o*o*o\"; for(int i=1; i&lt;n-3; i++) cout&lt;&lt;\"*o\"; cout&lt;&lt;\"*\";\n\n    return 0;\n}\n</code></pre> AcWing 97. \u7ea6\u6570\u4e4b\u548c  code C++<pre><code>\n</code></pre> AcWing 98. \u5206\u5f62\u4e4b\u57ce code C++<pre><code>\n</code></pre> AcWing 1208. \u7ffb\u786c\u5e01 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nstring a, b;\n\nvoid cg(int i){\n    if(a[i] == '*') a[i] = 'o';\n    else a[i] ='*';\n    if(a[i+1] == '*') a[i+1] = 'o';\n    else a[i+1] ='*';\n}\n\nint main(){\n    int ans=0;\n    cin&gt;&gt;a&gt;&gt;b;\n    for(int i=0; i&lt;a.size()-1; i++)\n        if(a[i] != b[i])\n            cg(i), ans++;\n    cout&lt;&lt;ans;\n    return 0;\n}\n</code></pre> AcWing 1209. \u5e26\u5206\u6570 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nint a[11]={0,1,2,3,4,5,6,7,8,9};\n\nint getnum(int i, int j){\n    int res=0;\n    while(i&lt;=j) res = res*10 + a[i++];\n    return res;\n}\n\nint main(){\n    cin&gt;&gt;*a;\n    do{\n        for(int i=1; i&lt;=7; i++)\n            for(int j=i+1; j&lt;=8; j++){\n                int A = getnum(1, i);\n                int B = getnum(i+1, j);\n                int C = getnum(j+1, 9);\n\n                if(A + B/C == *a &amp;&amp; B%C==0) a[10]++;\n            }\n    }while(next_permutation(a+1, a+10));\n\n    cout&lt;&lt;a[10];\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/2%20%E6%90%9C%E7%B4%A2/BFS/","title":"BFS","text":"<p>hh </p>"},{"location":"src/more/old/algorithm/2%20%E6%90%9C%E7%B4%A2/BFS/#bfs","title":"\u77e9\u9635\u4e0a\u7684BFS","text":"ybt 1215\uff1a\u8ff7\u5bab code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\ntypedef pair&lt;int, int&gt; PII;\nconst int N = 1e2+10;\nint dxy[4][2]={ {-1,0}, {1,0}, {0,-1}, {0,1} };\n\nint n;          // \u5730\u56fe\u5927\u5c0f\nchar g[N][N];   // \u5730\u56fe\nbool st[N][N];  // \u8d70\u8fc7\u6ca1\u6709\nint sx, sy, ex, ey;\n\nstring solve(){\n    memset(g, ' ', sizeof g);\n    memset(st, 0, sizeof g);\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++)\n        for(int j=1; j&lt;=n; j++)\n            cin&gt;&gt;g[i][j];\n    cin&gt;&gt;sx&gt;&gt;sy&gt;&gt;ex&gt;&gt;ey;\n    sx++, sy++, ex++, ey++;\n    if(g[sx][sy]=='#' || g[ex][ey]=='#') return \"NO\";\n\n    queue&lt;PII&gt; q;\n    q.push({sx, sy}), st[sx][sy]=1;\n\n    while(q.size()){\n        auto t = q.front();\n        q.pop();\n        int x = t.first;\n        int y = t.second;\n        if(x == ex &amp;&amp; y == ey) return \"YES\";\n\n        for(int i=0; i&lt;4; i++){\n            int nx = x + dxy[i][0];\n            int ny = y + dxy[i][1];\n\n            if(nx&gt;=1 &amp;&amp; ny&gt;=1 &amp;&amp; nx&lt;=n &amp;&amp; ny&lt;=n)\n            if(g[nx][ny] == '.')\n            if(st[nx][ny] == 0)\n                q.push({nx, ny}), st[nx][ny]=1;\n        }\n    }\n    return \"NO\";\n}\n\nint main(){\n    int T; cin&gt;&gt;T;\n    while(T--) cout&lt;&lt;solve()&lt;&lt;\"\\n\";\n    return 0;\n}\n</code></pre> AcWing 1096. \u5730\u7262\u5927\u5e08 code C++<pre><code>#define fst first\n#define sed second\n#include &lt;iostream&gt;\n#include &lt;queue&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\ntypedef pair&lt;int, int&gt; PII;\nconst int N=110;\n\nint dxy[6][3]={ {-1,0,0}, {1,0,0}, {0,-1,0}, {0,1,0}, {0,0,-1}, {0,0,1} };\n\nchar g[N][N][N]; // \u5730\u7262\nint dis[N][N][N];// \u6700\u77ed\u8def\nint l, r, c;    \n\nint main(){\n    while(cin&gt;&gt;l&gt;&gt;r&gt;&gt;c){\n        if(l==0 &amp;&amp; r==0 &amp;&amp; c==0) break;\n        memset(dis, 0x3f, sizeof dis);\n\n        queue&lt;pair&lt;int, PII&gt;&gt; q;\n\n        for(int i=1; i&lt;=l; i++)\n        for(int j=1; j&lt;=r; j++)\n        for(int k=1; k&lt;=c; k++){\n            cin&gt;&gt;g[i][j][k];\n            if(g[i][j][k]=='S')\n                dis[i][j][k]=0,\n                q.push({i,{j, k}});\n        }\n\n        bool flg = 0;\n        while(q.size()){\n            int i = q.front().fst;\n            int j = q.front().sed.fst;\n            int k = q.front().sed.sed;\n            q.pop();\n            if(g[i][j][k]=='E') {\n                flg=1;\n                cout&lt;&lt;\"Escaped in \"&lt;&lt;dis[i][j][k]&lt;&lt;\" minute(s).\\n\";\n                break;\n            }\n            for(int _=0; _&lt;6; _++){\n                int ni = i + dxy[_][0];\n                int nj = j + dxy[_][1];\n                int nk = k + dxy[_][2];\n\n                if(ni&gt;=1 &amp;&amp; ni&lt;=l &amp;&amp; nj&gt;=1 &amp;&amp; nj&lt;=r &amp;&amp; nk&gt;=1 &amp;&amp; nk&lt;=c)\n                if(g[ni][nj][nk]!='#')\n                if(dis[ni][nj][nk]==0x3f3f3f3f){\n                    dis[ni][nj][nk] = dis[i][j][k]+1;\n                    q.push({ni, {nj, nk}});\n                }\n            }\n        }\n\n        if(!flg) cout&lt;&lt;\"Trapped!\\n\";\n    }\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/2%20%E6%90%9C%E7%B4%A2/BFS/#bfs_1","title":"\u4e00\u822cBFS","text":"AcWing 1100. \u6293\u4f4f\u90a3\u5934\u725b code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\nconst int N=1e5+10;\n\nint g[N];   // \u5730\u56fe\nint dis[N]; // \u6700\u77ed\u8def\nint n, k;\n\nbool ck(int x){\n    if(x&gt;=0 &amp;&amp; x&lt;=max(n, k)+1 &amp;&amp; dis[x]==0x3f3f3f3f) return 1;\n    return 0;\n}\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;k;\n    memset(dis, 0x3f, sizeof dis);\n    queue&lt;int&gt; q;\n    dis[n]=0;\n    q.push(n);\n    while(q.size()){\n        int u = q.front();\n        q.pop();\n        if(u==k){\n            cout&lt;&lt;dis[u];\n            break;\n        }\n\n        if(ck(u-1))\n            dis[u-1] = dis[u]+1,\n            q.push(u-1);\n        if(ck(u+1))\n            dis[u+1] = dis[u]+1,\n            q.push(u+1);\n        if(ck(u*2))\n            dis[u*2] = dis[u]+1,\n            q.push(u*2);\n    }\n\n    return 0;\n}\n</code></pre> AcWing 4219. \u627e\u500d\u6570 code C++<pre><code>#define fst first\n#define sed second\n#include &lt;iostream&gt;\n#include &lt;queue&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\ntypedef pair&lt;string, int&gt; psi;\n\nvoid solve(int n){\n    queue&lt;psi&gt; q;\n    q.push({\"1\", 1});\n\n    while(q.front().sed!=0){\n        auto u = q.front();\n        q.pop();\n\n        // \u62d3\u5c551\n        q.push({u.fst+\"1\", (u.sed*10+1)%n});\n        // \u62d3\u5c550\n        q.push({u.fst+\"0\", (u.sed*10+0)%n});\n    }\n    cout&lt;&lt;q.front().fst&lt;&lt;\"\\n\";\n}\n\nint main(){\n    int _;\n    while(cin&gt;&gt;_, _) solve(_);\n    return 0;\n}\n</code></pre> AcWing 4220. \u8d28\u6570\u8def\u5f84 code C++<pre><code>#define fst first\n#define sed second\n#include &lt;iostream&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\ntypedef pair&lt;int, int&gt; PII;\n\nconst int N=1e4+10;\n\nbool st[N]={1, 1};  // 0,1\u4e0d\u662f\u7d20\u6570\nint primes[N];\n\nvoid make_primes(int n){// \u751f\u6210 n \u4ee5\u5185\u7684\u7d20\u6570\n    for(int i=2; i&lt;=n; i++){\n        if(!st[i]) primes[++(*primes)]=i;   // \u767b\u8bb0\u7d20\u6570\n        for(int j=1; j&lt;=(*primes) &amp;&amp; primes[j]&lt;=n/i; j++){\n            st[primes[j]*i]=1;              // \u7b5b\u6389\n            if(i%primes[j]==0) break;       // i \u662f primes[j] \u7684\u500d\u6570\n        }   // \u5982\u679c i \u662f primes[j] \u7684\u500d\u6570, primes[j] \u5c31\u662f\u5176\u6700\u5c0f\u8d28\u56e0\u5b50\n    }       // \u56e0\u6b64, \u6211\u4eec\u4e0d\u5fc5\u7528\u5176\u4ed6\u8d28\u56e0\u5b50\u53bb\u7b5b\u4e86\n}\n\nPII q[10000000];\n\nvoid solve(){\n    int a, b; cin&gt;&gt;a&gt;&gt;b;\n\n    int f=1,e=0;\n    q[++e] = {a, 0};\n\n    while(f&lt;=e &amp;&amp; q[f].fst != b){\n        auto u = q[f];\n        ++f;\n\n        // \u6539\u53d8\u4e2a\u4f4d\n        for(int i=1; i&lt;=9; i+=2){\n            int n = (u.fst/10)*10 + i;\n            if( !st[n] &amp;&amp; n!=u.fst )\n                q[++e] = {n, u.sed+1};\n        }\n        // \u6539\u53d8\u5341\u4f4d\n        for(int i=0; i&lt;=9; i++){\n            int n = (u.fst/100)*100 + i*10 + u.fst%10;\n            if( !st[n] &amp;&amp; n!=u.fst )\n                q[++e] = {n, u.sed+1};\n        }\n        // \u6539\u53d8\u767e\u4f4d\n        for(int i=0; i&lt;=9; i++){\n            int n = (u.fst/1000)*1000 + i*100 + u.fst%100;\n            if( !st[n] &amp;&amp; n!=u.fst )\n                q[++e] = {n, u.sed+1};\n        }\n        // \u6539\u53d8\u5343\u4f4d\n        for(int i=1; i&lt;=9; i++){\n            int n = i*1000 + u.fst%1000;\n            if( !st[n] &amp;&amp; n!=u.fst )\n                q[++e] = {n, u.sed+1};\n        }\n    }\n    cout&lt;&lt;q[f].sed&lt;&lt;\"\\n\";\n}\n\nint main(){\n    make_primes(1e4);    \n    int T; cin&gt;&gt;T; \n    while(T--) solve();\n    return 0;\n}\n</code></pre> AcWing 4222. \u7f50\u5b50 code C++<pre><code>#define fst first\n#define sed second\n#include &lt;iostream&gt;\n#include &lt;stack&gt;\n#include &lt;set&gt;\nusing namespace std;\n\nconst int N = 1e5 + 10;\n\ntypedef pair&lt;int, int&gt; PII;\n\nint A, B, C;\n\nstruct {\n    int come;\n    int ddd;\n    int ceng;\n    int a;\n    int b;\n} q[N];\n\nint h = 1, t = 0;\n\nPII calc(int i, PII ab) {\n    if (i == 1) return { A, ab.sed };\n    if (i == 2) return { ab.fst, B };\n    if (i == 3) return { 0, ab.sed };\n    if (i == 4) return { ab.fst, 0 };\n    if (i == 5) {   // a -&gt; b\n        int d = min(ab.fst, B - ab.sed);  // \u6700\u591a\u80fd\u63a5\u53d7\u591a\u5c11\n        return { ab.fst - d, ab.sed + d };\n    }\n    if (i == 6) {\n        int d = min(ab.sed, A - ab.fst);\n        return { ab.fst + d, ab.sed - d };\n    }\n}\n\nvoid ppp(int i) {\n    if (i == 1) cout &lt;&lt; \"FILL(1)\\n\";\n    if (i == 2) cout &lt;&lt; \"FILL(2)\\n\";\n    if (i == 3) cout &lt;&lt; \"DROP(1)\\n\";\n    if (i == 4) cout &lt;&lt; \"DROP(2)\\n\";\n    if (i == 5) cout &lt;&lt; \"POUR(1,2)\\n\";\n    if (i == 6) cout &lt;&lt; \"POUR(2,1)\\n\";\n}\n\nint main() {\n    cin &gt;&gt; A &gt;&gt; B &gt;&gt; C;\n    // (\u4ece\u90a3\u4e2a\u70b9\u6765, \u90a3\u4e2a\u70b9\u505a\u7684\u64cd\u4f5c\u662f), \u5f53\u524d\u5c42\u6570\n    q[++t] = { 0,0,0,0,0 };\n\n    set&lt;PII&gt; cnt;\n\n    while (h &lt;= t) {\n        auto u = q[h++];\n\n        for (int i = 1; i &lt;= 6; i++) {\n\n            PII ab = calc(i, { u.a, u.b });\n\n            if (cnt.count(ab))\n                continue;\n            else {       // \u4ece h-1 \u90a3\u91cc\u6765\n                q[++t] = { h - 1, i, u.ceng + 1, ab.fst, ab.sed };\n                cnt.insert(ab);\n            }\n\n            if (ab.fst == C || ab.sed == C) {\n                cout &lt;&lt; q[t].ceng &lt;&lt; \"\\n\";\n\n                stack&lt;int&gt; ans;\n                while (q[t].come != 0) {\n                    ans.push(q[t].ddd);\n                    t = q[t].come;\n                }\n\n                while (ans.size()) {\n                    ppp(ans.top());\n                    ans.pop();\n                }\n\n                return 0;\n            }\n\n        }\n    }\n\n    cout&lt;&lt;\"impossible\";\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/2%20%E6%90%9C%E7%B4%A2/%E6%90%9C%E7%B4%A2%E8%BF%9B%E9%98%B6/","title":"\u8bb0\u5fc6\u5316\u641c\u7d22","text":"Luogu P1434 [SHOI2002] \u6ed1\u96ea code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=110;\nconst int dxy[][2]={ {-1,0}, {1,0}, {0,-1}, {0,1} };\n\nint g[N][N];    // \u5730\u56fe\nshort dis[N][N];  // \u5230\u8fbe\u6bcf\u4e2a\u70b9\u7684\u6700\u957f\u8def\nint n, m, ans;\n\n// dfs\u53bb\u641c\u7d22\u80fd\u5230\u8fbe\u7684\u66f4\u9ad8\u7684\u70b9\n// h\u4ee3\u8868\u5230\u8fbe\u8be5\u70b9\u7684\u6700\u957f\u8def\nvoid dfs(int x, int y, int h){\n\n    if(dis[x][y]&gt;=h) return ; \n\n    dis[x][y]=h;\n    ans=max(ans, h);\n\n    for(int i=0; i&lt;4; i++){\n        int nx = x+dxy[i][0];\n        int ny = y+dxy[i][1];\n        if(nx&lt;1 || nx&gt;n || ny&lt;1 || ny &gt;m) continue;\n        if(g[nx][ny] &lt;= g[x][y]) continue;\n        dfs(nx, ny, h+1);\n    }\n}\n\nint main(){\n    //freopen(\"in\", \"r\", stdin); freopen(\"out\", \"w\", stdout);\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=n; i++)\n        for(int j=1; j&lt;=m; j++)\n            scanf(\"%d\", &amp;g[i][j]);\n\n    for(int i=1; i&lt;=n; i++)\n        for(int j=1; j&lt;=m; j++)\n            if(!dis[i][j]) dfs(i, j, 1);\n\n    cout&lt;&lt;ans;\n\n    return 0;\n}\n</code></pre> <p>\u8bb0\u5f55\u8def\u5f84</p> Luogu P2196 [NOIP1996 \u63d0\u9ad8\u7ec4] \u6316\u5730\u96f7 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;stack&gt;\nusing namespace std;\n\nconst int N=30;\n\nint a[N];       // \u6bcf\u4e2a\u5730\u7a96\u7684\u5730\u96f7\u6570\u91cf\nbool g[N][N];   // \u8fde\u901a\u6027\nint pre[N];     // i\u70b9\u662f\u7531\u90a3\u4e2a\u70b9\u641c\u7d22\u6765\u7684\nint dis[N];     // \u6700\u5927\u5730\u96f7\u6570\u91cf\nint n, ans;\n\n// \u5f53\u524d\u5446\u7684\u5730\u7a96\u6cb3\u5f53\u524d\u62e5\u6709\u7684\u5730\u96f7\u6570\u91cf\nvoid dfs(int u, int h, int last){\n\n    if(dis[u] &gt; h) return ;\n    dis[u]=h; \n    pre[u]=last;\n    ans=max(ans, dis[u]);\n\n    for(int j=1; j&lt;=n; j++)\n        if(g[u][j])\n            dfs(j, h+a[j], u);\n}\n\nint main(){\n    //freopen(\"in\", \"r\", stdin); freopen(\"out\", \"w\", stdout);\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++)  scanf(\"%d\", a+i);\n\n    for(int i=1; i&lt;=n; i++)\n        for(int j=i+1; j&lt;=n; j++){\n            int f; scanf(\"%d\", &amp;f);\n            if(f) \n                g[i][j]=1;\n        }\n\n    for(int i=1; i&lt;=n; i++)\n        if(!dis[i]) \n            dfs(i, a[i], 0); \n\n    // \u5012\u7740\u627e\u4e00\u6b21\u5c31ok\u4e86\n\n    stack&lt;int&gt; stk;\n\n    int last=1;\n    for(int i=1; i&lt;=n; i++)\n        if(dis[i]==ans)\n            last=i;\n\n    while(last){\n        stk.push(last);\n        last=pre[last];\n    }\n\n    while(stk.size()) cout&lt;&lt;stk.top()&lt;&lt;\" \", stk.pop();\n\n    cout&lt;&lt;\"\\n\"&lt;&lt;ans;\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/2%20%E6%90%9C%E7%B4%A2/%E6%90%9C%E7%B4%A2%E8%BF%9B%E9%98%B6/#dfs","title":"\u53cc\u5411 DFS","text":""},{"location":"src/more/old/algorithm/2%20%E6%90%9C%E7%B4%A2/%E6%90%9C%E7%B4%A2%E8%BF%9B%E9%98%B6/#bfs","title":"\u53cc\u5411 BFS","text":""},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E5%8E%8BDP/","title":"\u68cb\u76d8\u7c7b(\u57fa\u4e8e\u8fde\u901a\u6027)\u95ee\u9898","text":""},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E5%8E%8BDP/#_2","title":"\u7389\u7c73\u7530","text":"<p>AcWing 327. \u7389\u7c73\u7530</p> \u4e8c\u8fdb\u5236\u8868\u793a\u72b6\u6001 C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\n#define pb push_back\n\nconst int N=14;\nconst int MOD=1e8;\n\nint dp[N][1&lt;&lt;N];    // \u5728\u7b2c i \u884c, \u7b2c j \u79cd\u79cd\u690d\u65b9\u6848,\u6709dp[i][j]\u79cd\u79cd\u690d\u65b9\u6848\nvector&lt;int&gt; st;     // \u6240\u6709\u7684\u5408\u6cd5\u72b6\u6001\u53ca\u6b64\u72b6\u6001\u79cd\u690d\u6570\u91cf\nvector&lt;int&gt; h[1&lt;&lt;N];// \u72b6\u6001 i -&gt; \u72b6\u6001 j \n\nint g[N];\nint n, m;\n\nbool ck(int i){     // \u68c0\u67e5 \u72b6\u6001 i \u662f\u5426\u5408\u6cd5\n    for(int j=m-1; j&gt;0; j--)    // \u5373\u68c0\u67e5\u662f\u5426\u6709\u76f8\u90bb\u7684 1\n        if( ((i&gt;&gt;j)&amp;1) &amp;&amp; ((i&gt;&gt;(j-1))&amp;1) ) return 0;\n    return 1;\n}\n\nbool ck2(int i, int j){ // \u68c0\u67e5\u4e24\u4e2a\u72b6\u6001 \u662f\u5426\u6709\u91cd\u5408\u7684 1\n    if(i&amp;j) return 0;   // \u5982\u679c\u6709,\u5c31\u8bf4\u660e\u51b2\u7a81\u4e86\n    return 1;   \n}\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=n; i++){\n        for(int j=1; j&lt;=m; j++){\n            int x; cin&gt;&gt;x;\n            g[i]&lt;&lt;=1;\n            g[i]+=!x;   // \u5c06 1 \u8bbe\u4e3a\u4e0d\u53ef\u79cd\u690d, \u800c\u72b6\u6001\u4e2d\u4e8c\u8fdb\u5236\u4e0b\u4e3a 1 \u7684\u90a3\u4e2a\u4f4d\u7f6e\u8868\u793a\u79cd\u690d\u4e86\n        }        \n        //for(int j=m-1; j&gt;=0; j--)\n        //    cout&lt;&lt;(g[i]&gt;&gt;j &amp; 1);\n        //cout&lt;&lt;\"\\n\";\n    }\n    for(int i=0; i&lt;(1&lt;&lt;m); i++) // \u8ba1\u7b97\u6240\u6709\u72b6\u6001(\u4e00\u884c\u4e2d\u6240\u6709\u7684\u53ef\u80fd)\n        if(ck(i)) st.pb(i);\n\n    for(auto &amp;a: st)    // \u679a\u4e3e\u72b6\u6001 a \n    for(auto &amp;b: st)    // \u679a\u4e3e\u72b6\u6001 b\n        if(ck2(a, b)) h[a].pb(b);   // \u8ba1\u7b97\u6240\u6709\u53ef\u4ee5\u8f6c\u79fb\u7684\u72b6\u6001(\u4e0a\u4e0b\u884c\u53ef\u4ee5\u76f8\u4e92\u8f6c\u6362)\n\n    dp[0][0]=1;\n    for(int i=1; i&lt;=n+1; i++)           // \u679a\u4e3e\u884c,\u591a\u679a\u4e3e\u4e00\u884c,\u7b80\u6613\u8f93\u51fa\n    for(auto &amp;a: st) if(ck2(a, g[i]))   // \u5224\u65ad\u7b2ci\u884c\u80fd\u5426\u4f7f\u7528\u72b6\u6001 a\n    for(auto &amp;b: h[a])                  // a\u53ef\u4ee5\u7531b\u72b6\u6001\u8f6c\u79fb\u6765\n            dp[i][a] = (dp[i][a] + dp[i-1][b])%MOD;\n\n    cout&lt;&lt;dp[n+1][0];\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E5%8E%8BDP/#_3","title":"\u56fd\u738b","text":"<p>\u4e00\u672c\u901a 1592. \u56fd\u738b</p> \u7389\u7c73\u7530\u5347\u7ea7 C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\n#define pb push_back\n#define fst first\n#define sed second\ntypedef long long LL;\ntypedef pair&lt;int, int&gt; PII;\n\nconst int N=12;\nLL dp[N][N*N][1&lt;&lt;N];  // \u7b2c i \u884c,\u653e\u7f6ej\u4e2a\u56fd\u738b,\u653e\u7f6e\u72b6\u6001k,\u65b9\u6848\u6570dp[i][j][k]\nvector&lt;PII&gt; st;       // \u6240\u6709\u5408\u6cd5\u72b6\u6001 \u53ca \u8be5\u72b6\u6001\u4e0b\u653e\u7f6e\u7684\u56fd\u738b\u6570\u91cf\nvector&lt;int&gt; h[1&lt;&lt;N];  // \u72b6\u6001 i -&gt; \u72b6\u6001 j\n\nint n, k;\n\nbool ck(int i){     // \u68c0\u67e5 i \u662f\u5426\u54cd\u94c3         \n    for(int j=n-1; j&gt;0; j--)    // \u5373\u68c0\u67e5\u662f\u5426\u6709\u76f8\u90bb\u7684 1 \n        if( (i&gt;&gt;j&amp;1) &amp;&amp; (i&gt;&gt;(j-1)&amp;1) ) return 0;\n    return 1;\n}\n\nint cnt(int i){     // \u8ba1\u7b97\u8be5\u72b6\u6001\u6709\u591a\u5c11\u4e2a\u56fd\u738b\n    int res=0;      // \u5373\u6709\u591a\u5c11\u4e2a 1\n    for(int j=n-1; j&gt;=0; j--)\n        res+=(i&gt;&gt;j)&amp;1;\n    return res;\n}\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;k;\n\n    for(int i=0; i&lt;(1&lt;&lt;n); i++)     // \u6240\u6709\u72b6\u6001\n        if(ck(i)) st.pb({i, cnt(i)});\n\n    for(auto &amp;[a,_]: st)\n    for(auto &amp;[b,_]: st)\n        if((a&amp;b)==0 &amp;&amp; ck(a|b)) // a&amp;b == 0 : \u4e0a\u4e0b\u4e0d\u76f8\u90bb\n            h[a].pb(b);         // ck(a|b)  : \u6216\u8fd0\u7b97\u540e,\u659c\u7ebf\u65b9\u5411\u4e0d\u51b2\u7a81\n\n    dp[0][0][0]=1;\n\n    for(int i=1; i&lt;=n+1; i++)   // \u679a\u4e3e\u884c\n    for(int j=0; j&lt;=k; j++)     // \u679a\u4e3e\u56fd\u738b\n    for(auto &amp;[a,c]: st)        // \u679a\u4e3e\u72b6\u6001\n    for(auto &amp;b: h[a])          // a \u53ef\u4ee5\u7531 b \u8f6c\u79fb\u800c\u6765\n        if(j&gt;=c)\n            dp[i][j][a] += dp[i-1][j-c][b];\n\n    cout&lt;&lt;dp[n+1][k][0];\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E5%8E%8BDP/#_4","title":"\u8499\u5fb7\u91cc\u5b89\u7684\u68a6\u60f3","text":"<p>AcWing 291. \u8499\u5fb7\u91cc\u5b89\u7684\u68a6\u60f3</p> \u53ea\u8003\u8651\u4e00\u534a C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\n#define pb push_back\ntypedef long long LL;\n\nconst int N=12;\n\nLL dp[N][1&lt;&lt;N]; // \u7b2c i \u5217,\u72b6\u6001 j,\u65b9\u6848\u6570\u91cfdp[i][j]\nbool st[1&lt;&lt;N];  // \u6240\u6709\u72b6\u6001 \nint n, m;       // n \u884c m \u5217\n\nbool ck(int i){\n    int cnt=0;\n    for(int j=0; j&lt;n; j++)\n        if(i&gt;&gt;j &amp; 1)\n            if(cnt &amp; 1) return 0;\n            else cnt=0;\n        else\n            cnt++;\n    if(cnt &amp; 1) return 0;\n    return 1;\n}\n\nvoid solve(){\n    for(int i=0; i&lt;(1&lt;&lt;n); i++)\n        if(ck(i)) st[i]=1;\n\n    dp[0][0]=1;\n\n    for(int i=1; i&lt;=m; i++)\n    for(int a=0; a &lt; 1&lt;&lt;n; a++) // \u7b2c i-i \u5217\u7684\u72b6\u6001\n    for(int b=0; b &lt; 1&lt;&lt;n; b++) // \u7b2c  i  \u5217\u7684\u72b6\u6001\n        if(!(a&amp;b) &amp;&amp; st[a|b])   // \u7b2c i-1\u5217\u4e0d\u80fd\u51fa\u73b0\u4ea4\u96c6(a&amp;b==0), \u5269\u4e0b\u7684\u7a7a\u4f4d\u80fd\u5b8c\u6574\u653e\u4e0b | \n            dp[i][b] += dp[i-1][a];\n\n    cout&lt;&lt;dp[m][0]&lt;&lt;\"\\n\";\n}\n\n// \u7edf\u8ba1\u603b\u7684\u65b9\u6848\u6570,\u6211\u4eec\u4e0d\u5fc5\u679a\u4e3e - \u548c | \u7684\u6446\u653e\u53ef\u80fd\n// \u53ea\u9700\u8981\u679a\u4e3e - \u6216\u8005 | \u7684\u65b9\u6848\u6570\n// \u56e0\u4e3a \u6446\u653e\u7684\u5c0f\u65b9\u683c\u65b9\u6848\u6570 \u7b49\u4ef7\u4e8e \u6a2a\u7740\u6446\u653e\u7684\u5c0f\u65b9\u683c\u65b9\u6848\u6570\n//\n// \u6309\u7167\u4e4b\u524d\u7684\u601d\u8def,\u6211\u4eec\u8981\u627e\u51fa\u7b2c i \u5217\u7684\u6240\u6709\u5408\u6cd5\u72b6\u6001\n// \u7b2c i-1 \u662f\u94fa\u6ee1\u7684\u72b6\u6001,\u7b2ci\u5217\u4f1a\"\u652f\"\u51fa\u6765\u67d0\u4e9b\u5730\u65b9\n// \u6309\u7167\u679a\u4e3e - \u7684\u601d\u8def,\u5269\u4e0b\u7684\u4f4d\u7f6e\u53ea\u80fd\u653e |\n// \u56e0\u6b64\u5408\u7406\u72b6\u6001\u5c31\u662f,\u7b2ci\u5217\u53ef\u4ee5\u5b8c\u5168\u653e\u4e0b |\n\nint main(){\n    while(cin&gt;&gt;n&gt;&gt;m, n||m){\n        memset(dp, 0, sizeof dp);\n        memset(st, 0, sizeof st);\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E5%8E%8BDP/#_5","title":"\u70ae\u5175\u9635\u5730","text":"<p>AcWing 292. \u70ae\u5175\u9635\u5730</p> C++"},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E5%8E%8BDP/#_6","title":"\u79ef\u6728\u753b","text":"<p>AcWing 4406. \u79ef\u6728\u753b</p> \u8499\u5fb7\u91cc\u5b89\u964d\u7ea7 C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1e7+10;\nconst int MOD=1e9+7;\nint n;\n\nint dp[N][3];   // \u524d i \u5217, \u7b2c i \u5217\u7684\u72b6\u6001\u662f(0,1,2) \u5168\u90e8\u4f38\u51fa\u3001\u4e0a\u9762\u4f38\u51fa\u3001\u4e0b\u9762\u4f38\u51fa \n\nint main(){\n    cin&gt;&gt;n;\n\n    dp[0][0]=1;\n\n    /*  \u5bf9\u4e8e \u7b2ci\u5217 \u4e09\u79cd\u60c5\u51b5\n    \u60c5\u51b51: dp[i][0] -&gt; \n        i +1 +2 \n        * *     // \u653e\u4e2a | \u7684    dp[i+1][0]\n        * *\n\n        * * *   // \u653e\u4fe9 - \u7684    dp[i+2][0]\n        * * *    \n\n        * * *   // \u653e\u4e2a \u0393 \u7684    dp[i+2][1]\n        * *\n\n        * *     // \u653e\u4e2a L \u7684    dp[i+2][2]\n        * * *    \n\n    \u60c5\u51b52: dp[i][1] -&gt;\n        i +1 +2\n        *       // \u4e0b\u9762\u653e - \u7684  dp[i+1][2]\n        * *\n\n        * *     //     \u653e \u300d\u7684  dp[i+1][0]\n        * *\n\n    \u60c5\u51b53: dp[i][2] -&gt;\n        i +1 +2\n        * *     // \u4e0a\u9762\u653e - \u7684  dp[i+1][1]\n        *\n\n        * *     //     \u653e 7 \u7684  dp[i+1][0]\n        * *\n    */\n\n    for(int i=0; i&lt;=n; i++){\n        dp[i+1][0] += dp[i][0]; dp[i+1][0]%=MOD;\n        dp[i+2][0] += dp[i][0]; dp[i+2][0]%=MOD;\n        dp[i+2][1] += dp[i][0]; dp[i+1][1]%=MOD;\n        dp[i+2][2] += dp[i][0]; dp[i+2][2]%=MOD;\n        dp[i+1][2] += dp[i][1]; dp[i+1][2]%=MOD;\n        dp[i+1][0] += dp[i][1]; dp[i+1][0]%=MOD;\n        dp[i+1][1] += dp[i][2]; dp[i+1][1]%=MOD;\n        dp[i+1][0] += dp[i][2]; dp[i+1][0]%=MOD;\n    }\n\n    cout&lt;&lt;dp[n][0];\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E5%8E%8BDP/#_7","title":"\u96c6\u5408\u7c7b\u95ee\u9898","text":""},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E5%8E%8BDP/#tsp","title":"\u65c5\u884c\u5546TSP\u95ee\u9898","text":""},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E6%80%81%E6%9C%BA%E6%A8%A1%E5%9E%8B/","title":"\u72b6\u6001\u673a\u6a21\u578b","text":"<p>\u72b6\u6001\u673a\u662f\u4e00\u79cd\u7f16\u7a0b\u601d\u8def\u3002\u662f\u5bf9 \u4e8b\u7269 \u72b6\u6001\u53d8\u5316\u7684\u62bd\u8c61\u3002 \u72b6\u6001\u673a\u7684\u6784\u6210: <code>\u73b0\u6001</code>\\ <code>\u6761\u4ef6</code>\\ <code>\u52a8\u4f5c</code>\\ <code>\u6b21\u6001</code> <code>\u73b0\u6001</code>\u6ee1\u8db3\u7279\u5b9a<code>\u6761\u4ef6</code>,\u53ef\u4ee5\u6267\u884c\u7279\u5b9a<code>\u52a8\u4f5c</code>\u8f6c\u6362\u5230<code>\u6b21\u6001</code> \u73b0\u6001\u548c\u6761\u4ef6\u662f\u56e0,\u52a8\u4f5c\u548c\u6b21\u6001\u662f\u679c \u5982\u679c\u6211\u4eec\u8fdb\u4e00\u6b65\u5f52\u7eb3,\u628a<code>\u73b0\u6001</code>\u548c<code>\u6b21\u6001</code>\u79f0\u4e3a\u72b6\u6001,\u800c\u628a<code>\u52a8\u4f5c</code>\u5ffd\u7565(\u964d\u683c\u5904\u7406),\u5219\u53ea\u5269\u4e0b\u4e24\u4e2a\u6700\u5173\u952e\u7684\u8981\u7d20 \u5373: <code>\u72b6\u6001</code>,<code>\u6761\u4ef6</code> \u4f8b: \u5173\u95e8,\u6ee1\u8db3\u5f00\u95e8\u6761\u4ef6,\u5c31\u53ef\u4ee5\u8f6c\u6362\u5230\u5f00\u95e8 \u5f00\u95e8,\u6ee1\u8db3\u5173\u95e8\u6761\u4ef6,\u5c31\u53ef\u4ee5\u8f6c\u6362\u5230\u5173\u95e8</p> <p>\u5728\u7b97\u6cd5\u7ade\u8d5b\u4e2d,\u6211\u4eec\u5e38\u5e38\u6784\u9020,\u5f62\u5982: x \u72b6\u6001\u53ef\u4ee5\u7531 y,z,k \u8f6c\u79fb\u800c\u6765</p>"},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E6%80%81%E6%9C%BA%E6%A8%A1%E5%9E%8B/#_1","title":"\u6253\u5bb6\u52ab\u820d\u95ee\u9898","text":""},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E6%80%81%E6%9C%BA%E6%A8%A1%E5%9E%8B/#1","title":"\u6253\u5bb6\u52ab\u820d 1 ( \u5e8f\u5217\u4e0d\u76f8\u90bb )","text":"<p>LC 198. \u6253\u5bb6\u52ab\u820d</p> \u72b6\u6001\u673aDP O(n) C++<pre><code>const int N=1e2+10;\nint dp[N][2];       // dp[i][0] \u8868\u793a\u6ca1\u5077\u7684\u6700\u5927\u4ef7\u503c\nint n;              // dp[i][1] \u8868\u793a\u5077\u4e86\u7684\u6700\u5927\u4ef7\u503c\n\nclass Solution {\npublic:\n    int rob(vector&lt;int&gt;&amp; nums) {\n        n = nums.size();\n        nums.insert(nums.begin(), 0);\n\n        dp[1][0] = 0;           // \u5982\u679c\u6ca1\u5077, \u90a3\u4e48\u7b2c 1 \u5bb6\u4e3a 0 \n        dp[1][1] = nums[1];     // \u5982\u679c\u5077\u4e86, \u90a3\u4e48\u7b2c 1 \u5bb6\u4e3a nums[1]\n\n        for(int i=2; i&lt;=n; i++){\n            dp[i][1] = dp[i-1][0] + nums[i];        // \u5982\u679c\u8981\u5077, \u80af\u5b9a\u662f\u4ece [\u524d\u4e00\u5bb6][\u6ca1\u5077] \u8f6c\u79fb\u8fc7\u6765\n            dp[i][0] = max(dp[i-1][1], dp[i-1][0]); // \u5982\u679c\u4e0d\u5077, \u80af\u5b9a\u662f\u4ece [\u524d\u4e00\u5bb6][\u5077\u4e86] \u8f6c\u79fb\u8fc7\u6765\n        }\n\n        return max(dp[n][0], dp[n][1]);\n    }\n};\n</code></pre> \u7ebf\u6027DP O(n) C++<pre><code>const int N=1e2+10;\nint dp[N];      // dp[i] \u8868\u793a\u524d i \u4e2a\u623f\u5b50\u80fd\u5077\u53d6\u7684\u6700\u5927\u4ef7\u503c\nint n;            \n\nclass Solution {\npublic:\n    int rob(vector&lt;int&gt;&amp; nums) {\n        n = nums.size();\n        nums.insert(nums.begin(), 0);\n\n        dp[1]=nums[1];              // \u524d 1 \u4e2a\u623f\u5b50\u80af\u5b9a\u662fnums[1]\n\n        for(int i=2; i&lt;=n; i++)\n            dp[i]=max(dp[i-1], dp[i-2]+nums[i]);\n\n        // \u5728 i==2 \u7684\u65f6\u5019,\n        //      dp[i-1] == nums[i-1]\n        //      dp[i-2]+nums[i] == nums[i]\n        // \u56e0\u6b64dp[2] = max(nums[1], nums[2])\n        // \u6ce8\u610f, \u6b64\u4ee3\u7801\u4e0d\u80fd\u7406\u89e3\u4e3a:\n        //      \u5077 \u7b2c[i-1] \u623f\u5b50\n        //      \u5077 \u7b2c[i-2] \u623f\u5b50 + \u7b2c[i] \u623f\u5b50\n        return dp[n];\n    }\n};\n</code></pre> \u6eda\u52a8\u6570\u7ec4\u4f18\u5316 O(n) C++<pre><code>class Solution {\npublic:\n    int rob(vector&lt;int&gt;&amp; nums) {\n        int a[3]={0};\n        a[1]=nums[0];\n\n        for(int i=1; i&lt;nums.size(); i++){\n            a[2] = max(a[1], a[0]+nums[i]);\n\n            a[0]=a[1];\n            a[1]=a[2];\n        }\n\n        return a[1];\n    }\n};\n</code></pre> \u590d\u7528nums\u4f18\u5316\u7a7a\u95f4 O(n) C++<pre><code>class Solution {\npublic:\n    int rob(vector&lt;int&gt;&amp; f) {\n        if(f.size()&gt;=2) f[1]=max(f[0], f[1]);\n        for(int i=2; i&lt;f.size(); i++)\n            f[i] = max(f[i-1], f[i-2]+f[i]);\n        return f[f.size()-1];\n    }\n};\n</code></pre>"},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E6%80%81%E6%9C%BA%E6%A8%A1%E5%9E%8B/#2","title":"\u6253\u5bb6\u52ab\u820d 2 ( \u73af\u5f62\u4e0d\u76f8\u90bb )","text":"<p>LC 213. \u6253\u5bb6\u52ab\u820d II</p> \u5206\u7c7b\u8ba8\u8bba O(n) C++<pre><code>class Solution {\npublic:\n    int robi(vector&lt;int&gt;&amp; f) {\n        if(f.size()&gt;=2) f[1]=max(f[0], f[1]);\n        for(int i=2; i&lt;f.size(); i++)\n            f[i] = max(f[i-1], f[i-2]+f[i]);\n        return f[f.size()-1];\n    }\n    int rob(vector&lt;int&gt;&amp; f) {\n        if(f.size()==1) return f[0];\n        vector&lt;int&gt; f1, f2;\n        f1.assign(f.begin()+1, f.end());    // \u60c5\u51b51 \u7b2c 1 \u5bb6\u4e0d\u8003\u8651\n        f2.assign(f.begin(), f.end()-1);    // \u60c5\u51b52 \u7b2c n \u5bb6\u4e0d\u8003\u8651\n        return max(robi(f1), robi(f2));\n    }\n};\n</code></pre>"},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E6%80%81%E6%9C%BA%E6%A8%A1%E5%9E%8B/#3","title":"\u6253\u5bb6\u52ab\u820d 3 ( \u6811\u5f62\u4e0d\u76f8\u90bb )","text":"<p>LC 337. \u6253\u5bb6\u52ab\u820d III</p> \u6811\u5f62DP O(n) C++<pre><code>#define fst first\n#define sed second\ntypedef pair&lt;int, int&gt; PII;\n\nclass Solution {\npublic:\n    PII dfs(TreeNode* t){\n        if(!t) return {0,0};\n        PII l = dfs(t-&gt;left);\n        PII r = dfs(t-&gt;right);\n        return {            // \u8fd4\u56de t \u7ed3\u70b9(\u4e0d\u5077\u4e0e\u5077)\u7684\u6700\u5927\u503c    \n            l.sed+r.sed,    // \u4e0d\u5077: \u5de6\u53f3\u5b50\u6811\u5077\u4e86\u7684\u4ef7\u503c\u548c\n            max(l.fst+r.fst+t-&gt;val, l.sed+r.sed)\n        };                  //   \u5077: \u5de6\u53f3\u5b50\u6811\u4e0d\u5077+t\u5077 \u4e0e \u5de6\u53f3\u5b50\u6811\u5077\u4e86\u7684\u4ef7\u503c \u53d6max\n    }\n\n    int rob(TreeNode* root) {\n        PII res = dfs(root);\n        return max(res.fst, res.sed);   // fst\u4e0d\u5077, sed\u5077\n    }\n};\n</code></pre>"},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E6%80%81%E6%9C%BA%E6%A8%A1%E5%9E%8B/#_2","title":"\u80a1\u7968\u4e70\u5356\u95ee\u9898","text":""},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E6%80%81%E6%9C%BA%E6%A8%A1%E5%9E%8B/#_3","title":"\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a ( \u4e70\u5356\u4e00\u6b21 )","text":"<p>LC 121. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a</p> \u72b6\u6001\u673aDP O(n) C++<pre><code>const int N=1e5+10;\nint dp[N][2];   // dp[i][0] \u8868\u793a\u7b2c i \u5929 \u5356 \u7684\u6700\u5927\u4ef7\u503c\nint n;          // dp[i][1] \u8868\u793a\u7b2c i \u5929 \u4e70 \u7684\u6700\u5927\u4ef7\u503c\nclass Solution {\npublic:\n    int maxProfit(vector&lt;int&gt;&amp; p) {\n        n=p.size();\n        p.insert(p.begin(), 0);\n\n        dp[1][0] = 0;\n        dp[1][1] = -p[1];   \n\n        for(int i=2; i&lt;=n; i++){\n            dp[i][0]=max(dp[i-1][0], dp[i-1][1]+p[i]);  // \u4fdd\u6301\u7a7a\u4ed3 \u4e0e \u5356\u51fa\n            dp[i][1]=max(dp[i-1][1], -p[i]);            // \u4fdd\u6301\u6ee1\u4ed3 \u4e0e \u4e70\u5165( \u4e70\u5356\u4e00\u6b21, \u4e70\u4ef7\u4e00\u5b9a\u662f p[i] )\n        }\n\n        return dp[n][0];\n    }\n};\n</code></pre> \u6eda\u52a8\u6570\u7ec4\u4f18\u5316 O(n) C++<pre><code>class Solution {\npublic:\n    int maxProfit(vector&lt;int&gt;&amp; p) {\n        int a[2][2];\n        a[0][0] = 0;\n        a[0][1] = -p[0];\n\n        for(int i=1; i&lt;p.size(); i++){\n            a[1][0] = max(a[0][0], a[0][1]+p[i]); \n            a[1][1] = max(a[0][1], -p[i]);\n\n            a[0][0]=a[1][0];\n            a[0][1]=a[1][1];\n        }\n        return a[0][0];\n    }\n};\n</code></pre>"},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E6%80%81%E6%9C%BA%E6%A8%A1%E5%9E%8B/#_4","title":"\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a ( \u4e70\u5356\u591a\u6b21 )","text":"<p>LC 122. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a II</p> \u72b6\u6001\u673aDP O(n) C++<pre><code>const int N=3e4+10;\nint dp[N][2];   // dp[i][0] \u8868\u793a\u7b2c i \u5929\u5356\u51fa\u80a1\u7968\nint n;          // dp[i][1] \u8868\u793a\u7b2c i \u5929\u4e70\u5165\u80a1\u7968\nclass Solution {\npublic:\n    int maxProfit(vector&lt;int&gt;&amp; p) {\n        n=p.size();\n        p.insert(p.begin(), 0);\n\n        // \u5bf9\u4e8e\u6bcf\u4e00\u5929\n        dp[1][0] = 0;       // \u5356\u51fa\u80a1\u7968\n        dp[1][1] = -p[1];   // \u4e70\u5165\u80a1\u7968 \n        // \u4e70\u5165\u53c8\u5356\u51fa\u80a1\u7968   \u7b49\u4ef7\u4e8e \u5356\u51fa\u80a1\u7968\n        // \u4e70\u5165\u53c8\u5356\u51fa\u53c8\u4e70\u5165 \u7b49\u4ef7\u4e8e \u4e70\u5165\u80a1\u7968\n\n        for(int i=2; i&lt;=n; i++){\n            dp[i][0] = max( dp[i-1][0], dp[i-1][1]+p[i] );  // \u4fdd\u6301\u7a7a\u4ed3 \u5356\u51fa \n            dp[i][1] = max( dp[i-1][1], dp[i-1][0]-p[i] );  // \u4fdd\u6301\u6ee1\u4ed3 \u4e70\u5165( \u4e70\u5356\u591a\u6b21, \u4ece\u7a7a\u4ed3\u8f6c\u79fb\u800c\u6765 )\n        }\n\n        return dp[n][0];\n    }\n};\n</code></pre> \u6eda\u52a8\u6570\u7ec4\u4f18\u5316 O(n) C++<pre><code>class Solution {\npublic:\n    int maxProfit(vector&lt;int&gt;&amp; p) {\n        int a[2][2];\n        a[0][0] = 0;\n        a[0][1] = -p[0];\n\n        for(int i=1; i&lt;p.size(); i++){\n            a[1][0] = max( a[0][0], a[0][1]+p[i] );\n            a[1][1] = max( a[0][1], a[0][0]-p[i] );\n\n            a[0][0] = a[1][0];\n            a[0][1] = a[1][1];\n        }\n        return a[0][0];\n    }\n};\n</code></pre>"},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E6%80%81%E6%9C%BA%E6%A8%A1%E5%9E%8B/#_5","title":"\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a ( \u6700\u591a\u4e24\u6b21 )","text":"<p>LC 123. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a III</p> \u72b6\u6001\u673aDP O(n) C++<pre><code>const int N=1e5+10;\nint dp[N][5];   // dp[i][0] \u8868\u793a \u7b2ci\u5929 \u6ca1\u6709\u4e70\u8fc7     (\u7a7a\u4ed3)\nint n;          // dp[i][1] \u8868\u793a \u7b2ci\u5929 \u6301\u6709\u4e00\u652f     (\u4e70\u51651)\n                // dp[i][2] \u8868\u793a \u7b2ci\u5929 \u5356\u51fa\u4e00\u652f     (\u5356\u51fa1)\n                // dp[i][3] \u8868\u793a \u7b2ci\u5929 \u6301\u6709\u4e00\u652f     (\u4e70\u51652)\n                // dp[i][4] \u8868\u793a \u7b2ci\u5929 \u5356\u51fa\u4e00\u652f     (\u5356\u51fa2)\nclass Solution {\npublic:\n    int maxProfit(vector&lt;int&gt;&amp; p) {\n        n=p.size();\n        p.insert(p.begin(), 0);\n\n        dp[1][0] = 0;\n        dp[1][1] = -p[1];\n        dp[1][2] = 0;\n        dp[1][3] = -p[1];   // \u4e00\u5929\u5185, \u4e70\u4e86\u5356\u4e86\u53c8\u4e70\n        dp[1][4] = 0;\n\n        for(int i=2; i&lt;=n; i++){\n            dp[i][0] = dp[i-1][0];                          // \u4fdd\u6301 \u7a7a\u4ed3\n            dp[i][1] = max(dp[i-1][1], dp[i-1][0]-p[i]);    // \u4fdd\u6301 \u4e70\u51651 \u4e0e \u7a7a\u4ed3\u4e70\u5165\n            dp[i][2] = max(dp[i-1][2], dp[i-1][1]+p[i]);    // \u4fdd\u6301 \u5356\u51fa1 \u4e0e \u5356\u51fa \u7b2c1\u652f\u80a1\u7968 ( \u5356\u51fa\u4e70\u51651 ) \n            dp[i][3] = max(dp[i-1][3], dp[i-1][2]-p[i]);    // \u4fdd\u6301 \u4e70\u51652 \u4e0e \u5728\u5356\u51fa1\u7684\u57fa\u7840\u4e0a \u4e70\u51652\n            dp[i][4] = max(dp[i-1][4], dp[i-1][3]+p[i]);    // \u4fdd\u6301 \u5356\u51fa2 \u4e0e \u5728\u4e70\u51652\u7684\u57fa\u7840\u4e0a \u5356\u51fa2\n        }\n        return max(dp[n][0], max(dp[n][2], dp[n][4]));\n    }  \n};\n</code></pre> \u6eda\u52a8\u6570\u7ec4\u4f18\u5316 O(n) C++<pre><code>class Solution {\npublic:\n    int maxProfit(vector&lt;int&gt;&amp; p) {\n        int a1 = -p[0]; // \u4e701\n        int b1 = 0;     // \u53561\n        int a2 = -p[0]; // \u4e702\n        int b2 = 0;     // \u53562\n\n        for(int i=1; i&lt;p.size(); i++){\n            a1 = max(a1,  0 - p[i]);        \n            b1 = max(b1, a1 + p[i]);\n            a2 = max(a2, b1 - p[i]);\n            b2 = max(b2, a2 + p[i]);\n        }// \u771f\u6b63\u7684\u6eda\u52a8\u6570\u7ec4\n        return b2;\n    }\n};\n</code></pre>"},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E6%80%81%E6%9C%BA%E6%A8%A1%E5%9E%8B/#k","title":"\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a ( \u6700\u591aK\u6b21 )","text":"<p>LC 188. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a IV</p> <p>\u672c\u6587\u7684\u6eda\u52a8\u6570\u7ec4, \u5927\u591a\u53ef\u4ee5\u5982\u6b64\u4f18\u5316\u4e3a\u4e00\u7ef4  </p> \u72b6\u6001\u673aDP(\u4e00\u7ef4\u6570\u7ec4) O(nk) C++<pre><code>class Solution {\npublic:\n    int maxProfit(int k, vector&lt;int&gt;&amp; p) {  // \u540c\u7406\uff0c\u53ea\u9700\u8981\u5c06 \u4e70\u53561,2 \u8bbe\u5b9a\u4e3a \u4e70\u5356k\n        int a[110], b[110];\n        fill(a+1, a+1+k, -p[0]);// \u6240\u6709\u7684\u4e70\u5165\u90fd\u662f -p[0]\n        fill(b+1, b+1+k, 0);    // \u6240\u6709\u7684\u5356\u51fa\u90fd\u662f 0\n        b[0]=0;                 // b[0]\u7684\u542b\u4e49\u662f\u7a7a\u4ed3, \u7b2c0\u6b21\u5356\u51fa\n\n        for(int j=1; j&lt;p.size(); j++)\n            for(int i=1; i&lt;=k; i++){ // \u7b2ci\u6b21\u4e70\u5165\u4e0e\u5356\u51fa\n                a[i] = max(a[i], b[i-1] - p[j]);\n                b[i] = max(b[i], a[i]   + p[j]);\n            }\n        return b[k];\n    }\n};\n</code></pre>"},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E6%80%81%E6%9C%BA%E6%A8%A1%E5%9E%8B/#_6","title":"\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a ( \u542b\u51b7\u51bb\u671f )","text":"<p>LC 309. \u6700\u4f73\u4e70\u5356\u80a1\u7968\u65f6\u673a\u542b\u51b7\u51bb\u671f</p> \u72b6\u6001\u673aDP O(n) C++<pre><code>const int N=5e3+10;\nint dp[N][2];   // dp[i][0] \u8868\u793a \u7b2c i \u5929\u672a\u6301\u6709(\u5356\u51fa)\nint n;          // dp[i][1] \u8868\u793a \u7b2c i \u5929 \u4e70\u5165 (\u4e70\u5165)\n\nclass Solution {\npublic:\n    int maxProfit(vector&lt;int&gt;&amp; p) {\n        n=p.size();\n        p.insert(p.begin(), 0); \n\n        dp[1][0]=0;\n        dp[1][1]=-p[1];\n        if(n&gt;=2){\n            dp[2][0]=max(0, dp[1][1]+p[2]); // \u7a7a\u4ed3 \u6216 \u5356\u51fa\n            dp[2][1]=max(-p[1], -p[2]);     // \u4e24\u5929\u4e2d\u53ea\u80fd\u5728\u4e00\u5929\u9009\u62e9\u4e70\u5165\n        }\n\n        for(int i=3; i&lt;=n; i++){\n            dp[i][0] = max( dp[i-1][0], dp[i-1][1]+p[i]);   // \u4fdd\u6301\u7a7a\u4ed3 \u6216 \u5356\u51fa\n            dp[i][1] = max( dp[i-1][1], dp[i-2][0]-p[i]);   // \u4fdd\u6301\u6ee1\u4ed3 \u6216 \u4e70\u5165( \u524d\u5929\u7684\u57fa\u7840\u4e0a\u4e70\u5165 )\n        }\n\n        return dp[n][0];\n    }\n};\n</code></pre> \u6eda\u52a8\u6570\u7ec4\u4f18\u5316 O(n) C++<pre><code>class Solution {\npublic:\n    int maxProfit(vector&lt;int&gt;&amp; p) {\n        int dp[3][2];\n\n        dp[1][0] = 0;\n        dp[1][1] = -p[0];\n        if(p.size()&gt;1){\n            dp[2][0] = max(0, dp[1][1]+p[1]);\n            dp[2][1] = max(-p[0], -p[1]);\n        }\n\n        for(int i=2; i&lt;p.size();i++){\n            dp[0][0]=dp[1][0];\n            dp[0][1]=dp[1][1];\n            dp[1][0]=dp[2][0];\n            dp[1][1]=dp[2][1];\n\n            dp[2][0] = max( dp[1][0], dp[1][1]+p[i]);   // \u4fdd\u6301\u7a7a\u4ed3 \u6216 \u5356\u51fa\n            dp[2][1] = max( dp[1][1], dp[0][0]-p[i]);   // \u4fdd\u6301\u6ee1\u4ed3 \u6216 \u4e70\u5165( \u524d\u5929\u7684\u57fa\u7840\u4e0a\u4e70\u5165 )\n        }\n\n        if(p.size()==1) return dp[1][0];\n        return dp[2][0];\n    }\n};\n</code></pre>"},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E6%80%81%E6%9C%BA%E6%A8%A1%E5%9E%8B/#_7","title":"\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a ( \u542b\u624b\u7eed\u8d39 )","text":"<p>LC 714. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a\u542b\u624b\u7eed\u8d39</p> \u72b6\u6001\u673aDP O(n) C++<pre><code>const int N=5e4+10;\nint dp[N][2];   // dp[i][0] \u8868\u793a \u7b2ci\u5929 \u7a7a\u4ed3(\u5356\u51fa)      \nint n;          // dp[i][1] \u8868\u793a \u7b2ci\u5929 \u4e70\u5165 \n\nclass Solution {\npublic:\n    int maxProfit(vector&lt;int&gt;&amp; p, int f) {\n        n=p.size();\n        p.insert(p.begin(), 0);\n\n        dp[1][0]=0;\n        dp[1][1]=-p[1]-f;\n\n        for(int i=2; i&lt;=n; i++){\n            dp[i][0] = max(dp[i-1][0], dp[i-1][1]+p[i]);    // \u5356\u51fa\u7684\u65f6\u5019\u4e0d\u4ea4\u624b\u7eed\u8d39\n            dp[i][1] = max(dp[i-1][1], dp[i-1][0]-p[i]-f);  // \u4e70\u5165\u7684\u65f6\u5019\u4ea4\u624b\u7eed\u8d39\n        }\n\n        return dp[n][0];\n    }\n};\n</code></pre> \u4e00\u7ef4\u6570\u7ec4 O(n) C++<pre><code>class Solution {\npublic:\n    int maxProfit(vector&lt;int&gt;&amp; p, int f) {\n        int a=0;\n        int b=-p[0]-f;\n        for(int i=1; i&lt;p.size(); i++){\n            a = max(a, b+p[i]);    // \u5356\u51fa\u7684\u65f6\u5019\u4e0d\u4ea4\u624b\u7eed\u8d39\n            b = max(b, a-p[i]-f);  // \u4e70\u5165\u7684\u65f6\u5019\u4ea4\u624b\u7eed\u8d39\n        }\n        return a;\n    }\n};\n</code></pre>"},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E6%80%81%E6%9C%BA%E6%A8%A1%E5%9E%8B/#_8","title":"\u7ec3\u4e60","text":""},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E6%80%81%E6%9C%BA%E6%A8%A1%E5%9E%8B/#_9","title":"\u91d1\u660e\u7684\u5047\u671f","text":"<p>AcWing 4802. \u91d1\u660e\u7684\u5047\u671f</p> \u72b6\u6001\u673aDP O(n) C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=110;\n                //                      0     1     2\nint dp[N][3];   // \u524d i \u5929, \u7b2c i \u5929\u9009\u62e9\u4f11\u606f\u3001\u770b\u4e66\u3001\u5065\u8eab\u7684\u6700\u5927\u51fa\u884c\u5929\u6570\nint g[N];\nint n;\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) cin&gt;&gt;g[i];\n\n    if(g[1]==0) dp[1][0]=0; // \u90fd\u4e0d\u884c\n    if(g[1]==1) dp[1][1]=1; // \u770b\u4e66\n    if(g[1]==2) dp[1][2]=1; // \u5065\u8eab\n    if(g[1]==3) dp[1][1]=dp[1][2]=1; // \u90fd\u53ef\n\n    for(int i=2; i&lt;=n; i++){\n        if(g[i]==0){\n            dp[i][0]=max(dp[i-1][0], max(dp[i-1][1], dp[i-1][2]));\n            dp[i][1]=max(dp[i-1][0], dp[i-1][2]);\n            dp[i][2]=max(dp[i-1][0], dp[i-1][1]);\n        }\n        if(g[i]==1){\n            dp[i][0]=max(dp[i-1][0], max(dp[i-1][1], dp[i-1][2]));\n            dp[i][1]=max(dp[i-1][0], dp[i-1][2])+1;\n            dp[i][2]=max(dp[i-1][0], dp[i-1][1]);\n        }\n        if(g[i]==2){\n            dp[i][0]=max(dp[i-1][0], max(dp[i-1][1], dp[i-1][2]));\n            dp[i][1]=max(dp[i-1][0], dp[i-1][2]);\n            dp[i][2]=max(dp[i-1][0], dp[i-1][1])+1;\n        }  \n        if(g[i]==3){\n            dp[i][0]=max(dp[i-1][0], max(dp[i-1][1], dp[i-1][2]));\n            dp[i][1]=max(dp[i-1][0], dp[i-1][2])+1;\n            dp[i][2]=max(dp[i-1][0], dp[i-1][1])+1;\n        }\n    }\n\n    cout&lt;&lt;n-max(dp[n][0], max(dp[n][1], dp[n][2]));\n\n    return 0;\n}\n</code></pre> <p>AcWing 4805. \u52a0\u51cf\u4e58</p> \u72b6\u6001\u673aDP O(n) C++<pre><code>\n</code></pre>"},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85%E6%A8%A1%E5%9E%8B/","title":"01\u80cc\u5305","text":"<p>\u6709N\u4ef6\u7269\u54c1\uff0c\u5bb9\u91cf\u4e3aV\u7684\u80cc\u5305\uff0c\u7b2c i \u4ef6\u7269\u54c1\u7684\u4f53\u79ef\u662f cost[ i ]\uff0c\u4ef7\u503c\u662f val[ i ]\uff0c\u6c42\u89e3\uff0c\u653e\u5165\u54ea\u4e9b\u7269\u54c1\u4f7f\u5f97\u4ef7\u503c\u603b\u548c\u6700\u5927</p> <p>\u5982\u679c\u4e00\u7ef4dp\u53ea\u4ece\u4f53\u79ef\u6216\u53ea\u4ece\u4ef7\u503c\u6765\u8003\u8651\uff0c\u663e\u7136\u662f\u4e0d\u53ef\u884c\u7684</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u5b9a\u4e49\u4e8c\u7ef4\u7684 dp[i][j]\uff0c\u5176\u542b\u4e49\u662f</p> <p>\u524d i \u4ef6\u7269\u54c1\u653e\u5165\u5bb9\u91cf\u4e3a j \u7684\u80cc\u5305\u53ef\u4ee5\u83b7\u5f97\u7684\u6700\u5927\u4ef7\u503c</p> <p>\u6211\u4eec\u6b64\u65f6\u8003\u8651\u72b6\u6001\u7684\u8f6c\u79fb\uff1a</p> <p>dp[ i-1 ][ j ]  \u4e0d\u8003\u8651\u7b2ci\u4ef6\u7269\u54c1\uff0c\u90a3\u4e48dp[i][j]\u7684\u6700\u5927\u503c\u5c31\u662fdp[ i-1 ][ j ]\uff0c\u4e0d\u9009\u62e9\u7b2ci\u4ef6\u7269\u54c1\uff0c\u76f4\u63a5\u7ee7\u627f\u4e0a\u4e00\u6b21\u7684\u6700\u5927\u503c  dp[ i ][ j-w[i] ]   \u8fd9\u4e2a\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u5728\u6211\u4eec\u5904\u7406\u7b2c i \u4ef6\u7269\u54c1\u7684\u65f6\u5019\uff0cdp[ i ]\u8fd8\u6ca1\u6709\u88ab\u5b9a\u4e49 dp[ i-1 ][ j-w[i] ]     \u5982\u679c\u6211\u4eec\u9009\u62e9\u4e86\u7b2c i \u4ef6\u7269\u54c1\uff0c\u7b2c i \u4ef6\u7269\u54c1\u7684\u4f53\u79ef\u662f w[ i ]\uff0c\u56e0\u6b64\u53ea\u80fd\u5c06\u7269\u54c1\u653e\u5165\u5bb9\u91cf\u4e3aj-w[ i ] \u7684\u80cc\u5305</p> <p>\u6b64\u65f6\u6211\u4eec\u9700\u8981\u60f3\u4e00\u4ef6\u4e8b\u513f\uff0c\u4e3a\u4ec0\u4e48\u653e\u5165j-w[i]\u5bb9\u91cf\u7684\u80cc\u5305\uff0c\u53ef\u4ee5\u4f7f\u5f97dp[i][j]\u6700\u5927\uff1f \u5982\u679c\u65e0\u6cd5\u7406\u89e3\uff0c\u4e0d\u59a8\u770b\u770b\u6211\u4eec\u5982\u4f55\u5b9a\u4e49\u7684\u72b6\u6001\u3002\u663e\u7136\uff0c\u7528\u53cd\u8bc1\u6cd5\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u8bc1\u660e\u3002</p> Luogu P1048 [NOIP2005 \u666e\u53ca\u7ec4] \u91c7\u836f code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 1e3 + 10;\n\nint cost[N], val[N];\nint dp[N][N];   // \u82b1\u8d39 i \u65f6\u95f4\uff0c\u91c7\u96c6 1-j \u4e2d\u7684\u91c7\u836f\u83b7\u5f97\u7684\u6700\u5927\u4ef7\u503c\nint t, m;\n\nint main() {\n    cin &gt;&gt; t &gt;&gt; m;\n    for (int i = 1; i &lt;= m; i++)\n        scanf(\"%d%d\", cost + i, val + i);\n\n    for (int i = 1; i &lt;= m; i++)        // \u679a\u4e3e\u8349\u836f\n        for (int j = 1; j &lt;= t; j++) {  // \u679a\u4e3e\u65f6\u95f4\n\n            dp[i][j] = dp[i - 1][j];\n\n            if (j &gt;= cost[i]) \n                dp[i][j] = max(dp[i][j], dp[i - 1][j - cost[i]] + val[i]);\n        }\n\n    cout &lt;&lt; dp[m][t];\n\n    return 0;\n}\n</code></pre> Luogu P1049 [NOIP2001 \u666e\u53ca\u7ec4] \u88c5\u7bb1\u95ee\u9898 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint cost[40];    // \u6bcf\u4e2a\u7269\u54c1\u7684\u82b1\u8d39\nint dp[40][20010];\nint n, v;\n\nint main(){\n    cin&gt;&gt;v&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++)\n        scanf(\"%d\", cost+i);\n\n    for(int i=1; i&lt;=n; i++)     // \u679a\u4e3e\u7269\u54c1\n        for(int j=1; j&lt;=v; j++){// \u679a\u4e3e\u4f53\u79ef\n            dp[i][j]=dp[i-1][j];\n            if(j&gt;=cost[i])\n                dp[i][j]=max(dp[i][j], dp[i-1][j-cost[i]]+cost[i]);\n        }\n\n    cout&lt;&lt;v-dp[n][v];\n\n    return 0;\n}\n</code></pre> Luogu P1802 5 \u500d\u7ecf\u9a8c\u65e5 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1e3+10;\nint lose[N], win[N], use[N];\nint dp[N][N];// \u524d i \u4e2a\u5bf9\u624b \u4f7f\u7528 j \u836f\u5242\u83b7\u5f97\u7684\u6700\u5927\u7ecf\u9a8c\nint n, x;   // \u7269\u54c1(\u5bf9\u624b)\u6570\u91cf \u80cc\u5305(\u836f\u5242)\u603b\u91cf\nint s;\n\nint main(){\n    //freopen(\"in\", \"r\", stdin); freopen(\"out\", \"w\", stdout);\n    cin&gt;&gt;n&gt;&gt;x;\n    for(int i=1; i&lt;=n; i++)\n        scanf(\"%d%d%d\", lose+i, win+i, use+i);\n\n    for(int i=1; i&lt;=n; i++)     // \u679a\u4e3e\u6253\u7684\u4eba\n        for(int j=0; j&lt;=x; j++){// \u679a\u4e3e\u836f\u5242\u91cf\n            // \u76f4\u63a5\u5047\u5b9a\u6253\u4e0d\u8fc7\n            dp[i][j] = dp[i-1][j] + lose[i];\n\n            if(j&gt;=use[i])\n                dp[i][j] = max(dp[i][j], dp[i-1][j-use[i]]+win[i]);\n        }\n\n    cout&lt;&lt;(long long)5*dp[n][x];\n\n    return 0;\n}\n</code></pre> Luogu U233637 \u5ba0\u7269\u5c0f\u7cbe\u7075\u4e4b\u6536\u670d code  \u5bf9\u4e8e\u6b64\u9898\uff0c\u987a\u7740\u6211\u4eec\u4e4b\u524d\u7684\u601d\u8def\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u7528\u4e00\u4e2a\u4e09\u7ef4\u7684DP\u6765\u8868\u793a\u72b6\u6001\uff0c\u5373short dp[110][N][510]; \u00a0  // \u524d i \u4e2a\u5c0f\u7cbe\u7075 \u4f7f\u7528 j \u7684\u7cbe\u7075\u7403 k\u7684\u4f53\u529b (\u83b7\u5f97\u6700\u591a\u7684\u7cbe\u7075\u6570\u91cf)   \u800c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e5f\u53ef\u4ee5\u4f9d\u846b\u82a6\u753b\u74e2\uff1a  for(int i=1; i&lt;=k; i++) // \u679a\u4e3e\u7269\u54c1(\u7cbe\u7075) for(int j=1; j&lt;=n; j++) // \u679a\u4e3e\u5bb9\u91cf(\u7cbe\u7075\u7403) for(int l=1; l=c1[i] &amp;&amp; l&gt;=c2[i]) \u00a0 \u00a0 dp[i][j][l] = max(dp[i][j][l] , dp[i-1][j-c1[i]][l-c2[i]]+1 ); }  \u901a\u8fc7\u89c2\u5bdf\uff0c\u6211\u4eec\u53d1\u73b0\u7b2c\u4e00\u7ef4\u7684\u72b6\u6001\u53ef\u4ee5\u4f18\u5316 \u800c\u4e14\u53ef\u4ee5\u8fb9\u8f93\u5165\u8fb9\u5904\u7406\uff0c\u7cbe\u7075\u7403\u548c\u4f53\u529b\u4e0d\u5fc5\u5b58\u4e0b\u6765  Notes\uff01     dp[i][j][l]=dp[i-1][j][l];  \u8fd9\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u4ece\u540e\u5f80\u524d\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb   C++<pre><code>#pragma G++ optimize(\"Ofast\", \"inline\")\n#include &lt;iostream&gt;\nusing namespace std;\n\nint dp[1010][510];\n// i\u4e2a\u7cbe\u7075\u7403 j\u4f53\u529b\u80fd\u83b7\u5f97\u7684\u6700\u5927\u7cbe\u7075\u6570\u91cf\nint n, m, k;\n// \u7cbe\u7075\u7403\u6570\u91cf \u4f53\u529b\u503c \u5c0f\u7cbe\u7075\u6570\u91cf\n\nint main(){\n    //freopen(\"in\", \"r\", stdin); freopen(\"out\", \"w\", stdout);\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;\n    for(int l=1; l&lt;=k; l++){\n        int c1, c2; // \u6d88\u8017\u7684\u7cbe\u7075\u7403\u4e0e\u4f53\u529b\n        scanf(\"%d%d\", &amp;c1, &amp;c2);\n\n        for(int i=n;  i&gt;=c1; i--)\n        for(int j=m-1;j&gt;=c2; j--)\n            dp[i][j]=max(dp[i][j], dp[i-c1][j-c2]+1);\n    }\n\n    cout&lt;&lt;dp[n][m-1]&lt;&lt;\" \";\n\n    int res=1000;\n    for(int i=0; i&lt;m; i++)\n        if(dp[n][m-1] == dp[n][i]){\n            res=min(res, i);\n            break;\n        }\n    cout&lt;&lt;m-res;\n    return 0;\n}\n</code></pre> AcWing 278. \u6570\u5b57\u7ec4\u5408 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\n// \u524d i \u4e2a\u6570 \u548c\u4e3a j \u65f6\u7684\u65b9\u6848\u6570\nint dp[10010];\nint n, m;\n\nint main(){\n    //freopen(\"in\", \"r\", stdin); freopen(\"out\", \"w\", stdout);\n    cin&gt;&gt;n&gt;&gt;m;\n    dp[0]=1;\n    for(int i=1; i&lt;=n; i++){\n        int a; scanf(\"%d\", &amp;a);\n\n        for(int j=m; j&gt;=a; j--)\n            dp[j]+=dp[j-a];\n    }\n\n    cout&lt;&lt;dp[m];\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85%E6%A8%A1%E5%9E%8B/#_1","title":"\u5b8c\u5168\u80cc\u5305","text":"Luogu P1616 \u75af\u72c2\u7684\u91c7\u836f code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N=1e7+10;\n\nLL dp[N];  // \u5728\u524d i \u79d2\u91c7\u7684\u8349\u836f\u7684\u6700\u5927\u4ef7\u503c\n\nint n, m;   // \u603b\u7684\u65f6\u95f4\u548c\u8349\u836f\u7684\u6570\u91cf\n\nint main(){\n    //freopen(\"in\", \"r\", stdin); freopen(\"out\", \"w\", stdout);\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=m; i++){\n        int c, v;\n        scanf(\"%d%d\", &amp;c, &amp;v);\n\n        for(int j=c; j&lt;=n; j++)\n            dp[j]=max(dp[j], dp[j-c]+v);\n    }\n    cout&lt;&lt;dp[n];\n    return 0;\n}\n</code></pre> AcWing 1023. \u4e70\u4e66 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint c[5]={0, 10, 20, 50, 100};\nint dp[1010];   // i\u5143\u7684\u8d2d\u4e66\u65b9\u6848\u6570\u91cf\nint n;\n\nint main(){\n    cin&gt;&gt;n;\n    dp[0]=1;\n    for(int i=1; i&lt;=4; i++)\n    for(int j=c[i]; j&lt;=n; j++)\n        dp[j]+=dp[j-c[i]];\n\n    cout&lt;&lt;dp[n];\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85%E6%A8%A1%E5%9E%8B/#_2","title":"\u591a\u91cd\u80cc\u5305","text":"AcWing 4. \u591a\u91cd\u80cc\u5305\u95ee\u9898 I code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=10010;  // \u6700\u591a100*100\u4e2a\u7269\u54c1\n\nint dp[N];\nint n, m;   // n\u4e2a\u7269\u54c1\uff0cm\u7684\u5bb9\u91cf\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m;\n\n    for(int i=1; i&lt;=n; i++){    // \u679a\u4e3e\u5927\u7269\u54c1\n        int c, v, num;\n        scanf(\"%d%d%d\", &amp;c, &amp;v, &amp;num);\n\n        for(int ii=1; ii&lt;=num; ii++) // \u679a\u4e3e\u5c0f\u7269\u54c1\n        for(int j=m; j&gt;=c; j--)\n            dp[j]=max(dp[j], dp[j-c]+v);\n    }\n\n    cout&lt;&lt;dp[m];\n\n    return 0;\n}\n</code></pre> AcWing 5. \u591a\u91cd\u80cc\u5305\u95ee\u9898 II code C++<pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n#define max(a, b) (a) &gt; (b) ? (a) : (b)\nint n, V, c[1005], v[1005], s[1005], dp[2005];\nint main()\n{\n    scanf(\"%d%d\", &amp;n, &amp;V);\n    for (int i = 1; i &lt;= n; i++)\n        scanf(\"%d%d%d\", c + i, v + i, s + i);\n    for (int i = 1; i &lt;= n; i++)\n    {\n        int maxn = 1 &lt;&lt; int(log2(s[i])), oth = s[i] - maxn + 1;\n        for (int k = 1; k &lt;= maxn &gt;&gt; 1; k &lt;&lt;= 1)\n        {\n            //printf(\"%d \", k);\n            for (int j = V; j &gt;= c[i] * k; j--)\n                dp[j] = max(dp[j], dp[j - k * c[i]] + k * v[i]);\n        }\n        //printf(\"%d\\n\", oth);\n        if (!oth)\n            continue;\n        for (int j = V; j &gt;= c[i] * oth; j--)\n            dp[j] = max(dp[j], dp[j - oth * c[i]] + oth * v[i]);\n    }\n    //for (int i = 1; i &lt;= V; i++)\n    //    printf(\"%d \", dp[i]); \n    printf(\"%d\",dp[V]); \n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/3%20%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85%E6%A8%A1%E5%9E%8B/#_3","title":"\u6df7\u5408\u80cc\u5305","text":"AcWing 7. \u6df7\u5408\u80cc\u5305\u95ee\u9898 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint dp[10010];\nint n, m;   // \u7269\u54c1\u603b\u91cf\u548c\u4f53\u79ef\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=n; i++){    // \u679a\u4e3e\u5927\u7269\u54c1\n        int c, v, num;  // \u4f53\u79ef\u3001\u4ef7\u503c\u3001\u603b\u91cf\n        scanf(\"%d%d%d\", &amp;c, &amp;v, &amp;num);\n        if(num==-1) num=1;\n        else if(num==0) num = (m+c-1)/c;    // \u5411\u4e0a\u53d6\u6574\n\n        for(int k=1; ; ){   // \u5206\u5806\n            for(int j=m; j&gt;=c; j--)\n                dp[j]=max(dp[j], dp[j-c]+v);\n\n            num-=k; // \u8fd8\u5269\u4e0b\u7684\u6570\u91cf\n            if(!num) break;\n\n            if(num &gt;= k*2){\n                k*=2;\n                c*=2, v*=2;\n            }\n            else{\n                c/=k; c*=num;\n                v/=k; v*=num;\n                k=num;\n            }\n        }\n    }\n    cout&lt;&lt;dp[m];\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E5%AE%9A%E7%90%86/","title":"\u5b9a\u7406","text":""},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E5%AE%9A%E7%90%86/#_1","title":"\u52a0\u6cd5\u539f\u7406","text":"<ul> <li>\u5b9a\u4e49:</li> <li>\u52a0\u6cd5\u539f\u7406\u662f\u5206\u7c7b\u8ba1\u6570\u539f\u7406, \u5e38\u7528\u4e8e\u6392\u5217\u7ec4\u5408\u4e2d, \u5177\u4f53\u662f\u6307: \u505a\u4e00\u4ef6\u4e8b, \u5b8c\u6210\u5b83\u53ef\u4ee5\u6709 n \u7c7b\u65b9\u6cd5, \u5728\u7b2c\u4e00\u7c7b\u65b9\u6cd5\u4e2d\u6709 m1 \u79cd\u4e0d\u540c\u65b9\u6cd5, \u5728\u7b2c\u4e8c\u7c7b\u65b9\u6cd5\u4e2d\u6709 m2 \u79cd\u4e0d\u540c\u65b9\u6cd5,...,\u5728\u7b2c n \u7c7b\u65b9\u6cd5\u4e2d\u6709 mn \u79cd\u4e0d\u540c\u65b9\u6cd5, \u90a3\u4e48\u5b8c\u6210\u8fd9\u4ef6\u4e8b\u5171\u6709 m1 + m2 + ... + mn \u79cd\u4e0d\u540c\u7684\u65b9\u6cd5</li> </ul>"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E5%AE%9A%E7%90%86/#_2","title":"\u4e58\u6cd5\u539f\u7406","text":"<ul> <li>\u5b9a\u4e49:</li> <li>\u505a\u4e00\u4ef6\u4e8b, \u5b8c\u6210\u5b83\u9700\u8981\u5206\u6210 n \u4e2a\u6b65\u9aa4, \u505a\u7b2c\u4e00\u6b65\u6709 m1 \u79cd\u4e0d\u540c\u65b9\u6cd5, \u505a\u7b2c\u4e8c\u6b65\u6709 m2 \u79cd\u4e0d\u540c\u65b9\u6cd5,...,\u505a\u7b2c n \u6b65\u6709 mn \u79cd\u4e0d\u540c\u65b9\u6cd5, \u90a3\u4e48\u5b8c\u6210\u8fd9\u4ef6\u4e8b\u5171\u6709 m1 * m2 * ... * mn \u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u3002</li> </ul>"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E5%AE%9A%E7%90%86/#_3","title":"\u6574\u9664","text":"<ul> <li>\u5b9a\u4e49:</li> <li>\u4fe9\u6574\u6570a, b, \u4e14 a!=0, \u82e5\u5b58\u5728(\u6574\u6570)q, \u4f7f\u5f97 b = a * q, \u5219\u79f0b\u53ef\u88aba\u6574\u9664(a\u80fd\u6574\u9664b)</li> <li>\u79f0 b \u662f a \u7684\u500d\u6570</li> <li>\u79f0 a \u662f b \u7684\u56e0\u6570</li> <li>\u8bb0\u4f5c a | b</li> <li>\u6027\u8d28:</li> <li>a|b, \u82e5b|c, \u5219 a|c</li> <li>a|b, \u4e14a|c, \u5219 a|(xb+yc)</li> </ul>"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E5%AE%9A%E7%90%86/#_4","title":"\u540c\u4f59","text":"<ul> <li>\u5b9a\u4e49:</li> <li>\u4fe9\u6574\u6570a, b, \u82e5 (a-b) | m, \u5219\u79f0a\u548cb\u5bf9\u6a21\u6570m\u540c\u4f59(\u5173\u4e8em\u540c\u4f59)</li> <li>\u5f62\u8c61\u7406\u89e3, a%m==b%m</li> <li>\u8bb0\u4f5c a \u2261 b(mod m)</li> <li>\u53d6\u6a21\u8fd0\u7b97: b%a == b-(b/a)*a</li> <li>\u6027\u8d28</li> <li>\u81ea\u53cd\u6027</li> <li>\u5bf9\u79f0\u6027</li> <li>\u4f20\u9012\u6027</li> <li>\u540c\u4f59\u5f0f\u76f8\u52a0</li> <li>\u540c\u4f59\u5f0f\u76f8\u4e58</li> <li>\u9664\u6cd5</li> <li>\u5e42\u8fd0\u7b97  </li> </ul>"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E5%AE%9A%E7%90%86/#_5","title":"\u7b97\u672f\u57fa\u672c\u5b9a\u7406","text":"<ul> <li>\u5b9a\u4e49:</li> <li>\u4efb\u4f55\u4e00\u4e2a\u5927\u4e8e1\u7684\u81ea\u7136\u6570N, \u5982\u679cN\u4e0d\u4e3a\u8d28\u6570, \u90a3\u4e48 N \u53ef\u4ee5\u552f\u4e00\u5206\u89e3\u6210\u6709\u9650\u4e2a\u8d28\u6570\u7684\u4e58\u79ef</li> <li>\u5f62\u5982: N = p1^c1 * p2^c2 * ... * pm^cm, \u5176\u4e2dp\u662f\u8d28\u6570, c\u662f\u6b63\u6574\u6570, \u4e14p1 &lt; p2 &lt; ... &lt; pm </li> <li>\u6027\u8d28: </li> <li>N\u7684\u7ea6\u6570\u4e2a\u6570 = (c1+1) * (c2+1) * ... * (cm+1)</li> <li>N\u7684\u7ea6\u6570\u7684\u548c = (p1^0 + p1^1 + p1^2 +...+ p1^c1 ) * ... * (pm^0 + pm^1 + pm^2 +...+ pm^cm )</li> </ul> \u5206\u89e3\u8d28\u56e0\u6570 C++<pre><code>map&lt;int, int&gt; pf;   // Prime Factors, \u6bcf\u4e00\u5bf9\u6307 p^c\nvoid get_pf(int n) {\n    pf.clear();\n    for (int i=2; i&lt;=n/i; i++)\n        while(n%i==0){    // \u4ece\u5c0f\u5230\u5927, \u5047\u8bben%4 == 0, \u90a3\u4e48\u4e4b\u524d\u4e00\u5b9a\u6709 n%2 == 0\n            pf[i]++;        // \u56e0\u6b64\u53ef\u4ee5\u4fdd\u8bc1 i \u4e00\u5b9a\u4e3a\u8d28\u6570\n            n/=i;\n        }\n    if(n&gt;1) pf[n]++;\n}\n</code></pre> \u6c42\u7ea6\u6570\u4e2a\u6570 C++<pre><code>for(auto &amp;[p, c]: pf)\n    res = res * (c+1) % MOD;\n</code></pre> \u6c42\u7ea6\u6570\u7684\u548c C++<pre><code>for(auto &amp;[p, c]: pf){\n    long long one=0;\n    for(int i=c; i&gt;=0; i--)\n        one = (one + qmi(p, i, MOD))%MOD;\n    res = res * one % MOD;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E5%AE%9A%E7%90%86/#_6","title":"\u6b27\u62c9\u51fd\u6570","text":"<ul> <li>\u5b9a\u4e49:</li> <li>\u5bf9\u4e8e\u6b63\u6574\u6570 n, \u6b27\u62c9\u51fd\u6570\u662f ( &lt;n ) \u7684\u6b63\u6574\u6570\u4e2d \u4e0en\u4e92\u8d28\u7684\u6570\u7684 \u7684\u6570\u91cf</li> <li>\u8bb0\u4f5c \u03c6(n), \u7279\u522b\u7684 \u03c6(1)=1</li> <li> <p>\u7531\u7b97\u672f\u57fa\u672c\u5b9a\u7406\u6c42\u5f97\u8d28\u56e0\u6570 pf \u5219: \u03c6(n) = n * (p1-1)/p1 * (p2-1)/p2 * ... * (pm-1)/pm</p> </li> <li> <p>\u6027\u8d28:</p> </li> <li>hh</li> <li>hh</li> <li>hh</li> </ul> <p>\u7b5b\u6cd5\u6c42\u6b27\u62c9\u51fd\u6570"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E5%AE%9A%E7%90%86/#_7","title":"\u6b27\u62c9\u5b9a\u7406","text":""},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E5%AE%9A%E7%90%86/#_8","title":"\u8d39\u9a6c\u5c0f\u5b9a\u7406","text":""},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E5%AE%9A%E7%90%86/#_9","title":"\u88f4\u8700\u5b9a\u7406","text":""},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E5%AE%9A%E7%90%86/#_10","title":"\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406","text":""},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E5%AE%9A%E7%90%86/#_11","title":"\u4e8c\u9879\u5f0f\u5b9a\u7406","text":""},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E5%AE%9A%E7%90%86/#lucas","title":"lucas\u5b9a\u7406","text":""},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E5%AE%9A%E7%90%86/#_12","title":"\u5a01\u5c14\u900a\u5b9a\u7406","text":""},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E5%AE%9A%E7%90%86/#emmm","title":"emmm \u5176\u4ed6","text":""},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E5%AE%9A%E7%90%86/#ab","title":"\u8ba1\u7b97 a*b \u7684\u56e0\u6570\u6570\u91cf","text":"<p>\u5206\u522b\u8ba1\u7b97 a\uff0cb \u7684\u56e0\u6570\uff0c\u7136\u540e\u5c06\u8fd9\u4fe9\u7684\u56e0\u6570\u5168\u90e8\u4e58\u8d77\u6765</p> nk\u6e38\u6e38\u7684\u56e0\u5b50\u8ba1\u7b97 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\n#include &lt;cmath&gt;\n#include &lt;set&gt;\nusing namespace std;\n\ntypedef long long LL;\nconst int N=1;\n\nset&lt;LL&gt; v1, v2, v3;\n\nint main(){\n    LL a, b; cin&gt;&gt;a&gt;&gt;b;\n\n    for(int i=1; i&lt;=a/i; i++)\n        if(a%i==0){\n            v1.insert(i);\n            if(i*i!=a)\n                v1.insert(a/i);\n        }\n\n    for(int i=1; i&lt;=b/i; i++)\n        if(b%i==0){\n            v2.insert(i);\n            if(i*i!=b)\n                v2.insert(b/i);\n        }\n\n    for(auto i: v1)\n        for(auto j: v2)\n            v3.insert(i), v3.insert(j), v3.insert(i*j);\n\n    cout&lt;&lt;v3.size()&lt;&lt;\"\\n\";\n    for(auto i: v3) cout&lt;&lt;i&lt;&lt;\" \";\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E5%AE%9A%E7%90%86%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/","title":"\u5b9a\u7406\u7ec4\u5408\u6570\u5b66","text":""},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E5%AE%9A%E7%90%86%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/#_1","title":"\u5eb7\u6258\u5c55\u5f00","text":"<p>\u6c42 \u6392\u5217 <code>a</code> \u662f\u7b2c\u51e0\u4e2a\u6392\u5217, \u56e0\u4e3a\u6c42 <code>\u7b2c\u51e0\u4e2a</code>, \u6240\u4ee5\u6700\u540e\u8981 <code>+1</code> C++<pre><code>int a[N]={0,1,2,3,4,5};\nint n=5;\n\nint fact(int x){\n    return x&lt;1?1:x*fact(x-1);\n}\n\nint Cantor_Expansion(){ // \u5eb7\u6258\u5c55\u5f00\n    int res=0;\n    for(int i=1; i&lt;=n; i++){\n        int cnt=0;\n        for(int j=i+1; j&lt;=n; j++)\n            if(a[j]&lt;a[i]) cnt++;\n        res+=cnt*fact(n-i);\n    }\n    return res+1;\n}\n</code></pre></p>"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E5%AE%9A%E7%90%86%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/#_2","title":"\u9006\u5eb7\u6258\u5c55\u5f00","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a <code>k</code>, \u6c42\u51fa <code>\u7b2c k \u4e2a</code> \u6392\u5217</p> C++<pre><code>string i2s(int i){\n    string res;\n    stringstream ss;\n    ss&lt;&lt;i;\n    ss&gt;&gt;res;\n    return res;\n}\n\nint fact(int x){\n    return x&lt;=1?1:x*fact(x-1);\n}\n\nstring getPermutation(int n, int k) {   // \u9006\u5eb7\u6258\u5c55\u5f00\n    vector&lt;int&gt; v;\n    for(int i=1; i&lt;=n; i++) v.push_back(i); // \u53ef\u9009\u6570\n    k--;    // \u5eb7\u6258\u5c55\u5f00\u540e +1, \u662f\u5176\u503c; \u6545\u9006\u5eb7\u6258\u5c55\u5f00\u9700\u8981 -1\n\n    string res;\n    for(int i=1, a, b=k; i&lt;=n; i++){\n        a = b / fact(n-i);  // \u6bd4\u8be5\u4f4d\u5c0f\u5f97\u6570\u6709 a \u4e2a\n        b = b % fact(n-i);  \n        res += i2s(v[a]);   // \u56e0\u6b64\u9009\u62e9\u672a\u9009\u6570\u4e2d\u7684 a+1 \u4e2a\n        v.erase(v.begin()+a);\n    }\n\n    return res;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E6%95%B0%E7%9A%84%E8%BF%90%E7%AE%97/","title":"\u9ad8\u7cbe\u5ea6","text":""},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E6%95%B0%E7%9A%84%E8%BF%90%E7%AE%97/#_2","title":"\u52a0\u6cd5","text":"string\u5b9e\u73b0 O(n) C++<pre><code>string ADD(string A, string B, bool flg = 1) { // \u9ed8\u8ba4 \u6b63\u5e8f(\u6b63\u6574\u6570)\u8f93\u5165 \u6b63\u5e8f\u8f93\u51fa\n    if (flg) reverse(A.begin(), A.end()), reverse(B.begin(), B.end());\n    string res; int add = 0;    \n    for (int i = 0; i &lt; A.size() || i &lt; B.size() || add; i++) {\n        if (i &lt; A.size()) add += A[i] - '0';// \u53d6\u503c\n        if (i &lt; B.size()) add += B[i] - '0';// \u53d6\u7684A,B\u76f8\u540c\u4f4e\u4f4d\n        res += add % 10 + '0';              // +\n        add /= 10;                          // \u8fdb\u4f4d\n    }\n    if (flg) reverse(res.begin(), res.end());\n    return res; // flg == 0 \u5012\u53d9\u8f93\u5165\u8f93\u51fa\u6a21\u5f0f (\u5728\u8fde\u7eed\u8ba1\u7b97\u65f6\u51cf\u5c11reverse\u6b21\u6570,\u4ee5\u63d0\u5347\u6027\u80fd)\n}\n</code></pre> vector\u5b9e\u73b0 O(n) C++<pre><code>vector&lt;int&gt; ADD(vector&lt;int&gt; A, vector&lt;int&gt; B){\n    vector&lt;int&gt; res;\n    int add=0;\n    for(int i=A.size()-1, j=B.size()-1; i&gt;=0 || j&gt;=0 || add; i--, j--){\n        if( i&gt;=0 ) add+=A[i];\n        if( j&gt;=0 ) add+=B[j];\n        res.push_back(add%10);\n        add/=10;\n    }\n    return res;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E6%95%B0%E7%9A%84%E8%BF%90%E7%AE%97/#_3","title":"\u51cf\u6cd5","text":"string\u5b9e\u73b0 O(n) C++<pre><code>string SUB(string A, string B) {  // \u6b63\u5e8f\u8f93\u5165 \u6b63\u5e8f\u8f93\u51fa\n    if(! (A.size()&gt;B.size() || (A.size()==B.size() &amp;&amp; A&gt;=B)) ) \n        return \"-\"+SUB(B, A);   // \u975e A &gt; B \u7684\u60c5\u51b5\n    reverse(A.begin(), A.end()); reverse(B.begin(), B.end());\n    string res;                 // \u4f4e\u4f4d\u5411\u9ad8\u4f4d\u51cf\n    for (int i = 0, t = 0; i &lt; A.size(); i++) {\n        int ai = A[i] - '0';                // \u6362\u6210 int\n        int bi = i&lt;B.size() ? B[i]-'0' : 0; // B\u4f4d\u6570\u4e0d\u591f\n        t = ai - bi - t;                    // \u51cf\u53bb\n        res.push_back((t + 10) % 10 + '0'); // \u4fdd\u8bc1\u662f\u6b63\u6570\n        if (t &lt; 0) t = 1;                   // \u501f\u8d70\u4e86\u4e00\u4f4d\n        else t = 0;\n    }\n    while (res.size() &gt; 1 &amp;&amp; res.back() == '0') res.pop_back();\n    reverse(res.begin(), res.end());\n    return res;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E6%95%B0%E7%9A%84%E8%BF%90%E7%AE%97/#_4","title":"\u4e58\u6cd5","text":"string\u5b9e\u73b0 O(n) C++<pre><code>string MUL(string A, int b) { // \u6b63\u5e8f\u8f93\u5165 \u6b63\u5e8f\u8f93\u51fa\n    reverse(A.begin(), A.end());\n    string res;\n    int x = 0;\n    for (int i = 0; i &lt; A.size() || x; i++) {\n        if (i &lt; A.size()) x += (A[i] - '0') * b;\n        res.push_back(x % 10 + '0');\n        x /= 10;\n    }   // \u53bb\u524d\u5bfc0\n    while (res.size() &gt; 1 &amp;&amp; res.back() == '0') res.pop_back();\n    reverse(res.begin(), res.end());\n    return res;\n}\n</code></pre> \u9012\u5f52 FFT O(nlogn) C++<pre><code>const int N = 1e6 + 10;\nconst double PI = acos(-1);\nconst complex&lt;double&gt; I(0, 1);\n\ncomplex&lt;double&gt; a[N], b[N], tmp[N];\n\nvoid fft(complex&lt;double&gt;* f, int n, int inv) {  // inv = 1 \u7cfb\u6570\u8868\u8fbe\u5f0f -&gt; \u70b9\u503c\u8868\u8fbe\u5f0f\n    if (n == 1) return;\n    for (int i = 0; i &lt; n; i++) tmp[i] = f[i];\n\n    for (int i = 0; i &lt; n; i++)\n        if (i &amp; 1) f[i / 2 + n / 2] = tmp[i];\n        else f[i / 2] = tmp[i];\n\n    complex&lt;double&gt;* g = f, * h = f + n / 2;\n    fft(g, n / 2, inv), fft(h, n / 2, inv);\n\n    complex&lt;double&gt; cur(1, 0), step = exp(I * (2.0 * PI / n * inv));\n\n    for (int k = 0; k &lt; n/2; k++) {\n        tmp[k]          = g[k] + cur * h[k];\n        tmp[k + n / 2]  = g[k] - cur * h[k];\n        cur *= step;\n    }\n    for (int i = 0; i &lt; n; i++) f[i] = tmp[i];\n}\n\nstring MUL_FFT(string x, string y) {\n    int n = x.size(), m = y.size();\n    for (int i = 0; i &lt; n; i++) a[n - 1 - i] = (double)(x[i] - '0');\n    for (int i = 0; i &lt; m; i++) b[m - 1 - i] = (double)(y[i] - '0');\n\n    int len = 1; while (len &lt; n + m - 1) len &lt;&lt;= 1;\n\n    fft(a, len, 1), fft(b, len, 1);\n    for (int i = 0; i &lt; len; i++) a[i] *= b[i];\n    fft(a, len, -1);\n\n    // \u5904\u7406\u8fdb\u4f4d\n    int k = 0;\n    for (int i = 0, t = 0; i &lt;= n + m || t; i++) {\n        t += a[i].real() / len + 0.5;\n        b[k++] = (double)(t % 10);\n        t /= 10;\n    }\n\n    // \u53bb\u9664\u9ad8\u4f4d\u76840\n    while (k &gt; 1 &amp;&amp; !b[k - 1].real()) k--;\n    string res;\n    for (int i = k - 1; i &gt;= 0; i--) res += b[i].real() + '0';\n    return res;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E6%95%B0%E7%9A%84%E8%BF%90%E7%AE%97/#_5","title":"\u9664\u6cd5","text":"string\u5b9e\u73b0 O(n) C++<pre><code>string DIV(string A, int b, int&amp; r) {   // A / b = res ... r \n    string res; // \u6b63\u5e8f(\u6b63\u6574\u6570)\u8f93\u5165 \u6b63\u5e8f\u8f93\u51fa\n    r = 0;\n    for (int i = 0; i &lt; A.size(); i++) {\n        int ai = A[i] - '0';\n        r = r * 10 + ai;            // r\u4ece\u9ad8\u4f4d\u4e0b\u6765,\u6545*10\n        res.push_back(r / b + '0'); // \u6574\u6570\u4f4d\u538b\u5165res\n        r %= b;                     // \u4f59\u6570\n    }\n    while (res.size() &gt; 1 &amp;&amp; res.front() == '0') res.erase(res.begin(), res.begin() + 1);\n    return res; // \u53bb\u9664\u524d\u5bfc 0 \n}\n</code></pre>"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E6%95%B0%E7%9A%84%E8%BF%90%E7%AE%97/#_6","title":"\u7ec3\u4e60","text":"AcWing 3453. \u6574\u6570\u67e5\u8be2 code   &gt; \u52a0\u6cd5  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nstring res;\n\nstring ADD(string &amp;A, string &amp;B, bool flg = 1) { // \u9ed8\u8ba4 \u6b63\u5e8f\u8f93\u5165 \u6b63\u5e8f\u8f93\u51fa\n    if (flg) reverse(A.begin(), A.end()), reverse(B.begin(), B.end());\n    string res; int add = 0;    \n    for (int i = 0; i &lt; A.size() || i &lt; B.size() || add; i++) {\n        if (i &lt; A.size()) add += A[i] - '0';// \u53d6\u503c\n        if (i &lt; B.size()) add += B[i] - '0';// \u53d6\u7684A,B\u76f8\u540c\u4f4e\u4f4d\n        res += add % 10 + '0';              // +\n        add /= 10;                          // \u8fdb\u4f4d\n    }\n    if (flg) reverse(res.begin(), res.end());\n    return res; // flg == 0 \u5012\u53d9\u8f93\u5165\u8f93\u51fa\u6a21\u5f0f (\u5728\u8fde\u7eed\u8ba1\u7b97\u65f6\u51cf\u5c11reverse\u6b21\u6570,\u4ee5\u63d0\u5347\u6027\u80fd)\n}\n\nint main(){\n    string one;\n    while(cin&gt;&gt;one)\n        res = ADD(res, one);\n    cout&lt;&lt;res;\n    return 0;\n}\n</code></pre> AcWing 3448. \u57fa\u672c\u7b97\u672f code   &gt; \u52a0\u6cd5\u7684\u8fdb\u4f4d  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nint ans;\nstring ADD(string &amp;A, string &amp;B, bool flg = 1) { // \u9ed8\u8ba4 \u6b63\u5e8f\u8f93\u5165 \u6b63\u5e8f\u8f93\u51fa\n    if (flg) reverse(A.begin(), A.end()), reverse(B.begin(), B.end());\n    string res; int add = 0;    \n    for (int i = 0; i &lt; A.size() || i &lt; B.size() || add; i++) {\n        if (i &lt; A.size()) add += A[i] - '0';// \u53d6\u503c\n        if (i &lt; B.size()) add += B[i] - '0';// \u53d6\u7684A,B\u76f8\u540c\u4f4e\u4f4d\n        res += add % 10 + '0';              // +\n        if(add &gt;= 10) ans++;        // \u8fdb\u4f4d\u6b21\u6570\u7edf\u8ba1\n        add /= 10;                          // \u8fdb\u4f4d\n    }\n    if (flg) reverse(res.begin(), res.end());\n    return res; // flg == 0 \u5012\u53d9\u8f93\u5165\u8f93\u51fa\u6a21\u5f0f (\u5728\u8fde\u7eed\u8ba1\u7b97\u65f6\u51cf\u5c11reverse\u6b21\u6570,\u4ee5\u63d0\u5347\u6027\u80fd)\n}\n\nvoid solve(string a, string b){\n    ans=0;\n    ADD(a, b);\n    if(ans==0)\n        cout&lt;&lt;\"No\";\n    else\n        cout&lt;&lt;ans;\n    cout&lt;&lt;\" carry operation\";\n    if(ans&lt;=1) cout&lt;&lt;\".\\n\";\n    else cout&lt;&lt;\"s.\\n\";\n}\n\nint main(){\n    string a, b;\n    while(cin&gt;&gt;a&gt;&gt;b, a!=\"0\"||b!=\"0\")\n        solve(a, b);\n    return 0;\n}\n</code></pre> AcWing 3389. N \u7684\u9636\u4e58 code   &gt; \u4e58\u6cd5  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nstring ans[1010]={\"0\", \"1\",};   \n\nstring MUL(string A, int b) { // \u6b63\u5e8f\u8f93\u5165 \u6b63\u5e8f\u8f93\u51fa\n    reverse(A.begin(), A.end());\n    string res;\n    int x = 0;\n    for (int i = 0; i &lt; A.size() || x; i++) {\n        if (i &lt; A.size()) x += (A[i] - '0') * b;\n        res.push_back(x % 10 + '0');\n        x /= 10;\n    }   // \u53bb\u524d\u5bfc0\n    while (res.size() &gt; 1 &amp;&amp; res.back() == '0') res.pop_back();\n    reverse(res.begin(), res.end());\n    return res;\n}\n\nint main(){\n    for(int i=2; i&lt;=1000; i++)\n        ans[i] = MUL(ans[i-1], i);\n    int t;\n    while(cin&gt;&gt;t)\n        cout&lt;&lt;ans[t]&lt;&lt;\"\\n\";\n    return 0;\n}\n</code></pre> AcWing 3482. \u5927\u6570\u8fd0\u7b97 code   &gt; \u542b\u8d1f\u6570\u52a0\u51cf\u4e58  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\n#include &lt;complex&gt;\n#include &lt;cmath&gt;\nusing namespace std;\n\nstring ADD(string A, string B, bool flg = 1) { // \u9ed8\u8ba4 \u6b63\u5e8f(\u6b63\u6574\u6570)\u8f93\u5165 \u6b63\u5e8f\u8f93\u51fa\n    if (flg) reverse(A.begin(), A.end()), reverse(B.begin(), B.end());\n    string res; int add = 0;    \n    for (int i = 0; i &lt; A.size() || i &lt; B.size() || add; i++) {\n        if (i &lt; A.size()) add += A[i] - '0';// \u53d6\u503c\n        if (i &lt; B.size()) add += B[i] - '0';// \u53d6\u7684A,B\u76f8\u540c\u4f4e\u4f4d\n        res += add % 10 + '0';              // +\n        add /= 10;                          // \u8fdb\u4f4d\n    }\n    if (flg) reverse(res.begin(), res.end());\n    return res; // flg == 0 \u5012\u53d9\u8f93\u5165\u8f93\u51fa\u6a21\u5f0f (\u5728\u8fde\u7eed\u8ba1\u7b97\u65f6\u51cf\u5c11reverse\u6b21\u6570,\u4ee5\u63d0\u5347\u6027\u80fd)\n}\n\nstring SUB(string A, string B) {  // \u6b63\u5e8f\u8f93\u5165 \u6b63\u5e8f\u8f93\u51fa\n    if(! (A.size()&gt;B.size() || (A.size()==B.size() &amp;&amp; A&gt;=B)) ) \n        return \"-\"+SUB(B, A);   // \u975e A &gt; B \u7684\u60c5\u51b5\n    reverse(A.begin(), A.end()); reverse(B.begin(), B.end());\n    string res;                 // \u4f4e\u4f4d\u5411\u9ad8\u4f4d\u51cf\n    for (int i = 0, t = 0; i &lt; A.size(); i++) {\n        int ai = A[i] - '0';                // \u6362\u6210 int\n        int bi = i&lt;B.size() ? B[i]-'0' : 0; // B\u4f4d\u6570\u4e0d\u591f\n        t = ai - bi - t;                    // \u51cf\u53bb\n        res.push_back((t + 10) % 10 + '0'); // \u4fdd\u8bc1\u662f\u6b63\u6570\n        if (t &lt; 0) t = 1;                   // \u501f\u8d70\u4e86\u4e00\u4f4d\n        else t = 0;\n    }\n    while (res.size() &gt; 1 &amp;&amp; res.back() == '0') res.pop_back();\n    reverse(res.begin(), res.end());\n    return res;\n}\n\nconst int N = 1e6 + 10;\nconst double PI = acos(-1);\nconst complex&lt;double&gt; I(0, 1);\n\ncomplex&lt;double&gt; a[N], b[N], tmp[N];\n\nvoid fft(complex&lt;double&gt;* f, int n, int inv) {  // inv = 1 \u7cfb\u6570\u8868\u8fbe\u5f0f -&gt; \u70b9\u503c\u8868\u8fbe\u5f0f\n    if (n == 1) return;\n    for (int i = 0; i &lt; n; i++) tmp[i] = f[i];\n\n    for (int i = 0; i &lt; n; i++)\n        if (i &amp; 1) f[i / 2 + n / 2] = tmp[i];\n        else f[i / 2] = tmp[i];\n\n    complex&lt;double&gt;* g = f, * h = f + n / 2;\n    fft(g, n / 2, inv), fft(h, n / 2, inv);\n\n    complex&lt;double&gt; cur(1, 0), step = exp(I * (2.0 * PI / n * inv));\n\n    for (int k = 0; k &lt; n/2; k++) {\n        tmp[k]          = g[k] + cur * h[k];\n        tmp[k + n / 2]  = g[k] - cur * h[k];\n        cur *= step;\n    }\n    for (int i = 0; i &lt; n; i++) f[i] = tmp[i];\n}\n\nstring MUL_FFT(string x, string y) {\n    int n = x.size(), m = y.size();\n    for (int i = 0; i &lt; n; i++) a[n - 1 - i] = (double)(x[i] - '0');\n    for (int i = 0; i &lt; m; i++) b[m - 1 - i] = (double)(y[i] - '0');\n\n    int len = 1; while (len &lt; n + m - 1) len &lt;&lt;= 1;\n\n    fft(a, len, 1), fft(b, len, 1);\n    for (int i = 0; i &lt; len; i++) a[i] *= b[i];\n    fft(a, len, -1);\n\n    // \u5904\u7406\u8fdb\u4f4d\n    int k = 0;\n    for (int i = 0, t = 0; i &lt;= n + m || t; i++) {\n        t += a[i].real() / len + 0.5;\n        b[k++] = (double)(t % 10);\n        t /= 10;\n    }\n\n    // \u53bb\u9664\u9ad8\u4f4d\u76840\n    while (k &gt; 1 &amp;&amp; !b[k - 1].real()) k--;\n    string res;\n    for (int i = k - 1; i &gt;= 0; i--) res += b[i].real() + '0';\n    return res;\n}\n\nint main(){\n    string x, y;\n    cin&gt;&gt;x&gt;&gt;y;\n    if(x[0]!='-' &amp;&amp; y[0]!='-'){\n        cout&lt;&lt;ADD(x, y)&lt;&lt;\"\\n\";\n        cout&lt;&lt;SUB(x, y)&lt;&lt;\"\\n\";\n        cout&lt;&lt;MUL_FFT(x, y)&lt;&lt;\"\\n\";\n    }\n    if(x[0]=='-' &amp;&amp; y[0]=='-'){\n        cout&lt;&lt;\"-\"&lt;&lt;ADD(x.substr(1), y.substr(1))&lt;&lt;\"\\n\";\n        cout&lt;&lt;SUB(y.substr(1), x.substr(1))&lt;&lt;\"\\n\";\n        cout&lt;&lt;MUL_FFT(x.substr(1), y.substr(1))&lt;&lt;\"\\n\";\n    }\n\n    if(x[0]=='-' &amp;&amp; y[0]!='-'){\n        cout&lt;&lt;SUB(y, x.substr(1))&lt;&lt;\"\\n\";\n        cout&lt;&lt;\"-\"&lt;&lt;ADD(x.substr(1), y)&lt;&lt;\"\\n\";\n        cout&lt;&lt;\"-\"&lt;&lt;MUL_FFT(x.substr(1), y)&lt;&lt;\"\\n\";\n    }\n    if(x[0]!='-' &amp;&amp; y[0]=='-'){\n        cout&lt;&lt;SUB(x, y.substr(1))&lt;&lt;\"\\n\";\n        cout&lt;&lt;ADD(x, y.substr(1))&lt;&lt;\"\\n\";\n        cout&lt;&lt;\"-\"&lt;&lt;MUL_FFT(x, y.substr(1))&lt;&lt;\"\\n\";\n    }\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E6%95%B0%E7%9A%84%E8%BF%90%E7%AE%97/#_7","title":"\u5feb\u901f\u5e42","text":"\u9012\u5f52\u5b9e\u73b0 C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nLL qmi(LL a, LL k, LL p){       // a^k == a^(k/2)^2\n    if(k==0) return 1;          // \u6b21\u65b9\u4e3a 0\n    LL res = qmi(a, k&gt;&gt;1, p);   // \u8ba1\u7b97 a^(k/2)\n    if(!(k&amp;1)) return (res%p * res%p) % p; \n    return (res%p * res%p * a) % p; // \u5bf9\u4e8e\u4e0d\u80fd\u9664\u5c3d\u7684, \u8fd8\u9700\u518d *a\n}\n\nvoid solve(){\n    LL a, b, p;\n    cin&gt;&gt;a&gt;&gt;b&gt;&gt;p;\n    cout&lt;&lt;qmi(a, b, p)&lt;&lt;\"\\n\";\n}\n\nint main(){\n    int T; cin&gt;&gt;T; while(T--)\n    solve();\n    return 0;\n}\n</code></pre> \u8fed\u4ee3\u5b9e\u73b0"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E6%95%B0%E7%9A%84%E8%BF%90%E7%AE%97/#_8","title":"\u77e9\u9635\u4e58\u6cd5","text":""},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E6%95%B0%E7%9A%84%E8%BF%90%E7%AE%97/#_9","title":"\u8fdb\u5236\u8f6c\u6362","text":""},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E6%95%B0%E7%9A%84%E8%BF%90%E7%AE%97/#10","title":"\u8f6c 10 \u8fdb\u5236","text":"<p>\u6309\u6743\u5c55\u5f00\u6c42\u52a0 <code>(1011) 2 = 1*2^3 + 0*2^2 + 1*2^1 + 1*2^0</code> <code>(abcd) 16 = 10*16^3 + 11*16^2 + 12*16^1 + 13*16^0</code> </p> sstream\u7b80\u5355\u5b9e\u73b0 C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;sstream&gt;\nusing namespace std;\n\nstringstream ss;\nstring s;\nint num;\n\nint main() {\n    cin &gt;&gt; s;\n    ss &lt;&lt; hex &lt;&lt; s; // \u5c06 16 \u8fdb\u5236\u8f93\u5165\u5230 ss\n    ss &gt;&gt; num;      // \u5c06 ss \u8f93\u51fa\u5230 num\n    cout &lt;&lt; num;\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E6%95%B0%E7%9A%84%E8%BF%90%E7%AE%97/#10_1","title":"\u8f6c \u975e10 \u8fdb\u5236","text":"<p>\u9664 x \u53d6\u4f59 <code>(20) 10 : (10100) 2</code> <code>20 / 2 = 10 ... 0</code> <code>10 / 2 = 5  ... 0</code> <code>5 / 2 = 2  ... 1</code> <code>2 / 2 = 1  ... 0</code> <code>1 / 2 = 0  ... 1</code></p> <p><code>(20) 10 : (24) 8</code> <code>20 / 8 = 2 ... 4</code> <code>2 /  8 = 0 ... 2</code></p>"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E6%95%B0%E7%9A%84%E8%BF%90%E7%AE%97/#_10","title":"\u4efb\u610f\u8fdb\u5236\u8f6c\u4efb\u610f\u8fdb\u5236","text":"(x)a -&gt; (x)10 C++<pre><code>string x_10(string x, int a){\n    string res=\"0\", p=\"1\"; // \u5c06 a \u8fdb\u5236\u4e0b\u7684 x \u8f6c\u6362\u4e3a 10 \u8fdb\u5236\n    for(int i=x.size()-1; i&gt;=0; i--){\n        int t; // \u5224\u65ad\u5f53\u524d\u4f4d\u6570\u5b57\u662f\u591a\u5c11\n        if(x[i]&gt;='0' &amp;&amp; x[i]&lt;='9') t=x[i]-'0';\n        if(x[i]&gt;='A' &amp;&amp; x[i]&lt;='Z') t=x[i]-'A'+10;\n        if(x[i]&gt;='a' &amp;&amp; x[i]&lt;='z') t=x[i]-'a'+10;\n        res=ADD(res, MUL(p, t));//res+=t*p; // t*(a^0, a^1, a^2)\n        p=MUL(p, a); //p*=a; // (a^0, a^1, a^2)\n    }\n    return res;\n}\n</code></pre> (x)10 -&gt; (x)a C++<pre><code>string x_a(string x, int a){\n    if(x==\"0\") return \"0\";\n    string res; // \u5c06 10 \u8fdb\u5236\u4e0b\u7684 x \u8f6c\u6362\u4e3a a \u8fdb\u5236\n    while(x!=\"0\"){\n        int r;\n        x=DIV(x, a, r);\n        if( r&gt;=0 &amp;&amp; r&lt;=9 ) r+='0';\n        else r+='A'-10;\n        res+=r;\n    }\n    reverse(res.begin(), res.end());\n    return res;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E6%95%B0%E7%9A%84%E8%BF%90%E7%AE%97/#_11","title":"\u7ec3\u4e60","text":"AcWing 3373. \u8fdb\u5236\u8f6c\u6362 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nstring DIV(string&amp; A, int b, int&amp; r) {  // A / b = res ... r \n    string res; // \u6b63\u5e8f(\u6b63\u6574\u6570)\u8f93\u5165 \u6b63\u5e8f\u8f93\u51fa\n    r = 0;\n    for (int i = 0; i &lt; A.size(); i++) {\n        int ai = A[i] - '0';\n        r = r * 10 + ai;            // r\u4ece\u9ad8\u4f4d\u4e0b\u6765,\u6545*10\n        res.push_back(r / b + '0'); // \u6574\u6570\u4f4d\u538b\u5165res\n        r %= b;                     // \u4f59\u6570\n    }\n    while (res.size() &gt; 1 &amp;&amp; res.front() == '0') res.erase(res.begin(), res.begin() + 1);\n    return res; // \u53bb\u9664\u524d\u5bfc 0 \n}\n\nstring x_a(string x, int a){\n    if(x==\"0\") return \"0\";\n    string res; // \u5c06 10 \u8fdb\u5236\u4e0b\u7684 x \u8f6c\u6362\u4e3a a \u8fdb\u5236\n    while(x!=\"0\"){\n        int r;\n        x=DIV(x, a, r);\n        if( r&gt;=0 &amp;&amp; r&lt;=9 ) r+='0';\n        else r+='A'-10;\n        res+=r;\n    }\n    reverse(res.begin(), res.end());\n    return res;\n}\n\nint main(){\n    string s;\n    while(cin&gt;&gt;s) cout&lt;&lt;x_a(s, 2)&lt;&lt;\"\\n\";\n    return 0;\n}\n</code></pre> AcWing 3374. \u8fdb\u5236\u8f6c\u63622 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nstring ADD(string A, string B, bool flg = 1) { // \u9ed8\u8ba4 \u6b63\u5e8f(\u6b63\u6574\u6570)\u8f93\u5165 \u6b63\u5e8f\u8f93\u51fa\n    if (flg) reverse(A.begin(), A.end()), reverse(B.begin(), B.end());\n    string res; int add = 0;    \n    for (int i = 0; i &lt; A.size() || i &lt; B.size() || add; i++) {\n        if (i &lt; A.size()) add += A[i] - '0';// \u53d6\u503c\n        if (i &lt; B.size()) add += B[i] - '0';// \u53d6\u7684A,B\u76f8\u540c\u4f4e\u4f4d\n        res += add % 10 + '0';              // +\n        add /= 10;                          // \u8fdb\u4f4d\n    }\n    if (flg) reverse(res.begin(), res.end());\n    return res; // flg == 0 \u5012\u53d9\u8f93\u5165\u8f93\u51fa\u6a21\u5f0f (\u5728\u8fde\u7eed\u8ba1\u7b97\u65f6\u51cf\u5c11reverse\u6b21\u6570,\u4ee5\u63d0\u5347\u6027\u80fd)\n}\n\nstring MUL(string A, int b) { // \u6b63\u5e8f\u8f93\u5165 \u6b63\u5e8f\u8f93\u51fa\n    reverse(A.begin(), A.end());\n    string res;\n    int x = 0;\n    for (int i = 0; i &lt; A.size() || x; i++) {\n        if (i &lt; A.size()) x += (A[i] - '0') * b;\n        res.push_back(x % 10 + '0');\n        x /= 10;\n    }   // \u53bb\u524d\u5bfc0\n    while (res.size() &gt; 1 &amp;&amp; res.back() == '0') res.pop_back();\n    reverse(res.begin(), res.end());\n    return res;\n}\n\nstring DIV(string A, int b, int&amp; r) {   // A / b = res ... r \n    string res; // \u6b63\u5e8f(\u6b63\u6574\u6570)\u8f93\u5165 \u6b63\u5e8f\u8f93\u51fa\n    r = 0;\n    for (int i = 0; i &lt; A.size(); i++) {\n        int ai = A[i] - '0';\n        r = r * 10 + ai;            // r\u4ece\u9ad8\u4f4d\u4e0b\u6765,\u6545*10\n        res.push_back(r / b + '0'); // \u6574\u6570\u4f4d\u538b\u5165res\n        r %= b;                     // \u4f59\u6570\n    }\n    while (res.size() &gt; 1 &amp;&amp; res.front() == '0') res.erase(res.begin(), res.begin() + 1);\n    return res; // \u53bb\u9664\u524d\u5bfc 0 \n}\n\nstring x_10(string x, int a){\n    string res=\"0\", p=\"1\"; // \u5c06 a \u8fdb\u5236\u4e0b\u7684 x \u8f6c\u6362\u4e3a 10 \u8fdb\u5236\n    for(int i=x.size()-1; i&gt;=0; i--){\n        int t; // \u5224\u65ad\u5f53\u524d\u4f4d\u6570\u5b57\u662f\u591a\u5c11\n        if(x[i]&gt;='0' &amp;&amp; x[i]&lt;='9') t=x[i]-'0';\n        if(x[i]&gt;='A' &amp;&amp; x[i]&lt;='Z') t=x[i]-'A'+10;\n        if(x[i]&gt;='a' &amp;&amp; x[i]&lt;='z') t=x[i]-'a'+10;\n        res=ADD(res, MUL(p, t));//res+=t*p; // t*(a^0, a^1, a^2)\n        p=MUL(p, a); //p*=a; // (a^0, a^1, a^2)\n    }\n    return res;\n}\n\nstring x_a(string x, int a){\n    if(x==\"0\") return \"0\";\n    string res; // \u5c06 10 \u8fdb\u5236\u4e0b\u7684 x \u8f6c\u6362\u4e3a a \u8fdb\u5236\n    while(x!=\"0\"){\n        int r;\n        x=DIV(x, a, r);\n        if( r&gt;=0 &amp;&amp; r&lt;=9 ) r+='0';\n        else r+='A'-10;\n        res+=r;\n    }\n    reverse(res.begin(), res.end());\n    return res;\n}\n\nint main(){\n    int a, b; string s;\n    cin&gt;&gt;a&gt;&gt;b&gt;&gt;s;\n    s = x_a(x_10(s, a), b);\n    for(auto i: s){\n        if(i&gt;='A' &amp;&amp; i&lt;='Z') i+=32;\n        cout&lt;&lt;i;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E6%95%B0%E7%9A%84%E8%BF%90%E7%AE%97/#_12","title":"\u4f4d\u8fd0\u7b97","text":"C++<pre><code>int bal1(int n) { // \u751f\u6210 n \u4f4d\u5168 1\n    return (1 &lt;&lt; n) - 1;\n}\n</code></pre> C++<pre><code>bool bis1(int a, int i) { // \u5224\u65ad a \u7684\u7b2c i \u4f4d\u662f\u4e0d\u662f 1    \n    return (1 &lt;&lt; (i - 1)) &amp; a;\n}\n</code></pre> C++<pre><code>void b21(int&amp; a, int i) { // \u4fee\u6539 a \u7684\u7b2c i \u4f4d\u4e3a 1\n    a |= 1 &lt;&lt; (i - 1);\n}\n</code></pre> C++<pre><code>void b20(int&amp; a, int i) { // \u4fee\u6539 a \u7684\u7b2c i \u4f4d\u4e3a 0\n    a &amp;= ~(1 &lt;&lt; (i - 1));\n}\n</code></pre>"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E8%B4%A8%E6%95%B0/","title":"\u7d20\u6570\u5b9a\u7406","text":"<ol> <li>\u5982\u679cn\u4e0d\u662f\u7d20\u6570, \u5219n\u81f3\u5c11\u6709\u4e00\u4e2a( 1, sqrt(n) ]\u8303\u56f4\u5185\u7684\u7684\u56e0\u5b50</li> <li>\u5982\u679cn\u4e0d\u662f\u7d20\u6570\uff0c\u5219n\u81f3\u5c11\u6709\u4e00\u4e2a(1, sqrt(n) ]\u8303\u56f4\u5185\u7684\u7d20\u6570\u56e0\u5b50</li> <li>\u5b9a\u4e49f(n)\u4e3a\u4e0d\u5927\u4e8en\u7684\u7d20\u6570\u7684\u4e2a\u6570, \u5219 f(n) \u8fd1\u4f3c\u7b49\u4e8e n/ln(n) (ln\u4e3a\u81ea\u7136\u5bf9\u6570)   \u5373 <code>f(n) = n/(log(n)-1)</code></li> </ol>"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E8%B4%A8%E6%95%B0/#_2","title":"\u5224\u65ad\u8d28\u6570","text":""},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E8%B4%A8%E6%95%B0/#_3","title":"\u66b4\u529b","text":"<p>\u7531\u8d28\u6570\u7684\u5b9a\u4e49: \u5728\u5927\u4e8e1\u7684\u81ea\u7136\u6570\u4e2d, \u9664\u4e861\u548c\u5b83\u672c\u8eab\u4ee5\u5916\u4e0d\u518d\u6709\u5176\u4ed6\u56e0\u6570\u7684\u81ea\u7136\u6570\u3002 \u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u901a\u8fc7\u8bd5\u9664\u6cd5\u6765\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u662f\u7d20\u6570 \u626b\u63cf (1, n) \u4e2d\u7684\u6240\u6709\u6570, \u5224\u65ad\u6709\u65e0\u7b2c 3 \u4e2a n \u7684\u56e0\u6570</p> <p>\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u4f18\u5316, \u4ec5\u679a\u4e3e [2, sqrt(n)] \u4e2d\u7684\u6570\uff0c\u6765\u5224\u65ad n \u662f\u5426\u662f\u7d20\u6570</p> \u66b4\u529b O(sqrt(n)) C++<pre><code>bool is_prime(int x){\n    if (x&lt;2) return 0;          // \u7d20\u6570\u4e25\u683c\u5927\u4e8e 1\n    for(int i=2; i&lt;=x/i; i++)\n        if(x%i==0) return 0;    // \u51fa\u73b0\u7b2c\u4e09\u4e2a\u56e0\u6570\n    return 1;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E8%B4%A8%E6%95%B0/#trivial","title":"trivial\u7684\u7d20\u6570\u5206\u5e03\u7279\u5f81","text":"<p>666 <code>&gt;=5</code>\u7684\u8d28\u6570, \u4e00\u5b9a\u548c 6 \u7684\u500d\u6570\u76f8\u90bb \u5bf9\u4e8e\u8d28\u6570p, (6n+1 == p)</p> \u516d\u500d\u539f\u7406 O(sqrt(n)/6) C++<pre><code>bool is_prime(LL x){\n    if(x==2 || x==3   || x==5   ) return 1;\n    if(x&lt;2  ||(x%6!=1 &amp;&amp; x%6!=5)) return 0; // \u4e0d\u4e0e6\u7684\u500d\u6570\u76f8\u90bb \n    for(LL i=5; i&lt;=x/i; i+=6)  // \u4e0e6\u76f8\u90bb, \u4f46\u53c8\u6709\u4e86\u56e0\u5b50 \n        if(x%i==0 || x%(i+2)==0) return 0;\n    return 1;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E8%B4%A8%E6%95%B0/#_4","title":"\u7b5b\u6cd5","text":""},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E8%B4%A8%E6%95%B0/#_5","title":"\u57c3\u5f0f\u7b5b\u6cd5","text":"<p>\u5bf9\u4e8e\u4efb\u610f\u6574\u6570 x, \u5176\u6574\u6570\u500d\u6570 (2x, 3x, ...) \u90fd\u4e0d\u662f\u7d20\u6570 \u56e0\u6b64, \u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u500d\u6570\u505a\u4e0a\u6807\u8bb0, \u5373\u7b5b\u6389 <code>st[k*x]==1</code> \u987a\u5e8f\u8fdb\u884c\u57c3\u7b5b, \u82e5\u53d1\u73b0 <code>st[x]==0</code>, \u5219\u8bf4\u660e x \u662f\u7d20\u6570</p> <p>\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u4f18\u5316, \u4ece x*x \u5f00\u59cb\u7b5b</p> <p>\u5f53\u6211\u4eec\u7b5b\u5230 5 \u7684\u65f6\u5019,  \u5df2\u7ecf\u7b5b\u8fc7 2x5, 3x5, 4x5 \u56e0\u6b64, \u4e0d\u5fc5\u53bb\u7b97 5x2, 5x3, 5x4, \u53ef\u76f4\u63a5\u8ba1\u7b975x5, 5x6 ...   </p> \u57c3\u5f0f\u7b5b O(log(log(n))) C++<pre><code>bool st[N]={1, 1};  // 0,1\u4e0d\u662f\u7d20\u6570\nint primes[N];\n\nvoid make_primes(int n){// \u751f\u6210 n \u4ee5\u5185\u7684\u7d20\u6570\n    for(int i=2; i&lt;=n; i++){\n        if(!st[i]) primes[++(*primes)]=i;  // \u767b\u8bb0\u7d20\u6570\n        else continue;  // \u88ab\u7b5b\u8fc7\n        for(int j=i; j&lt;=n/i; j++)\n            st[j*i]=1;\n    }\n}\n</code></pre>"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E8%B4%A8%E6%95%B0/#_6","title":"\u6b27\u62c9(\u7ebf)\u7b5b\u6cd5","text":"<p>\u6211\u4eec\u5e0c\u671b\u4e00\u4e2a\u5408\u6570\u53ea\u88ab\u6807\u8bb0\u4e00\u6b21, \u4e8e\u662f\u6b27\u5f0f\u7b5b\u8ba9\u6bcf\u4e2a\u5408\u6570\u53ea\u80fd\u88ab\u5176\u6700\u5c0f\u8d28\u56e0\u5b50\u7b5b\u9009\u4e00\u6b21</p> \u7ebf\u7b5b O(n) C++<pre><code>bool st[N]={1, 1};  // 0,1\u4e0d\u662f\u7d20\u6570\nint primes[N];\n\nvoid make_primes(int n){// \u751f\u6210 n \u4ee5\u5185\u7684\u7d20\u6570\n    for(int i=2; i&lt;=n; i++){\n        if(!st[i]) primes[++(*primes)]=i;   // \u767b\u8bb0\u7d20\u6570\n        for(int j=1; j&lt;=(*primes) &amp;&amp; primes[j]&lt;=n/i; j++){\n            st[primes[j]*i]=1;              // \u7b5b\u6389\n            if(i%primes[j]==0) break;       // i \u662f primes[j] \u7684\u500d\u6570\n        }   // \u5982\u679c i \u662f primes[j] \u7684\u500d\u6570, primes[j] \u5c31\u662f\u5176\u6700\u5c0f\u8d28\u56e0\u5b50\n    }       // \u56e0\u6b64, \u6211\u4eec\u4e0d\u5fc5\u7528\u5176\u4ed6\u8d28\u56e0\u5b50\u53bb\u7b5b\u4e86\n}\n</code></pre> Luogu P3912 \u7d20\u6570\u4e2a\u6570 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1e8+10;\n\nbool st[N];\nint primes[10000000];\n\nvoid make_primes(int n){// \u751f\u6210 n \u4ee5\u5185\u7684\u7d20\u6570\n    st[1]=1; \n    for(int i=2; i&lt;=n; i++){\n        if(!st[i]) primes[++(*primes)]=i;   // \u767b\u8bb0\u7d20\u6570\n        for(int j=1; j&lt;=(*primes) &amp;&amp; primes[j]&lt;=n/i; j++){\n            st[primes[j]*i]=1;              // \u7b5b\u6389\n            if(i%primes[j]==0) break;       // i \u662f primes[j] \u7684\u500d\u6570\n        }   // \u5982\u679c i \u662f primes[j] \u7684\u500d\u6570, primes[j] \u5c31\u662f\u5176\u6700\u5c0f\u8d28\u56e0\u5b50\n    }       // \u56e0\u6b64, \u6211\u4eec\u4e0d\u5fc5\u7528\u5176\u4ed6\u8d28\u56e0\u5b50\u53bb\u7b5b\u4e86\n}\n\nint main(){\n    int n; cin&gt;&gt;n;\n    make_primes(n);\n    cout&lt;&lt;(*primes);\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E8%B4%A8%E6%95%B0/#_7","title":"\u533a\u95f4\u7b5b","text":"<p>\u5f53\u6211\u4eec\u60f3\u83b7\u53d6\u4e00\u6bb5\u533a\u95f4\u7684\u7d20\u6570\u4fe1\u606f, \u8fd9\u4e2a\u533a\u95f4\u4e0d\u5927, \u90a3\u4e48\u5c31\u53ef\u4ee5\u7528\u533a\u95f4\u7b5b \u56de\u987e\u4e00\u4e0b\u57c3\u5f0f\u7b5b, \u5728\u7b5b\u65b0\u7684\u6570\u65f6, \u662f\u4ece p^2 \u5f00\u59cb\u7b5b \u56e0\u6b64\u5728\u7b5b l-r \u533a\u95f4\u5185\u7684\u6570\u65f6, \u6211\u4eec\u53ef\u4ee5\u5148\u751f\u6210 sqrt(r) \u8303\u56f4\u7684\u7d20\u6570 \u518d\u7528\u8fd9\u4e9b\u7d20\u6570\u4f9d\u6b21\u7b5b l-r \u533a\u95f4</p> \u533a\u95f4\u7b5b C++<pre><code>bool st[N] = { 1, 1 };  // 0,1\u4e0d\u662f\u7d20\u6570\nvector&lt;int&gt; primes;     // \u7d20\u6570\u96c6\n\nvoid make_primes(int n) {\n    for(int i=2; i&lt;=n; i++) {\n        if(!st[i]) primes.push_back(i);\n        for(auto p: primes){    // \u7528\u8d28\u6570\u53bb\u7b5b\n            if(p&gt;n/i) break;    // \u8d85\u8fc7\u4e0a\u754c n \u6ca1\u610f\u4e49\n            st[p*i]=1;          // \u7b5b\u6389\n            if(i%p==0) break;   // \u6700\u5c0f\u8d28\u56e0\u5b50\n        }\n    }\n}\n\nvoid make_r_primes(LL L, LL R) {// L, R\u533a\u95f4 \u67d0\u7d20\u6570  st[i-L]\n    make_primes(sqrt(R));       // \u5148\u6c42\u51fa sqrt(r) \u8303\u56f4\u5185\u7684\u7d20\u6570\n    memset(st, 0, sizeof st);   // \u590d\u7528st, \u53d6\u51fa primes\n    if(L==1) st[0]=1;           // \u5c06 i*p \u5b9a\u4f4d\u5230 l-r \u533a\u95f4 \n    for(auto p : primes)        // l \u8fb9\u754c\u9700\u8981\u5411\u4e0a\u53d6\u6574\n    for(LL i = max(2LL, (L+p-1)/p); i &lt;= R/p; i++)  \n        st[(i * p) - L] = 1;    // \u56e0\u4e3a p \u662f\u8d28\u6570, \u6240\u4ee5i\u5fc5\u987b &gt;=2\n}\n</code></pre> Luogu P1835 \u7d20\u6570\u5bc6\u5ea6 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;cmath&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N = 1e6 + 10;\n\nbool st[N] = { 1, 1 };  // 0,1\u4e0d\u662f\u7d20\u6570\nvector&lt;int&gt; primes;     // \u7d20\u6570\u96c6\nLL l, r, ans;\n\nvoid make_primes(int n) {\n    for(int i=2; i&lt;=n; i++) {\n        if(!st[i]) primes.push_back(i);\n        for(auto p: primes){    // \u7528\u8d28\u6570\u53bb\u7b5b\n            if(p&gt;n/i) break;    // \u8d85\u8fc7\u4e0a\u754c n \u6ca1\u610f\u4e49\n            st[p*i]=1;          // \u7b5b\u6389\n            if(i%p==0) break;   // \u6700\u5c0f\u8d28\u56e0\u5b50\n        }\n    }\n}\n\nvoid make_r_primes(LL L, LL R) {// L, R\u533a\u95f4 \u67d0\u7d20\u6570  st[i-L]\n    make_primes(sqrt(R));       // \u5148\u6c42\u51fa sqrt(r) \u8303\u56f4\u5185\u7684\u7d20\u6570\n    memset(st, 0, sizeof st);   // \u590d\u7528st, \u53d6\u51fa primes\n    if(L==1) st[0]=1;           // \u5c06 i*p \u5b9a\u4f4d\u5230 l-r \u533a\u95f4 \n    for(auto p : primes)        // l \u8fb9\u754c\u9700\u8981\u5411\u4e0a\u53d6\u6574\n    for(LL i = max(2LL, (L+p-1)/p); i &lt;= R/p; i++)  \n        st[(i * p) - L] = 1;    // \u56e0\u4e3a p \u662f\u8d28\u6570, \u6240\u4ee5i\u5fc5\u987b &gt;=2\n}\n\nint main() {\n    cin&gt;&gt;l&gt;&gt;r;\n    make_r_primes(l, r);\n    for (LL i=l; i&lt;=r; i++)\n        if (!st[i-l]) ans++;\n    cout&lt;&lt;ans;\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/5%20%E6%95%B0%E5%AD%A6/%E8%B4%A8%E6%95%B0/#_8","title":"\u7ec3\u4e60","text":""},{"location":"src/more/old/algorithm/6%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B6%E6%9F%A5%E9%9B%86/","title":"\u5e76\u67e5\u96c6","text":""},{"location":"src/more/old/algorithm/6%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B6%E6%9F%A5%E9%9B%86/#_1","title":"\u6734\u7d20\u5e76\u67e5\u96c6","text":"C++<pre><code>int find(int x){\n    if(p[x] != x) p[x] = find(p[x]);\n    return p[x]; \n}\n// \u5408\u5e76\np[find(a)] = find(b);\n</code></pre> Luogu P1551 \u4eb2\u621a code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=5e3+10;\n\nint p[N];\nint n, m, q;\n\nint find(int x){\n    if(p[x] != x) p[x] = find(p[x]);\n    return p[x];\n}\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;q;\n    for(int i=1; i&lt;=n; i++) p[i] = i;\n    for(int i=1; i&lt;=m; i++){\n        int a, b; scanf(\"%d%d\", &amp;a, &amp;b);\n        p[ find(b) ] = find(a);\n    }\n    for(int i=1; i&lt;=q; i++){\n        int a, b; scanf(\"%d%d\", &amp;a, &amp;b);\n        p[a] = find(a), p[b] = find(b);\n        cout&lt;&lt; ((p[a] == p[b]) ? \"Yes\" : \"No\") &lt;&lt; \"\\n\";\n    }\n\n    return 0;\n}\n</code></pre> Luogu P1536 \u6751\u6751\u901a code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1e3+10;\n\nint p[N];\nint n, m;\n\nint find(int x){\n    if(p[x] != x) p[x] = find(p[x]);\n    return p[x];\n}\n\nvoid solve(){\n    for(int i=1; i&lt;=n; i++) p[i]=i;\n    *p = 0;\n\n    for(int i=1; i&lt;=m; i++){\n        int a, b; scanf(\"%d%d\", &amp;a, &amp;b);\n        p[a] = find(a), p[b] = find(b);\n        if(p[a] != p[b])\n            p[find(a)] = find(b);\n    }\n\n    for(int i=1; i&lt;=n; i++)\n        if(p[i] == i)  // \u7edf\u8ba1\u5b64\u5c9b\n            p[0]++;\n\n    cout&lt;&lt;p[0]-1&lt;&lt;\"\\n\";\n}\n\nint main(){\n    while(cin&gt;&gt;n , n){\n        cin&gt;&gt;m;\n        solve();\n    }\n    return 0;\n}\n</code></pre> AcWing 4266. \u65e0\u7ebf\u7f51\u7edc code C++<pre><code>#define fst first\n#define sed second\n#include &lt;iostream&gt;\n#include &lt;cmath&gt;\nusing namespace std;\n\ntypedef pair&lt;int, int&gt; PII;\n\nconst int N=1e3+10;\n\nint p[N];\nPII a[N];   // \u5750\u6807\nint n, d;\n\nint find(int x){\n    if(p[x] != x) p[x] = find(p[x]);\n    return p[x];\n}\n\nbool ck(int i, int j){\n    if( pow(abs(a[i].fst-a[j].fst),2) + pow(abs(a[i].sed-a[j].sed),2 ) &lt;= d*d)\n        return 1;\n    return 0;\n}\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;d;\n    for(int i=1; i&lt;=n; i++)\n        scanf(\"%d%d\", &amp;a[i].fst, &amp;a[i].sed);\n\n    char c; while(cin&gt;&gt;c){\n        int a, b;\n        if(c=='O'){\n            scanf(\"%d\", &amp;a);\n            p[a] = a;   // \u5f00\u673a\n\n            for(int i=1; i&lt;=n; i++)\n                if(p[i]!=0 &amp;&amp; ck(i, a))\n                    p[find(i)] = a;\n        }    \n        else{\n            scanf(\"%d%d\", &amp;a, &amp;b);\n            if(p[a] &amp;&amp; p[b] &amp;&amp; find(b) == find(a))\n                cout&lt;&lt;\"SUCCESS\\n\";\n            else\n                cout&lt;&lt;\"FAIL\\n\";\n        }\n        //for(int i=1; i&lt;=n; i++) cout&lt;&lt;p[i]&lt;&lt;\" \"; cout&lt;&lt;\"\\n\";\n    }\n    return 0;\n}\n</code></pre> AcWing 4267. \u53ef\u7591\u4eba\u5458 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=3e4+10;\n\nint p[N];   // \u6bcf\u4e2a\u5b66\u751f\u7684\u793e\u56e2\nint n, m;\n\nint find(int x){\n    if(p[x] != x) p[x] = find(p[x]);\n    return p[x];\n}\n\nvoid solve(){\n    for(int i=0; i&lt;n; i++) p[i] = i;\n    for(int i=1; i&lt;=m; i++){\n        int k, x, y; scanf(\"%d%d\", &amp;k, &amp;x);\n        for(int i=2; i&lt;=k; i++) \n            scanf(\"%d\", &amp;y), p[find(x)] = find(y);  // \u4e0e\u540e\u9762\u5408\u5e76\n    }\n    int root = find(0), res=0;\n    for(int i=0; i&lt;n; i++)\n        if(find(i) == root) res++;\n    cout&lt;&lt;res&lt;&lt;\"\\n\";\n}\n\nint main(){\n    while(cin&gt;&gt;n&gt;&gt;m, n) solve();\n    return 0;\n}\n</code></pre> AcWing 4285. \u591a\u5c11\u5f20\u684c\u5b50 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;set&gt;\nusing namespace std;\n\nconst int N=1e3+10;\n\nint p[N];\nint n, m;\n\nint find(int x){\n    if(x != p[x]) p[x] = find(p[x]);\n    return p[x];\n}\n\nvoid solve(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=n; i++) p[i]=i;\n    for(int i=1; i&lt;=m; i++){\n        int a, b; scanf(\"%d%d\", &amp;a, &amp;b);\n        p[find(a)] = find(b);\n    }\n    set&lt;int&gt; cnt;\n    for(int i=1; i&lt;=n; i++)\n        cnt.insert(find(i));\n    cout&lt;&lt;cnt.size()&lt;&lt;\"\\n\";\n}\n\nint main(){\n    int T; cin&gt;&gt;T;\n    while(T--) solve();\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/6%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B6%E6%9F%A5%E9%9B%86/#size","title":"\u7ef4\u62a4size\u7684\u5e76\u67e5\u96c6","text":"C++<pre><code>void union(int a, int b){\n    if(find(a) != find(b))  // \u4e0d\u53ef\u91cd\u590d+, \u6ce8\u610f\u987a\u5e8f\n        cnt[find(a)] += cnt[find(b)],   \n        p[find(b)] = find(a);\n}\n</code></pre>"},{"location":"src/more/old/algorithm/6%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B6%E6%9F%A5%E9%9B%86/#_2","title":"\u7ef4\u62a4\u5230\u7956\u5b97\u8282\u70b9\u8ddd\u79bb\u7684\u5e76\u67e5\u96c6","text":""},{"location":"src/more/old/algorithm/6%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88/","title":"\u6808","text":"ybt 1357\uff1a\u8f66\u53a2\u8c03\u5ea6(train) code  **\u5927\u610f**  \u5224\u65ad\u51fa\u6808\u987a\u5e8f\u662f\u5426\u5408\u6cd5  **\u601d\u8def**  1. \u5224\u65ad\u5f53\u524d\u6808\u9876\u5143\u7d20\u80fd\u5426\u51fa\u6808\u5373\u53ef 2. \u80fd\u5426\u51fa\u6808\u53d6\u51b3\u7ed9\u5b9a\u7684\u51fa\u6808\u987a\u5e8f  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;stack&gt;\nusing namespace std;\n\nconst int N = 1e3 + 10;\n\nint B[N];\nstack&lt;int&gt; C;\n\nint main() {\n    int n; cin &gt;&gt; n;\n    for (int i = 1; i &lt;= n; i++) scanf(\"%d\", B + i);\n\n    for (int i = 1, a = 1; a &lt;= n; a++) {\n        C.push(a);                              // \u6bcf\u6b21\u5f80\u91cc\u9762\u585e\u4e00\u4e2a\n        while (C.size() &amp;&amp; B[i] == C.top()) {   // \u5f53\u524d\u6808\u9876\u80fd\u5426\u51fa\u6808\n            C.pop();\n            i++;                                // \u6301\u7eed\u5224\u65ad\n        }\n    }\n\n    if (C.size() == 0) cout &lt;&lt; \"YES\";\n    else cout &lt;&lt; \"NO\";\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/6%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88/#_2","title":"\u62ec\u53f7\u5339\u914d","text":"ybt 1353\uff1a\u8868\u8fbe\u5f0f\u62ec\u53f7\u5339\u914d(stack) code  **\u5927\u610f**  \u5224\u65ad\u4e00\u7ec4\u62ec\u53f7\u662f\u5426\u5339\u914d  **\u601d\u8def**  1. \u6bcf\u4e00\u4e2a\u53f3\u62ec\u53f7\uff0c\u5728\u5176\u4e4b\u524d\u5fc5\u5b9a\u5148\u51fa\u73b0\u4e00\u4e2a\u5de6\u62ec\u53f7 2. \u5982\u679c\u6ca1\u6709\u5de6\u62ec\u53f7\uff0c\u5219\u8bf4\u660e\u5339\u914d\u5931\u8d25\uff08\u6b64\u65f6\uff0c\u5de6\u62ec\u53f7\u5c11\u4e86\uff09 3. \u5982\u679c\u7ed3\u675f\u65f6\uff0c\u8fd8\u6709\u591a\u4f59\u5de6\u62ec\u53f7\uff0c\u5219\u8bf4\u660e\u5339\u914d\u5931\u8d25\uff08\u5de6\u62ec\u53f7\u591a\u4e86\uff09  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\nusing namespace std;\n\nconst int N = 1e5+10;\n\nstring s;\nint l;\n\nint main(){\n    cin &gt;&gt; s;\n    for(auto c: s)\n        if(c == '(') l++;\n        else if(c == ')'){\n            l--;\n            if(l &lt; 0) break;\n        }\n\n    if(l==0) cout &lt;&lt; \"YES\";\n    else cout &lt;&lt; \"NO\";\n\n    return 0;\n}\n</code></pre> ybt 1354\uff1a\u62ec\u5f27\u5339\u914d\u68c0\u9a8c code  **\u5927\u610f**  \u5224\u65ad\u4e24\u7ec4\u62ec\u53f7\u662f\u5426\u5408\u6cd5  **\u601d\u8def**  1. \u4ece\u91cc\u5230\u5916\uff0c\u6240\u6709\u7684\u914d\u5bf9\u62ec\u53f7\u53ef\u4ee5\u88ab\u6d88\u9664 2. \u76f8\u8f83\u4e8e\u4e0a\u4e00\u9898\uff0c\u9700\u8981\u591a\u8003\u8651\u4e00\u7ec4\u62ec\u53f7  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;stack&gt;\nusing namespace std;\n\nconst int N=1;\n\nstring s;\n\nstack&lt;char&gt; stk;\n\nint main(){\n    getline(cin, s);\n\n    for(auto c: s){\n        if(c=='(') stk.push('(');\n        if(c=='[') stk.push('[');\n\n        if(c==')'){\n            if(stk.size() &amp;&amp; stk.top()=='(')   \n                stk.pop();\n            else{\n                cout&lt;&lt;\"Wrong\";\n                return 0;\n            }\n        }\n        if(c==']'){\n            if(stk.size() &amp;&amp; stk.top()=='[')   \n                stk.pop();\n            else{\n                cout&lt;&lt;\"Wrong\";\n                return 0;\n            }\n        }\n    }\n\n    if(stk.size()==0) cout&lt;&lt;\"OK\";\n    else cout&lt;&lt;\"Wrong\";\n    return 0;\n}\n</code></pre> ybt 1355\uff1a\u5b57\u7b26\u4e32\u5339\u914d\u95ee\u9898(strs) code  **\u5927\u610f**  \u5224\u65ad\u591a\u7ec4\u62ec\u53f7\u662f\u5426\u5408\u6cd5  **\u601d\u8def**  1. \u5c0f\u7684\u62ec\u53f7\u5728\u91cc\uff0c\u5927\u7684\u62ec\u53f7\u5728\u5916 2. \u5f53 `(` \u5224\u65ad\u65f6\uff0c\u5176\u5de6\u8fb9\u53ea\u6709\u6709 `{` \u6216 `[`\uff0c\u4e0d\u80fd\u51fa\u73b0 `&lt;`  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;stack&gt;\nusing namespace std;\n\nconst int N=1;\n\nstring solve(){\n    string s;\n    stack&lt;int&gt; stk;\n\n    getline(cin, s);\n\n    for(auto c: s){\n        if(c=='&lt;'){\n            if(stk.size()==0 || stk.top()&gt;=1)\n                stk.push(1);\n            else\n                return \"NO\";\n        }\n\n        if(c=='('){\n            if(stk.size()==0 || stk.top()&gt;=2)\n                stk.push(2);\n            else\n                return \"NO\";\n        }\n\n        if(c=='['){\n            if(stk.size()==0 || stk.top()&gt;=3)\n                stk.push(3);\n            else\n                return \"NO\";\n        }\n\n        if(c=='{'){\n            if(stk.size()==0 || stk.top()&gt;=4)\n                stk.push(4);\n            else\n                return \"NO\";\n        }\n\n        if(c=='&gt;'){\n            if(stk.size() &amp;&amp; stk.top()==1)\n                stk.pop();\n            else\n                return \"NO\";\n        }\n\n        if(c==')'){\n            if(stk.size() &amp;&amp; stk.top()==2)\n                stk.pop();\n            else\n                return \"NO\";\n        }\n\n        if(c==']'){\n            if(stk.size() &amp;&amp; stk.top()==3)\n                stk.pop();\n            else\n                return \"NO\";\n        }\n\n        if(c=='}'){\n            if(stk.size() &amp;&amp; stk.top()==4)\n                stk.pop();\n            else\n                return \"NO\";\n        }\n    }\n\n    if(stk.size()==0)\n        return \"YES\";\n    else\n        return \"NO\";\n}\n\nint main(){\n    int T; cin&gt;&gt;T; getchar();\n    while(T--) cout&lt;&lt;solve()&lt;&lt;\"\\n\";\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/6%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88/#_3","title":"\u8868\u8fbe\u5f0f\u6c42\u503c","text":"<p>\u524d\u7f00\u8868\u8fbe\u5f0f\uff1a\u6ce2\u5170\u8868\u8fbe\u5f0f \u4e2d\u7f00\u8868\u8fbe\u5f0f\uff1a\u4eba\u7c7b\u4e60\u60ef\u7684\u8868\u8fbe\u5f0f \u540e\u7f00\u8868\u8fbe\u5f0f\uff1a\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f</p> \u3010\u540e\u7f00\u3011Luogu P1449 \u540e\u7f00\u8868\u8fbe\u5f0f code  **\u5927\u610f**  \u540e\u7f00\u8868\u8fbe\u5f0f\u6c42\u503c  **\u601d\u8def**  1. \u4e25\u683c\u6309\u7167\u540e\u7f00\u8868\u8fbe\u5f0f\u7684\u89c4\u5219\u8fdb\u884c\u8ba1\u7b97\u5373\u53ef  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;stack&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nstring postfix(string s){\n    stack&lt;int&gt; num; // \u5b58\u50a8\u6570\u5b57\n    bool flg = 0;   // \u662f\u5426\u4e3a\u6570\u5b57\n\n    for(auto c: s)\n    if(c&gt;='0' &amp;&amp; c&lt;='9'){\n        if(flg)\n            num.top() = num.top() * 10 + c-'0';\n        else\n            num.push(c-'0');\n\n        flg=1;\n    }\n    else if(c=='+' || c=='-' || c=='*' || c=='/'){\n        int y = num.top(); num.pop();\n        int x = num.top(); num.pop();\n\n        if(c == '+') num.push(x+y);\n        if(c == '-') num.push(x-y);\n        if(c == '*') num.push(x*y);\n        if(c == '/') num.push(x/y);\n        flg=0;\n    }\n    else\n        flg=0;\n\n    return to_string(num.top());\n}\n\nint main(){\n    string s; cin&gt;&gt;s;\n    cout&lt;&lt;postfix(s)&lt;&lt;endl;\n    return 0;\n}\n</code></pre> \u3010\u4e2d\u7f00\u3011ybt 1356\uff1a\u8ba1\u7b97(calc) code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;stack&gt;\n#include &lt;cmath&gt;\nusing namespace std;\n\nstack&lt;int&gt; num;     // \u64cd\u4f5c\u6570\nstack&lt;char&gt; sig;    // \u64cd\u4f5c\u7b26\n\nint infix_level(char a){\n    if(a == '^') return 3;\n    if(a == '*' || a == '/') return 2;\n    if(a == '+' || a == '-') return 1;\n    return 0;   // \u62ec\u53f7\n}\n\nvoid infix_calc(){\n    int b = num.top(); num.pop();\n    int a = num.top(); num.pop(); \n    if(sig.top() == '+') num.push(a+b); \n    if(sig.top() == '-') num.push(a-b); \n    if(sig.top() == '*') num.push(a*b); \n    if(sig.top() == '/') num.push(a/b); \n    if(sig.top() == '^') num.push(pow(a, b)); \n    sig.pop();\n}\n\nstring infix(string s){\n    int x=0;    // \u4e34\u65f6\u5b58\u50a8\u6570\u5b57\n    bool flg=0; // \u662f\u5426\u662f\u6570\u5b57\n\n    for(auto c: s)\n    if(c&gt;='0' &amp;&amp; c&lt;='9'){\n        x = x*10 + c-'0';\n        flg=1;\n    }else{\n        if(flg){\n            num.push(x);\n            x=0;\n            flg=0;\n        }   // \u6570\u5b57\u5165\u6808\n        if(c=='('){\n            sig.push(c);\n            continue;\n        }   // \u5de6\u62ec\u53f7\u5165\u6808\n        if(c==')'){\n            while(sig.top()!='(') \n                infix_calc();\n            sig.pop();\n            continue;\n        }   // \u53f3\u62ec\u53f7, \u4e00\u76f4\u8ba1\u7b97\u5230\u5de6\u62ec\u53f7\n\n        // \u6b64\u65f6c\u662f\u8fd0\u7b97\u7b26, \u4e14\u6709\u8fd0\u7b97\u7ea7\u66f4\u4f4e\u7684, \u5f62\u5982 (a*b+)\n        while(sig.size() &amp;&amp; infix_level(sig.top()) &gt;= infix_level(c)) \n            infix_calc();\n        sig.push(c);\n    }\n    // \u6700\u540e\u4e00\u4e2a\u6570\u5b57\n    if(flg) num.push(x);\n    // \u6700\u540e\u4e00\u4e2a\u8fd0\u7b97\u7b26\n    while(sig.size()) infix_calc(); \n    return to_string(num.top());\n}\n\nint main(){\n    string s;\n    cin&gt;&gt;s;\n    cout&lt;&lt;infix(s);\n}\n</code></pre> \u3010\u4e2d\u7f00\u8f6c\u540e\u7f00\u3011ybt \u4e2d\u7f00\u8868\u8fbe\u5f0f\u503c(expr)  code C++<pre><code>\n</code></pre>"},{"location":"src/more/old/algorithm/6%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88/#_4","title":"\u5355\u8c03\u6808","text":""},{"location":"src/more/old/algorithm/6%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/","title":"\u6811\u72b6\u6570\u7ec4","text":"C++<pre><code>int lowbit(int x){\n    return x&amp;-x;\n}\nvoid add(int i, int v){\n    for(; i&lt;=n; i+=lowbit(i))\n        t[i]+=v; // \u8be5\u70b9\u540e\u9762\u6240\u6709\u540e\u9a71\u90fd\u9700\u8981+v\n}\nint query(int i){\n    int res=0; // i\u7684\u524d\u7f00\u548c\n    for(; i&gt;=1; i-=lowbit(i))\n        res+=t[i]; // \u7d2f\u52a0\u6240\u6709\u540e\u9a71\n    return res;\n}\nvoid init(){\n    for(int i=1; i&lt;=n; i++)\n        add(i, a[i]);\n}\nvoid init(){ // \u8fd9\u79cd\u662f\u4e00\u4e2a\u4e00\u4e2a\u7684+\n    for(int i=1; i&lt;=n; i++){\n    t[i]+=a[i];\n    int j=i+lowbit(i);\n    if(j&lt;=n) t[j]+=t[i];\n    }\n}\n</code></pre>"},{"location":"src/more/old/algorithm/6%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%93%BE%E8%A1%A8/","title":"\u5355\u5411\u94fe\u8868","text":"LeetCode 206. \u53cd\u8f6c\u94fe\u8868 code  **\u5927\u610f**  **\u601d\u8def**  C++<pre><code>class Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        if(head==nullptr || head-&gt;next==nullptr) return head;\n\n        auto *last = head;      // \u7b2c\u4e00\u4e2a\n        auto *pos = head-&gt;next; // \u7b2c\u4e8c\u4e2a\u7ed3\u70b9\n        last-&gt;next = nullptr;   // \u7ed3\u5c3e\u6307\u5411 nullptr\n\n        while(pos){\n            auto *pre = pos-&gt;next;  // \u5907\u4efd\u4e00\u4e0b\n\n            pos-&gt;next = last;       // \u53cd\u6307\n\n            last = pos;             // \u53f3\u79fb\u4e00\u4f4d\n            pos = pre;              // \u53f3\u79fb\u4e00\u4f4d\n        }\n\n        return last;\n    }\n};\n</code></pre> LeetCode 21. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868  code  **\u5927\u610f**  **\u601d\u8def**  C++<pre><code>class Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {\n        ListNode* head = new ListNode(0);\n        ListNode* pos = head;\n\n        while (l1 != nullptr &amp;&amp; l2 != nullptr) {\n            if (l1-&gt;val &lt; l2-&gt;val) {\n                pos-&gt;next = l1;        \n                l1 = l1-&gt;next;          // l1 \u540e\u79fb\n            } else {\n                pos-&gt;next = l2;\n                l2 = l2-&gt;next;          // l2 \u540e\u79fb\n            }\n            pos = pos-&gt;next;            // pos \u540e\u79fb\n        }\n\n        pos-&gt;next = l1 == nullptr ? l2 : l1;\n\n        return head-&gt;next;\n    }\n};\n</code></pre> LeetCode 83. \u5220\u9664\u6392\u5e8f\u94fe\u8868\u4e2d\u7684\u91cd\u590d\u5143\u7d20 code  **\u5927\u610f**  **\u601d\u8def**  C++<pre><code>class Solution {\npublic:\n\n    void erase_after(ListNode* pos){    // \u5220\u9664 pos \u540e\u9762\u7684\u7ed3\u70b9\n        auto *t = pos-&gt;next;\n        pos-&gt;next = pos-&gt;next-&gt;next;\n        delete t;\n    }\n\n    ListNode* deleteDuplicates(ListNode* head) {\n        auto *pos = head;\n        while(pos &amp;&amp; pos-&gt;next){\n            if(pos-&gt;next-&gt;val == pos-&gt;val) \n                erase_after(pos);\n            else\n                pos=pos-&gt;next;\n        }\n        return head;\n    }\n};\n</code></pre> LeetCode 2807. \u5728\u94fe\u8868\u4e2d\u63d2\u5165\u6700\u5927\u516c\u7ea6\u6570 code   **\u5927\u610f**  **\u601d\u8def**  1. \u6307\u5411 $a$ \u7ed3\u70b9\u7684 `pos`\uff0c\u6307\u5411 $b$ \u7ed3\u70b9\u7684 `pos-&gt;next`     \u63d2\u5165\u4e00\u4e2a\u7ed3\u70b9\u540e\uff0c`pos-&gt;next` \u5e76\u4e0d\u6307\u5411 $b$ \u7ed3\u70b9\uff0c\u800c\u662f\u6307\u5411\u65b0\u63d2\u5165\u7684\u7ed3\u70b9     \u6b64\u65f6\uff0c$b$ \u7ed3\u70b9\u7684\u4f4d\u7f6e\u7531 `pos-&gt;next-&gt;next` \u6307\u5411   C++<pre><code>class Solution {\npublic:\n    int gcd(int a, int b){\n        return b ? gcd(b, a%b) : a;\n    }\n\n    void insert(ListNode* pos, int val){ // \u5728 pos \u7ed3\u70b9\u540e\u63d2\u5165 val\n        ListNode* n = new ListNode(val, pos-&gt;next);\n        pos-&gt;next=n;\n    }\n\n    ListNode* insertGreatestCommonDivisors(ListNode* head) {\n        auto pos = head;\n        while(pos-&gt;next){\n            insert(pos, gcd(pos-&gt;val, pos-&gt;next-&gt;val));\n            pos = pos-&gt;next-&gt;next;\n        }\n        return head;\n    }\n};\n</code></pre> LeetCode 237. \u5220\u9664\u94fe\u8868\u4e2d\u7684\u8282\u70b9 code  **\u5927\u610f**  **\u601d\u8def**  1. \u6211\u4eec\u4e0d\u80fd\u8bbf\u95ee\u8981\u5220\u9664\u7684\u7ed3\u70b9\u4e4b\u524d\u7684\u7ed3\u70b9\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u5220\u9664 2. \u6240\u4ee5\u5c06\u8981\u5220\u9664\u7684\u7ed3\u70b9\u7684\u503c\u6539\u4e3a\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u7684\u503c\uff0c\u7136\u540e\u5220\u9664\u4e0b\u4e00\u4e2a\u7ed3\u70b9  C++<pre><code>class Solution {\npublic:\n    void deleteNode(ListNode* node) {\n        ListNode* del = node-&gt;next;\n        node-&gt;val = del-&gt;val;\n        node-&gt;next = del-&gt;next;\n        delete del;\n    }\n};\n</code></pre> LeetCode 19. \u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2c N \u4e2a\u7ed3\u70b9 code  **\u5927\u610f**  **\u601d\u8def**  1. \u8ba1\u7b97\u7ed3\u70b9\u6570\u91cf $len$  2. \u5220\u9664\u7b2c $len-n+1$ \u4e2a\u7ed3\u70b9  C++<pre><code>class Solution {\npublic:\n    ListNode* removeNthFromEnd(ListNode* head, int n) {\n        // \u8ba1\u7b97\u957f\u5ea6\n        int len=0;\n        auto *pos = head;\n        while(pos) pos = pos-&gt;next, len++;\n        if(len==1) return nullptr;\n\n        // \u521b\u5efa\u4e00\u4e2a\u5934\uff0c\u4ee5\u5904\u7406\u5220\u9664 head \u7684\u60c5\u51b5\n        auto *pre = new ListNode(-1);\n        pre -&gt; next = head;\n        auto *ans = pre;\n        for(int i=1; i&lt;=len-n; i++) pre = pre-&gt;next;\n\n        auto *del = pre-&gt;next;\n        pre-&gt;next = pre-&gt;next-&gt;next;\n        delete del;\n\n        return ans-&gt;next;\n    }\n};\n</code></pre> LeetCode 2181. \u5408\u5e76\u96f6\u4e4b\u95f4\u7684\u8282\u70b9 code  **\u5927\u610f**  **\u601d\u8def**  1. \u6211\u4eec\u53ea\u9700\u8981\uff0c\u5c06 $0$ \u7ed3\u70b9\u540e\u9762\u7684\u7ed3\u70b9\u7684\u503c\u52a0\u5230 $0$ \u7ed3\u70b9\u4e0a\uff0c\u7136\u540e\u5220\u9664\u90a3\u4e9b\u7ed3\u70b9\u5373\u53ef  2. \u5982\u679c $0$ \u7ed3\u70b9\u540e\u9762\u6ca1\u6709\u7ed3\u70b9\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u76f4\u63a5\u5220\u9664 $0$ \u7ed3\u70b9    C++<pre><code>class Solution {\npublic:\n    void erase_after(ListNode* pos){        // \u5220\u9664 pos-&gt;next \u7ed3\u70b9\n        auto *del=pos-&gt;next; \n        pos-&gt;next = pos-&gt;next-&gt;next;\n        delete del;\n    }\n\n    ListNode* mergeNodes(ListNode* head) {\n        auto *pos = head;\n\n        while(pos-&gt;next){\n            while(pos-&gt;next &amp;&amp; pos-&gt;next-&gt;val!=0){\n                pos-&gt;val += pos-&gt;next-&gt;val;\n                erase_after(pos);\n            }\n            if(pos-&gt;next-&gt;next == nullptr){\n                erase_after(pos);\n                break;\n            }\n            pos = pos-&gt;next;\n        }\n\n        return head;\n    }\n};\n</code></pre> LeetCode 1669. \u5408\u5e76\u4e24\u4e2a\u94fe\u8868 code  **\u5927\u610f**  **\u601d\u8def**  1. \u6a21\u62df\u5c31\u597d\u4e86\uff0c\u6ce8\u610f\u5907\u4efd\u7ed3\u70b9  C++<pre><code>class Solution {\npublic:\n    ListNode* mergeInBetween(ListNode* list1, int a, int b, ListNode* list2) {\n        auto *y = list2;\n        while(y-&gt;next) y = y-&gt;next; // \u5b9a\u4f4d\u5230 list2 \u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\n\n        auto *x = list1;        // \u5411\u540e\u79fb\u52a8\u5230 a \u4e4b\u524d\u4f4d\u7f6e\n        for(int i=1; i&lt;a; i++) x = x-&gt;next;\n        auto *backup = x-&gt;next; // \u5907\u4efd\u4e00\u4e0b\n        x-&gt;next = list2;        // \u63a5\u4e0a\n\n        x = backup;             // \u6062\u590d\n        for(int i=1; i&lt;=b-a+1; i++) x = x-&gt;next;\n        y-&gt;next = x;\n\n        return list1;\n    }\n};\n</code></pre> LeetCode 2130. \u94fe\u8868\u6700\u5927\u5b6a\u751f\u548c code  **\u5927\u610f**  **\u601d\u8def**  1. \u5c06\u6570\u636e\u62ff\u5230\u6570\u7ec4\u91cc\u9762\uff0c\u7136\u540e\u53cc\u6307\u9488\u5373\u53ef  C++<pre><code>class Solution {\npublic:\n    int a[100010], idx=-1;\n\n    int pairSum(ListNode* head) {\n        int ans = -1;\n        while(head) a[++idx]=head-&gt;val, head=head-&gt;next;\n        for(int i=0, j=idx; i&lt;j; i++, j--)\n            ans = max(ans, a[i]+a[j]);\n        return ans;\n    }\n};\n</code></pre>"},{"location":"src/more/old/algorithm/6%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%93%BE%E8%A1%A8/#_2","title":"\u4e0e\u6808\u7ed3\u5408","text":"LeetCode LCR 025. \u4e24\u6570\u76f8\u52a0 II code  **\u5927\u610f**  **\u601d\u8def**  C++<pre><code>class Solution {\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        std::stack&lt;int&gt; stk1, stk2, stk3;\n        while(l1){\n            stk1.push(l1-&gt;val);\n            l1=l1-&gt;next;\n        }\n        while(l2){\n            stk2.push(l2-&gt;val);\n            l2=l2-&gt;next;\n        }\n\n        int add=0;\n        while(stk1.size()||stk2.size()){\n            if(stk1.size()){\n                add += stk1.top();\n                stk1.pop();\n            }\n            if(stk2.size()){\n                add += stk2.top();\n                stk2.pop();\n            }\n            stk3.push(add%10);\n            add/=10;\n        }\n        if(add) stk3.push(add);\n\n        ListNode *ans = new ListNode(stk3.top());\n        stk3.pop();\n        auto *pos = ans;\n\n        while(stk3.size()){\n            auto *t = new ListNode(stk3.top());\n            pos-&gt;next = t;\n            pos = pos-&gt;next;\n            stk3.pop();\n        }\n\n        return ans;\n    }\n};\n</code></pre>"},{"location":"src/more/old/algorithm/6%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%93%BE%E8%A1%A8/#_3","title":"\u4e0e\u961f\u5217\u7ed3\u5408","text":"LeetCode \u9762\u8bd5\u9898 04.03. \u7279\u5b9a\u6df1\u5ea6\u8282\u70b9\u94fe\u8868 code C++<pre><code>class Solution {\npublic:\n    vector&lt;ListNode*&gt; listOfDepth(TreeNode* tree) {\n        std::vector&lt;ListNode*&gt; ans;\n        std::queue&lt;std::pair&lt;TreeNode*, int&gt;&gt; q;\n        q.push({tree, 0});\n        int last = -1;\n\n        ListNode *b;\n        while(q.size()){\n            auto u = q.front(); q.pop();\n\n            if(last != u.second){   // \u9700\u8981\u65b0\u5f00\u4e00\u884c\n                auto *t = new ListNode(u.first-&gt;val);\n                ans.push_back(t);\n                b=t;\n            } else {\n                auto *t = new ListNode(u.first-&gt;val);\n                b-&gt;next = t;\n                b = b-&gt;next;\n            }\n\n            if(u.first-&gt;left)\n                q.push({u.first-&gt;left, u.second+1});\n            if(u.first-&gt;right)\n                q.push({u.first-&gt;right, u.second+1});\n\n            last = u.second;\n        }\n\n        return ans;\n    }\n};\n</code></pre>"},{"location":"src/more/old/algorithm/6%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%93%BE%E8%A1%A8/#_4","title":"\u53cc\u5411\u94fe\u8868","text":"LeetCode 1472. \u8bbe\u8ba1\u6d4f\u89c8\u5668\u5386\u53f2\u8bb0\u5f55 code  **\u5927\u610f**  **\u601d\u8def**  1. \u4f7f\u7528 `list` \u6765\u6a21\u62df\u5373\u53ef 2. \u6ce8\u610f\uff0c`it` \u6307\u5411\u5f53\u524d\u7684\u7ed3\u70b9\uff0c\u6ce8\u610f\u5176 `++` \u6216 `--` \u524d\u540e\u7684\u6307\u5411\u60c5\u51b5  C++<pre><code>class BrowserHistory {\npublic:\n    std::list&lt;std::string&gt; l;\n    std::list&lt;std::string&gt;::iterator it;    // \u6307\u5411\u5f53\u524d\n\n    BrowserHistory(std::string homepage) {\n        l.push_back(homepage);\n        it = l.begin(); // \u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20\n    }\n\n    void visit(std::string url) {\n        l.erase(++it, l.end()); // \u5220\u9664\u5f53\u524d\u5143\u7d20\u4e4b\u540e\u7684\u5143\u7d20\n        l.push_back(url);\n        it = l.end();\n        it--;                   // \u6307\u5411\u6700\u540e\u4e00\u4e2a\u5143\u7d20\n    }\n\n    std::string back(int steps) {\n        for (int i = 1; i &lt;= steps; i++) {\n            if (it == l.begin()) break;\n            it--;\n            if (it == l.begin()) break;\n        }\n        return *it;\n    }\n\n    std::string forward(int steps) {\n        for (int i = 1; i &lt;= steps; i++) {\n            if (it == l.end()) {\n                it--;\n                break;\n            }\n            it++;\n            if (it == l.end()) {\n                it--;\n                break;\n            }\n        }\n        return *it;\n    }\n};\n</code></pre>"},{"location":"src/more/old/algorithm/6%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%98%9F%E5%88%97/","title":"\u961f\u5217","text":"ybt 1332\uff1a\u3010\u4f8b2-1\u3011\u5468\u672b\u821e\u4f1a code C++  code  **\u5927\u610f**  **\u601d\u8def**  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\nconst int N=2e5+10;\n\nint a, b;\n\n/*\n1\n3 4\n7 10 9 13\n15 22 21 31 19 28 27 40\n\n3 7 9 15 21\n4 10 13 22 31\n*/\n\nvoid solve(){\n    int sum=1;\n    queue&lt;int&gt; x, y;\n\n    while(sum &lt; b){\n        x.push(2*a+1);\n        y.push(3*a+1);\n\n        if(x.front() &lt; y.front()){          // \u6bcf\u6b21\u62ff\u4e00\u4e2a\u5c0f\u7684\u51fa\u6765\n            a = x.front();\n            x.pop();\n        } else if(x.front() &gt; y.front()){   // \u540c\u4e0a\n            a = y.front();\n            y.pop();\n        } else {\n            a = y.front();\n            x.pop();        // 2x+1 \u53ef\u80fd\u4f1a\u548c 3y+1 \u76f8\u7b49\n            y.pop();        // \u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u81ea\u7136\u6570\u96c6\uff0c2x+1\u548c3y+1\u662f\u540c\u4e00\u4e2a\u6570\uff0c\u4e0d\u5fc5\u8003\u8651\u4e24\u6b21\n        }\n\n        sum++;              // \u8bb0\u5f55\u62ff\u53d6\u7684\u6b21\u6570\n    }\n    cout &lt;&lt; a &lt;&lt; \"\\n\";\n    return ;\n}\n\nint main(){\n    while(cin&gt;&gt;a&gt;&gt;b) solve();\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%8F%89%E6%A0%91/","title":"\u904d\u5386\u95ee\u9898","text":""},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%8F%89%E6%A0%91/#_2","title":"\u524d\u5e8f\u904d\u5386","text":"LC 144. \u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386 \u9012\u5f52 O(n) C++<pre><code>class Solution {\npublic:\n    vector&lt;int&gt; preorderTraversal(TreeNode* root) {\n        vector&lt;int&gt; T, L, R;\n        if(!root) return T;\n\n        L = preorderTraversal(root-&gt;left);\n        R = preorderTraversal(root-&gt;right);\n\n        T.push_back(root-&gt;val); // \u524d\u5e8f\n        T.insert(T.end(), L.begin(), L.end());\n        T.insert(T.end(), R.begin(), R.end());\n        return T;\n    }\n};\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%8F%89%E6%A0%91/#_3","title":"\u4e2d\u5e8f\u904d\u5386","text":"LC 94. \u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386 \u9012\u5f52 O(n) C++<pre><code>class Solution {\npublic:\n    vector&lt;int&gt; inorderTraversal(TreeNode* root) {\n        vector&lt;int&gt; T, L, R;\n        if(!root) return T;\n\n        L = inorderTraversal(root-&gt;left);\n        R = inorderTraversal(root-&gt;right);\n\n        T.insert(T.end(), L.begin(), L.end());\n        T.push_back(root-&gt;val); // \u4e2d\u5e8f\n        T.insert(T.end(), R.begin(), R.end());\n        return T;\n    }\n};\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%8F%89%E6%A0%91/#_4","title":"\u540e\u5e8f\u904d\u5386","text":"LC 145. \u4e8c\u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386 \u9012\u5f52 O(n) C++<pre><code>class Solution {\npublic:\n    vector&lt;int&gt; postorderTraversal(TreeNode* root) {\n        vector&lt;int&gt; T, L, R;\n        if(!root) return T;\n\n        L = postorderTraversal(root-&gt;left);\n        R = postorderTraversal(root-&gt;right);\n\n        T.insert(T.end(), L.begin(), L.end());\n        T.insert(T.end(), R.begin(), R.end());\n        T.push_back(root-&gt;val); // \u540e\u5e8f\n        return T;\n    }\n};\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%8F%89%E6%A0%91/#_5","title":"\u5c42\u5e8f\u904d\u5386","text":"LC 102. \u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386 BFS O(n) C++<pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; levelOrder(TreeNode* root) {\n        vector&lt;vector&lt;int&gt; &gt; T;\n        if(!root) return T;\n\n        queue&lt;pair&lt;TreeNode, int&gt;&gt; q;\n        q.push({*root, 0});\n\n        while(q.size()){\n            auto t = q.front().first;\n            auto dep = q.front().second;\n            q.pop();\n\n            if(T.size()==dep) T.push_back({});\n            T[dep].push_back(t.val);\n\n            if(t.left)  q.push({*t.left, dep+1});\n            if(t.right) q.push({*t.right,dep+1});\n        }\n\n        return T;\n    }\n};\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%8F%89%E6%A0%91/#n","title":"N\u53c9\u6811\u524d\u5e8f\u904d\u5386","text":"LC 589. N \u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386 \u9012\u5f52 O(n) C++<pre><code>class Solution {\npublic:\n    vector&lt;int&gt; preorder(Node* root) {\n        vector&lt;int&gt; T;\n        if(!root) return T;\n\n        T.push_back(root-&gt;val); // \u524d\u5e8f\n\n        for(auto t: root-&gt;children){\n            vector&lt;int&gt; C = preorder(t);\n            T.insert(T.end(), C.begin(), C.end());\n        }\n        return T;\n    }\n};\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%8F%89%E6%A0%91/#n_1","title":"N\u53c9\u6811\u540e\u5e8f\u904d\u5386","text":"LC 590. N \u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386 \u9012\u5f52 O(n) C++<pre><code>class Solution {\npublic:\n    vector&lt;int&gt; postorder(Node* root) {\n        vector&lt;int&gt; T;\n        if(!root) return T;\n\n        for(auto t: root-&gt;children){\n            vector&lt;int&gt; C = postorder(t);\n            T.insert(T.end(), C.begin(), C.end());\n        }\n\n        T.push_back(root-&gt;val); // \u540e\u5e8f\n        return T;\n    }\n};\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%8F%89%E6%A0%91/#n_2","title":"N\u53c9\u6811\u5c42\u5e8f\u904d\u5386","text":"LC 429. N \u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386 BFS O(n) C++<pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; levelOrder(Node* root) {\n        vector&lt;vector&lt;int&gt; &gt; T;\n        if(!root) return T;\n\n        queue&lt;pair&lt;Node, int&gt;&gt; q;\n        q.push({*root, 0});\n\n        while(q.size()){\n            auto t = q.front().first;\n            auto dep = q.front().second;\n            q.pop();\n\n            if(T.size()==dep) T.push_back({});\n            T[dep].push_back(t.val);\n\n            for(auto u: t.children)\n                q.push({*u, dep+1});\n        }\n        return T;\n    }\n};\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%8F%89%E6%A0%91/#_6","title":"\u6784\u5efa\u4e8c\u53c9\u6811","text":""},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%8F%89%E6%A0%91/#_7","title":"\u4e2d\u5e8f+\u524d\u5e8f\u6784\u5efa\u4e8c\u53c9\u6811","text":"LC 105. \u4ece\u524d\u5e8f\u4e0e\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811 \u9012\u5f52 O(n) C++<pre><code>class Solution {\npublic:\n    TreeNode* buildTree(vector&lt;int&gt;&amp; pre, vector&lt;int&gt;&amp; in) {\n        for (int i = 0; i &lt; in.size(); i++)\n        if (in[i] == pre[0]) {\n            vector&lt;int&gt; lp(pre.begin() + 1,     pre.begin() + i + 1);\n            vector&lt;int&gt; li( in.begin(),          in.begin() + i);\n            vector&lt;int&gt; rp(pre.begin() + i + 1, pre.end());\n            vector&lt;int&gt; ri( in.begin() + i + 1,  in.end());\n            TreeNode *T = new TreeNode(pre[0], buildTree(lp, li), buildTree(rp, ri));\n            return T;\n        }\n        return NULL;\n    }\n};\n</code></pre> Luogu P1827 [USACO3.4] \u7f8e\u56fd\u8840\u7edf American Heritage code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nconst int N=30;\n\nstruct node{\n    char date;\n    node *left, *right;\n};\n\nint in[N];  // \u4e2d\u5e8f\nint pre[N]; // \u524d\u5e8f\nint n;\n\nnode *dfs(int inL, int inR, int preL, int preR){\n    for(int i=inL; i&lt;=inR; i++)\n        if(in[i] == pre[preL]){ // \u627e\u5230\u4e86\n            node *t = new node();\n            t-&gt;date = in[i];\n            t-&gt;left = dfs(inL, i-1, preL+1, preL+i-inL);\n            t-&gt;right= dfs(i+1, inR, preL+i-inL+1, preR);\n            return t;\n        }\n\n    return NULL;\n}\n\nvoid PP(node* u){\n    if(u &amp;&amp; u-&gt;left) PP(u-&gt;left);\n    if(u &amp;&amp; u-&gt;right) PP(u-&gt;right);\n    printf(\"%c\", u-&gt;date);\n}\n\nint main(){\n    string s; cin&gt;&gt;s; n=s.size();\n    for(int i=1; i&lt;=n; i++) in[i] = s[i-1];\n    cin&gt;&gt;s;\n    for(int i=1; i&lt;=n; i++) pre[i] = s[i-1];\n\n    node *root = new node();\n    root = dfs(1, n, 1, n);\n\n    PP(root);\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%8F%89%E6%A0%91/#_8","title":"\u4e2d\u5e8f+\u540e\u5e8f\u6784\u5efa\u4e8c\u53c9\u6811","text":"LC 106. \u4ece\u4e2d\u5e8f\u4e0e\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811 \u9012\u5f52 O(n) C++<pre><code>class Solution {\npublic:\n    TreeNode* buildTree(vector&lt;int&gt;&amp; in, vector&lt;int&gt;&amp; pos) {\n        for(int i=0; i&lt;in.size(); i++)\n        if(in[i]==pos[pos.size()-1]){\n            vector&lt;int&gt; li( in.begin(),      in.begin()+i);\n            vector&lt;int&gt; lp(pos.begin(),     pos.begin()+i);\n            vector&lt;int&gt; ri( in.begin()+i+1,  in.end());\n            vector&lt;int&gt; rp(pos.begin()+i,   pos.end()-1);\n            TreeNode *T = new TreeNode(pos[pos.size()-1], buildTree(li, lp), buildTree(ri, rp));\n            return T;\n        }\n        return NULL;\n    }\n};\n</code></pre> AcWing 1497. \u6811\u7684\u904d\u5386 \u9012\u5f52 O(n) C++<pre><code>#include &lt;stdio.h&gt;\n\nconst int N = 40;\n\nstruct node {\n    int date;\n    node* left, *right;\n};\n\nint in[N];  // \u4e2d\u5e8f\nint pos[N]; // \u540e\u5e8f\nnode q[N];\nint f, e;\n\nint n;\n\nnode* dfs(int posL, int posR, int inL, int inR) {\n    for (int i = inL; i &lt;= inR; i++)\n        if (in[i] == pos[posR]) {\n            node* t = new node();\n            t-&gt;date = pos[posR];\n            t-&gt;left =  dfs(posL,       posL+i-inL-1, inL, i-1);\n            t-&gt;right = dfs(posL+i-inL, posR-1,       i+1, inR);\n            return t;\n        }\n    return NULL;\n}\n\nint main() {\n    scanf(\"%d\", &amp;n);\n    for (int i = 0; i &lt; n; i++) scanf(\"%d\", &amp;pos[i]);\n    for (int i = 0; i &lt; n; i++) scanf(\"%d\", &amp;in[i]);\n\n    node* root = new node();\n    root = dfs(0, n-1, 0, n-1);\n\n    q[++e] = *root;\n    while (++f &lt;= e) {\n        printf(\"%d \", q[f].date);\n        if (q[f].left) q[++e] = *q[f].left;\n        if (q[f].right)q[++e] = *q[f].right;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%8F%89%E6%A0%91/#_9","title":"\u4e2d\u5e8f+\u5c42\u5e8f\u6784\u5efa\u4e8c\u53c9\u6811","text":"AcWing 1259. \u4e8c\u53c9\u6811\u904d\u5386 ttt"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%8F%89%E6%A0%91/#_10","title":"\u524d\u5e8f+\u540e\u5e8f\u6784\u5efa\u4e8c\u53c9\u6811","text":"Luogu P1229 \u904d\u5386\u95ee\u9898 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nconst int N=1;\nlong long ans;\n\nint main(){\n    string a, b; cin&gt;&gt;a&gt;&gt;b; reverse(b.begin(), b.end());\n    for(int i=0; i+1&lt;a.size(); i++)\n        if( b.find(a.substr(i, 2)) != string::npos ) ans++;\n    cout&lt;&lt;(1&lt;&lt;ans);\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%8F%89%E6%A0%91/#_11","title":"\u524d\u5e8f\u6784\u5efa\u4e8c\u53c9\u6811","text":"AcWing 3384. \u4e8c\u53c9\u6811\u904d\u5386 ttt"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%8F%89%E6%A0%91/#_12","title":"\u6027\u8d28\u76f8\u5173","text":""},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%8F%89%E6%A0%91/#_13","title":"\u6811\u7684\u6df1\u5ea6","text":""},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%8F%89%E6%A0%91/#_14","title":"\u6700\u5c0f\u6df1\u5ea6","text":"<p>LC 111. \u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u6df1\u5ea6</p> BFS O(n) C++<pre><code>class Solution {\npublic:\n    int minDepth(TreeNode* root) {\n        if(!root) return 0;\n        int ans=0x3f3f3f3f;\n        queue&lt;pair&lt;TreeNode, int&gt;&gt; q;\n        q.push({*root, 1});\n\n        while(q.size()){\n            auto t = q.front().first;\n            auto dep = q.front().second;\n            q.pop();\n\n            if(!t.left &amp;&amp; !t.right)\n                ans=min(ans, dep);\n            if(t.left)  q.push({*t.left, dep+1});\n            if(t.right) q.push({*t.right,dep+1});\n        }\n        return ans;\n    }\n};\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%8F%89%E6%A0%91/#_15","title":"\u6700\u5927\u6df1\u5ea6","text":"<p>LC 104. \u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6</p> BFS O(n) C++<pre><code>class Solution {\npublic:\n    int maxDepth(TreeNode* root) {\n        if(!root) return 0;\n        int ans=-0x3f3f3f3f;\n        queue&lt;pair&lt;TreeNode, int&gt;&gt; q;\n        q.push({*root, 1});\n\n        while(q.size()){\n            auto t = q.front().first;\n            auto dep = q.front().second;\n            q.pop();\n\n            if(!t.left &amp;&amp; !t.right)\n                ans=max(ans, dep);\n            if(t.left)  q.push({*t.left, dep+1});\n            if(t.right) q.push({*t.right,dep+1});\n        }\n        return ans;\n    }\n};\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%8F%89%E6%A0%91/#n_3","title":"N\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6","text":"<p>LC 559. N \u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6</p> BFS O(n) C++<pre><code>class Solution {\npublic:\n    int maxDepth(Node* root) {\n        int ans = -0x3f3f3f3f;\n        if(!root) return 0;\n\n        queue&lt;pair&lt;Node, int&gt;&gt; q;\n        q.push({*root, 1});\n\n        while(q.size()){\n            auto t = q.front().first;\n            auto dep = q.front().second;\n            q.pop();\n\n            if(t.children.size()==0) ans=max(ans, dep);\n\n            for(auto u: t.children)\n                q.push({*u, dep+1});\n        }\n        return ans;\n    }\n};\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%8F%89%E6%A0%91/#_16","title":"\u6811\u7684\u76f4\u5f84","text":""},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%8F%89%E6%A0%91/#_17","title":"\u6811\u7684\u91cd\u5fc3","text":""},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%8F%89%E6%A0%91/#lca","title":"LCA\u6700\u8fd1\u516c\u5171\u7956\u5148","text":"C++<pre><code>vector&lt;vector&lt;PII&gt;&gt; tr(N);\nint dis[N], dep[N]; // \u5230\u8fbe\u6839\u7ed3\u70b9\u7684 \u8ddd\u79bb \u548c \u6df1\u5ea6\nint fa[N][16];      // i \u5411\u4e0a\u8df3 2^j \u6b21 \u7ed3\u70b9 fa[i][j]\nint maxDep, maxWide=1;  // \u6700\u5927\u6df1\u5ea6\u548c\u5bbd\u5ea6\n\nint lca(int a, int b){\n    if(dep[a] &lt; dep[b]) swap(a, b); // a \u66f4\u6df1\n    for(int k=15; k&gt;=0; k--)// \u8ba9 a \u548c b \u7684\u6df1\u5ea6\u76f8\u7b49\n        if(dep[ fa[a][k] ] &gt;= dep[b])\n            a = fa[a][k];   // \u4e8c\u8fdb\u5236\u63d0\u5347\n    if(a==b) return a;      // \u5de7\u4e86\u561b\n    for(int k=15; k&gt;=0; k--)// a \u548c b \u4e00\u8d77\u5f80\u4e0a\u722c\n        if(fa[a][k] != fa[b][k])\n            a=fa[a][k], b=fa[b][k];\n    return fa[a][0];\n}\n\nvoid bfs(int root){\n    dep[0] = 0;     // \u54e8\u5175\n    queue&lt;int&gt; q; \n    q.push(root), dis[root]=0, dep[root]=1;\n    while(q.size()){\n        auto i=q.front(); q.pop();\n        maxDep = max(maxDep, dep[i]);\n        for(auto &amp;[j, l]: tr[i])    // i -&gt; j \u7684\u8ddd\u79bb\u662f l\n            if(!dep[j]){\n                q.push(j), dis[j] = dis[i] + l, dep[j] = dep[i] + 1;\n                fa[j][0] = i;\n                for(int k=1; k&lt;=15; k++)\n                    fa[j][k] = fa[ fa[j][k-1] ][ k-1 ];\n            }   \n        if(q.size() &amp;&amp; q.front() != i) maxWide = max(maxWide, (int)q.size());\n    }\n}\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/","title":"\u6700\u5c0f\u751f\u6210\u6811","text":""},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/#prim","title":"prim \u7a20\u5bc6\u56fe","text":"<p>\u5730\u56fe\u521d\u59cb\u5316\u4e3a+\u221e \u5c06\u6240\u6709\u70b9\u5230\u8fbe\u96c6\u5408\u7684\u8ddd\u79bb\u8bbe\u7f6e\u4e3a+\u221e\uff0c\u4e14\u6807\u8bb0\u90fd\u4e0d\u5728\u96c6\u5408\u4e2d \u8fed\u4ee3n\u6b21\uff0c\u6bcf\u6b21\u5c06\u672a\u5728\u96c6\u5408\u4e2d\u4e14\u8ddd\u79bb\u96c6\u5408\u6700\u8fd1\u7684\u70b9\u52a0\u5165\u96c6\u5408 \u901a\u8fc7\u65b0\u8fdb\u5165\u96c6\u5408\u7684\u70b9\uff0c\u66f4\u65b0\u6240\u6709\u70b9\u8ddd\u79bb\u96c6\u5408\u7684\u8ddd\u79bb</p> C++<pre><code>int n, m;\nint edge[N][N];\nint dis[N]; // \u6bcf\u4e2a\u70b9\u5230\u8fbe\uff08\u6700\u5c0f\u751f\u6210\u6811\uff09\u96c6\u5408\u7684\u6700\u77ed\u8def\nbool st[N]; // \u662f\u5426\u5df2\u7ecf\u5728\u96c6\u5408\u4e2d\n// O(n^2+m)\nint prim(){\n    int res=0;\n    memset(dis, 0x3f, sizeof dis); // \u521d\u59cb\u5316\u6bcf\u4e2a\u70b9\u5230\u96c6\u5408\u7684\u8ddd\u79bb\u4e3ainf\n    memset(st, 0, sizeof st); // \u521d\u59cb\u5316\u6bcf\u4e2a\u70b9\u90fd\u672a\u5728\u96c6\u5408\u4e2d\n    for(int k=0; k&lt;n; k++){ // \u8fed\u4ee3 n \u6b21\n        int t=-1; // \u627e\u5230\u672a\u5728\u96c6\u5408\u4e2d\u4e14\u8ddd\u79bb\u96c6\u5408\u6700\u8fd1\u7684\u70b9\n        for(int i=1; i&lt;=n; i++)\n            if(!st[i] &amp;&amp; (t==-1 || dis[t]&gt;dis[i]))\n                t=i;\n        if(k &amp;&amp; dis[t]==INF) return INF; // \u5b64\u5c9b\n        if(k) res+=dis[t]; // \u6743\u503c\u548c\n        st[t]=1; // \u8fdb\u5165\u96c6\u5408\n        for(int i=1; i&lt;=n; i++) // \u901a\u8fc7\u8be5\u70b9\u53bb\u66f4\u65b0\n            dis[i]=min(dis[i], edge[t][i]);\n    }\n    return res;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/#kruskal","title":"Kruskal","text":"<p>\u5c06\u6240\u6709\u8fb9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \u7ef4\u62a4\u4e00\u5806\u96c6\u5408\uff0c\u67e5\u8be2\u4e24\u4e2a\u5143\u7d20\u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u96c6\u5408\uff0c\u5408\u5e76\u4fe9\u96c6\u5408</p> C++<pre><code>int n, m;\nint p[N]; // \u5e76\u67e5\u96c6\npair&lt;int, PII&gt; edge[N];\nint find(int x){ // \u627ex\u7684\u7956\u5b97\n    if(p[x]!=x) p[x]=find(p[x]);\n    return p[x];\n}\nint kruskal(){\n    sort(edge+1, edge+1+m);\n    for(int i=1; i&lt;=n; i++) p[i]=i;\n    // \u6392\u5e8f \u521d\u59cb\u5316\u5e76\u67e5\u96c6\n    int res=0, cnt=0;\n    // \u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u6240\u6709\u8fb9\n    for(int i=1; i&lt;=m; i++){\n        int a=edge[i].sed.fst;\n        int b=edge[i].sed.sed;\n        int w=edge[i].fst;\n        a=find(a), b=find(b);\n        if(a!=b){\n            p[a]=b; // \u5408\u5e76\n            res+=w; // \u6743\u503c\u548c\n            cnt++; // \u5224\u65ad\u5b64\u5c9b\n        }\n    }\n    if(cnt&lt;n-1) return inf;\n    return res;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/","title":"\u5efa\u56fe","text":""},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/#_2","title":"\u94fe\u5f0f\u524d\u5411\u661f","text":"C++<pre><code>// \u5b9a\u4e49\nint h[N], e[N&lt;&lt;1], ne[N&lt;&lt;1], idx;\n// \u521d\u59cb\u5316\nidx=0; memset(h, -1, h);\n// \u589e\u52a0\u4e00\u6761\u8fb9\nvoid add(int a, int b){\n    e[idx]=b, ne[idx]=h[a], h[a]=idx++;\n}\n// \u904d\u5386\u70b9 i\nfor(int j=h[i]; j!=-1; j=ne[j])\n    e[j];   // e[j] \u662f\u76f4\u63a5\u8fde\u63a5\u7684\u90a3\u4e2a\u70b9\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/#stl","title":"STL\u5927\u6cd5","text":"C++<pre><code>// \u5b9a\u4e49\nvector&lt;int&gt; g[N];\n// \u521d\u59cb\u5316\nfor(int i=0; i&lt;N; i++) g[i].clear();\n// \u589e\u52a0\u4e00\u6761\u8fb9\ng[i].push_back(j);\n// \u904d\u5386\nfor(auto j: g[i]);\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/#_3","title":"\u90bb\u63a5\u77e9\u9635","text":"C++<pre><code>bool g[N][N];   // i -&gt; j \u70b9\u662f\u5426\u5230\u8fbe\uff01\u6ce8\u610f\uff0c\u8fd9\u662f\u5355\u5411\u7684\nint dis[N][N];  // i -&gt; j \u7684\u6743\u503c\n\ng[i][j] = g[j][i] = 1;  // \u8fde\u901a\uff0c\u800c\u4e0d\u662f\u5355\u5411\u5230\u8fbe\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/#_4","title":"\u5355\u6e90\u6700\u77ed\u8def","text":""},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/#dijkstra","title":"Dijkstra","text":"<p><code>\u975e\u8d1f\u6743\u56fe</code></p> <p>\u5c06\u6240\u6709\u70b9\u770b\u4f5c\u672a\u786e\u5b9a\u6700\u77ed\u8def \u5c06\u8d77\u70b9\u7684dis[s]=0\uff0c\u5176\u4f59\u7f6e\u4e3a+\u221e \u5c06\u672a\u786e\u5b9a\u7684\u70b9\u4e2d\uff0c\u9009\u53d6\u8ddd\u79bbs\u6700\u8fd1\u7684\u70b9\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c</p> C++<pre><code>int n, m; // \u70b9\u3001\u8fb9\nvector&lt;PII&gt; edge[100010]; // edge[x]={y,z} x-&gt;y=z\nint dis[N]; // \u6700\u77ed\u8def\nbool st[N]; // \u662f\u5426\u5df2\u786e\u5b9a\u6700\u77ed\u8def\n// O(mlogm)\nint dijkstra(int s, int e){\n    // fst\u5b58dis[i] sed\u5b58i\n    priority_queue&lt;PII, vector&lt;PII&gt;, greater&lt;PII&gt;&gt; heap;\n    // \u521d\u59cb\u5316\n    memset(dis, 0x3f, sizeof dis);\n    dis[s]=0;\n    // \u8d77\u70b9\u5165\u961f\n    heap.push({dis[s], s});\n    while(heap.size()){\n        auto x=heap.top().sed; // \u53d6\u6700\u5c0f\u70b9\n        heap.pop();\n        // \u5728\u51fa\u5806\u7684\u65f6\u5019\u5224\u65ad\u3001\u786e\u5b9a\u662f\u5426\u786e\u5b9a\u6700\u77ed\u8def\n        if(st[x]) continue;\n        st[x]=1; // \u786e\u5b9a\u6700\u77ed\u8def\n        // \u5bf9\u8be5\u70b9\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\n        for(auto&amp; [y, z]: edge[x])\n        if( dis[y]&gt;dis[x]+z ){\n            dis[y]=dis[x]+z;\n            heap.push({dis[y], y});\n        }\n    }\n    return dis[e];\n}\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/#bellman_ford","title":"bellman_ford","text":"<p><code>\u975e\u8d1f\u6743\u56de\u8def</code></p> <p>\u5c06\u8d77\u70b9\u7684dis[s]=0\uff0c\u5176\u4f59\u7f6e\u4e3a+\u221e \u5c06\u6240\u6709\u8fb9\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c \u76f4\u5230\u67d0\u8f6e\u8fed\u4ee3\u4e2d\u6ca1\u6709\u6267\u884c\u677e\u5f1b\u64cd\u4f5c\u65f6\uff0c\u9000\u51fa\uff0c\u6216\u8005\u6267\u884cn\u6b21</p> C++<pre><code>int n, m, k; // \u6700\u591a\u7ecf\u8fc7k\u6761\u8fb9\nvector&lt;PII&gt; edge[N];\nint dis[N]; // \u6700\u77ed\u8def\nint bkup[N]; // \u5907\u4efd\uff0c\u9632\u6b62\u4e32\u8054\n// O(nm)\nint bellman_ford(int s, int e){\n    memset(dis, 0x3f, sizeof dis);\n    dis[s]=0;\n    for(int i=1; i&lt;=k; i++){ // \u6700\u591a\u8fed\u4ee3 k \u6b21\n        bool flg=0;\n        memcpy(bkup, dis, sizeof dis);\n        for(int x=1; x&lt;=n; x++) // \u904d\u5386\u6240\u6709\u8fb9\n        for(auto&amp; [y, z]: edge[x]) // \u5bf9\u6bcf\u6761\u8fb9\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\n            if( dis[y] &gt; bkup[x] + z){\n                dis[y] = bkup[x] + z;\n                flg=1;\n            }\n        if(!flg) break; // \u5f53\u524d\u6ca1\u6709\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\n    }\n    // \u56e0\u4e3a\u5b58\u5728\u65e0\u7a77\u5927\u5f15\u51fa\u7684\u8fb9\u53d1\u751f\u677e\u5f1b\u64cd\u4f5c\n    // \u800c\u56fe\u4e2d\u5b58\u5728\u8d1f\u6743\u8fb9\uff0c\u56e0\u6b64\u8981\u505a\u4e2a\u5c0f\u5c0f\u7684\u5904\u7406\n    if(dis[e]&gt;INF/2) return INF;\n    return dis[e];\n}\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/#spfa","title":"spfa","text":"<p>\u5c06\u8d77\u70b9\u7684dis[s]=0\uff0c\u5176\u4f59\u7f6e\u4e3a+\u221e \u5c06\u88ab\u677e\u5f1b\u7684\u70b9\u52a0\u5165\u961f\u5217\uff0c\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c \u901a\u8fc7\u4e00\u4e2a st[i] \u6765\u5224\u65ad i \u70b9\u662f\u5426\u5728\u961f\u5217\u4e2d\uff0c\u9632\u6b62\u91cd\u590d\u5165\u961f</p> C++<pre><code>int n, m;\nvector&lt;PII&gt; edge[N];\nint dis[N]; // \u6700\u77ed\u8def\nbool st[N]; // \u662f\u5426\u5728\u961f\u5217\u4e2d?\n//O(nm)\nint spfa(int s, int e){\n    queue&lt;int&gt; q;\n    memset(dis, 0x3f, sizeof dis);\n\n    dis[s]=0; // \u6e90\u70b9\n    st[s]=1; // \u5728\u961f\u5217\u4e2d\n    q.push(s); // \u6254\u8fdb\u961f\u5217\n\n    while(q.size()){\n        auto x=q.front();\n        q.pop();\n        st[x]=0; // \u4e0d\u5728\u961f\u5217\u4e2d\n\n        for(auto&amp; [y, z]: edge[x])\n            if( dis[y] &gt; dis[x] + z ){\n                dis[y] = dis[x] + z;\n                if(!st[y]){ // \u5982\u679c\u88ab\u677e\u5f1b\u7684\u70b9\u4e0d\u5728\u961f\u5217\u4e2d\n                    st[y]=1;// \u5c31\u538b\u5165\u961f\u5217\n                    q.push(y);\n                }\n            }\n    }\n    return dis[e];\n}\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/#_5","title":"\u7ec3\u4e60","text":"Luogu P1462 \u901a\u5f80\u5965\u683c\u745e\u739b\u7684\u9053\u8def code  \u6838\u5fc3\u95ee\u9898\uff1a \uff08\u4e00\u6761\u8def\u5f84\uff0c\u8def\u5f84\u4e2d\u6240\u6709\u70b9\u7684\u6700\u5927\u503c\u662fV\uff0c\u4ee4V\u4e3a\u8fd9\u6761\u8def\u5f84\u7684\u4ee3\u4ef7\uff09 \u4ece 1-&gt;n \u7684\u6240\u6709\u53ef\u884c\u8def\u5f84\u4e2d \u627e\u5230\u4e00\u6761\u4ee3\u4ef7\u6700\u5c0f\u7684\u8def\uff08\u5373\u6700\u5c0f\u7684\u6700\u5927\u503c\uff09  \u5982\u4f55\u627e\u6240\u6709\u7684\u53ef\u884c\u8def\u5f84\uff1f \u663e\u7136\uff0c\u9898\u76ee\u7684\u9650\u52361\u4e3a\u8840\u91cf\uff0c\u9650\u52362\u4e3a\u91d1\u94b1\u3002 \u5bf9\u4e8e\u9650\u52361\uff0c\u53ea\u8981\u5230\u8fbe\u7ec8\u70b9\u524d\u8840\u91cf\u6ca1\u6709\u6389\u5b8c\uff0c\u90a3\u4e48\u5c31\u662f\u53ef\u884c\u7684\u3002 \u5bf9\u4e8e\u9650\u52362\u56e0\u4e3a\u9898\u76ee\u6ca1\u6709\u8981\u6c42\u6c42\u6700\u5c0f\u7684\u82b1\u8d39\u548c\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06\u91d1\u94b1\u7406\u89e3\u4e3a\uff1a     if \u8eab\u4e0a\u7684\u91d1\u94b1 &gt;= \u5f53\u524d\u70b9\u7684\u8fc7\u8def\u8d39 \u53ef\u4ee5\u901a\u8fc7 \u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u679a\u4e3e\u91d1\u94b1\u5f97\u5230\u6240\u6709\u53ef\u884c\u8def\u5f84\u3002O( C*mlogm )  \u5982\u4f55\u4f18\u5316\uff1f \u8bbeA\uff0cB\u5206\u522b\u4e3a\u6211\u4eec\u7684\u91d1\u94b1\uff0c\u4ee4 A &lt;= B\uff0c\u663e\u7136\uff0c\u5982\u679cA\u80fd\u901a\u8fc7\u7684\u8def\u5f84\uff0cB\u80af\u5b9a\u80fd\u901a\u8fc7 \u90a3\u4e48\u91d1\u94b1\u6ee1\u8db3\u4e8c\u6bb5\u6027\uff0c\u6211\u4eec\u8981\u627e\u7684\u662f\u5f62\u5982 \uff08&lt;=x\uff09\u7684\u91d1\u94b1\uff0c\u5373\u6700\u5c0f\u7684\u53ef\u884c\u8def\u5f84\u82b1\u8d39\u91d1\u94b1    C++<pre><code>#pragma G++ optimzie(\"Ofast\")\n#define fst first\n#define sed second\n#define pb push_back\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;cstring&gt;\n#include &lt;vector&gt;\n#include &lt;cmath&gt;\n#include &lt;map&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair&lt;int, int&gt; PII;\n\nconst int dxy[][2]={ {-1,0}, {1,0}, {0,-1}, {0,1} };\nconst double PI = acos(-1.0);\nconst int inf = 0x3f3f3f3f;\nconst int MOD = 1e9+7;\nconst int N = 1e4+10;\n\nvector&lt;PII&gt; edge[N];\nint dis[N]; // \u5230\u8fbe\u67d0\u70b9\u82b1\u8d39\u7684\u6700\u4f4e\u8840\u91cf\nbool st[N];\nint n, m, b;\nint f[N];   // \u6bcf\u4e2a\u70b9\u82b1\u8d39\u7684\u94b1\n\nbool dijkstra(int res, int s, int e){\n    memset(dis, 0x3f, sizeof dis);\n    memset(st, 0, sizeof st);\n    priority_queue&lt;PII, vector&lt;PII&gt;, greater&lt;PII&gt;&gt; heap;\n\n    dis[s]=0;\n    heap.push({dis[s], s});\n\n    while(heap.size()){\n        auto x=heap.top().sed;\n        heap.pop();\n\n        if(st[x]) continue;\n        st[x]=1;\n\n        for(auto &amp;[y, z]: edge[x])\n            if(f[x]&lt;=res)\n            if(f[y]&lt;=res)\n            if( dis[y] &gt; dis[x] + z){\n                dis[y] = dis[x] + z;\n                heap.push({dis[y], y});\n            }\n    }\n\n    if(dis[e]&gt;b)\n        return 0;\n    else\n        return 1;\n}\n\nvoid solve(){\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;b;\n    for(int i=1; i&lt;=n; i++)\n        scanf(\"%d\", &amp;f[i]);\n    for(int i=1; i&lt;=m; i++){\n        int a, b, c;\n        scanf(\"%d%d%d\", &amp;a, &amp;b, &amp;c);\n        edge[a].pb({b, c});\n        edge[b].pb({a, c});\n    }\n\n    if(!dijkstra(inf, 1, n))\n        cout&lt;&lt;\"AFK\";\n    else{\n        int l=1, r=inf;\n        // \u627e &gt;=x \u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\n        while(l&lt;r){\n            int mid=l+r&gt;&gt;1;\n            if(dijkstra(mid, 1, n)) r=mid;\n            else l=mid+1;\n        }\n        cout&lt;&lt;l;\n    }\n\n    return ;\n}\n\nint main(){\n    //ios::sync_with_stdio(0); cin.tie(0), cout.tie(0);\n    //freopen(\"in.txt\", \"r\", stdin); freopen(\"out.txt\", \"w\", stdout); \n    //int T; cin&gt;&gt;T; while(T--)\n    solve();\n    return 0;\n}\n</code></pre> Luogu P5767 [NOI1997] \u6700\u4f18\u4e58\u8f66 code  \u6838\u5fc3\u95ee\u9898\uff1a \u6c42 1-&gt;n \u7684\u6700\u5c0f\u6362\u4e58\u6b21\u6570\uff0c\u90a3\u4e48\u6700\u5c0f\u6362\u4e58\u6b21\u6570\u5c31\u662f\u6211\u4eec\u7684\u6700\u77ed\u8def  \u5efa\u56fe\uff1a \u5b58\u5728\u4e24\u6761\u8def\u7ebf c -&gt; a -&gt; b   d -&gt; a -&gt; e a\u5b58\u5728\u4e24\u4e2a\u51fa\u5ea6a -&gt; b, a -&gt; e\uff0c\u5982\u4f55\u533a\u5206\u4e24\u6761\u8def\u7ebf\uff1f\u4e0d\u59a8\u753b\u56fe\u6765\u5eb7\u5eb7  \u4ece\u56fe\u4e2d\u53ef\u4ee5\u53d1\u73b0\u5f53\u4ece\u9ed1\u8272\u7ebf\u8def\u5230\u84dd\u8272\u7ebf\u8def\u7684\u65f6\u5019\uff0c\u6362\u4e58\u6b21\u6570+1  \u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5bf9\u7ebf\u8def\u8fdb\u884c\u7f16\u53f7\uff0c  \u53d1\u751f\u6362\u4e58\u8fd9\u4e2a\u884c\u4e3a\u7684\u65f6\u5019\uff0c\u5c31\u662f\u7f16\u53f7\u4e0d\u540c\u3002  Notes\uff1a \u6211\u5230\u8fbea\u662f\u8d70\u7684\u9ed1\u8272\u7ebf\u8def\uff0c\u90a3\u4e48\u6211\u7684a\u6807\u8bb0\u4e3a\u9ed1\u8272\u7ebf\u8def\uff0c\u5f53\u6211\u4ecea\u62d3\u5c55\u5230\u5176\u4ed6\u7ebf\u8def\u65f6\uff0c \u5982\u679c\u662f\u5230e\uff0c\u4f9d\u7136\u662f\u9ed1\u8272\u7ebf\u8def\uff0c\u90a3\u4e48\u6362\u4e58\u6b21\u6570\u4e0d\u589e\u52a0\uff0c \u5982\u679c\u662f\u5230b\uff0c\u84dd\u8272\u7ebf\u8def\uff0c\u6362\u4e58\u6b21\u6570+1    C++<pre><code>/*NOI\nhttps://www.acwing.com/problem/content/description/922/\n*/\n/*\n    \u53ea\u6709\u76f8\u540c\u7684\u53ef\u4ee5\u76f8\u4e92\u5230\u8fbe\n    \u5bf9\u4e8e\u9700\u8981\u53ef\u4ee5\u6362\u4e58\u7684\u70b9, x-&gt;x \u82b1\u8d39\u4e3a 1\n    \u5176\u4f59\u70b9\u8bbe\u7f6e\u4e3a\u82b1\u8d39 0\n    \u76f4\u63a5\u8dd1dijkstra\u5c31ok\n*/\n#pragma G++ optimize(\"Ofast\")\n#define fst first\n#define sed second\n#define pb push_back\n#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;queue&gt;\n#include &lt;vector&gt;\n#include &lt;sstream&gt;\nusing namespace std;\n\ntypedef pair&lt;int, int&gt; PII;\nconst int N = 510;\n\nvector&lt;vector&lt;PII&gt;&gt; edge(N);\nbool st[N];\nPII dis[N]; // \u6700\u5c11\u6362\u4e58 \u53ca \u4e58\u5750\u8def\u7ebf\nint n, m, id;   // \u8d77\u70b9\u4e58\u5750\u7684\u8def\u7ebf;\n\nint dijkstra(int s, int id, int e) {\n    memset(dis, 0x3f, sizeof dis);\n    priority_queue&lt;PII, vector&lt;PII&gt;, greater&lt;PII&gt;&gt; heap;\n    dis[s] = { 0, id };\n    heap.push({ dis[s].fst, s });\n\n    while (heap.size()) {\n        auto x = heap.top().sed;\n        heap.pop();\n\n        if (st[x]) continue;\n        st[x] = 1;\n        if (st[e]) break;\n\n        for (auto&amp; [y, z] : edge[x])    // x -&gt; y \u7ebf\u8def z\n            if (dis[x].sed == z) {      // \u5982\u679c\u662f\u540c\u4e00\u7ebf\u8def\uff0c\u76f4\u63a5\u8d4b\u503c\n                dis[y] = dis[x];\n                    heap.push({ dis[y].fst, y });\n            }                           // \u5982\u679c\u4e0d\u662f\u540c\u4e00\u7ebf\u8def\uff0c\u4e14\u53ef\u4ee5\u677e\u5f1b\n            else if (dis[y].fst &gt; dis[x].fst + 1){\n                dis[y] = { dis[x].fst + 1, z };\n                    heap.push({ dis[y].fst, y });\n            }\n    }\n    return dis[e].fst;\n}\n\nint main() {\n    //freopen(\"in.txt\", \"r\", stdin); freopen(\"out.txt\", \"w\", stdout);\n    cin &gt;&gt; m &gt;&gt; n; getchar(); getchar();\n    for (int i = 1; i &lt;= m; i++) {\n        int a, b;\n        string s;\n        getline(cin, s);\n        stringstream ss(s);\n        ss &gt;&gt; a;\n        if (a == 1) id = i;\n        while (ss &gt;&gt; b) {\n            edge[a].pb({ b, i });   // \u7ebf\u8defID\n            a = b;\n            if (a == 1) id = i;\n        }\n    }\n\n    int ans = dijkstra(1, id, n);\n    if (ans == 0x3f3f3f3f)\n        cout &lt;&lt; \"NO\";\n    else\n        cout &lt;&lt; ans;\n    return 0;\n}\n</code></pre> Luogu P5764 [CQOI2005] \u65b0\u5e74\u597d code  \u6838\u5fc3\u95ee\u9898\uff1a \u6c42 1-&gt;(a-&gt;b-&gt;c-&gt;d-&gt;e) \u7684\u6700\u77ed\u8def(\u5176\u4e2dabcde\u53ef\u4ee5\u4efb\u610f\u4e92\u6362)  \u601d\u8def\uff1a \u663e\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9abcde\u8fdb\u884c\u4e00\u6b21\u5168\u6392\u5217\uff0c\u83b7\u5f97\u4ed6\u4eec\u6240\u6709\u7684\u987a\u5e8f\uff08\u5168\u6392\u5217\u4e4b\u524d\u5e94\u5f53\u6392\u5e8f\u4f7f\u5f97\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff09  \u540c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u540c\u4e00\u6761\u8def\u5f84\uff0c\u4f8b\u5982a-&gt;b\uff0c\u53ef\u80fd\u4f1a\u8fdb\u884c\u591a\u6b21\u6700\u77ed\u8def\uff0c \u4e3a\u4e86\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06a-&gt;b\u7684\u8def\u5f84\u5b58\u50a8\u4e0b\u6765\uff0c\u4e5f\u5c31\u662f\u8bb0\u5fc6\u5316\u3002 \u800c\u7ad9\u70b9\u7684\u8303\u56f4\u8f83\u5927\uff0c\u4e3a\u4e86\u907f\u514dMLE\uff0c\u6211\u4eec\u53c8\u9700\u8981\u505a\u4e00\u6b21\u79bb\u6563\u5316\u3002  C++<pre><code>#define fst first\n#define sed second\n#define pb push_back\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n#include &lt;queue&gt;\n#include &lt;map&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\ntypedef pair&lt;int, int&gt; PII;\n\nconst int N=5e4+10;\n\nvector&lt;PII&gt; edge[N];\nint a[10];\nint dis[N], ddis[10][10];\nbool st[N];\nmap&lt;int, int&gt; H;\nint n, m;\n\nvoid dijkstra(int s){\n    memset(dis, 0x3f, sizeof dis);\n    memset(st, 0, sizeof st);\n    priority_queue&lt;PII, vector&lt;PII&gt;, greater&lt;PII&gt;&gt; heap;\n\n    dis[s]=0;\n    heap.push({dis[s], s});\n\n    while(heap.size()){\n        auto x=heap.top().sed;\n        heap.pop();\n\n        if(st[x]) continue;\n        st[x]=1;\n\n        for(auto &amp;[y, z]: edge[x])\n            if( dis[y] &gt; dis[x] + z)\n                dis[y] = dis[x] + z,\n                heap.push({dis[y], y});\n    }\n\n    for(int i=2; i&lt;=6; i++)\n        ddis[ H[s] ][i] = dis[ a[i] ];\n    // \u6620\u5c04\u540e\u7684 [s][e] = \u539f\u672c\u7684 dis\n}\n\nint main(){\n    //freopen(\"in\", \"r\", stdin); freopen(\"out\", \"w\", stdout);\n    cin&gt;&gt;n&gt;&gt;m;\n    H[1]=1;\n    for(int i=2; i&lt;=6; i++) cin&gt;&gt;a[i], H[ a[i] ]=i; // \u5927\u8303\u56f4\u6620\u5c04\u5230\u5c0f\u8303\u56f4\n    for(int i=1; i&lt;=m; i++){\n        int x, y, t;\n        scanf(\"%d%d%d\", &amp;x, &amp;y, &amp;t);\n        edge[x].pb({y, t});\n        edge[y].pb({x, t});\n    }\n\n    dijkstra(1);\n    for(int i=2; i&lt;=6; i++) dijkstra(a[i]);\n\n    int ans=0x3f3f3f3f;\n    sort(a+2, a+2+5);\n    do{\n        int res=ddis[ 1 ][ H[a[2]] ];\n        for(int i=3; i&lt;=6; i++)\n            res+=ddis[ H[a[i-1]] ][ H[a[i]] ];\n        ans=min(ans, res);\n    }while(next_permutation(a+2, a+2+5));\n\n    cout&lt;&lt;ans;\n    return 0;\n}\n</code></pre> Acwing 903. \u6602\u8d35\u7684\u8058\u793c code  \u6838\u5fc3\u95ee\u9898\uff1a  \u6c42\u591a\u4e2a\u70b9\u5230\u70b91\u7684\u6700\u77ed\u8def\u5f84 \u5bf9\u4e8e\u6b64\u7c7b\u95ee\u9898\uff0c\u8003\u8651\u5efa\u7acb\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u8f6c\u53d8\u6210 \u4ece\u8d85\u7ea7\u6e90\u70b9\u5230\u70b91\u7684\u6700\u77ed\u8def\u5f84     \u7b49\u7ea7\u9650\u5236\uff1a  \u5bf9\u4e8e\u7b49\u7ea7\u9650\u5236\uff0c\u56e0\u4e3a\u4e0d\u80fd\u8d85\u8fc7m\u7684\u7b49\u7ea7\u9650\u5236 \u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u4ea4\u6613\u7684\u70b9\u7684\u7b49\u7ea7\uff0c\u5e94\u8be5\u7ef4\u6301\u5728\u4e00\u4e2a\u533a\u95f4[x, x+m]  \u56e0\u4e3a1\u53f7\u70b9\u5fc5\u987b\u53c2\u4e0e\u4ea4\u6613\uff0c\u90a3\u4e48\u6211\u4eec\u641c\u7d22\u7684\u533a\u95f4\u5c31\u662f     w[1]-m, w[1]  \u76f4\u5230 w[1], w[1]+m   C++<pre><code>#define fst first\n#define sed second\n#define pb push_back\n#include &lt;iostream&gt;\n#include &lt;queue&gt;\n#include &lt;cstring&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\ntypedef pair&lt;int, int&gt; PII;\n\nconst int N = 110;\n\nint edge[N][N];\nint dis[N];\nbool st[N];\nint w[N];\n\nint m, n, L;   // \u7b49\u7ea7\u9650\u5236 \u7269\u54c1\u603b\u91cf\n\nint spfa(int s, int e, int low, int upp) {\n    memset(st, 0, sizeof st);\n    memset(dis, 0x3f, sizeof dis);\n    queue&lt;int&gt; q;\n\n    dis[s] = 0;\n    q.push(s), st[s] = 1;\n\n    while (q.size()) {\n        auto x = q.front();\n        q.pop(), st[x] = 0;\n\n        for (int y = 1; y &lt;= n; y++)\n            if ( low &lt;= w[y] &amp;&amp; w[y] &lt;= upp )\n            if (dis[y] &gt; dis[x] + edge[x][y]) {\n                dis[y] = dis[x] + edge[x][y];\n                if (!st[y])\n                    q.push(y), st[y] = 1;\n            }\n    }\n    return dis[e];\n}\n\nint main() {\n    //freopen(\"in.txt\", \"r\", stdin); freopen(\"out.txt\", \"w\", stdout);\n    memset(edge, 0x3f, sizeof edge);\n    cin &gt;&gt; m &gt;&gt; n;\n    for (int i = 1; i &lt;= n; i++) {\n        // \u7269\u54c1\u4ef7\u503c\n        // \u4e3b\u4eba\u5730\u4f4d\n        // \u66ff\u4ee3\u54c1\u603b\u91cf\n\n        int p, l, x;\n        cin &gt;&gt; p &gt;&gt; l &gt;&gt; x;\n        w[i]=l;\n\n        edge[0][i] = p; // \u8d85\u7ea7\u6e90\u70b9\n\n        for (int j = 1; j &lt;= x; j++) {\n            int t, v;\n            cin &gt;&gt; t &gt;&gt; v;\n            edge[t][i] = v; // t\u7269\u54c1\u6362i\u7269\u54c1,\u82b1\u8d39v\n        }\n    }\n\n    int ans = 0x3f3f3f3f;\n    // \u5730\u4f4d\u679a\u4e3e\n    for (int i = w[1] - m; i &lt;= w[1]; i++) ans = min (ans, spfa (0, 1, i, i + m));\n    cout &lt;&lt; ans;\n    return 0;\n}\n</code></pre> Luogu P1144 \u6700\u77ed\u8def\u8ba1\u6570 code  \u5982\u679c\u6211\u4eec\u7528dijkstra\u6765\u601d\u8003\u8fd9\u9053\u95ee\u9898\uff0c\u4f1a\u53d1\u73b0\u6211\u4eec\u5f88\u96be\u7ef4\u62a4\u6570\u91cf  \u6362\u4e00\u4e2a\u601d\u8003\u65b9\u5411\uff0c \u5982\u679c\u6211\u4eec\u8bbf\u95ee\u4e00\u4e2a\u70b9\uff0c\u8bbf\u95ee\u7684\u8def\u5f84\u5c31\u662f\u6700\u77ed\u8def\uff0c \u90a3\u4e48\u8bbf\u95ee\u5230\u8be5\u70b9\u7684\u603b\u6b21\u6570\uff0c\u5c31\u662f\u8be5\u70b9\u7684\u6700\u77ed\u8def\u6570\u91cf  \u663e\u7136\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u7528BFS\u6765\u5bf9\u56fe\u8fdb\u884c\u641c\u7d22 BFS\u7684\u6309\u5c42\u8bbf\u95ee\uff0c\u80fd\u4fdd\u8bc1\u8bbf\u95ee\u5230\u7684\u6bcf\u4e2a\u70b9\u90fd\u662f\u6700\u8fd1\u7684   C++<pre><code>#define pb push_back\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;queue&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nconst int N=1e5+10;\nconst int MOD=100003;\n\nvector&lt;int&gt; edge[N]; \nbool st[N];\nint dis[N], dep[N]; // \u6700\u77ed\u8def \u548c \u5c42\n\nint n, m;\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=m; i++){\n        int x, y;\n        scanf(\"%d%d\", &amp;x, &amp;y);\n        edge[x].pb(y);\n        edge[y].pb(x);\n    }\n\n    queue&lt;int&gt; q;\n    q.push(1), st[1]=1, dis[1]=1, dep[1]=1;\n\n    while(q.size()){\n        auto x=q.front();\n        q.pop();\n\n        for(auto y: edge[x]){\n            if(!st[y]) q.push(y), st[y]=1, dep[y]=dep[x]+1;\n            if(dep[y]==dep[x]+1) dis[y]=(dis[x]+dis[y])%MOD;\n        }\n    }\n\n    for(int i=1; i&lt;=n; i++)\n        cout&lt;&lt;dis[i]&lt;&lt;\"\\n\";\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/#_6","title":"\u591a\u6e90\u6700\u77ed\u8def","text":""},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/#floyd","title":"Floyd","text":"<p>\u5c06\u81ea\u5df1\u5230\u8fbe\u81ea\u5df1\u7684\u6700\u77ed\u8def\u8bbe\u7f6e\u4e3a0\uff0c\u5176\u4f59\u8bbe\u7f6e\u4e3a+\u221e \u4efb\u610f\u4e24\u70b9\uff0c\u90fd\u53ef\u4ee5\u7ecf\u8fc7\u4efb\u610f\u4e00\u70b9\uff0c\u5c1d\u8bd5\u677e\u5f1b\u64cd\u4f5c</p> C++<pre><code>int n, m;\nint dis[N][N];\n// O(n^3)\nvoid flody(){\n    for(int k=1; k&lt;=n; k++)\n    for(int i=1; i&lt;=n; i++)\n    for(int j=1; j&lt;=n; j++)\n        dis[i][j]=min(dis[i][j], dis[i][k]+dis[k][j]);\n}\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/#_7","title":"\u7ec3\u4e60","text":"Luogu P2910 [USACO08OPEN] Clear And Present Danger S  code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=110;\n\nint g[N][N];\nint a[N*100];\nint n, m;\n\nvoid Floyd(){\n    for(int k=1; k&lt;=n; k++)\n        for(int i=1; i&lt;=n; i++)\n            for(int j=1; j&lt;=n; j++)\n                g[i][j] = min(g[i][j], g[i][k] + g[k][j]);\n}\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=m; i++) cin&gt;&gt;a[i];\n    for(int i=1; i&lt;=n; i++)\n        for(int j=1; j&lt;=n; j++)\n            scanf(\"%d\", &amp;g[i][j]);\n    Floyd();\n\n    for(int i=2; i&lt;=m; i++)\n        a[0] += g[ a[i-1] ][ a[i] ];\n\n    cout&lt;&lt;a[0];\n    return 0;\n}\n</code></pre> Luogu P6464 [\u4f20\u667a\u676f #2 \u51b3\u8d5b] \u4f20\u9001\u95e8 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nconst int N=1e2+10;\n\nint n, m;\n\nint g[N][N];\nint bk[N][N];\nint ans = 0x7fffffff;\n\nint main(){\n    memset(g, 0x3f, sizeof g);\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=m; i++){\n        int x, y, z; scanf(\"%d%d%d\", &amp;x, &amp;y, &amp;z);\n        g[x][y] = g[y][x] = z;\n    }\n    for(int i=0; i&lt;=n; i++) g[i][i] = 0;\n\n    for(int k=1; k&lt;=n; k++)\n        for(int i=1; i&lt;=n; i++)\n            for(int j=1; j&lt;=n; j++)\n                g[i][j] = min(g[i][j], g[i][k]+g[k][j]);\n\n    for(int x=1; x&lt;=n; x++)\n    for(int y=x+1; y&lt;=n; y++){  // \u679a\u4e3e\u4e24\u4e2a\u70b9        \n        memcpy(bk, g, sizeof bk);\n        g[x][y] = 0;\n        g[y][x] = 0;\n        for(int i=1; i&lt;=n; i++)\n            for(int j=1; j&lt;=n; j++)\n                g[i][j] = min(g[i][j], g[i][y]+g[y][j]);\n        for(int i=1; i&lt;=n; i++)\n            for(int j=1; j&lt;=n; j++)\n                g[i][j] = min(g[i][j], g[i][x]+g[x][j]);\n\n        for(int i=1; i&lt;=n; i++)\n            for(int j=i+1; j&lt;=n; j++)\n                g[0][0] += g[i][j];\n        ans = min(ans, g[0][0]);\n\n        memcpy(g, bk, sizeof g);\n    }\n\n    cout&lt;&lt;ans;\n\n    return 0;\n}\n</code></pre> Luogu P1119 \u707e\u540e\u91cd\u5efa code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nconst int N=210;\n\nint dis[N][N];\nbool st[N];\nint ti[N];  // \u6bcf\u4e2a\u70b9\u4fee\u597d\u7684\u65f6\u95f4\n\nint n, m, q;\n\nint floyd(int x, int y, int t){\n    for(int k=0; k&lt;n; k++){\n        if(ti[k]&gt;t || st[k]) continue;\n        st[k]=1;\n\n        for(int i=0; i&lt;n; i++)\n            for(int j=0; j&lt;n; j++)\n                if( dis[i][j] &gt; dis[i][k] + dis[k][j] )\n        dis[j][i] = dis[i][j] = dis[i][k] + dis[k][j];\n    }\n\n    if(dis[x][y]==0x3f3f3f3f || ti[x]&gt;t || ti[y]&gt;t)\n        return -1;\n    else\n        return dis[x][y];\n}\n\nint main(){\n    memset(dis, 0x3f, sizeof dis); \n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=0; i&lt;n; i++) scanf(\"%d\", &amp;ti[i]);\n    for(int i=1; i&lt;=m; i++){\n        int x, y, w;\n        scanf(\"%d%d%d\", &amp;x, &amp;y, &amp;w);\n        dis[x][y]=min(dis[x][y], w);\n        dis[y][x]=min(dis[y][x], w);\n    }\n    for(int i=0; i&lt;n; i++) dis[i][i]=0;\n\n    cin&gt;&gt;q;\n    while(q--){\n        int x, y, t;\n        scanf(\"%d%d%d\", &amp;x, &amp;y, &amp;t);\n        cout&lt;&lt;floyd(x, y, t)&lt;&lt;\"\\n\";\n    }\n    return 0;\n}   \n</code></pre> Acwing 1125. \u725b\u7684\u65c5\u884c code  \u6838\u5fc3\u95ee\u9898\uff1a  \u9996\u5148\uff08\u5c06\u76f4\u5f84\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\u6700\u8fdc\u7684\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\uff09\uff0c \u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\u7684\u6700\u5927\u76f4\u5f84\uff0c\u4e3a\u8fd9\u4e2a\u8fde\u901a\u5757\u7684V \u5728\u6240\u6709\u7684V\u4e2d\uff0c\u627e\u5230\u6700\u5927\u7684V\uff0c\u5373\u6700\u5927\u7684\u6700\u5c0f\u503c    \u5173\u4e8e\u8fde\u63a5\uff1a \u9898\u76ee\u8981\u6c42\u6211\u4eec\u8fde\u63a5\u4e24\u4e2a\u8fde\u901a\u5757\uff0c\u4f7f\u5f97\u5176\u53d8\u6210\u4e00\u4e2a\u8fde\u901a\u5757\u3002  \u56e0\u6b64\uff0c\u5bf9\u4e8eA\uff0cB\u4e24\u4e2a\u8fde\u901a\u5757\uff0c\u5b58\u5728\u4e09\u79cd\u60c5\u51b5  A\u5185\u90e8\uff1a  A\u7684\u76f4\u5f84 B\u5185\u90e8\uff1a   B\u7684\u76f4\u5f84 \u8fde\u63a5AB\uff1aAB\u7684\u76f4\u5f84  \u6211\u4eec\u9996\u5148\u8fdb\u884c\u4e00\u6b21floyd\uff0c\u518d\u5728\u8fd9\u4e09\u79cd\u60c5\u51b5\u4e2d\u627e\u6700\u5927\u7684\u76f4\u5f84  \u60c5\u51b51\u30012\uff0c\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5757  double dis[N]; // \u540c\u4e00\u7267\u573a\u4e2d(\u5230\u8fbe\u8be5\u70b9\u7684\u6700\u8fdc\u7684\u7684\u4e00\u4e2a\u70b9)\u7684(\u8ddd\u79bb)  for(int i=1; i&lt;=n; i++) \u00a0 \u00a0 for(int j=1; j&lt;=n; j++) \u00a0 \u00a0 \u00a0 \u00a0 if(edge[i][j]j\u66f4\u957f\uff0c\u90a3\u4e48dis[i]\u66f4\u65b0  res1\u7ef4\u62a4\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u7684\u76f4\u5f84   \u60c5\u51b53\uff0c\u4e0d\u540c\u8fde\u901a\u5757\u8fde\u63a5\uff1a  for(int i=1; i&lt;=n; i++) for(int j=1; j&lt;=n; j++) if(edge[i][j]&gt;inf/2) \u00a0 \u00a0 res2=min(res2, dis[i]+c(i,j)+dis[j]);  \u5982\u679c\u662f\u4e24\u4e2a\u8fde\u901a\u5757\uff0cedge[i][j]\u5fc5\u5b9a\u4e0d\u5b58\u5728  \u5bf9\u4e8e\u4e24\u4e2a\u8fde\u901a\u5757\u7684\u60c5\u51b5\uff0c\u5f53\u8fde\u63a5\u540e\uff0c \u6211\u4eec\u9700\u8981\u83b7\u5f97\u65b0\u7684\u8fde\u901a\u5757\u7684\u76f4\u5f84 \u5373\uff1adis[A]+\u8fde\u63a5\u7ebf+dis[B]\uff0cA-&gt;B\u53ea\u5b58\u5728\u8fde\u63a5\u7ebf\u4e00\u6761\u8def\u5f84  Notes\uff1a\u5de6\u8fb9\u56e0\u4e3a\u76f4\u5f84\u59cb\u7ec8\u5b58\u5728\uff0c\u6240\u4ee5\u53d6MAX\uff0c\u53f3\u8fb9\u662f\u6211\u4eec\u8fde\u63a5\u7684\uff0c\u4e3a\u4e86\u5c3d\u53ef\u80fd\u5c0f\uff0c\u6240\u4ee5\u53d6\u6700\u5c0f\u7684\u8fde\u63a5\u65b9\u6848    C++<pre><code>#pragma G++ optimzie(\"Ofast\")\n#define fst first\n#define sed second\n#define pb push_back\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;cstring&gt;\n#include &lt;vector&gt;\n#include &lt;cmath&gt;\n#include &lt;map&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair&lt;int, int&gt; PII;\n\nconst int dxy[][2]={ {-1,0}, {1,0}, {0,-1}, {0,1} };\nconst double PI = acos(-1.0);\nconst int inf = 0x3f3f3f3f;\nconst int MOD = 1e9+7;\nconst int N = 200;\n\nPII xy[N];          // \u6bcf\u4e2a\u70b9\u7684\u5750\u6807\nint id[N];          // \u6bcf\u4e2a\u7267\u533a\u6240\u5c5e\u7684\u7267\u573a\ndouble edge[N][N];  // \u4e24\u70b9\u95f4\u7684\u8ddd\u79bb\ndouble dis[N];      // \u540c\u4e00\u7267\u573a\u4e2d\u5230\u8fbe\u8be5\u70b9\u7684\u6700\u957f\u8ddd\u79bb\nbool st[N];         // \u5f53\u524d\u7267\u533a\u6709\u65e0\u4f7f\u7528 \nint n, m;           // \u7267\u533a\u6570\u91cf \u7267\u573a\u6570\u91cf \n\ndouble c(int i, int j){ // \u4e24\u70b9\u95f4\u7684\u8ddd\u79bb\n    int xi=xy[i].fst, yi=xy[i].sed;\n    int xj=xy[j].fst, yj=xy[j].sed;\n    return sqrt( pow(xj-xi, 2) + pow(yj-yi, 2) );\n}\n\nvoid solve(){\n    cin&gt;&gt;n;\n    // \u6bcf\u4e2a\u70b9\u7684\u5750\u6807\n    for(int i=1; i&lt;=n; i++){\n        int x, y; cin&gt;&gt;x&gt;&gt;y;\n        xy[i]={x, y};\n    }\n    // \u8bfb\u5165\u5e76\u8ba1\u7b97\u5730\u56fe\n    for(int i=1; i&lt;=n; i++){\n        string s; cin&gt;&gt;s;\n        for(int j=1; j&lt;=n; j++)\n            if(s[j-1]=='1' || i==j) \n                edge[i][j]=c(i, j);\n            else\n                edge[i][j]=inf;\n    }\n    // floyd \u8ba1\u7b97\u5f53\u524d\u6700\u77ed\u8def\n    for(int k=1; k&lt;=n; k++)\n        for(int i=1; i&lt;=n; i++)\n            for(int j=1; j&lt;=n; j++)\n                edge[i][j]=min(edge[i][j], edge[i][k]+edge[k][j]);\n\n    double res1=-inf, res2=inf;\n    // \u5230\u8fbei\u70b9\u7684\u6700\u957f\u8def\u5f84\n    for(int i=1; i&lt;=n; i++)\n        for(int j=1; j&lt;=n; j++)\n            if(edge[i][j]&lt;inf/2){\n                dis[i]=max(dis[i], edge[i][j]);\n                res1=max(res1, dis[i]);\n            }\n\n    // \u901a\u8fc7i\u70b9\u5230\u4e0d\u80fd\u5230\u8fbe\u7684j\u70b9\u7684\u6700\u77ed\u8def\u5f84\n    for(int i=1; i&lt;=n; i++)\n        for(int j=1; j&lt;=n; j++)\n            if(edge[i][j]&gt;inf/2)\n                res2=min(res2, dis[i]+c(i,j)+dis[j]);\n\n    printf(\"%.6lf\", max(res1, res2));\n    return ;\n}\n\nint main(){\n    //ios::sync_with_stdio(0); cin.tie(0), cout.tie(0);\n    //freopen(\"in.txt\", \"r\", stdin); freopen(\"out.txt\", \"w\", stdout); \n    //int T; cin&gt;&gt;T; while(T--)\n    solve();\n    return 0;\n}\n</code></pre> Luogu P1347 \u6392\u5e8f code  \u548c\u4e4b\u524d\u505a\u7684\u707e\u540e\u91cd\u5efa\u95ee\u9898\u6709\u5f02\u66f2\u540c\u5de5\u4e4b\u5999\uff0c\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u9053\u9898\u6211\u4eec\u4e0d\u9700\u8981\u5224\u65ad\u5f53\u524d\u70b9\u662f\u5426\u80fd\u591f\u8fdb\u884c\u4f20\u9012 \u56e0\u4e3a\u662f\u987a\u5e8f\u8f93\u5165\u7684\u539f\u56e0\uff0c\u6240\u4ee5\u5bf9\u6bcf\u6b21\u8f93\u5165\u540e\u7684\u8def\u5f84\uff0c\u6574\u4f53\u518d\u505a\u4e00\u6b21\u4f20\u9012\u95ed\u5305\u3002\u518d\u68c0\u67e5\u662f\u5426\u4f7f\u5f97\u6240\u6709\u70b9\u8fde\u901a\u3002    \u5173\u4e8e\u4ece\u5c0f\u5230\u8fbe\u8f93\u51fa  \u56e0\u4e3a\u6570\u636e\u8303\u56f4\u5e76\u4e0d\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u91c7\u53d6\u6700\u539f\u59cb\u7684\u65b9\u6cd5\uff0c\u6bcf\u6b21\u5728\u5e8f\u5217\u4e2d\u627e\u5230\u672a\u6807\u8bb0\u7684\u6700\u5c0f\u503c\uff0c\u7136\u540e\u6807\u8bb0\u8f93\u51fa\u3002   C++<pre><code>#include &lt;cstring&gt;\n#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=30;\nint d[N][N];// d[i][j] i&lt;j \nbool st[N]; // \u786e\u5b9a\u6700\u5c0f\u503c\u7684\u65f6\u5019\u4f7f\u7528\nint n, m;\n\nint ck(){\n    for(int i=0; i&lt;n; i++){\n        int cnt=0;\n        for(int j=0; j&lt;n; j++){\n            if(d[i][j] &amp;&amp; d[j][i] || d[i][i] || d[j][j]) return 2;\n            if(d[i][j] || d[j][i]) cnt++;\n        }\n        if(cnt!=n-1) return 3; \n    }\n    return 1;\n}\n\nchar getmin(){\n    int res=-1;\n    for(int i=0; i&lt;n; i++)\n        if(!st[i]){\n            bool flg=1;\n            for(int j=0; j&lt;n; j++) // \u68c0\u67e5\u662f\u4e0d\u662f\u6700\u5c0f\u7684\n                if(!st[j] &amp;&amp; d[j][i]){\n                    flg=0;\n                    break;\n                }\n\n            if(flg){\n                st[i]=1;\n                return 'A'+i;\n            }\n        }\n}\n\nint main(){\n    //freopen(\"in\", \"r\", stdin); freopen(\"out\", \"w\", stdout);\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int x=1; x&lt;=m; x++){\n        string s; cin&gt;&gt;s;\n        int a=s[0]-'A', b=s[2]-'A';\n        d[a][b]=1;\n\n        // \u505a\u4e00\u6b21Floyd\n        for(int k=0; k&lt;n; k++)\n            for(int i=0; i&lt;n; i++)\n                for(int j=0; j&lt;n; j++)\n                    d[i][j] |= d[i][k] &amp;&amp; d[k][j];\n\n        // \u68c0\u67e5\u4e00\u4e0b\n        int flg=ck();\n\n        if(flg==1){ // \n            printf(\"Sorted sequence determined after %d relations: \", x);\n            for(int i=0; i&lt;n; i++) cout&lt;&lt;getmin();\n            cout&lt;&lt;\".\";\n            return 0;\n        }\n        if(flg==2){\n            printf(\"Inconsistency found after %d relations.\", x);\n            return 0;\n        }\n\n    }\n    printf(\"Sorted sequence cannot be determined.\");\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/#_8","title":"\u4e0e\u4e4b\u76f8\u5173","text":""},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/#_9","title":"\u4f20\u9012\u95ed\u5305","text":"Luogu B3611 \u3010\u6a21\u677f\u3011\u4f20\u9012\u95ed\u5305 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1e2+10;\n\nint g[N][N];\nint n;\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++)\n        for(int j=1; j&lt;=n; j++)\n            scanf(\"%d\", &amp;g[i][j]);\n    for(int k=1; k&lt;=n; k++)\n        for(int i=1; i&lt;=n; i++)\n            for(int j=1; j&lt;=n; j++)\n                g[i][j] = g[i][j] || g[i][k] &amp;&amp; g[k][j];\n\n    for(int i=1; i&lt;=n; i++, cout&lt;&lt;\"\\n\")\n        for(int j=1; j&lt;=n; j++, cout&lt;&lt;\" \")\n            cout&lt;&lt;g[i][j];\n\n    return 0;\n}\n</code></pre> AcWing 4244. \u725b\u7684\u6bd4\u8d5b code C++<pre><code>/*\n\u4f20\u9012\u95ed\u5305\uff1a\n\u5df2\u77e5\u4e00\u4e2a\u6709\u5411\u56fe\u4e2d\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u662f\u5426\u6709\u8fde\u8fb9\uff0c\u8981\u6c42\u5224\u65ad\u4efb\u610f\u4e24\u70b9\u662f\u5426\u8fde\u901a\u3002\n\u4e0d\u5173\u5fc3\u957f\u5ea6\uff0c\u53ea\u5173\u5fc3\u8fde\u901a\u6027\uff0c\u5373\u5c06\u677e\u5f1b\u64cd\u4f5c\uff1a\n\nd[i][j] = min( d[i][j] ,    d[i][k] +  d[k][j] )   \u53d8\u4e3a\nd[i][j] =      d[i][j] || ( d[i][k] &amp;&amp; d[k][j] )\n*/\n\n#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=110;\n\nint d[N][N];    // d[i][j] \u4ee3\u8868 i-&gt;j \u5373 i&gt;j\nint n, m;\n\nbool ck(int i){\n    int cnt=0;\n    for(int j=1; j&lt;=n; j++)\n        if(d[i][j] || d[j][i]) cnt++;\n    if(cnt==n-1) return 1;\n    return 0;\n}\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=m; i++){\n        int a, b; scanf(\"%d%d\", &amp;a, &amp;b);\n        d[a][b]=1;\n    }\n\n    for(int k=1; k&lt;=n; k++)\n        for(int i=1; i&lt;=n; i++)\n            for(int j=1; j&lt;=n; j++)\n                d[i][j] |= d[i][k] &amp;&amp; d[k][j];\n\n    // \u68c0\u67e5\u6bcf\u5934\u725b\u548c\u6240\u6709\u725b\u7684\u8fde\u901a\u6027\n    int ans=0;\n    for(int i=1; i&lt;=n; i++)\n        if(ck(i)) ans++;\n    cout&lt;&lt;ans;\n\n    return 0;\n}\n</code></pre> Luogu P1037 [NOIP2002 \u666e\u53ca\u7ec4] \u4ea7\u751f\u6570  code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nconst int N=15;\n\nint g[N][N];    // i -&gt; j \u662f\u5426\u53ef\u884c\nstring ans=\"1\";\n\nstring MUL(string A, int b) { // \u6b63\u5e8f\u8f93\u5165 \u6b63\u5e8f\u8f93\u51fa\n    reverse(A.begin(), A.end());\n    string res;\n    int x = 0;\n    for (int i = 0; i &lt; A.size() || x; i++) {\n        if (i &lt; A.size()) x += (A[i] - '0') * b;\n        res.push_back(x % 10 + '0');\n        x /= 10;\n    }   // \u53bb\u524d\u5bfc0\n    while (res.size() &gt; 1 &amp;&amp; res.back() == '0') res.pop_back();\n    reverse(res.begin(), res.end());\n    return res;\n}\n\nint main(){\n    string s; cin&gt;&gt;s;\n    int m; cin&gt;&gt;m;\n    for(int i=1; i&lt;=m; i++){\n        int a, b; cin&gt;&gt;a&gt;&gt;b;\n        g[a][b] = 1;\n    }\n    for(int i=0; i&lt;=9; i++) g[i][i] = 1;\n    for(int k=1; k&lt;=9; k++)\n        for(int i=0; i&lt;=9; i++)\n            for(int j=1; j&lt;=9; j++)\n                g[i][j] = g[i][j] || g[i][k] &amp;&amp; g[k][j];\n\n    for(int i=0; i&lt;=9; i++)\n        for(int j=1; j&lt;=9; j++)\n            if(g[i][j]) g[i][0]++;\n\n    for(auto c: s){\n        int u = c-'0';\n        if(g[u][0])\n            ans = MUL(ans, g[u][0]); \n    }\n\n    cout&lt;&lt;ans;\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/#_10","title":"\u8d1f\u73af","text":"Luogu P3385 \u3010\u6a21\u677f\u3011\u8d1f\u73af code C++<pre><code>#define fst first\n#define sed second\n#define pb push_back\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\ntypedef pair&lt;int, int&gt; PII;\nconst int N=2e3+10;\n\nint n, m;\n\nvector&lt;vector&lt;PII&gt;&gt; edge(N);\nint dis[N]; // \u6700\u77ed\u8def\nbool st[N]; // \u662f\u5426\u5728\u961f\u5217\u4e2d\nint cnt[N]; // \u5230\u8fbe\u8be5\u70b9\u7ecf\u8fc7\u7684\u8fb9\u6570\n\nbool spfa(int s){   // \u6700\u77ed\u8def\u8def\u5f84\u6570\u5224\u8d1f\u73af\n    memset(dis, 0x3f, sizeof dis);\n    memset(st, 0, sizeof st);\n    memset(cnt, 0, sizeof cnt);\n\n    queue&lt;int&gt; q;\n    q.push(s), st[s]=1, dis[s]=0;\n\n    while(q.size()){\n        auto x = q.front(); q.pop(), st[x]=0;\n\n        for(auto &amp;[y,z]: edge[x])\n            if( dis[y] &gt; dis[x] + z ){\n                dis[y] = dis[x] + z;\n\n                cnt[y] = cnt[x] + 1;\n                if(cnt[y] &gt; n) return 1;   // \u8d1f\u73af\uff0cn\u662f\u70b9\u7684\u6570\u91cf\n\n                if(!st[y]) q.push(y), st[y]=1;\n            }\n    }\n    return 0;\n}\n\nvoid solve(){\n    for(auto &amp;e: edge) e.clear();\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=m; i++){\n        int a, b, c; scanf(\"%d%d%d\", &amp;a, &amp;b, &amp;c);\n        edge[a].pb({b, c});\n        if(c&gt;=0) edge[b].pb({a, c});\n    }\n\n    if(spfa(1)) puts(\"YES\");\n    else puts(\"NO\");\n\n}\n\nint main(){\n    int T; cin&gt;&gt;T;\n    while(T--) solve();\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/#_11","title":"\u5dee\u5206\u7ea6\u675f","text":"Luogu P5960 \u3010\u6a21\u677f\u3011\u5dee\u5206\u7ea6\u675f\u7b97\u6cd5 code C++<pre><code>#define fst first\n#define sed second\n#define pb push_back\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\ntypedef pair&lt;int, int&gt; PII;\nconst int N=5e3+10;\n\nint n, m;\n\nvector&lt;vector&lt;PII&gt;&gt; edge(N);\nint dis[N]; // \u6700\u77ed\u8def\nbool st[N]; // \u662f\u5426\u5728\u961f\u5217\u4e2d\nint cnt[N]; // \u5230\u8fbe\u8be5\u70b9\u7ecf\u8fc7\u7684\u8fb9\u6570\n\nbool spfa(int s){   // \u6700\u77ed\u8def\u8def\u5f84\u6570\u5224\u8d1f\u73af\n    memset(dis, 0x3f, sizeof dis);\n    memset(st, 0, sizeof st);\n    memset(cnt, 0, sizeof cnt);\n\n    queue&lt;int&gt; q;\n    q.push(s), st[s]=1, dis[s]=0;\n\n    while(q.size()){\n        auto x = q.front(); q.pop(), st[x]=0;\n\n        for(auto &amp;[y,z]: edge[x])\n            if( dis[y] &gt; dis[x] + z ){\n                dis[y] = dis[x] + z;\n\n                cnt[y] = cnt[x] + 1;\n                if(cnt[y] &gt; n) return 1;   // \u8d1f\u73af, n\u662f\u70b9\u7684\u6570\u91cf\n\n                if(!st[y]) q.push(y), st[y]=1;\n            }\n    }\n    return 0;\n}\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    while(m--){\n        int a, b, c; scanf(\"%d%d%d\", &amp;a, &amp;b, &amp;c);\n        edge[b].push_back({a, c});\n    }\n    for(int i=1; i&lt;=n; i++) edge[0].pb({i, 0}); // \u8d85\u7ea7\u6e90\u70b9\n\n    if(spfa(0)) puts(\"NO\");\n    else{\n        for(int i=1; i&lt;=n; i++)\n            cout&lt;&lt;dis[i]&lt;&lt;\" \";\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/7%20%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/#_12","title":"\u6700\u5c0f\u73af","text":"<p>\u65e0\u5411\u56fe\u7684\u6700\u5c0f\u73af</p> AcWing 344. \u89c2\u5149\u4e4b\u65c5 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nconst int N=110;\nconst int inf=0x3f3f3f3f;\n\nint edge[N][N]; // \u8fb9\nint dis[N][N];  // \u6700\u77ed\u8def\n\nint pos[N][N];  // i-&gt;j \u7ecf\u8fc7\u4e2d\u95f4\u70b9 pos[i][j]\nint path[N];    // \u65b9\u6848 *path\u5b58\u6570\u91cf\n\nint n, m;\n\nvoid get_path(int i, int j){\n    if(pos[i][j]==0) return ;   // \u6ca1\u6709\u7ecf\u8fc7\u5176\u4ed6\u70b9 \u76f4\u63a5\u5230\u8fbe\n\n    int k=pos[i][j];\n    get_path(i, k);     // \u5de6\u9012\u5f52\n    path[++*path] = k;  // k\u653e\u5165\n    get_path(k, j);     // \u53f3\u9012\u5f52\n}\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    memset(edge, 0x3f, sizeof edge);\n    for(int i=1; i&lt;=n; i++) edge[i][i]=0;\n    for(int i=1; i&lt;=m; i++){\n        int u, v, l;\n        scanf(\"%d%d%d\", &amp;u, &amp;v, &amp;l);\n        edge[u][v]=min(edge[u][v], l);\n        edge[v][u]=min(edge[v][u], l);\n    }\n\n    int res=inf;\n    memcpy(dis, edge, sizeof dis);\n\n    for(int k=1; k&lt;=n; k++){\n        // \u6c42\u6700\u5c0f\u73af\n        for(int i=1; i&lt;k; i++)\n            for(int j=i+1; j&lt;k; j++)    // \u4e0d\u80fd\u91cd\u590d\n                if( res &gt; (long long)dis[i][j] + edge[j][k] + edge[k][i] ){\n                    res = dis[i][j] + edge[j][k] + edge[k][i];\n\n                    // \u66f4\u65b0\u8def\u5f84\n                    *path=0;\n                    path[++*path]=k;    // k\u662f\u8d77\u70b9\n                    path[++*path]=i;    // k-&gt;i\u7684\u8def\u5f84\u786e\u5b9a\n                    get_path(i, j);     // \u9012\u5f52\u83b7\u53d6i-&gt;j\u7684\u8def\u5f84 (\u4e0d\u542bi, j)\n                    path[++*path]=j;    // j-&gt;k\u7684\u8def\u5f84\u786e\u5b9a\n                }\n\n        // Floyd \u66f4\u65b0\u6700\u77ed\u8def\n        for(int i=1; i&lt;=n; i++)\n            for(int j=1; j&lt;=n; j++)\n                if( dis[i][j] &gt; dis[i][k] + dis[k][j] ){\n                    dis[i][j] = dis[i][k] + dis[k][j];\n                    pos[i][j] = k; // i j\u6700\u77ed\u8def\u7531k\u66f4\u65b0\n                }\n    }\n\n    if(res==inf)\n        puts(\"No solution.\");\n    else\n        for(int i=1; i&lt;=*path; i++) \n            cout&lt;&lt;path[i]&lt;&lt;\" \";\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/todo/USACOTraining/","title":"USACOTraining","text":""},{"location":"src/more/old/algorithm/todo/USACOTraining/#section-11","title":"Section 1.1 \u63d0\u4ea4\u89e3\u51b3\u65b9\u6848\u3001\u4efb\u52a1\u7c7b\u578b\u3001\u7279\u6b8a\u95ee\u9898","text":""},{"location":"src/more/old/algorithm/todo/USACOTraining/#section-12","title":"Section 1.2 \u5b8c\u5168\u641c\u7d22","text":""},{"location":"src/more/old/algorithm/todo/USACOTraining/#section-13","title":"Section 1.3 \u8d2a\u5fc3\u3001\u5236\u5b9a\u89e3\u51b3\u65b9\u6848","text":""},{"location":"src/more/old/algorithm/todo/USACOTraining/#section-14","title":"Section 1.4 \u66f4\u591a\u641c\u7d22\u6280\u5de7","text":""},{"location":"src/more/old/algorithm/todo/USACOTraining/#section-15","title":"Section 1.5 \u4e8c\u8fdb\u5236\u6570","text":""},{"location":"src/more/old/algorithm/todo/USACOTraining/#section-21-flood-fill","title":"Section 2.1 \u56fe\u8bba\u3001Flood Fill\u7b97\u6cd5","text":""},{"location":"src/more/old/algorithm/todo/USACOTraining/#section-22","title":"Section 2.2 \u6570\u636e\u7ed3\u6784\u3001\u52a8\u6001\u89c4\u5212","text":""},{"location":"src/more/old/algorithm/todo/USACOTraining/#section-23","title":"Section 2.3 \u4e60\u9898","text":""},{"location":"src/more/old/algorithm/todo/USACOTraining/#section-24","title":"Section 2.4 \u6700\u77ed\u8def","text":""},{"location":"src/more/old/algorithm/todo/USACOTraining/#section-31","title":"Section 3.1 \u751f\u6210\u6811","text":""},{"location":"src/more/old/algorithm/todo/USACOTraining/#section-32","title":"Section 3.2 \u80cc\u5305\u95ee\u9898","text":""},{"location":"src/more/old/algorithm/todo/USACOTraining/#section-33","title":"Section 3.3 \u6b27\u62c9\u901a\u8def","text":""},{"location":"src/more/old/algorithm/todo/USACOTraining/#section-34","title":"Section 3.4 \u8ba1\u7b97\u51e0\u4f55","text":""},{"location":"src/more/old/algorithm/todo/USACOTraining/#section-41","title":"Section 4.1 \u4f18\u5316","text":""},{"location":"src/more/old/algorithm/todo/USACOTraining/#section-42","title":"Section 4.2 \u7f51\u7edc\u6d41","text":""},{"location":"src/more/old/algorithm/todo/USACOTraining/#section-43","title":"Section 4.3 \u9ad8\u7cbe\u5ea6\u8ba1\u7b97","text":""},{"location":"src/more/old/algorithm/todo/USACOTraining/#section-44","title":"Section 4.4 \u4e60\u9898","text":""},{"location":"src/more/old/algorithm/todo/USACOTraining/#section-51","title":"Section 5.1 \u51f8\u5305","text":""},{"location":"src/more/old/algorithm/todo/USACOTraining/#section-52","title":"Section 5.2 \u4e60\u9898","text":""},{"location":"src/more/old/algorithm/todo/USACOTraining/#section-53","title":"Section 5.3 \u542f\u53d1\u6cd5","text":""},{"location":"src/more/old/algorithm/todo/USACOTraining/#section-54","title":"Section 5.4 \u4e60\u9898","text":""},{"location":"src/more/old/algorithm/todo/USACOTraining/#section-55","title":"Section 5.5 \u4e60\u9898","text":""},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CCF_J/","title":"CCF J","text":""},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CCF_J/#2021","title":"2021","text":"AcWing 4086. \u5206\u7cd6\u679c code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nLL n, l, r;\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;l&gt;&gt;r;\n\n    if(l/n==r/n) cout&lt;&lt;r%n; // \u5982\u679c\u5728\u540c\u4e00\u4e2a\u533a\u95f4\n    else cout&lt;&lt;n-1;\n\n    return 0;\n}\n</code></pre> AcWing 4087. \u63d2\u5165\u6392\u5e8f code    **\u5927\u610f**  \u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217 `a`\uff0c\u6bcf\u6b21\u53ef\u4ee5\u5bf9\u8be5\u5e8f\u5217\u505a\u4e24\u79cd\u64cd\u4f5c\uff1a  1. \u4ee4 `a[x] = v` 2. \u67e5\u8be2 `a[x]` \u5728\u6392\u5e8f\u540e\uff0c\u6240\u5728\u7684\u4f4d\u7f6e   **\u601d\u8def**  1. \u5982\u679c\u6bcf\u6b21\u67e5\u8be2\u64cd\u4f5c\u90fd\u91cd\u65b0\u6392\u5e8f\uff0c\u90a3\u4e48\u5fc5\u5b9a\u4f1a\u8d85\u65f6\uff0c\u56e0\u6b64\u5c1d\u8bd5\u5148\u6392\u5e8f 2. \u6392\u5e8f\u540e\u4f1a\u4e22\u5931\u90e8\u5206\u4fe1\u606f\uff0c\u56e0\u6b64\u6709\u5fc5\u8981\u8bb0\u5f55\u4e0b\u6765     * `a[i].fst` \u8bb0\u5f55\u503c     * `a[i].sed` \u8bb0\u5f55\u5176\u5728\u539f\u5e8f\u5217\u7684\u4f4d\u7f6e 3. \u5bf9 `a` \u6392\u5e8f 4. `a` \u6392\u5e8f\u540e\u65e0\u6cd5\u5feb\u901f\u627e\u5230\u539f\u5e8f\u5217\uff0c\u56e0\u6b64\u6709\u5fc5\u8981\u5efa\u7acb\u4e00\u4e2a\u7d22\u5f15\uff0c`p[x] = i`     * \u539f\u5e8f\u5217\u4e2d\u7b2c `x` \u4f4d\uff0c\u73b0\u5728\u5728 `i` \u4f4d 5. \u5bf9\u4e8e\u67e5\u8be2\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8f93\u51fa `p[x]` 6. \u5bf9\u4e8e\u4fee\u6539     * \u5b9a\u4f4d\u5230\u5f53\u524d\u7684\u4f4d\u7f6e `p[x]`\uff0c\u4ee4 `a[ p[x] ] = v`     * \u5c06 `a[ p[x] ]` \u79fb\u52a8\u5230\u5408\u9002\u7684\u4f4d\u7f6e\u5373\u53ef   C++<pre><code>#define fst first\n#define sed second\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;cstring&gt;\n#include &lt;map&gt;\nusing namespace std;\n\ntypedef pair&lt;int, int&gt; PII;\n\nconst int N=8e3+10;\n\nPII a[N];   // \u6570\u7ec4\nint n, q;\n\nint p[N];    // \u7d22\u5f15\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;q;\n    for(int i=1; i&lt;=n; i++){\n        scanf(\"%d\", &amp;a[i].fst);\n        a[i].sed = i;\n    }\n\n    sort(a+1, a+1+n);\n    for(int i=1; i&lt;=n; i++)\n        p[ a[i].sed ] = i;\n\n    for(int _=1; _&lt;=q; _++){\n        int qq, x, v; scanf(\"%d\", &amp;qq);\n\n        if( qq==1 ){\n            scanf(\"%d%d\", &amp;x, &amp;v);\n\n            // \u5b9a\u4f4d\u5230\u539f\u6570\u7ec4\u7684\u4f4d\u7f6e\n            x = p[x];\n\n            // \u5c06a[i].fst \u8f6c\u6362\u4e3a v, \u68c0\u67e5\u5176\u5e94\u8be5\u5de6\u79fb\u8fd8\u662f\u53f3\u79fb\u52a8\n            if( a[x].fst &gt; v ){   // \u5de6\u79fb\u52a8\n                a[x].fst = v;\n                for(int i=x; i&gt;=2; i--)\n                    if(a[i] &lt; a[i-1]){\n                        swap(a[i], a[i-1]);\n\n                        p[ a[i].sed ] = i;\n                        p[ a[i-1].sed ] = i-1;\n                    }\n                    else break;\n            }else\n            if( a[x].fst &lt; v ){   // \u53f3\u79fb\u52a8\n                a[x].fst = v;\n                for(int i=x; i&lt;=n-1; i++)\n                    if(a[i] &gt; a[i+1]){\n                        swap(a[i], a[i+1]);\n\n                        p[ a[i].sed ] = i;\n                        p[ a[i+1].sed ] = i+1;\n                    }\n                    else break;\n            }\n        }else{\n            scanf(\"%d\", &amp;x);\n            printf(\"%d\\n\", p[x]);\n        }\n    }\n\n    return 0;\n}\n</code></pre> AcWing 4088. \u7f51\u7edc\u8fde\u63a5 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;sstream&gt;\n#include &lt;map&gt;\nusing namespace std;\n\nconst int N=1e3+10;\n\nmap&lt;string, int&gt; serv;\nint n;\n\nint s2i(string s){\n    stringstream ss;\n    ss&lt;&lt;s;\n    int res;\n    ss&gt;&gt;res;\n    return res;\n}\n\nstring i2s(int num){\n    stringstream ss;\n    ss&lt;&lt;num;\n    string res;\n    ss&gt;&gt;res;\n    return res;\n}\n\nbool ck(string s){\n    int a[5];\n    string cmp;\n    sscanf(s.c_str(), \"%d.%d.%d.%d:%d\", a, a+1, a+2, a+3, a+4);\n\n    for(int i=0; i&lt;4; i++){\n        if(a[i]&lt;0 || a[i]&gt;255) return 0;\n        cmp += i2s(a[i]) + \".\";\n    }\n    cmp[cmp.size()-1]=':'; // \u66ff\u6362\u6700\u540e\u4e00\u4e2a'.'\n\n    if(a[4]&lt;0 || a[4]&gt;65535) return 0;\n    cmp += i2s(a[4]);\n    return s == cmp;\n}\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++){\n        string op, ad; cin&gt;&gt;op&gt;&gt;ad;\n\n        if(op == \"Server\"){\n            if(ck(ad))  // \u7b26\u5408\u89c4\u8303\n                if(serv.count(ad))\n                    cout&lt;&lt;\"FAIL\\n\";\n                else\n                    serv[ad] = i, cout&lt;&lt;\"OK\\n\";\n            else\n                cout&lt;&lt;\"ERR\\n\";\n        }\n        else{\n            if(ck(ad))  // \u7b26\u5408\u89c4\u8303\n                if(serv.count(ad))\n                    cout&lt;&lt;serv[ad]&lt;&lt;\"\\n\";\n                else\n                    cout&lt;&lt;\"FAIL\\n\";\n            else\n                cout&lt;&lt;\"ERR\\n\";\n        }\n    }\n\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CCF_J/#2020","title":"2020","text":"AcWing 2767. \u4f18\u79c0\u7684\u62c6\u5206 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\nint n;\nint a[30];\n\nint main(){\n    a[1]=1;\n    for(n=1; a[n]&lt;=1e7;){\n        ++n;\n        a[n] = a[n-1]*2;\n    }\n\n    queue&lt;int&gt; q;\n    int k; cin&gt;&gt;k;\n\n    while(n&gt;=2){\n        if(k &gt;= a[n]) k-=a[n], q.push(a[n]);\n        n--;\n    }\n    if(k==0)\n        while(q.size()){\n            cout&lt;&lt;q.front()&lt;&lt;\" \";\n            q.pop();\n        }\n    else\n        cout&lt;&lt;-1;\n    return 0;\n}\n</code></pre> AcWing 2768. \u76f4\u64ad\u83b7\u5956 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1e5+10;\n\nint n, w;   \n\nint a[610]; // \u6bcf\u4e2a\u5206\u6570\u6bb5\u7684\u6210\u7ee9\n\nint calc(int cnt){  // \u83b7\u5956\u4eba\u6570\n    if(!cnt) cnt=1; // \u5982\u679c\u83b7\u5956\u4eba\u6570\u4e3a0\n    for(int i=600; ; i--){\n        cnt -= a[i];\n        if(cnt&lt;=0) return i;\n    }\n}\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;w;\n    for(int i=1; i&lt;=n; i++){\n        int ai; scanf(\"%d\", &amp;ai);\n        a[ ai ] ++;\n        cout&lt;&lt;calc(i * w / 100)&lt;&lt;\" \";\n    }\n    return 0;\n}\n</code></pre> AcWing 2770. \u65b9\u683c\u53d6\u6570 code C++<pre><code>#include &lt;cstring&gt;\n#include &lt;iostream&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N=1e3+10;\n\nint g[N][N];\nLL dp[N][N][2];\nint n, m;\n\nint main(){\n    //freopen(\"in.txt\", \"r\", stdin); freopen(\"out.txt\", \"w\", stdout);\n    memset(g, -0x3f, sizeof g);\n    memset(dp, -0x3f, sizeof dp);\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=n; i++)\n        for(int j=1; j&lt;=m; j++)\n            scanf(\"%d\", &amp;g[i][j]);\n\n    dp[1][1][0]=dp[1][1][1]=g[1][1];\n    for(int i=2; i&lt;=n; i++) // \u7528\u624b\u5bfc\u7b2c\u4e00\u5217\n        dp[i][1][0] = dp[i][1][1] = dp[i-1][1][0] + g[i][1];\n    //for(int i=n-1; i&gt;=1; i--)\n    //    dp[i][1][1] = dp[i+1][1][1] + g[i][1];\n    //for(int i=1; i&lt;=n; i++)\n    //    dp[i][1][0] = dp[i][1][1] = max(dp[i][1][0], dp[i][1][1]);\n\n    for(int j=2; j&lt;=m; j++){\n        for(int i=1; i&lt;=n; i++) // \u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u8fb9\u6765\uff0c\u4ece\u4e0a\u9762\u6765\n            dp[i][j][0] = max(dp[i][j-1][0], dp[i-1][j][0]) + g[i][j];\n\n        for(int i=n; i&gt;=1; i--) // \u4ece\u4e0b\u5230\u4e0a\uff0c\u4ece\u5de6\u8fb9\u6765\uff0c\u4ece\u4e0b\u9762\u6765\n            dp[i][j][1] = max(dp[i][j-1][1], dp[i+1][j][1]) + g[i][j];\n\n        for(int i=1; i&lt;=n; i++)\n            dp[i][j][0] = dp[i][j][1] = max(dp[i][j][0], dp[i][j][1]);\n    }\n\n    cout&lt;&lt;dp[n][m][1];\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CCF_J/#2019","title":"2019","text":"AcWing 1161. \u6570\u5b57\u6e38\u620f code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main(){\n    char c; \n    int ans;\n    while(cin&gt;&gt;c)\n        if(c=='1')\n            ans++;\n    cout&lt;&lt;ans;\n    return 0;\n}\n</code></pre> AcWing 1162. \u516c\u4ea4\u6362\u4e58 code C++<pre><code>#pragma G++ optimize(\"Ofast\", 2, 3)\n#define fst first\n#define sed second\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\ntypedef pair&lt;int, int&gt; PII;\nint n, ans;\n\nint main(){\n    cin&gt;&gt;n;\n\n    vector&lt;PII&gt; q;\n\n    for(int i=1; i&lt;=n; i++){\n        int x, y, z; cin&gt;&gt;x&gt;&gt;y&gt;&gt;z;\n        ans+=y;\n\n        if(x==0)    // \u83b7\u5f97\u5238\n            q.push_back({y, z});\n        else{       // \u627e\u5238\n\n            while( q.size() &amp;&amp; z - q[0].sed &gt; 45 )\n                q.erase(q.begin(), q.begin()+1);    // \u6e05\u7a7a\u8fc7\u671f\u5238\n\n            for(int j=0; j&lt;q.size(); j++)\n                if( q[j].fst &gt;= y ){\n                    q.erase(q.begin()+j, q.begin()+j+1);\n                    ans-=y;\n                    break;\n                }            \n        }\n    }\n\n    cout&lt;&lt;ans;\n\n    return 0;\n}\n</code></pre> AcWing 1163. \u7eaa\u5ff5\u54c1 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nconst int N=110;\n\nint dp[10010];  // \u7b2c i+1 \u5929, \u53ef\u4ee5\u589e\u52a0\u7684\u91d1\u5e01\u7684\u6700\u5927\u503c\nint w[N][N];    // \u7b2c i \u5929, \u7b2c j \u79cd\u7269\u54c1\u7684\u4ef7\u503c\n\nint t, n, m;    // \u5929\u6570, \u7eaa\u5ff5\u54c1\u6570\u91cf, \u91d1\u5e01\u6570\u91cf\n\nint main(){\n    cin&gt;&gt;t&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=t; i++)\n        for(int j=1; j&lt;=n; j++)\n            scanf(\"%d\", &amp;w[i][j]);\n\n    for(int i=1; i&lt;=t-1; i++){      // \u679a\u4e3e\u5929\u6570\n        memset(dp, 0, sizeof dp);\n\n        for(int j=1; j&lt;=n; j++)     // \u679a\u4e3e\u5546\u54c1\n            for(int k=w[i][j]; k&lt;=m; k++)   // \u679a\u4e3e\u94b1(\u5f53\u524d\u8fd9\u4e2a\u5546\u54c1\u7684\u4ef7\u503c \u5230 \u6211\u8eab\u4e0a\u7684\u6240\u6709\u94b1)\n                dp[k] = max(dp[k], dp[k-w[i][j]] + w[i+1][j] - w[i][j] );\n        // \u679a\u4e3e\u5546\u54c1\u662f\u4e3a\u4e86\u8003\u8651\u6240\u6709\u53ef\u80fd\u8d2d\u4e70\u6216\u51fa\u552e\u7684\u7eaa\u5ff5\u54c1\n        // \u679a\u4e3e\u94b1\u662f\u4e3a\u4e86\u8003\u8651\u6240\u6709\u53ef\u80fd\u7684\u8d2d\u4e70\u6216\u51fa\u552e\u7eaa\u5ff5\u54c1\u7684\u7ec4\u5408\n        // \n        // \u901a\u8fc7\u679a\u4e3e\u5546\u54c1\u548c\u94b1, \u6211\u4eec\u53ef\u4ee5\u627e\u5230\u5728\u5f53\u524d\u8fd9\u4e00\u5929\n        // \u4f7f\u7528\u5f53\u524d\u62e5\u6709\u7684\u91d1\u5e01, \u53ef\u4ee5\u83b7\u5f97\u7684\u6700\u5927\u6536\u76ca\n        // \u7136\u540e, \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u6700\u5927\u6536\u76ca\u6765\u66f4\u65b0dp\u6570\u7ec4\n\n        m += dp[m];\n    }\n\n    cout&lt;&lt;m;\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CCF_J/#2018","title":"2018","text":"AcWing 473. \u6807\u9898\u7edf\u8ba1 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nchar c;\nint ans;\n\nint main(){\n    while(cin&gt;&gt;c)\n        if(c&gt;='A' &amp;&amp; c&lt;='Z' || c&gt;='a' &amp;&amp; c&lt;='z' || c&gt;='0' &amp;&amp; c&lt;='9')\n            ans++;\n    cout&lt;&lt;ans;\n    return 0;\n}\n</code></pre> AcWing 474. \u9f99\u864e\u6597 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\ntypedef long long LL;\nconst int N = 1e5 + 10;\n\nLL a[N];   // \u5175\u8425\nLL dragon, tiger, n;\nLL m, s1, p1, s2, p2, cha;\n\nint main() {\n    cin &gt;&gt; n;\n    for (int i = 1; i &lt;= n; i++) scanf(\"%lld\", a + i);\n    cin &gt;&gt; m &gt;&gt; p1 &gt;&gt; s1 &gt;&gt; s2;\n    a[p1] += s1;\n\n    for (int i = 1; i &lt;= n; i++)\n        if (i &lt; m)\n            dragon += (m - i) * a[i];\n        else if (i &gt; m)\n            tiger += (i - m) * a[i];\n\n    p2 = m;\n    cha = llabs(dragon - tiger);\n\n    for (int i = 1; i &lt;= n; i++){\n        if (i &lt; m &amp;&amp; llabs(dragon - tiger + s2 * (m - i)) &lt; cha ) \n            p2 = i, cha = llabs(dragon - tiger + s2 * (m - i));\n        if (i &gt; m &amp;&amp; llabs(dragon - tiger - s2 * (i - m)) &lt; cha)\n            p2 = i, cha = llabs(dragon - tiger - s2 * (i - m));\n    }\n    cout &lt;&lt; p2;\n\n    return 0;\n}\n</code></pre> AcWing 476. \u5bf9\u79f0\u4e8c\u53c9\u6811 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1e6+10;\n\nint l[N], r[N], v[N], cnt[N];   // \u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u6811,\u6743,\u5b50\u6811\u6570\u91cf\nint n;\n\nvoid dfs(int i){ // \u8ba1\u7b97\u4ee5 i \u4e3a\u8282\u70b9\u5b50\u6811\u6570\u91cf\n    if(l[i]) dfs(l[i]);\n    if(r[i]) dfs(r[i]);\n    cnt[i] = cnt[l[i]] + cnt[r[i]] + 1;\n}\n\nbool ck(int i, int j){ // \u68c0\u67e5 i,j \u662f\u4e0d\u662f\u5bf9\u79f0\n    if(v[i] != v[j] || cnt[i] != cnt[j]) return 0;  // \u6743,\u6811\u4e0d\u540c\n    if(i == 0 &amp;&amp; j == 0) return 1;  // \u4e24\u8fb9\u90fd\u662f\u7a7a\u6811\n    if(ck(l[i], r[j]) &amp;&amp; ck(r[i], l[j])) return 1;\n    return 0;   \n}\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", v+i);\n    for(int i=1; i&lt;=n; i++){\n        int a, b; scanf(\"%d%d\", &amp;a, &amp;b);\n        l[i] = (a==-1)?0:a, r[i] = (b==-1)?0:b;\n    }\n    dfs(1);\n\n    for(int i=1; i&lt;=n; i++)\n        if( ck(l[i], r[i]) )    // \u68c0\u67e5\u4ee5 i \u4e3a\u6839\u7684\u5b50\u6811\n            v[0] = max(v[0], cnt[i]);\n\n    cout&lt;&lt;v[0];\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CCF_J/#2017","title":"2017","text":"AcWing 471. \u68cb\u76d8 code C++"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CCF_J/#2015","title":"2015","text":"AcWing 461. \u91d1\u5e01 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint k, ans, one=1, x=1, y=1;\n\nint main(){\n    cin&gt;&gt;k;\n    for(int i=1; i&lt;=k; i++, x++){\n        ans+=one;\n        if(x==y){\n            x=0;\n            y++;\n            one++;\n        }\n    }\n    cout&lt;&lt;ans;\n    return 0;\n}\n</code></pre> AcWing 462. \u626b\u96f7\u6e38\u620f code  **\u5927\u610f**  \u7ed9\u5b9a\u4e00\u4e2a $n*m$ \u7684\u77e9\u9635\uff0c\u6bcf\u4e2a\u70b9\u53ea\u6709\u4e24\u79cd\u72b6\u6001 * \u5730\u96f7 `*` * \u672a\u77e5 `?`  \u6c42\u6bcf\u4e2a `?` \u5468\u56f4\uff08\u4e0a\u4e0b\u5de6\u53f3\uff0c\u5de6\u4e0a\u5de6\u4e0b\u53f3\u4e0a\u53f3\u4e0b\uff09\u7684\u5730\u96f7\u6570\u91cf  **\u601d\u8def**  1. \u904d\u5386\u6bcf\u4e2a\u70b9\uff0c\u5982\u679c\u662f\u5730\u96f7\uff0c\u8f93\u51fa `*`\uff0c\u5426\u5219\u8f93\u51fa\u5468\u56f4\u7684\u5730\u96f7\u6570\u91cf  2. \u5bf9\u4e8e\u6bcf\u4e2a\u672a\u77e5\u7684\u70b9\uff0c\u904d\u5386\u5176\u5468\u56f4\u76848\u4e2a\u70b9\uff0c\u5982\u679c\u662f\u5730\u96f7\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u7684\u5730\u96f7\u6570\u91cf\u52a0\u4e00   C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1e2+10;\n\nint dxy[8][2]={ {-1,0}, {1,0}, {0,-1}, {0,1}, {-1,-1}, {-1,1}, {1,-1}, {1,1} };\n\nchar g[N][N];\nint res[N][N];\nint n, m;\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=n; i++)\n        for(int j=1; j&lt;=m; j++)\n            cin&gt;&gt;g[i][j];\n\n    for(int i=1; i&lt;=n; i++, cout&lt;&lt;\"\\n\")\n        for(int j=1; j&lt;=m; j++){\n            for(int k=0; k&lt;8; k++)\n                res[i][j] += g[ i+dxy[k][0] ][ j+dxy[k][1] ]=='*';\n\n            if(g[i][j]=='*')\n                cout&lt;&lt;'*';\n            else \n                cout&lt;&lt;res[i][j];\n        }\n\n    return 0;\n}\n</code></pre> AcWing 463. \u6c42\u548c code  **\u5927\u610f**  \u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u6709\u4e24\u4e2a\u503c\uff0c\u4e00\u4e2a\u7f16\u53f7  * \u6570\u5b57\u3002\u4e3a\u65b9\u4fbf\uff0c\u53eb\u505a $num$ * \u989c\u8272\u3002\u4e3a\u65b9\u4fbf\uff0c\u53eb\u505a $cor$ * \u7f16\u53f7\u3002\u4ece $1$ \u5f00\u59cb\u5355\u8c03\u9012\u589e  \u6570\u5b57\u4e0e\u989c\u8272\u90fd\u662f $1$ \u5230 $1e5$ \u7684\u6574\u6570\uff0c \u6362\u8a00\u4e4b\uff0c\u6211\u4eec\u6709\u989c\u82721\uff0c\u989c\u82722\uff0c\u989c\u82723...  \u5b9a\u4e49\u4e00\u4e2a\u4e09\u5143\u7ec4 $(x, y, z)$\uff0c\u6ee1\u8db3  * $x &lt; y &lt; z$ * $y - x = z - y$ \u5373 $x + z = 2y$ * $cor[x] = cor[z]$  \u6b64\u4e09\u5143\u7ec4\u7684\u5206\u6570\u4e3a  * $(x+z) * (num[x] + num[z])$  \u6c42\u6240\u6709\u5408\u6cd5\u4e09\u5143\u7ec4\u7684\u5206\u6570\u548c  **\u601d\u8def**  1. \u7531\u4e8e $x+z = 2y$\uff0c\u53ef\u77e5 $x$ \u4e0e $z$ \u5947\u5076\u6027\u76f8\u540c\uff0c \u56e0\u6b64\uff0c\u5bf9\u4e8e\u6240\u6709\u7684 $x &lt; z$\uff0c$y$ \u80af\u5b9a\u5b58\u5728  2. \u7531\u4e8e\u90fd\u4e0e $y$ \u65e0\u5173\uff0c\u95ee\u9898\u8f6c\u6362\u4e3a\uff1a     * $x &lt; z$\uff0c\u5176\u4e2d $x$ \u4e0e $z$ \u5947\u5076\u6027\u76f8\u540c     * $cor[x] = cor[z]$  3. \u56e0\u4e3a\u9700\u8981\u989c\u8272\u76f8\u540c\uff0c\u6211\u4eec\u4e0d\u59a8\u5c06\u989c\u8272\u76f8\u540c\u7684\u62c9\u51fa\u6765\u5355\u72ec\u8003\u8651\u3002\u6837\u4f8b\uff1a     \u84dd\u8272\uff08\u989c\u8272 2\uff09\uff1a$num[1]=5,num[2]=5,num[5]=2$     * \u5947\u6570 $1,5$\uff0c\u5206\u6570\u4e3a $(1+5)*(5+2) = 42$     * \u5076\u6570 \u65e0      \u7ea2\u8272\uff08\u989c\u8272 3\uff09\uff1a$num[3]=3,num[4]=2,num[6]=2$     * \u5947\u6570 \u65e0     * \u5076\u6570 $4,6$\uff0c\u5206\u6570\u4e3a $(4+6)*(2+2) = 40$  4. **\u91cd\u70b9**     1. \u5047\u8bbe\uff0c\u540c\u5947\u5076\u6027\u5b58\u5728\u4e0b\u9762\u4e09\u4e2a\u6570\uff1a$num[a], num[b], num[c]$\uff0c\u5176\u4e2d $a &lt; b &lt; c$        \u90a3\u4e48\uff0c\u6b64\u989c\u8272\uff0c\u6b64\u5947\u5076\u6027\u4e0b\uff0c\u5206\u6570\u4e3a         $(a+b)*(num[a]+num[b]) +$         $(a+c)*(num[a]+num[c]) +$         $(b+c)*(num[b]+num[c]) $          \u5316\u7b80\uff1a          **$(a*num[a] + b*num[b] + c*num[c]) * 1 + $**         **$(a+b+c)*(num[a]+num[b]+num[c])$**       2. \u5047\u8bbe\uff0c\u540c\u5947\u5076\u6027\u5b58\u5728\u4e0b\u9762\u56db\u4e2a\u6570\uff1a$num[a], num[b], num[c], num[d]$\uff0c\u5176\u4e2d $a &lt; b &lt; c &lt; d$        \u90a3\u4e48\uff0c\u6b64\u989c\u8272\uff0c\u6b64\u5947\u5076\u6027\u4e0b\uff0c\u5206\u6570\u4e3a         $(a+b)*(num[a]+num[b]) +$         $(a+c)*(num[a]+num[c]) +$         $(a+d)*(num[a]+num[d]) +$         $(b+c)*(num[b]+num[c]) +$         $(b+d)*(num[b]+num[d]) +$         $(c+d)*(num[c]+num[d]) $         \u5316\u7b80\uff1a         **$(a*num[a] + b*num[b] + c*num[c] + d*num[d]) * 2 + $**         **$(a+b+c+d)*(num[a]+num[b]+num[c]+num[d])$**  5. \u56e0\u6b64\uff0c\u5bf9\u4e8e\u540c\u989c\u8272\uff0c\u540c\u5947\u5076\u6027\uff0c\u6709\uff1a   **$sum = (n-2) * \\sum_{i=1}^{n} (i*num[i]) + \\sum_{i=1}^{n} i * \\sum_{i=1}^{n} num[i]$**   C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair&lt;int, int&gt; PII;\n\nconst int N = 1e5+10;\nconst int MOD = 10007;\n\nint num[N], cor[N]; // \u6570\u5b57\u548c\u989c\u8272\nvector&lt;PII&gt; a[N][2];// \u540c\u5947\u540c\u8272\nint n, m;\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", num+i);\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", cor+i);\n\n    for(int i=1; i&lt;=n; i++)\n        a[ cor[i] ][ i&amp;1 ].push_back({i, num[i]});\n\n    LL ans=0;\n    for(auto c: a)\n    for(int k=0; k&lt;=1; k++)\n        if(c[k].size()&gt;=2){\n            LL one=0, two=0, thr=0;\n            for(auto &amp;[i,j]: c[k]){\n                one = (one + ((LL)i*j) % MOD) % MOD;\n                two = (two + i) % MOD;\n                thr = (thr + j) % MOD;\n            }\n            ans += (one * (c[k].size()-2)) + (two * thr);\n            ans %= MOD;\n        }\n\n    cout&lt;&lt;ans%MOD;\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CCF_J/#2014","title":"2014","text":"Acwing 457. \u73e0\u5fc3\u7b97\u6d4b\u9a8c code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=110;\n\nint n, res;\nint a[N];   // \u662f\u5426\u6709\u8fd9\u4e2a\u6570\nbool st[20010]; // \u662f\u5426\u80fd\u7b97\u51fa\u6765\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", a+i);\n    for(int i=1; i&lt;=n; i++)\n        for(int j=i+1; j&lt;=n; j++)\n            st[ a[i]+a[j] ] = 1;\n    for(int i=1; i&lt;=n; i++)\n        if(st[a[i]]) res++;\n    cout&lt;&lt;res;\n\n    return 0;\n}\n</code></pre> Acwing 458. \u6bd4\u4f8b\u7b80\u5316 code  **\u5927\u610f**  \u7ed9\u5b9a $1$ \u4e2a\u5206\u6570 $A/B$ \u548c $L$\uff0c\u6c42\u51fa\u4e00\u4e2a\u5206\u6570 $A_1/B_1$\uff0c\u4f7f\u5f97 $A1_/B_1$ \u662f\u4e00\u4e2a\u6700\u7b80\u5206\u6570\uff0c\u6ee1\u8db3\uff1a * $A_1 &lt;= L$ \u4e14 $B_1 &lt;= L$\u3002 * $A_1/B_1 &gt;= A/B$\u3002 * $A_1/B_1 - A/B$ \u5c3d\u53ef\u80fd\u5c0f\u3002    **\u601d\u8def**  1. \u7531\u4e8e $L$ \u5f88\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e $A_1$ \u548c $B_1$\uff0c\u7136\u540e\u518d\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\u3002   C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint A, B, L;\nint A1, B1;\nint A2=999, B2=1;\n\nint gcd(int a, int b){\n    return b ? gcd(b, a%b) : a;\n}\n\nint main(){\n    cin&gt;&gt;A&gt;&gt;B&gt;&gt;L;\n    for(A1=1; A1&lt;=L; A1++)  // \u679a\u4e3e\n    for(B1=1; B1&lt;=L; B1++)\n        if(A1*B &gt;= A*B1)    // \u6ee1\u8db3A1/B1 &gt;= A/B\n        if(gcd(A1, B1)==1)  // \u4e24\u6570\u4e92\u8d28\n        if(A1*B2 &lt; A2*B1)   // \u66f4\u5c0f\n            A2=A1, B2=B1;\n    cout&lt;&lt;A2&lt;&lt;\" \"&lt;&lt;B2;\n    return 0;\n}\n</code></pre> AcWing 459. \u87ba\u65cb\u77e9\u9635 code  **\u5927\u610f**  \u7ed9\u5b9a\u4e00\u4e2a\u87ba\u65cb\u77e9\u9635\uff0c\u6c42\u51fa\u67d0\u4e2a\u4f4d\u7f6e\u7684\u503c\u3002  **\u601d\u8def**  1. \u53ef\u4ee5\u53d1\u73b0\u87ba\u65cb\u77e9\u9635\u4ee5\u4e0b\u51e0\u4e2a\u7279\u70b9\uff1a     1. \u6bcf\u4e00\u5708\u6570\u7684\u4e2a\u6570\u90fd\u662f $n*4-4$\uff0c$n$ \u662f\u5f53\u524d\u5708\u7684\u8fb9\u957f\u3002         \u8fd9\u610f\u5473\u7740\u6bcf\u4e00\u5708\uff0c\u6570\u5b57\u51cf\u5c11 $8$ \u4e2a\u3002     2. \u6bcf\u4e00\u5708\u7684\u5de6\u4e0a\u89d2\u7684\u6570\u5b57\u90fd\u662f\u6700\u5c0f\u7684\u3002  2. \u6545\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u6c42\u51fa\u8fd9\u4e2a\u4f4d\u7f6e\u5728\u7b2c\u51e0\u5708\uff0c\u7136\u540e\u518d\u6c42\u51fa\u8fd9\u4e2a\u4f4d\u7f6e\u5177\u4f53\u7684\u503c\u3002  \u5047\u8bbe\uff0c\u5de6\u4e0a\u89d2\u6570\u5b57 $v$\uff0c\u8fb9\u957f $n$\uff0c\u5de6\u4e0a\u89d2\u70b9 `i,i`\uff0c\u53f3\u4e0b\u89d2\u70b9 `j,j`\uff0c\u5bfb\u627e\u70b9 `x,y` * \u82e5 `x,y` \u5728\u4e0a\u8fb9\uff0c\u90a3\u4e48 `v + y-i` \u5c31\u662f\u7b54\u6848\u3002`y-i` \u662f\u6a2a\u5411\u7684\u8ddd\u79bb\u3002 * \u82e5 `x,y` \u5728\u53f3\u8fb9\uff0c\u90a3\u4e48 `v + n-1 + x-i` \u5c31\u662f\u7b54\u6848\u3002`n-1` \u662f\u4e0a\u8fb9\u7684\u957f\u5ea6\uff0c`x-i` \u662f\u7eb5\u5411\u7684\u8ddd\u79bb\u3002 * \u82e5 `x,y` \u5728\u4e0b\u8fb9\uff0c\u90a3\u4e48 `v + n*2-2 + j-y` \u5c31\u662f\u7b54\u6848\u3002`n*2-2` \u662f\u4e0a\u8fb9\u548c\u53f3\u8fb9\u7684\u957f\u5ea6\uff0c`j-y` \u662f\u6a2a\u5411\u7684\u8ddd\u79bb\u3002 * \u82e5 `x,y` \u5728\u5de6\u8fb9\uff0c\u90a3\u4e48 `v + n*3-3 + j-x` \u5c31\u662f\u7b54\u6848\u3002`n*3-3` \u662f\u4e0a\u8fb9\u3001\u53f3\u8fb9\u548c\u4e0b\u8fb9\u7684\u957f\u5ea6\uff0c`j-x` \u662f\u7eb5\u5411\u7684\u8ddd\u79bb\u3002   C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nint n, x, y, ans=1;\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;x&gt;&gt;y;\n    // ans \u662f\u5de6\u4e0a\u89d2\u7684\u6570\u5b57\uff0cn \u662f\u5f53\u524d\u5708\u7684\u8fb9\u957f\n    // i \u662f\u5de6\u4e0a\u89d2\u7684\u6a2a\u7eb5\u5750\u6807\n    // j \u662f\u53f3\u4e0b\u89d2\u7684\u6a2a\u7eb5\u5750\u6807\n    for(int i=1, j=n; i&lt;=j; i++, j--, ans+=n*4-4, n-=2)\n        if(x==i){      // \u4e0a\n            cout&lt;&lt;ans+(y-i);\n            break;\n        }\n        else if(x==j){ // \u4e0b\n            cout&lt;&lt;ans+(j-y)+n*2-2;\n            break;\n        }\n        else if(y==i){ // \u5de6\n            cout&lt;&lt;ans+(j-x)+n*3-3;\n            break;\n        }\n        else if(y==j){ // \u53f3\n            cout&lt;&lt;ans+(x-i)+n-1;\n            break;\n        } \n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CCF_J/#2013","title":"2013","text":"Acwing 453. \u8ba1\u6570\u95ee\u9898 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1e6+10;\n\nint n, X, ans;\n\nint calc(int i){   // \u8ba1\u7b97i\u4e2d\u6709\u51e0\u4e2aX\n    int res=0;\n    while(i){\n        if(i%10==X) res++;\n        i/=10;\n    }\n    return res;\n}\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;X;\n    for(int i=1; i&lt;=n; i++)\n        ans+=calc(i);\n    cout&lt;&lt;ans;\n    return 0;\n}\n</code></pre> Acwing 454. \u8868\u8fbe\u5f0f\u6c42\u503c code  **\u5927\u610f**  \u7ed9\u5b9a\u4e00\u4e2a\u53ea\u542b `[0, 2^31-1]` `+` `*` \u7684\u8868\u8fbe\u5f0f\uff0c\u6c42\u51fa\u5b83\u7684\u503c\u3002  **\u601d\u8def**  \u5982\u679c\u8868\u8fbe\u5f0f\u4e2d\u6709\u591a\u79cd\u8fd0\u7b97\u7b26\uff0c\u663e\u7136\u7528\u6808\u6765\u505a\u662f\u6700\u597d\u7684\u3002\u4f46\u6b64\u9898\u53ea\u6709 `+` `*` \u4e24\u79cd\u8fd0\u7b97\u7b26\u3002  1. \u6211\u4eec\u4ece\u7b2c\u4e00\u4e2a\u6570\u5f00\u59cb\u8003\u8651\uff0c\u9996\u5148\u63a5\u53d7\u4e00\u4e2a\u6570 `tmp`\uff0c\u7136\u540e\u5faa\u73af\u63a5\u53d7\u4e00\u4e2a\u8fd0\u7b97\u7b26 `ch`\uff0c\u548c\u6570 `num`\u3002     * \u5982\u679c `ch` \u4e3a `+`\uff0c\u90a3\u4e48\u5de6\u8fb9\u7684\u6570 `tmp` \u5c31\u53ef\u4ee5\u52a0\u5230\u7b54\u6848\u4e0a\u4e86\uff0c\u56e0\u4e3a `tmp` \u4e0d\u4f1a\u5f71\u54cd\u540e\u9762\u7684\u8fd0\u7b97\u3002       \u5c06 `num` \u8d4b\u503c\u7ed9 `tmp`\uff0c\u7ee7\u7eed\u5faa\u73af\u3002     * \u5982\u679c `ch` \u4e3a `*`\uff0c\u90a3\u4e48 `tmp` \u5c31\u8981\u4e58\u4e0a `num`\uff0c\u5c06 `tmp*num` \u770b\u4f5c\u4e00\u4e2a\u6574\u4f53\u3002       \u5c06 `tmp*num` \u8d4b\u503c\u7ed9 `tmp`\uff0c\u7ee7\u7eed\u5faa\u73af\u3002     C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N=1;\n\nLL ans, tmp, num;\nchar ch;\n\nint main(){\n    cin&gt;&gt;tmp;\n    while(cin&gt;&gt;ch&gt;&gt;num)\n        if(ch=='+')\n            ans+=tmp,\n            tmp=num;\n        else\n            tmp=(tmp*num)%10000;\n    cout&lt;&lt;(ans+tmp)%10000;\n    return 0;\n}\n</code></pre> AcWing 455. \u5c0f\u670b\u53cb\u7684\u6570\u5b57 code  **\u5927\u610f**  \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4 $a[n]$\uff0c\u901a\u8fc7\u8fd9\u4e2a\u6570\u7ec4\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u6570\u7ec4 $b[n]$\uff0c $b[i]$ \u8868\u793a $a[1] \\sim a[i]$ \u4e2d\u6700\u5927\u7684\u5b50\u5e8f\u5217\u548c\u3002  * \u6837\u4f8b     $a[n]$ = `1` `2` `3` `4` `5`     $b[n]$ = `1` `3` `6` `10` `15`  * \u66f4\u5177\u6709\u4e00\u822c\u6027\u7684\u6837\u4f8b     $a[n]$ = `1` `-2` `3` `-4` `5`     $b[n]$ = `1` `-1` `3` `-1` `5`  * \u66f4\u5177\u6709\u4e00\u822c\u6027\u7684\u6837\u4f8b     $a[n]$ = `9` `-2` `3` `-4` `2`     $b[n]$ = `9` `7` `10` `6` `8`  \u901a\u8fc7 $b[n]$ \u53ef\u4ee5\u5f97\u5230\u7279\u5f81\u503c\u6570\u7ec4\uff0c$b[i] = max(b[j])$\uff0c\u5176\u4e2d $j \u2208 [1, i]$\u3002  \u901a\u8fc7 $a[n]$ \u548c $b[n]$ \u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u6570\u7ec4 $c[n]$\uff0c $c[i] = max(c[j]+b[j])$\uff0c\u5176\u4e2d $j \u2208 [1, i)$\uff0c \u7279\u522b\u7684\uff0c$c[1] = b[1]$\u3002  \u6c42\u6700\u5927\u7684 $c[i]$\u3002  **\u601d\u8def**  1. \u6c42\u51fa $b[n]$\u3002\u5c31\u662f\u5728 $a[n]$ \u4e2d\u6c42\u6700\u5927\u5b50\u5e8f\u5217\u548c\u3002    $i=1$ \u65f6\uff0c$b[1] = a[1]$     $i&gt;1$ \u65f6\uff0c$b[i] = max(b[i-1]+a[i], a[i])$  2. \u6c42\u51fa \u7279\u5f81\u6570\u7ec4 $b[n]$\uff0c\u5373     $b[i] = max(b[j])$\uff0c\u5176\u4e2d $j \u2208 [1, i]$\u3002  3. \u6c42\u51fa $c[n]$\uff0c\u5373     $c[i] = max(c[j]+b[j])$\uff0c\u5176\u4e2d $j \u2208 [1, i)$\uff0c     \u7279\u522b\u7684\uff0c$c[1] = b[1]$\u3002  4. \u6c42\u51fa\u6700\u5927\u7684 $c[i]$\u3002  C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N=1e6+10;\n\nLL n, p;\nLL a[N], b[N];\n__int128 c[N];\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;p;\n    for(int i=1; i&lt;=n; i++) scanf(\"%lld\", &amp;a[i]);\n\n    b[1]=a[1];\n    for(int i=2; i&lt;=n; i++) b[i] = max(b[i-1]+a[i], a[i]);\n    for(int i=2; i&lt;=n; i++) b[i] = max(b[i-1], b[i]);\n\n    c[1]=b[1];\n    __int128 mmax = c[1]+b[1];\n    for(int i=2; i&lt;=n; i++){\n        c[i] = mmax;\n        mmax = max(mmax, c[i] + b[i]);\n    }\n\n    mmax = c[1];\n    for(int i=2; i&lt;=n; i++) mmax=max(mmax, c[i]);\n\n    printf(\"%lld\", mmax%p);\n\n    /* \n    cout&lt;&lt;\"\\n\";\n    for(int i=1; i&lt;=n; i++) printf(\"%12lld\", a[i]); cout&lt;&lt;\"\\n\";\n    for(int i=1; i&lt;=n; i++) printf(\"%12lld\", b[i]); cout&lt;&lt;\"\\n\";\n    for(int i=1; i&lt;=n; i++) printf(\"%12lld\", c[i]); cout&lt;&lt;\"\\n\";\n    */\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CCF_J/#ak-cspj","title":"AK CSPJ","text":"\u6839\u636e NOI\u5927\u7eb2 \u5236\u5b9a\u768430\u5929\u8bad\u7ec3\u8ba1\u5212, \u5251\u6307 CSP-J \u4e00\u7b49\u5956!"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CCF_J/#_1","title":"\u57fa\u7840\u5de9\u56fa\u4e03\u5929\u4e50","text":"<p>\u524d7\u5929\u7684\u76ee\u6807\u662f csp-j2 \u7684\u7b2c\u4e00\u9898\uff0c\u5927\u91cf\u57fa\u7840\u9898\uff0c\u4fdd\u8bc1\u7b2c\u4e00\u9898\u7684\u6b63\u786e\u6027\u548c\u89e3\u9898\u7684\u901f\u5ea6</p> <ul> <li>\u7b2c 1 \u5929 \u987a\u5e8f\u7ed3\u6784 \u7b97\u6cd5\u7ade\u8d5b\u53caOJ\u7684\u6982\u5ff5</li> <li>\u7b2c 2 \u5929 \u5206\u652f\u7ed3\u6784 if</li> <li>\u7b2c 3 \u5929 \u5faa\u73af\u7ed3\u6784 \u5faa\u73af\u4f18\u5316\uff08\u7279\u5224\uff09\u3001\u5d4c\u5957\u5faa\u73af</li> <li>\u7b2c 4 \u5929 \u6570\u7ec4 \u4e00\u7ef4\u6570\u7ec4\u3001vector\u7b49</li> <li>\u7b2c 5 \u5929 \u5b57\u7b26\u4e32 \u5b57\u7b26\u4e32\u5904\u7406\u53ca\u7b80\u5355\u6280\u5de7 string &lt;-&gt; int</li> <li>\u7b2c 6 \u5929 \u51fd\u6570\u4e0e\u7ed3\u6784\u4f53 pair\u53ca\u5229\u7528\u51fd\u6570\u7b80\u5316\u89e3\u9898\u601d\u8def</li> <li>\u7b2c 7 \u5929 \u679a\u4e3e\u4e0e\u6a21\u62df \u5404\u79cd\u5e38\u89c1\u7684\u95ee\u9898</li> </ul> <p>\u901a\u8fc7\u524d7\u5929\u7684\u9898\u6d77\u6218\u672f\uff0c\u5bf9\u66b4\u529b\u548c\u6a21\u62df\u5df2\u7ecf\u6709\u4e86\u8f83\u4e3a\u6df1\u523b\u7684\u4e86\u89e3 \u4e00\u822c\u800c\u8a00\uff0c\u5df2\u7ecf\u80fd\u5199\u51fa\u7b2c\u4e8c\u9898\u7684\u66b4\u529b\u505a\u6cd5\u4e86</p>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CCF_J/#_2","title":"\u4e24\u5468\u4e13\u9898\u7a81\u7834","text":"<p>8-15\u5929\u7684\u76ee\u6807\u662f csp-j2 \u7684\u7b2c\u4e8c\u9898 \u638c\u63e1\u7b80\u5355\u7b97\u6cd5\u53ca\u6570\u636e\u7ed3\u6784\uff0c\u5728\u66b4\u529b\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u4f18\u5316\uff0c\u7b2c\u4e8c\u9898\u8f7b\u677e\u62ff\u4e0b</p> <ul> <li>\u7b2c 8 \u5929 \u9ad8\u7cbe\u5ea6 \u8fdb\u5236\u8f6c\u6362</li> <li>\u7b2c 9 \u5929 \u4e8c(N)\u53c9\u6811 \u7b80\u5355\u6811\u53ca\u7279\u6b8a\u6811</li> <li>\u7b2c 10 \u5929 \u9012\u5f52\u4e0e\u9012\u63a8</li> <li>\u7b2c 11 \u5929 DFS \u66b4\u641c\u601d\u60f3</li> <li>\u7b2c 12 \u5929 BFS \u66b4\u641c\u6700\u4f18\u53ca\u6d2a\u6c34\u8986\u76d6 </li> <li>\u7b2c 13 \u5929 \u4e8c\u5206 \u4e00\u79cd\u5e38\u89c1\u4f18\u5316</li> <li>\u7b2c 14 \u5929 \u524d\u7f00\u548c\u4e0e\u5dee\u5206</li> <li>\u7b2c 15 \u5929 \u7d20\u6570\u7b5b\u6cd5</li> </ul> <p>16-21\u5929\u7684\u76ee\u6807\u662f csp-j2 \u7684\u7b2c\u4e09\u9898\u548c\u7b2c\u56db\u9898 \u6216\u8bb8\u4e00\u65f6\u60f3\u4e0d\u51fa\u6807\u7a0b\u89e3\u6cd5\uff0c\u4f46\u66b4\u529b\u7b97\u6cd5\u672a\u5c1d\u4e0d\u80fd\u4e00\u8bd5</p> <ul> <li>\u7b2c 16 \u5929 \u56fe\u8bba \u5355\u6e90\u6700\u77ed\u8def \u90bb\u63a5\u77e9\u9635 \u53ca \u90bb\u63a5\u8868</li> <li>\u7b2c 17 \u5929 \u56fe\u8bba \u591a\u6e90\u6700\u77ed\u8def</li> <li>\u7b2c 18 \u5929 DP \u6570\u5b57\u4e09\u89d2\u5f62\u6a21\u578b </li> <li>\u7b2c 19 \u5929 DP \u5b50\u5e8f\u5217\u6a21\u578b</li> <li>\u7b2c 20 \u5929 DP \u80cc\u5305\u6a21\u578b</li> <li>\u7b2c 21 \u5929 DP \u72b6\u6001\u673a\u6a21\u578b</li> </ul>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CCF_J/#_3","title":"\u5386\u5c4a\u771f\u9898\u56de\u987e","text":"<ul> <li>\u6bcf\u65e5\u4e00\u5957USACO CU\u6216CCF-J</li> </ul>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CIE/","title":"CIE","text":"<p>\u5168\u56fd\u9752\u5c11\u5e74\u8f6f\u4ef6\u7f16\u7a0b\u7b49\u7ea7\u8003\u8bd5\u6807\u51c6\uff08C\u8bed\u8a00V1.0\uff09</p>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CIE/#_1","title":"\u4e09\u7ea7","text":""},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CIE/#_2","title":"\u679a\u4e3e","text":"\u4f59\u6570\u76f8\u540c\u95ee\u9898\uff08202109\uff09 code   **\u5927\u610f**  \u7ed9\u5b9a\u4e09\u4e2a\u6570\uff1a$a, b, c$ \u6c42 $x$\uff0c\u4f7f\u5f97 $ a \\% x = b \\% x = c \\% x $  **\u601d\u8def**  1. \u6700\u7b80\u5355\u7684\u529e\u6cd5\uff0c\u4ece\u5c0f\u5230\u5927\u679a\u4e3e $x$\u3002  C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 1e5+10;\n\nint a, b, c;\n\nint main(){\n    cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;\n    int x=1;\n    while(++x)\n        if(a%x == b%x &amp;&amp; a%x == c%x){\n            cout&lt;&lt;x;\n            break;\n        }\n\n    return 0;\n}\n</code></pre> \u8bfe\u7a0b\u51b2\u7a81\uff08202109\uff09 code   **\u5927\u610f**  \u7ed9\u5b9a $n$ \u95e8\u8bfe\u7a0b\uff0c\u4ee5\u53ca\u4ed6\u4eec\u7684\u5f00\u8bfe\u65f6\u95f4 $[a, b]$\uff0c \u5b9a\u4e49\u51b2\u7a81\u7a0b\u5ea6\u4e3a\uff1a\u5bf9\u4e8e\u4efb\u610f\u4e24\u95e8\u8bfe\uff0c\u4ed6\u4eec\u7684\u91cd\u5408\u5929\u6570 \u6c42\uff0c\u6700\u5927\u7684\u51b2\u7a81\u7a0b\u5ea6\u3002  **\u601d\u8def**  1. \u6211\u4eec\u9996\u5148\u9700\u8981\u679a\u4e3e\u6240\u6709\u8bfe  2. \u5bf9\u4e8e\u4efb\u610f\u7684\u4e24\u95e8\u8bfe\uff0c\u6c42\u4ed6\u4eec\u7684\u51b2\u7a81\u65f6\u95f4     \u5373\uff0c\u7ed9\u5b9a $(a_1, b_1) $ \u548c $(a_2, b_2)$\uff0c\u6c42\u4ed6\u4eec\u91cd\u5408\u7684\u90e8\u5206     \u5373\uff0c$min(b_1, b_2) - max(a_1, a_2)$  C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 1e3+10;\n\nint a[N], b[N];\nint n, ans;\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) scanf(\"%d%d\", a+i, b+i);\n\n    for(int i=1; i&lt;=n; i++)\n        for(int j=1; j&lt;=n; j++)\n            ans = max(ans, min(b[i], b[j]) - max(a[i], a[j]));\n\n    cout&lt;&lt;ans;\n\n    return 0;\n}\n</code></pre> \u6211\u5bb6\u7684\u95e8\u724c\u53f7 code   **\u5927\u610f**  \u95e8\u724c\u53f7\u4ece $1$ \u5f00\u59cb\u7f16\u53f7\uff0c\u5047\u5b9a\u6709 $i$ \u5bb6\uff0c \u95e8\u724c\u53f7\u4e4b\u548c\u4e3a $1+2+3+ ... +i$\uff0c\u4ee4\u5176\u4e3a $all$\uff0c \u5047\u5b9a\u6211\u7684\u95e8\u724c\u53f7\u662f $j$\uff0c\u5b58\u5728 $all - 2*j = n$\uff0c \u7ed9\u5b9a $n$\uff0c\u6c42 $i,j$\u3002  **\u601d\u8def**  1. \u663e\u7136\uff0c\u6211\u4eec\u4e0d\u77e5\u9053\u81ea\u5df1\u7684\u95e8\u724c\u53f7\uff0c\u81ea\u5df1\u7684\u95e8\u724c\u53f7\u662f\u9700\u8981\u679a\u4e3e\u6c42\u51fa\u7684\u3002  2. \u6211\u4eec\u5047\u8bbe\uff0c\u73b0\u5728\u6709 $1,2,3,4...$ \u4e2a\u95e8\u724c\u53f7\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u8f7b\u677e\u7684\u6c42\u51fa $all$\u3002  3. \u5728\u6c42\u51fa $all$ \u4e4b\u540e\uff0c\u679a\u4e3e\u68c0\u67e5\uff0c\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u95e8\u724c\u53f7\uff0c\u4f7f\u5f97\u6761\u4ef6\u6210\u7acb\u3002  C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 1e5+10;\nint all;\n\nint main(){\n    int n; cin&gt;&gt;n;\n    for(int i=1; ; i++){    // \u95e8\u724c\u53f7\u4e4b\u548c\n        all += i;           // \n        for(int j=1; j&lt;=i; j++)\n            if(all - j*2 == n){\n                cout&lt;&lt;j&lt;&lt;\" \"&lt;&lt;i;\n                return 0;\n            }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CIE/#_3","title":"\u9012\u63a8","text":"\u83f2\u6ce2\u90a3\u5951\u6570\u5217\uff08202109\uff09 code  **\u5927\u610f**  \u6c42\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7b2c $a$ \u4e2a\u6570\u5bf9 $1e4$ \u53d6\u6a21\u7684\u7ed3\u679c   **\u601d\u8def**  1. \u987a\u5e8f\u6c42 $fib$\uff0c\u5c06\u7ed3\u679c\u4fdd\u5b58\u4e0b\u6765  C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int mod = 1e4;\nconst int N = 1e6+10;\nint a[N];\n\nint main(){\n    a[1] = a[2] = 1;\n    for(int i=3; i&lt;=1000000; i++)\n        a[i] = (a[i-2] + a[i-1]) % mod;\n\n    int n; cin&gt;&gt;n;\n    while(n--){\n        int x; cin&gt;&gt;x;\n        cout&lt;&lt;a[x]&lt;&lt;\"\\n\";\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CIE/#_4","title":"\u9012\u5f52","text":"<p>\u751f\u6210\u62ec\u53f7\uff08202109\uff09 \u5e7f\u4e49\u683c\u96f7\u7801\uff08202109\uff09</p> <p></p>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CIE/#_5","title":"\u4e94\u7ea7","text":""},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CIE/#_6","title":"\u641c\u7d22","text":"<p>\u57fa\u672c\u7b97\u6cd5\u4e4b\u641c\u7d22 \u7b97\u6cd5\u4e4b\u641c\u7d22</p> 1789:\u7b9724 no code  **\u5927\u610f**     C++ \u6f2b\u6f2b\u56de\u56fd\u8def\uff08202009\uff09 code   **\u5927\u610f**  \u7ed9\u5b9a\u4e00\u4e2a $N*N$ \u5927\u5c0f\u7684\u77e9\u9635 $g$\u3002 $g[i][j]$ \u7684\u542b\u4e49\u4e3a $i-&gt;j$ \u7684\u82b1\u8d39\uff0c\u5982\u679c\u662f $-1$\uff0c\u5219\u8bf4\u660e\u65e0\u6cd5\u5230\u8fbe \u73b0\u8ba9\u6211\u4eec\u6c42 $1-&gt;N$ \u662f\u5426\u80fd\u5230\u8fbe\uff08\u4e0d\u8003\u8651\u82b1\u8d39\u548c\u91cd\u590d\u5230\u8fbe\uff09\u3002  **\u601d\u8def**  1. \u4e0d\u7528\u8003\u8651\u82b1\u8d39\uff0c\u90a3\u4e48 $g[i][j]$ \u4ec5\u6709\u4e24\u79cd\u72b6\u6001\uff0c\u53ef\u4ee5\u5230\u8fbe\u548c\u4e0d\u53ef\u5230\u8fbe\u3002  2. \u76f4\u63a5\u8dd1\u4e00\u904d\u4f20\u9012\u95ed\u5305\u5c31\u597d\u4e86\u3002  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nconst int N = 20;\n\nbool g[N][N];   // 1 \u8868\u793a\u53ef\u4ee5\u98de\nint n;\n\nvoid solve(){\n    memset(g, 0, sizeof g);\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++)\n        for(int j=1; j&lt;=n; j++){\n            int x; cin&gt;&gt;x;\n            if(x&gt;0) g[i][j] = 1;\n        }\n\n    for(int i=1; i&lt;=n; i++)\n        for(int j=1; j&lt;=n; j++)\n            for(int k=1; k&lt;=n; k++)\n                g[i][j] = g[i][j] || (g[i][k] &amp;&amp; g[k][j]);\n\n    if(g[1][n]) puts(\"YES\");\n    else puts(\"NO\");\n\n    return ;\n}\n\nint main(){\n    int T; cin&gt;&gt;T;\n    while(T--) solve();\n    return 0;\n}\n</code></pre> \u9e23\u4eba\u548c\u4f50\u52a9\uff08202009\uff09 code   **\u5927\u610f**  \u7ed9\u5b9a\u4e00\u4e2a\u77e9\u9635 $g$\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u6709\u56db\u79cd\u72b6\u6001 * `@` \u8d77\u70b9 * `+` \u7ec8\u70b9 * `*` \u53ef\u4ee5\u82b1\u8d39 $0$ \u4ee3\u4ef7\u901a\u8fc7 * `#` \u53ef\u4ee5\u82b1\u8d39 $1$ \u4ee3\u4ef7\u901a\u8fc7  \u6bcf\u6b21\u79fb\u52a8\u82b1\u8d39\u65f6\u95f4 $1$\uff0c\u7ed9\u5b9a\u521d\u59cb\u7684\u80fd\u91cf\uff0c \u6c42\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u82b1\u8d39\u7684\u6700\u77ed\u65f6\u95f4  **\u601d\u8def**  1. \u6c42\u6700\u77ed\u8def\uff0c\u90a3\u4e48\u80af\u5b9a\u662f BFS \u4e86     * \u5bf9\u4e8e\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u7684\u70b9\uff0c\u76f4\u63a5\u62d3\u5c55     * \u5bf9\u4e8e\u9700\u8981\u82b1\u8d39\u4ee3\u4ef7\u7684\u70b9\uff0c\u8981\u4e48\u62d3\u5c55\uff0c\u8981\u4e48\u82b1\u8d39 $1$ \u4ee3\u4ef7\u62d3\u5c55     * \u663e\u7136\uff0c\u6bcf\u4e2a\u70b9\u53ef\u80fd\u4f1a\u4e8c\u6b21\u5230\u8fbe\uff0c\u6240\u4ee5\u6709\u5fc5\u8981\u7ef4\u62a4\u4e00\u4e2a $dis$\uff1a\u5230\u8fbe $i,j$ \u70b9\u7684\u6700\u5c0f\u82b1\u8d39  2. \u56e0\u6b64\uff0c\u6211\u4eec\u961f\u5217\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u5e94\u5f53\u6709:     * \u5f53\u524d\u4f4d\u7f6e $x, y$     * \u5f53\u524d\u82b1\u8d39\u65f6\u95f4 $w$     * \u5f53\u524d\u5269\u4f59\u80fd\u91cf $v$  C++<pre><code>#define fst first\n#define sed second\n#include &lt;iostream&gt;\n#include &lt;queue&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\ntypedef pair&lt;int, int&gt; PII;\nconst int dxy[4][2] = { {-1,0},{1,0},{0,-1},{0,1} };\nconst int inf = 0x3f3f3f3f;\nconst int N = 300;\n\nbool g[N][N];\nint dis[N][N];\nint m, n, t;\nPII S, E;   // \u8d77\u70b9\u548c\u7ec8\u70b9\n\nstruct one{\n    int x, y;\n    int w, v;\n};\n\nint main(){\n    memset(dis, 0x3f, sizeof dis);\n    cin&gt;&gt;m&gt;&gt;n&gt;&gt;t;\n    for(int i=1; i&lt;=m; i++){\n        string tt; cin&gt;&gt;tt;\n        for(int j=1; j&lt;=n; j++){\n            if(tt[j-1] == '@') S = {i, j};\n            if(tt[j-1] == '+') E = {i, j}, g[i][j] = 1;\n            if(tt[j-1] == '*') g[i][j] = 1;\n            if(tt[j-1] == '#') g[i][j] = 0;\n        }\n    }\n\n    queue&lt;one&gt; q; q.push({S.fst, S.sed, 0, t}), dis[S.fst][S.sed] = 0;\n\n    while(q.size()){\n        auto u = q.front(); q.pop();\n\n        if(u.x == E.fst &amp;&amp; u.y == E.sed){\n            cout&lt;&lt;u.w;\n            return 0;\n        }\n\n        for(int i=0; i&lt;4; i++){\n            int nx = u.x + dxy[i][0];\n            int ny = u.y + dxy[i][1];\n            if(nx &lt; 1 || nx &gt; m || ny &lt; 1 || ny &gt; n) continue;\n\n            if(g[nx][ny]){  // \u53ef\u4ee5\u76f4\u63a5\u53bb\n\n                if(dis[nx][ny] &gt; u.w)\n                    q.push({nx, ny, u.w+1, u.v}), dis[nx][ny] = u.w+1;\n\n            }else{          // \u4e0d\u80fd\u76f4\u63a5\u53bb\n\n                if(u.v &amp;&amp; dis[nx][ny] &gt; u.w)\n                    q.push({nx, ny, u.w+1, u.v-1}), dis[nx][ny] = u.w+1;\n\n            }\n        }\n    }\n\n    cout&lt;&lt;-1;\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CIE/#_7","title":"\u8d2a\u5fc3","text":"<p>\u57fa\u672c\u7b97\u6cd5\u4e4b\u8d2a\u5fc3 \u7b97\u6cd5\u4e4b\u8d2a\u5fc3</p> \u88c5\u7bb1\u95ee\u9898\uff08202009\uff09 code   **\u5927\u610f**  \u7ed9\u5b9a\u82e5\u5e72\u4e2a $1*1, 2*2, 3*3, 4*4, 5*5, 6*6$ \u7684\u7269\u54c1\uff0c\u9700\u8981\u5c06\u5176\u5168\u90e8\u653e\u5165 $6*6$ \u7684\u7bb1\u5b50\u91cc\u3002  \u6c42\u81f3\u5c11\u9700\u8981\u591a\u5c11\u4e2a\u7bb1\u5b50\u3002  **\u601d\u8def**  1. \u6211\u4eec\u5c1d\u8bd5\u4ece\u5927\u7684\u5f80\u5c0f\u7684\u653e\uff0c\u6bcf\u79cd\u7269\u54c1\u7684\u6570\u91cf\u770b\u4f5c $n_{6,5,4,3,2,1}$\uff1a     * $6*6$: \u9700\u8981 $n_6$ \u4e2a\u7bb1\u5b50     * $5*5$: \u9700\u8981 $n_5$ \u4e2a\u7bb1\u5b50         * \u6b64\u65f6\uff0c\u7bb1\u5b50\u4e2d\u53ef\u80fd\u7a7a\u4f4d\uff0c\u53ef\u4ee5\u653e\u7f6e $(n_5 * 11)$ \u4e2a $(1*1)$ \u7684\u7269\u54c1     * $4*4$: \u9700\u8981 $n_4$ \u4e2a\u7bb1\u5b50         * \u6b64\u65f6\uff0c\u7bb1\u5b50\u4e2d\u53ef\u80fd\u7a7a\u4f4d\uff0c\u53ef\u4ee5\u653e\u7f6e $(n_4 * 5)$ \u4e2a $(2*2)$ \u7684\u7269\u54c1         * \u6b64\u65f6\uff0c\u7bb1\u5b50\u4e2d\u53ef\u80fd\u7a7a\u4f4d\uff0c\u53ef\u4ee5\u653e\u7f6e $max(0, n_4 * 5 - n_2)$ \u4e2a $(1*1)$ \u7684\u7269\u54c1     * $3*3$\uff1a\u9700\u8981 $(n_3+3) / 4$ \u4e2a\u7bb1\u5b50         * \u5982\u679c $n_3 \\% 4==0$\uff0c\u4e0d\u5b58\u5728\u7a7a\u4f4d         * \u5982\u679c $n_3 \\% 4==1$\uff0c\u53ef\u4ee5\u653e\u7f6e $5$ \u4e2a $(2*2)$ \u7684\u7269\u54c1              * \u5c1d\u8bd5\u7ee7\u7eed\u585e\u4e0b $max(0, 5-n_2) * 4 + 7$ \u4e2a $(1*1)$ \u7684\u7269\u54c1         * \u5982\u679c $n_3 \\% 4==2$\uff0c\u53ef\u4ee5\u653e\u7f6e $3$ \u4e2a $(2*2)$ \u7684\u7269\u54c1             * \u5c1d\u8bd5\u7ee7\u7eed\u585e\u4e0b $max(0, 3-n_2) * 4 + 6$ \u4e2a $(1*1)$ \u7684\u7269\u54c1         * \u5982\u679c $n_3 \\% 4==3$\uff0c\u53ef\u4ee5\u653e\u7f6e $1$ \u4e2a $(2*2)$ \u7684\u7269\u54c1             * \u5c1d\u8bd5\u7ee7\u7eed\u585e\u4e0b $max(0, 1-n_2) * 4 + 5$ \u4e2a $(1*1)$ \u7684\u7269\u54c1     * $2*2$\uff1a\u9700\u8981 $(n_2+8) / 9$ \u4e2a\u7bb1\u5b50         * \u5982\u679c $n_2 \\% 9==0$\uff0c\u4e0d\u5b58\u5728\u7a7a\u4f4d         * \u5426\u5219\uff0c\u53ef\u4ee5\u653e\u7f6e $36 - 4 * n_2 \\% 9$ \u4e2a $(1*1)$ \u7684\u7269\u54c1     * $1*1$\uff1a\u9700\u8981 $(n_1+35) / 36$ \u4e2a\u7bb1\u5b50  C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 1e5+10;\n\nint n1,n2,n3,n4,n5,n6;\n\nvoid solve(){\n    int ans=0;\n    ans += n6;\n\n    ans += n5;\n    n1 = max(0, n1 - n5*11);\n\n    ans += n4;\n    n1 = max(0, n1 - max(0, n4*5-n2));\n    n2 = max(0, n2 - n4*5);\n\n    ans += (n3+3)/4;\n    if(n3%4==1){\n        n1 = max(0, n1-(max(0, 5-n2)*4+7));\n        n2 = max(0, n2-5);\n    }\n    else if(n3%4==2){\n        n1 = max(0, n1-(max(0, 3-n2)*4+6));\n        n2 = max(0, n2-3);\n    }\n    else if(n3%4==3){\n        n1 = max(0, n1-(max(0, 1-n2)*4+5));\n        n2 = max(0, n2-1);\n    }\n\n    ans += (n2+8)/9;\n    if(n2%9){\n        n1 = max(0, n1 - max(0, 36 - 4*n2%9));\n    }\n\n    ans += (n1+35)/36;\n\n    cout&lt;&lt;ans&lt;&lt;\"\\n\";\n\n    return ;\n}\n\nint main(){\n    while(cin&gt;&gt;n1&gt;&gt;n2&gt;&gt;n3&gt;&gt;n4&gt;&gt;n5&gt;&gt;n6, n1||n2||n3||n4||n5||n6)\n        solve();\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CIE/#_8","title":"\u5206\u6cbb","text":"<p>\u57fa\u672c\u7b97\u6cd5\u4e4b\u5206\u6cbb \u7b97\u6cd5\u4e4b\u5206\u6cbb</p> <p></p>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CIE/#_9","title":"\u516d\u7ea7","text":""},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CIE/#_10","title":"\u6570\u636e\u7ed3\u6784","text":"\u5b57\u7b26\u4e32\u63d2\u5165\uff08202305a\uff09 code  **\u5927\u610f**  **\u601d\u8def**  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\nusing namespace std;\n\nconst int N = 1e5+10;\n\nstring s, sub;\n\nint main(){\n    while(cin &gt;&gt; s &gt;&gt; sub){\n        int idx = 0;\n        char maxC = 0;\n        for(int i=0; i&lt;s.size(); i++)\n            if(maxC &lt; s[i])\n                maxC = s[i], idx = i;\n\n        s.insert(idx + 1, sub);\n        cout &lt;&lt; s &lt;&lt; \"\\n\";\n    }\n    return 0;\n}\n</code></pre> \u751f\u65e5\u76f8\u540c 2.0\uff08202309a\uff09 code  **\u5927\u610f**  **\u601d\u8def**  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nvector&lt;string&gt; res[13][32];\n\nbool cmp(string a, string b){\n    if(a.size() &lt; b.size()) return 1;   // \u957f\u5ea6\n    if(a.size() &gt; b.size()) return 0;   \n    if(a &lt; b) return 1;                 // \u5b57\u5178\u5e8f\n    if(a &gt; b) return 0;\n    return 0;\n}\n\nint main(){\n    int n; cin &gt;&gt; n;\n    for(int i=1; i&lt;=n; i++){\n        string name;\n        int m, d;\n        cin &gt;&gt; name &gt;&gt; m &gt;&gt; d;\n        res[m][d].push_back(name);\n    }\n\n    bool flg = 0;\n\n    for(int i=1; i&lt;=12; i++)\n        for(int j=1; j&lt;=31; j++)\n            if(res[i][j].size() &gt; 1){\n                flg = 1;\n                sort(res[i][j].begin(), res[i][j].end(), cmp);\n                cout &lt;&lt; i &lt;&lt; \" \" &lt;&lt; j &lt;&lt; \" \";\n                for(auto name: res[i][j])\n                    cout &lt;&lt; name &lt;&lt; \" \";\n                cout &lt;&lt; \"\\n\";\n            }\n\n    if(flg == 0)\n        cout &lt;&lt; \"None\";\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CIE/#_11","title":"\u6808","text":"\u6808\u7684\u57fa\u672c\u64cd\u4f5c\uff08202209a\uff09 code  **\u5927\u610f**  **\u601d\u8def**  C++<pre><code>#pragma G++ optimize(\"Ofast\", 3)\n#define fst first\n\n#define sed second\n\n#define pb push_back\n\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair&lt;int, int&gt; PII;\n\nconst int inf = 0x3f3f3f3f;\nconst int dxy[][2]={ {-1,0},{1,0},{0,-1},{0,1} };\nconst int N = 2e5+10;\n\nint n;\n\nvoid solve(){\n    stack&lt;int&gt; stk;\n    cin &gt;&gt; n;\n\n    bool flg = 1;\n    while(n--){\n        string op;\n        cin &gt;&gt; op;\n        if(op == \"push\"){\n            int x; cin &gt;&gt; x;\n            if(flg == 0) continue;\n\n            stk.push(x);\n        }else{\n            if(flg == 0) continue;\n\n            if(stk.size() == 0){\n                cout &lt;&lt; \"error\\n\";\n                flg = 0;\n                continue;\n            }\n\n            stk.pop();\n        }\n    }\n\n    if(flg == 0) return ;\n\n    stack&lt;int&gt; t;\n    while(stk.size()){\n        t.push(stk.top());\n        stk.pop();\n    }\n\n    while(t.size()){\n        cout &lt;&lt; t.top() &lt;&lt; \" \";\n        t.pop();\n    }\n\n    cout &lt;&lt; \"\\n\";\n}\n\nint main(){\n    int T; cin&gt;&gt;T; while(T--)\n    solve();\n    return 0;\n}\n</code></pre> \u6808\u57fa\u672c\u64cd\u4f5c\uff08202305b\uff09 code  **\u5927\u610f**  **\u601d\u8def**  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;stack&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\nconst int N = 1e5+10;\n\nstack&lt;int&gt; stk;\nqueue&lt;pair&lt;string, int&gt;&gt; q;\nint b[N];\nint n;\n\nint main(){\n    cin &gt;&gt; n;\n    // \u51fa\u6808\u5e8f\u5217\n    for(int i=1; i&lt;=n; i++) cin &gt;&gt; b[i];\n    b[0] = 1;\n\n    // \u5165\u6808\u987a\u5e8f\n    for(int i=1; i&lt;=n; i++){\n        stk.push(i);\n        q.push({\"PUSH\", i});\n        while(stk.size() &amp;&amp; stk.top() == b[ b[0] ])\n            stk.pop(), ++b[0], q.push({\"POP\", b[b[0]-1]});\n    }\n\n    if(stk.size()) cout &lt;&lt; \"NO\";\n    else\n        while(q.size())\n            cout &lt;&lt; q.front().first &lt;&lt; \" \" &lt;&lt; q.front().second &lt;&lt; \"\\n\", q.pop();\n\n    return 0;\n}\n</code></pre> \u5408\u6cd5\u51fa\u6808\u5e8f\u5217\uff08202309b\uff09 code  **\u5927\u610f**  **\u601d\u8def**  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n#include &lt;stack&gt;\nusing namespace std;\n\nconst int N = 1e5+10;\n\nstring x, s;\n\nint main(){\n    cin &gt;&gt; x;\n    while(cin &gt;&gt; s){\n        stack&lt;char&gt; a, b, t;\n        for(int i=x.size()-1; i&gt;=0; i--) a.push(x[i]);\n        for(int i=s.size()-1; i&gt;=0; i--) b.push(s[i]);\n\n        while(a.size()){\n            t.push(a.top());\n            a.pop();\n\n            while(t.size() &amp;&amp; t.top() == b.top())\n                t.pop(), b.pop();\n        }\n\n        if(t.size() == 0) cout &lt;&lt; \"YES\\n\";\n        else cout &lt;&lt; \"NO\\n\";\n    }\n\n    return 0;\n}\n</code></pre> \u62ec\u53f7\u753b\u5bb6\uff08202309c\uff09 code  **\u5927\u610f**  **\u601d\u8def**  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;stack&gt;\nusing namespace std;\n\nconst int N = 1e5+10;\n\nstack&lt;int&gt; stk;\n\nint main(){\n    char c;\n    while(cin &gt;&gt; c){\n        int x;\n        if(c == '(' || c == ')') x = 1;\n        if(c == '[' || c == ']') x = 2;\n        if(c == '{' || c == '}') x = 3;\n\n        if(stk.size() &amp;&amp; stk.top() == x)\n            stk.pop();\n        else\n            stk.push(x);\n    }\n\n    if(stk.size()) cout &lt;&lt; \"No\";\n    else cout &lt;&lt; \"Yes\";\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/CIE/#_12","title":"\u961f\u5217","text":"\u961f\u5217\u548c\u6808\uff08202312X\uff09 code  **\u5927\u610f**  **\u601d\u8def**  C++<pre><code>#pragma G++ optimize(\"Ofast\", 3)\n#define fst first\n\n#define sed second\n\n#define pb push_back\n\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair&lt;int, int&gt; PII;\n\nconst int inf = 0x3f3f3f3f;\nconst int dxy[][2]={ {-1,0},{1,0},{0,-1},{0,1} };\nconst int N = 2e5+10;\n\nint n;\n\nvoid solve(){\n    stack&lt;int&gt; stk;\n    queue&lt;int&gt; q;\n    cin &gt;&gt; n;\n\n    bool flg = 1;\n    while(n--){\n        string op;\n        cin &gt;&gt; op;\n        if(op == \"push\"){\n            int x; cin &gt;&gt; x;\n            if(flg == 0) continue;\n\n            stk.push(x);\n            q.push(x);\n        }else{\n            if(flg == 0) continue;\n\n            if(stk.size() == 0 || q.size() == 0){\n                cout &lt;&lt; \"error\\nerror\\n\";\n                flg = 0;\n                continue;\n            }\n\n            stk.pop();\n            q.pop();\n        }\n    }\n\n    if(flg == 0) return ;\n\n    while(q.size()){\n        cout &lt;&lt; q.front() &lt;&lt; \" \";\n        q.pop();\n    }\n\n    stack&lt;int&gt; t;\n    while(stk.size()){\n        t.push(stk.top());\n        stk.pop();\n    }\n\n    cout &lt;&lt; \"\\n\";\n\n    while(t.size()){\n        cout &lt;&lt; t.top() &lt;&lt; \" \";\n        t.pop();\n    }\n\n    cout &lt;&lt; \"\\n\";\n}\n\nint main(){\n    int T; cin&gt;&gt;T; while(T--)\n    solve();\n    return 0;\n}\n</code></pre> \u53cc\u7aef\u961f\u5217\uff08202305d\uff09 code  **\u5927\u610f**  **\u601d\u8def**  C++<pre><code>#pragma G++ optimize(\"Ofast\", 3)\n#define fst first\n\n#define sed second\n\n#define pb push_back\n\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair&lt;int, int&gt; PII;\n\nconst int inf = 0x3f3f3f3f;\nconst int dxy[][2]={ {-1,0},{1,0},{0,-1},{0,1} };\nconst int N = 2e5+10;\n\nint n;\n\nvoid solve(){\n    cin &gt;&gt; n;\n    deque&lt;int&gt; q;\n    while(n--){\n        int op, x;\n        cin &gt;&gt; op &gt;&gt; x;\n        if(op == 1)\n            q.push_back(x);\n        else{\n            if(x == 1) q.pop_back();\n            else q.pop_front();\n        }\n    }\n\n    if(q.size() == 0)\n        cout &lt;&lt; \"NULL\\n\";\n\n    while(q.size())\n        cout &lt;&lt; q.front() &lt;&lt; \" \", q.pop_front();\n    cout &lt;&lt; \"\\n\";\n}\n\nint main(){\n    int T; cin&gt;&gt;T; while(T--)\n    solve();\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/","title":"2022-2023 Season","text":""},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/#2023-us-open","title":"2023 US Open","text":""},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/#2023-feb","title":"2023 Feb","text":""},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/#2023-jan","title":"2023 Jan","text":"<p>-</p>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/#2022-dec","title":"2022 Dec","text":"AcWing 4818. \u5976\u725b\u5927\u5b66 code  **\u5927\u610f**  \u7ed9\u5b9a $n$ \u5934\u5976\u725b\uff0c\u6bcf\u5934\u5976\u725b\u613f\u610f\u652f\u4ed8\u7684\u6700\u9ad8\u5b66\u8d39\u4e3a $c_i$\u3002  \u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u5b66\u8d39 $x$\uff0c\u6240\u6709\u613f\u610f\u652f\u4ed8 $x$ \u53ca\u4ee5\u4e0a\u5b66\u8d39\u7684\u5976\u725b\u90fd\u53ef\u4ee5\u4e0a\u5b66\u3002  \u6c42\u6211\u4eec\u80fd\u6536\u53d6\u7684\u6700\u5927\u5b66\u8d39\uff0c\u5373 $x * \u5976\u725b\u6570\u91cf$\u3002  \u5982\u679c\u5b58\u5728\u591a\u4e2a\u89e3\uff0c$x$ \u5e94\u8be5\u5c3d\u53ef\u80fd\u5c0f\u3002  **\u601d\u8def**  1. \u663e\u7136\uff0c\u5b66\u8d39\u548c\u613f\u610f\u652f\u4ed8\u7684\u5976\u725b\u6570\u91cf\u4e4b\u95f4\u5b58\u5728     * \u5b66\u8d39\u9ad8\uff0c\u652f\u4ed8\u7684\u5976\u725b\u5c11     * \u5b66\u8d39\u4f4e\uff0c\u652f\u4ed8\u7684\u5976\u725b\u591a  \u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u80fd\u5355\u4e00\u7684\u8ba4\u4e3a\uff0c\u5b66\u8d39\u8d8a\u9ad8\u8d8a\u597d\uff0c\u6216\u8005\u5976\u725b\u8d8a\u591a\u8d8a\u597d\u3002  2. \u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u679a\u4e3e\u5b66\u8d39 $x$\uff0c     \u7136\u540e\u7edf\u8ba1\u4e00\u4e0b\uff0c\u6709\u591a\u5c11\u5976\u725b\u613f\u610f\u652f\u4ed8 $x$ \u53ca\u4ee5\u4e0a\u7684\u5b66\u8d39\u3002     \u6b64\u65b9\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2)$\u3002  3. \u6211\u4eec\u53ef\u4ee5\u5bf9\u539f\u6570\u7ec4\u8fdb\u884c\u4e00\u6b21\u4ece\u5927\u5230\u5c0f\u7684\u6392\u5e8f\u3002     \u6b64\u65f6\uff0c\u6211\u4eec\u679a\u4e3e\u7684\u5b66\u8d39 $x$\uff0c\u5c31\u662f $c_i$\u3002     \u800c\u613f\u610f\u652f\u4ed8 $x$ \u53ca\u4ee5\u4e0a\u5b66\u8d39\u7684\u5976\u725b\u6570\u91cf\uff0c\u5c31\u662f $i$\u3002    C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N=1e5+10;\n\nLL c[N];    // \u6bcf\u5934\u5976\u725b\u613f\u610f\u652f\u4ed8\u7684\u6700\u9ad8\u5b66\u8d39\nint n;      // \u5976\u725b\u6570\u91cf\nLL res;     // \u8d5a\u7684\u94b1\nint fees;   // \u5b66\u8d39\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", c+i);\n    sort(c+1, c+1+n, greater());    // \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n\n    for(int i=1; i&lt;=n; i++)         // \u4ece\u5927\u5230\u5c0f\u679a\u4e3e\n        if( res &lt;= c[i] * i )       // \u5f53\u524d\u5b66\u8d39\u53ef\u4ee5\u8d5a\u591a\u5c11\n            res  = c[i] * i, fees = c[i];   // \u66f4\u65b0\u7b54\u6848\n\n    cout&lt;&lt;res&lt;&lt;\" \"&lt;&lt;fees;\n\n    return 0;\n}\n</code></pre> AcWing 4819. \u5582\u9971\u5976\u725b code  **\u5927\u610f**  \u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u5e8f\u5217\u4e2d\u6709\u4e24\u79cd\u725b\uff0c`G` \u548c `H`\uff0c`G` \u5403 `G` \u8349\uff0c`H` \u5403 `H` \u8349\u3002  \u518d\u7ed9\u5b9a\u4e00\u4e2a\u6570 $k$\uff0c\u8868\u793a\u6bcf\u5934\u725b\u53ef\u4ee5\u79fb\u52a8\u7684\u8303\u56f4\u4e3a $[i-k, i+k]$\u3002  \u73b0\u9700\u8981\u5728\u9009\u62e9\u4e00\u4e9b\u4f4d\u7f6e\uff0c\u79cd\u690d\u8349\uff0c\u4f7f\u5f97\u6bcf\u5934\u725b\u90fd\u80fd\u5403\u5230\u8349\u3002  **\u601d\u8def**  1. \u6211\u4eec\u4ece\u5de6\u5230\u53f3\u679a\u4e3e\u6bcf\u5934\u725b\uff0c\u5728\u6bcf\u5934\u725b\u53ef\u4ee5\u5230\u8fbe\u7684\u6700\u53f3\u8fb9\u79cd\u8349\u3002  2. \u5982\u679c\u6b64\u4f4d\u7f6e\u5df2\u7ecf\u88ab\u79cd\u8349\u4e86\uff0c\u6211\u4eec\u5c31\u4e0d\u65ad\u7684\u5411\u5de6\u79fb\u52a8\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u6ca1\u6709\u88ab\u79cd\u8349\u7684\u4f4d\u7f6e\u3002   C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nconst int N=1e5+10;\n\nchar res[N];    // \u79cd\u690d\u65b9\u6848(\u7b54\u6848)\nchar g[N];      // \u5976\u725b\u79cd\u7c7b\nint n, k, cnt;  // \u5976\u725b\u6570\u91cf \u79fb\u52a8 \u79cd\u690d\u6570\u91cf\n\nvoid solve(){\n    cnt=0;\n    memset(res, '.', sizeof res);\n    cin&gt;&gt;n&gt;&gt;k;\n    for(int i=1; i&lt;=n; i++) cin&gt;&gt;g[i];\n\n    for(int i=1; i&lt;=n; i++)\n    if( g[i] == 'G' ){\n        int j=min(n, i+k);  // \u79cd\u690d G \u7684\u4f4d\u7f6e\n        res[j] = 'G'; cnt++;// \u79cd\u690d\n        i=j+k;              // \u53ef\u4ee5\u5f71\u54cd\u5230\u7684\u53f3\u8fb9\u754c\n    }\n\n    for(int i=1; i&lt;=n; i++)\n    if( g[i] == 'H' ){\n        int j=min(n, i+k);  // \u79cd\u690d H \u7684\u4f4d\u7f6e\n        while( res[j] == 'G' ) --j; // \u601d\u8003:\u4e3a\u4ec0\u4e48--j\u7684\u4f4d\u7f6e\u4e00\u5b9a\u4e0d\u4f1a\u51b2\u7a81?\n        res[j] = 'H'; cnt++;\n        i=j+k;\n    }\n\n    cout&lt;&lt;cnt&lt;&lt;\"\\n\";\n    for(int i=1; i&lt;=n; i++)\n        cout&lt;&lt;res[i];\n    cout&lt;&lt;\"\\n\";\n}\n\nint main(){\n    int T; cin&gt;&gt;T; \n    while(T--) solve();\n    return 0;\n}\n</code></pre>  AcWing 4820. \u9006\u5411\u5de5\u7a0b \u8df3\u8fc7  \u679a\u4e3e\u53ef\u80fd\u7684\u7b2c\u4e00\u4e2a\u5206\u652f\u4ee3\u7801\uff0c\u7b5b\u9009\u51fa\u5269\u4f59\u7684\u884c\uff0c\u7ee7\u7eed\u679a\u4e3e\u7b2c\u4e8c\u4e2a\u5206\u652f"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/#2021-2022-season","title":"2021-2022 Season","text":""},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/#2022-us-open","title":"2022 US Open","text":"AcWing 4440. \u7167\u76f8 code  **\u5927\u610f**  \u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u4ece `1` \u5f00\u59cb\u7f16\u53f7\uff0c\u4e14\u53ea\u6709 `G` \u548c `H`\u3002  \u6211\u4eec\u53ef\u4ee5\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u7ffb\u8f6c\uff0c\u6bcf\u6b21\u7ffb\u8f6c\u7684\u8303\u56f4\u4e3a $[1, 2 i]$\u3002  \u6700\u7ec8\u5e0c\u671b\u5b57\u7b26\u4e32\u4e2d\u7684 `G` \u5c3d\u53ef\u80fd\u591a\u7684\u51fa\u73b0\u5728\u5076\u6570\u4f4d\u3002  **\u601d\u8def**  1. \u7ffb\u8f6c\u662f\u5076\u6570\uff0c\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e5f\u662f\u5076\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e32\u770b\u4f5c     `GG`, `HH`, `GH`, `HG` \u7ec4\u6210\u7684\u3002  2. \u663e\u7136\uff0c`GG` \u548c `HH` \u7ffb\u8f6c\u540e\uff0c\u7b54\u6848\u4e0d\u4f1a\u53d8\u5316\u3002     \u6211\u4eec\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5c06\u9898\u76ee\u62bd\u8c61\uff0c\u5c06 `GH` \u770b\u4f5c 0\uff0c`HG` \u770b\u4f5c 1\u3002     \u9898\u76ee\u8f6c\u6362\u4e3a\u5c06\u4e00\u4e2a 01 \u5b57\u7b26\u4e32\u53d8\u4e3a\u5168 1 \u5b57\u7b26\u4e32\u7684\u6700\u5c0f\u6b65\u6570\u3002  3. \u6211\u4eec\u8003\u8651\u4ee5\u4e0b\u8fd9\u4e2a\u6837\u4f8b\uff1a`HG GH HG GH HG`     1. `GH GH HG GH HG`     2. `HG HG HG GH HG`     3. `GH GH GH GH HG`     4. `HG HG HG HG HG`  4. \u518d\u8003\u8651\u4e00\u4e2a\u6837\u4f8b\uff1a`GH HG GH HG GH`     1. `HG HG GH HG GH`     2. `GH GH GH HG GH`     3. `HG HG HG HG GH`     4. `GH GH GH GH GH`     5. `HG HG HG HG HG`  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\nusing namespace std;\n\nint n, ans;\nstring s, st;\nint main(){\n    cin&gt;&gt;n&gt;&gt;s;\n    for(int i=0;i&lt;n;i+=2){\n        if(s[i]=='G' &amp;&amp; s[i+1]=='H') st+='0';\n        else if(s[i]=='H' &amp;&amp; s[i+1]=='G') st+='1';\n    }\n\n    for(int i=0; i&lt;st.size()-1; i++)//\u5c06\u4e00\u4e2a 01 \u5b57\u7b26\u4e32\u53d8\u4e3a\u5168 1 \u5b57\u7b26\u4e32\u7684\u6700\u5c0f\u6b65\u6570\n        if(st[i]!=st[i+1]) ans++;\n\n    if(st[st.size()-1]=='0') ans++;//\u7279\u5224\uff1a\u5982\u679c\u6700\u540e\u4e00\u4e2a\u662f 0 \uff0c\u90a3\u4e48\u8fd8\u9700\u8981\u5c06\u6574\u4e2a\u5b57\u7b26\u4e32\u7ffb\u8f6c 1 \u6b21\n\n    cout&lt;&lt;ans&lt;&lt;endl;\n\n    return 0;\n}\n</code></pre> AcWing 4441. \u8c0e\u725b\u8ba1\u6570 code  **\u5927\u610f**  \u7ed9\u5b9a $n$ \u6761\u4fe1\u606f\uff0c\u6bcf\u6761\u4fe1\u606f\u6709\u4e24\u79cd\u5f62\u5f0f\uff1a * \u76ee\u6807\u503c $&gt;= x$ * \u76ee\u6807\u503c $&lt;= x$  \u4e0d\u662f\u6240\u6709\u4fe1\u606f\u90fd\u662f\u771f\u7684\uff0c\u6211\u4eec\u9700\u8981\u6c42\u51fa\u6700\u5c11\u6709\u591a\u5c11\u6761\u4fe1\u606f\u662f\u5047\u7684\u3002  \u5373\u627e\u5230\u4e00\u4e2a\u76ee\u6807\u503c\uff0c\u4f7f\u5f97\u4fe1\u606f\u4e3a\u771f\u7684\u4fe1\u606f\u6570\u91cf\u6700\u591a\u3002  **\u601d\u8def**  1. \u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u76ee\u6807\u503c\uff0c\u7136\u540e\u7edf\u8ba1\u4e00\u4e0b\uff0c\u6709\u591a\u5c11\u6761\u4fe1\u606f\u662f\u771f\u7684\u3002     \u800c\u8fd9\u4e2a\u76ee\u6807\u503c\uff0c\u663e\u7136\u662f\u4fe1\u606f\u4e2d\u7684 $x$\u3002  C++<pre><code>#define pb push_back\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nvector&lt;int&gt;G, L, a;\nint n;\n\nint main(){\n    cin&gt;&gt;n;\n    while(n--){\n        string s;\n        int x;\n        cin&gt;&gt;s&gt;&gt;x;\n        if(s==\"G\") G.pb(x);\n        else L.pb(x);\n\n        a.pb(x);\n    }\n\n    int ans=0x3f3f3f3f;\n    for(auto &amp;x: a){        // \u5047\u8bbe\u76ee\u6807\u5728 x \u8fd9\u4e2a\u4f4d\u7f6e\n        int res = 0;\n        for(auto &amp;j: G)\n            if(j &gt; x) res++;// \u5047\u8bdd\n        for(auto &amp;j: L)\n            if(j &lt; x) res++;// \u5047\u8bdd\n        ans = min(ans, res);\n    }\n    cout&lt;&lt;ans;\n\n    return 0;\n}\n</code></pre>  2. \u53ef\u4ee5\u901a\u8fc7\u6392\u5e8f\u4f18\u5316  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nconst int N=1e3+10;\n\nint l[N], r[N]; // bessie\u5728\u5976\u725b\u7b2ci\u5934\u5976\u725b\u7684 \u5de6 \\ \u53f3\nint ans=0x3f3f3f3f;\n\nint main(){\n    int n; cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++){\n        char c[2]; int x;\n        scanf(\"%s%d\", c, &amp;x);\n        if(c[0]=='G') r[ ++ *r ] = x;\n        else l[ ++ *l ] = x;\n    }\n    sort(l+1, l+1+*l);\n    sort(r+1, r+1+*r);\n\n    for(int i=1; i&lt;=*r; i++){   // \u5047\u8bbe, \u7b2ci\u5934\u5976\u725b\u8bf4 \u5728\u6211\u53f3\u8fb9 \u662f\u6b63\u786e\u7684\n\n        int j=1;\n        for(; j&lt;=*l; j++)   // \u90a3\u4e48, \u5bf9\u4e8e (l[j] &lt; r[i]) \u7684j\u5934\u5976\u725b\u8bf4 \u5728\u6211\u5de6\u8fb9 \u5c31\u662f\u9519\u8bef\u7684\n            if( l[j]&gt;=r[i] )\n                break;\n\n        ans=min(ans, (*r-i)+j-1);\n    }\n\n    cout&lt;&lt;ans;\n    return 0;\n}\n</code></pre> AcWing 4442. \u70bc\u91d1\u672f code  **\u5927\u610f**  \u7ed9\u5b9a\u4e00\u4e2a\u6811\u5f62\u7684\u5408\u6210\u5173\u7cfb\uff0c\u4e14\u4fdd\u8bc1\u4e00\u5b9a\u662f \u8f83\u5c0f\u7684\u6570 \u5408\u6210 \u8f83\u5927\u7684\u6570\u3002 \u5e76\u4e0d\u4fdd\u8bc1 \u8f83\u5c0f\u7684\u6570 \u53ea\u80fd\u5408\u6210 \u4e00\u79cd \u8f83\u5927\u7684\u6570\u3002  Text Only<pre><code>      5 \n     / \\\n    3   4\n   /   \n  2\n /\n1\n</code></pre>  \u6c42\uff0c\u6700\u5927\u7684\u6570 $n$\uff0c\u6700\u591a\u53ef\u4ee5\u5408\u6210\u591a\u5c11\u4e2a\u3002  **\u601d\u8def**  1. \u663e\u7136\uff0c\u6211\u4eec\u4e0d\u80fd\u7528\u8d2a\u5fc3\u7684\u601d\u60f3\u3002    \u67d0\u4e00\u4e2a\u6570\u5168\u90e8\u7528\u4e8e\u5408\u6210 $x$\uff0c\u7ed3\u679c\u5728\u5408\u6210 $y$ \u7684\u65f6\u5019\u4e0d\u591f\u4e86\u3002  2. \u6362\u4e2a\u89d2\u5ea6\u601d\u8003\uff0c\u5982\u679c\u6211\u4eec\u77e5\u9053\u4e86 $n$ \u7684\u6570\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u53cd\u63a8\u513f\u5b50\u4eec\u7684\u6570\u91cf\uff0c    \u68c0\u67e5\u662f\u5426\u6709\u8db3\u591f\u7684\u513f\u5b50\uff0c\u53ef\u4ee5\u5408\u6210 $n$\u3002  3. \u663e\u7136\uff0c\u7b54\u6848\u662f\u5177\u6709\u5355\u8c03\u6027\u7684\uff0c\u5de6\u534a\u8fb9\u5408\u6cd5\uff0c\u5373\u627e $&lt;=x$ \u4e2d\uff0c\u6700\u5927\u7684\u4e00\u4e2a  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\n#define pb push_back\n\nconst int N=110;\n\nint a[N], bk[N];\nvector&lt;int&gt; h[N];   // \u5408\u6210 i \u6240\u9700\u8981\u7684\u91d1\u5c5e\nint n, k;\n\nbool dfs(int u, int cntu){  // \u80fd\u5426\u83b7\u5f97 cntu \u4e2a\u6750\u6599 u\n    if( a[u] &gt;= cntu ) {    // \u5df2\u7ecf\u62e5\u6709\n        a[u] -= cntu;\n        return 1;  \n    }\n    if( h[u].size()==0 )    // \u4e0d\u8db3\u4e14\u65e0\u6cd5\u5408\u6210\n        return 0;  \n\n    cntu-=a[u], a[u]=0;     // \u8fd8\u9700\u8981cntu\u4e2aa[u] \n    for(auto nu: h[u])      // \u5c1d\u8bd5\u4f7f\u7528 nu \u8fdb\u884c\u5408\u6210\n        if( !dfs(nu, cntu-a[u]) ) \n            return 0;\n    return 1;\n}\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) cin&gt;&gt;a[i];\n    cin&gt;&gt;k;\n    for(int i=1; i&lt;=k; i++){\n        int l, m; cin&gt;&gt;l&gt;&gt;m;\n        for(int j=1; j&lt;=m; j++){\n            int mi; cin&gt;&gt;mi;\n            h[l].pb(mi);\n        }\n    }\n\n    memcpy(bk, a, sizeof a);\n\n    int l=a[n], r=1e6;\n    while(l&lt;r){\n        memcpy(a, bk, sizeof a);\n        int mid = l+r+1&gt;&gt;1;\n        if(dfs(n, mid)) l = mid;\n        else r = mid - 1;\n    }\n    cout&lt;&lt;l;\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/#2022-feb","title":"2022 Feb","text":"AcWing 4366. \u4e0a\u8bfe\u7761\u89c9 code   **\u5927\u610f**  \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4 $a$\uff0c\u5c06\u5176\u5212\u5206\u4e3a $k$ \u4e2a\u533a\u95f4\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u533a\u95f4\u548c\u76f8\u7b49\uff0c\u6c42\u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\u3002  **\u601d\u8def**  1. \u663e\u7136\uff0c\u5408\u5e76\u5b9e\u9645\u4e0a\u53ea\u6709\u4e00\u79cd\u65b9\u6848\uff0c\u5c31\u662f\u76f8\u90bb\u5408\u5e76\u3002  2. \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5408\u5e76\u6210 $1,2,3,4...$ \u5806\uff0c\u8ba1\u7b97\u51fa\u6bcf\u5806\u7684\u5927\u5c0f $sum, \\frac{sum}{2}, \\frac{sum}{3}, \\frac{sum}{4}...$\u3002  3. \u901a\u8fc7\u8ba1\u7b97\u524d\u7f00\u548c\uff0c\u5c31\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u7684\u8ba1\u7b97\u51fa\uff0c\u6bcf\u5806\u7684\u5927\u5c0f\u3002  C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1e6+10;\n\nint a[N];\nint n, mmax, sum;\n\nbool ck(int m){\n    int cnt=0;\n    for(int i=1; i&lt;=n; i++){\n        cnt += a[i];\n        if(cnt == m) cnt=0;\n        else if(cnt &gt; m) return 0;\n    }\n    return 1;\n}\n\nvoid solve(){\n    cin&gt;&gt;n;\n    mmax=0, sum=0;\n    for(int i=1; i&lt;=n; i++) \n        scanf(\"%d\", a+i), mmax=max(mmax, a[i]), sum+=a[i];\n\n    if(sum==0){                 // \u6bcf\u4e00\u5806\u4e3a0\n        cout&lt;&lt;0&lt;&lt;\"\\n\";\n        return ;\n    }\n    for(int i=1; i&lt;=sum; i++)   // \u679a\u4e3e, \u6bcf\u4e00\u5806\u4e3a1-sum\n        if(sum%i==0 &amp;&amp; ck(i)){\n            cout&lt;&lt;n - sum / i&lt;&lt;\"\\n\";\n            return ;\n        }\n}\n\nint main(){\n    int T; cin&gt;&gt;T;\n    while(T--) solve();\n    return 0;\n}\n</code></pre> AcWing 4367. \u62cd\u71672 code  **\u5927\u610f**  \u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217 $a$\uff0c\u4e00\u4e2a\u76ee\u6807\u5e8f\u5217 $b$\uff0c\u5141\u8bb8\u4e00\u79cd\u64cd\u4f5c\uff1a * \u5c06 $a$ \u4e2d\u7684\u5143\u7d20\u5411\u5de6\u79fb\u52a8\u4efb\u610f\u4e2a\u4f4d\u7f6e  \u6c42\u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\uff0c\u4f7f\u5f97 $a$ \u53d8\u4e3a $b$\u3002  **\u601d\u8def**  1. \u6837\u4f8b2\uff1a     * \u5c06 4 \u5411\u524d\u79fb\u52a8     * \u5c06 2 \u5411\u524d\u79fb\u52a8  2. \u5f88\u5bb9\u6613\u60f3\u5230\u7528\u53cc\u6307\u9488\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c$i$ \u6307\u5411 $a$\uff0c$j$ \u6307\u5411 $b$\uff1a     * \u5982\u679c $a_i$ \u4e0e $b_j$ \u76f8\u7b49\uff0c$i++, j++$     * \u5982\u679c $a_i$ \u4e0e $b_j$ \u4e0d\u76f8\u7b49\uff0c$j++$\uff0c\u5e76\u4e14\u8bb0\u5f55\u4e00\u4e0b $b_j$\uff0c\u8868\u793a\u9700\u8981\u4ece\u540e\u9762\u79fb\u52a8\u4e00\u4e2a     * \u5982\u679c $a_i$ \u662f\u88ab\u8bb0\u5f55\u8fc7\u7684\u6570\uff0c$i++$\uff08\u6b64\u6570\u662f\u88ab\u524d\u79fb\u7684\u6570\uff09\u3002   C++<pre><code>#include &lt;iostream&gt;\n#include &lt;unordered_set&gt;\nusing namespace std;\n\nconst int N=1e5+10;\n\nint a[N], b[N];\nunordered_set&lt;int&gt; cnt;\nint n;\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++)\n        scanf(\"%d\", a+i);\n    for(int i=1; i&lt;=n; i++)\n        scanf(\"%d\", b+i);\n\n    int i=1, j=1;\n\n    while(i&lt;=n &amp;&amp; j&lt;=n){\n        if(cnt.count(a[i])){\n            i++;\n            continue;\n        }\n        if(a[i]==b[j]){\n            i++, j++;\n            continue;\n        }\n        if(a[i]!=b[j]){\n            cnt.insert(b[j]);\n            j++;\n        }\n    }\n\n    cout&lt;&lt;cnt.size();\n    return 0;\n}\n</code></pre> AcWing 4368. \u79ef\u6728 code  **\u5927\u610f**  4 \u4e2a\u9ab0\u5b50\uff0c\u6bcf\u4e2a\u9ab0\u5b50\u6709 6 \u4e2a\u5b57\u6bcd\uff0c \u7ed9\u51fa\u4e00\u4e2a 1-4 \u957f\u5ea6\u7684\u5b57\u7b26\u4e32\uff0c\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u7531\u8fd9 4 \u4e2a\u9ab0\u5b50\u4e2d\u7684 1-4 \u4e2a\u7ec4\u6210\u3002  **\u601d\u8def**  \u5bf9\u4e8e\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6709 4 \u4e2a\u9ab0\u5b50\u53ef\u4ee5\u9009\u62e9\uff0c\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u6709 3 \u4e2a\u9ab0\u5b50\u53ef\u4ee5\u9009\u62e9\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002  \u5982\u679c\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u9009\u62e9\u4e86\u9ab0\u5b50 1\uff08\u5982\u679c\u53ef\u4ee5\u9009\u62e9\uff09\uff0c\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u5c31\u53ea\u80fd\u9009\u62e9 2,3,4 \u4e2d\u7684\u4e00\u4e2a\u3002  \u4ee5\u6b64\u7c7b\u63a8\uff0c\u53bb\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\uff0c\u9009\u62e9\u9ab0\u5b50\u3002  \u53c2\u8003\uff1a[\u9012\u5f52\u5b9e\u73b0\u7ec4\u5408\u578b\u679a\u4e3e](http://dxll.love:2023/algorithm/1%20%E5%9F%BA%E7%A1%80/%E9%80%92%E5%BD%92.html#%E9%80%92%E5%BD%92%E5%AE%9E%E7%8E%B0%E7%BB%84%E5%90%88%E5%9E%8B%E6%9E%9A%E4%B8%BE)  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;set&gt;\nusing namespace std;\n\nbool st[4]; // \u6bcf\u4e2a\u9ab0\u5b50\u662f\u5426\u6709\u7528\nset&lt;char&gt; a[4];\nint n;\nstring t;\nbool flg;\n\nvoid dfs(int u, int x){ // \u7b2c\u51e0\u4e2a\u9ab0\u5b50, \u7b2c\u51e0\u4e2a\u5b57\u7b26\n    if(u&gt;4) return ;\n    if(flg) return ;\n\n    if(x&gt;=t.size()){\n        flg=1;\n        return ;\n    }\n\n    for(int i=0; i&lt;4; i++)\n        if(!st[i])                  // \u5982\u679c\u6ca1\u6709\u4f7f\u7528\n            if(a[i].count(t[x])){   // \u5982\u679c\u9ab0\u5b50\u4e0a\u6709\n                st[i]=1;\n                dfs(u+1, x+1);\n                st[i]=0;    // \u6062\u590d\u73b0\u573a\n            }\n        else\n            dfs(u+1, x);            // \u4e0d\u4f7f\u7528\n\n}\n\nint main(){\n    cin&gt;&gt;n;\n\n    cin&gt;&gt;t; for(char c: t) a[0].insert(c);\n    cin&gt;&gt;t; for(char c: t) a[1].insert(c);\n    cin&gt;&gt;t; for(char c: t) a[2].insert(c);\n    cin&gt;&gt;t; for(char c: t) a[3].insert(c);\n\n    while(n--){\n        cin&gt;&gt;t;\n        if(t.size() &gt; 4){\n            puts(\"NO\");\n            continue;\n        }\n\n        flg=0;\n        for(int i=0; i&lt;4; i++) st[i]=0;\n\n        dfs(0, 0);\n        if(flg)\n            puts(\"YES\");\n        else\n            puts(\"NO\");\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/#2022-jan","title":"2022 Jan","text":"AcWing 4329. Herdle code   **\u5927\u610f**  \u7ed9\u5b9a\u4e24\u4e2a $3$ X $3$ \u7684\u65b9\u9635 $a$ \u548c $b$ \uff0c\u6bcf\u4e2a\u65b9\u9635\u4e2d\u6bcf\u4e2a\u4f4d\u7f6e\u7531 $A-Z$ \u7ec4\u6210\uff0c  * \u7eff\u8272\uff1a\u5bf9\u4e8e $i$ \u884c $j$ \u5217\uff0c$a$ \u65b9\u9635\u4e2d\u7684\u5b57\u6bcd\u4e0e $b$ \u65b9\u9635\u4e2d\u7684\u5b57\u6bcd\u76f8\u540c * \u9ec4\u8272\uff1a\u4e0d\u8003\u8651\u88ab\u5224\u5b9a\u4e3a\u7eff\u8272\u7684\u683c\u5b50\uff0c\u5982\u679c\u8be5\u5b57\u6bcd\u5728 $a$ \u65b9\u9635\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u5927\u4e8e $b$ \u65b9\u9635\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u90a3\u4e48\u8be5\u683c\u5b50\u4e3a\u9ec4\u8272  **\u601d\u8def**  Text Only<pre><code>a:          b:  \n    DD          AA\n    BB          BD\n\nres\uff1a\n    \u7a7a\u7a7a\n    \u7eff\u9ec4\n</code></pre>  \u7279\u522b\u7684\uff1a  Text Only<pre><code>a:          b:  \n    DA         CD\n    AA         DD\n\nres\uff1a       \u6216          \u6216\n    \u7a7a\u7a7a        \u7a7a\u9ec4        \u7a7a\u7a7a\n    \u7a7a\u9ec4        \u7a7a\u7a7a        \u9ec4\u7a7a\n</code></pre> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nint n, ans1, ans2;\nint cnt1[26];\nint cnt2[26];\n\nstring a[3], b[3];\n\nint main(){\n    for(int i=0; i&lt;3; i++) cin&gt;&gt;a[i];\n    for(int i=0; i&lt;3; i++) cin&gt;&gt;b[i];\n\n    for(int i=0; i&lt;3; i++)\n        for(int j=0; j&lt;3; j++)\n            cnt1[ a[i][j]-'A' ]++,\n            cnt2[ b[i][j]-'A' ]++;\n\n    for(int i=0; i&lt;3; i++)\n        for(int j=0; j&lt;3; j++)\n            if( a[i][j] == b[i][j] ){\n                ans1++;\n                cnt1[ a[i][j]-'A' ]--,\n                cnt2[ b[i][j]-'A' ]--;\n            }\n\n    for(int i=0; i&lt;26; i++)\n        if(cnt1[i] &amp;&amp; cnt2[i])\n            ans2 += min(cnt1[i], cnt2[i]);\n\n    cout&lt;&lt;ans1&lt;&lt;\"\\n\"&lt;&lt;ans2;\n\n    return 0;\n}\n</code></pre> AcWing 4330. \u975e\u4f20\u9012\u9ab0\u5b50 code  **\u5927\u610f**  \u7ed9\u5b9a\u957f\u4e3a $4$ \u7684\u6570\u7ec4 $a$ \u548c $b$\uff0c\u6bcf\u4e2a\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u4e3a $1-10$\u3002 \u6c42\u4e00\u957f\u4e3a $4$ \u7684\u6570\u7ec4 $c$\uff0c\u6ee1\u8db3\uff1a * $a &gt; b &gt; c &gt; a$  \u5176\u4e2d $ &gt; $ \u7684\u5b9a\u4e49\u662f\uff1a\u6570\u7ec4\u4e2d\u6240\u6709\u5143\u7d20\u4e24\u4e24\u6bd4\u8f83\uff0c \u5982\u679c $a_i &gt; b_i$ \u7684\u6570\u91cf\u6bd4 $b_i &gt; a_i$ \u7684\u6570\u91cf\u591a\uff0c\u90a3\u4e48 $a$ \u5927\u4e8e $b$\u3002  **\u601d\u8def**  1. \u679a\u4e3e $c$ \u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u7136\u540e\u68c0\u67e5\u4e00\u4e0b\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\u3002  C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint a[5], b[5], c[5];\nbool flg;\n\nbool ck(int x[], int y[]){  // x\u8d62 &gt; y\u8d62 1\n    int res=0;\n    for(int i=1; i&lt;=4; i++)\n        for(int j=1; j&lt;=4; j++)\n            if(x[i] &gt; y[j]) res++;\n            else if(y[j] &gt; x[i]) res--;\n    return res&gt;0;\n}\n\nvoid dfs(int u){    // \u5f53\u524d\u8d4b\u503c\u7684\n    if(flg) return ;\n    if(u&gt;4){\n\n        if(ck(a, b) &amp;&amp; ck(b, c) &amp;&amp; ck(c, a))\n            flg=1;\n\n        if(ck(b, a) &amp;&amp; ck(a, c) &amp;&amp; ck(c, b))\n            flg=1;\n\n        return ;\n    }\n\n    for(int i=1; i&lt;=10; i++){\n        c[u]=i;\n        dfs(u+1);\n    }\n\n    return ;\n}\n\nvoid solve(){\n    flg=0;\n    for(int i=1; i&lt;=4; i++) scanf(\"%d\", a+i);\n    for(int i=1; i&lt;=4; i++) scanf(\"%d\", b+i);\n\n    dfs(1); // \u679a\u4e3e c \u7684\u53ef\u80fd\n\n    if(flg) puts(\"yes\");\n    else puts(\"no\");\n\n    return ;\n}\n\nint main(){\n    int T; cin&gt;&gt;T;\n    while(T--) solve();\n    return 0;\n}\n</code></pre> AcWing 4331. \u5927\u65f1 \u8df3\u8fc7  \u5dee\u5206"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/#2021-dec","title":"2021 Dec","text":"AcWing 4261. \u5b64\u72ec\u7684\u7167\u7247 code  **\u5927\u610f**  \u7ed9\u5b9a\u4e00\u4e2a\u53ea\u5305\u542b $H$ \u548c $G$ \u5e8f\u5217\uff0c\u627e\u51fa\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u5b50\u5e8f\u5217\u7684\u6570\u91cf  * \u957f\u5ea6 &gt;= 3 * \u6709\u4e14\u4ec5\u6709\u4e00\u4e2a $H$ \u6216 $G$  **\u601d\u8def**  1. \u6211\u4eec\u5047\u8bbe\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u7684\u725b\u662f\u5b64\u72ec\u7684\uff0c\u5b64\u72ec\u5c31\u6709\u4e0b\u9762\u4e09\u79cd\u60c5\u51b5\uff1a     1. `_HGH_`\uff0c\u7b49\u4ef7\u4e8e `_GHG_`     2. `__HHG`\uff0c\u7b49\u4ef7\u4e8e `__GGH`     3. `GHH__`\uff0c\u7b49\u4ef7\u4e8e `HGG__`  2. \u7528\u5de6\u8fb9\u4e09\u79cd\u4e3e\u4f8b\uff1a     1. \u5b64\u72ec\u7684\u5b50\u5e8f\u5217\u6570\u91cf\u4e3a\uff1a\u5de6\u8fb9 $H$ \u7684\u6570\u91cf * \u53f3\u8fb9 $H$ \u7684\u6570\u91cf     2. \u5b64\u72ec\u7684\u5b50\u5e8f\u5217\u6570\u91cf\u4e3a\uff1a\u5de6\u8fb9 $H$ \u7684\u6570\u91cf - 1     3. \u5b64\u72ec\u7684\u5b50\u5e8f\u5217\u6570\u91cf\u4e3a\uff1a\u53f3\u8fb9 $H$ \u7684\u6570\u91cf - 1  3. \u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7edf\u8ba1\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\u5de6\u53f3\u4e24\u8fb9\u4e0d\u540c\u7684\u725b\u7684\u6570\u91cf\u5373\u53ef\u3002  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\ntypedef long long LL;\nconst int N=5e5+10;\n\nstring s;\nint n, l[N], r[N];\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;s; s=\" \"+s;\n\n    for(int i=1, cntH=0, cntG=0; i&lt;=n; i++) // \u5de6\u8fb9\n        if( s[i]=='H' ){\n            l[i]=cntG;  // \u5de6\u8fb9G\u7684\u6570\u91cf\uff08\u5de6\u8fb9\u4e0d\u540c\u8005\u7684\u6570\u91cf\uff09\n            cntH++;     // H\u7684\u6570\u91cf+1\n            cntG=0;     // G\u88abH\u622a\u80e1\u4e86\uff0c\u6240\u4ee5G\u5f52\u96f6\n        }\n        else            // \u540c\u4e0a\n            l[i]=cntH, cntG++, cntH=0;\n\n    for(int i=n, cntH=0, cntG=0; i&gt;=1; i--) // \u53f3\u8fb9\n        if( s[i]=='H' ){\n            r[i]=cntG;\n            cntH++;\n            cntG=0;\n        }\n        else\n            r[i]=cntH, cntG++, cntH=0;\n\n    LL ans=0;\n    for(int i=1; i&lt;=n; i++)\n        ans += 1LL*l[i]*r[i] + max(0, l[i]-1)+ max(0, r[i]-1);\n\n    cout&lt;&lt;ans;\n    return 0;\n}\n</code></pre> AcWing 4262. \u7a7a\u8c03 code   **\u5927\u610f**  \u7ed9\u5b9a\u4e24\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u6570\u7ec4\uff0c$p$ \u4e0e $t$\u3002 \u6211\u4eec\u53ef\u4ee5\u5bf9 $t$ \u6267\u884c\u4e00\u6b21\u64cd\u4f5c\uff0c\u4f7f\u5f97\u533a\u95f4 $[i, j]$ \u4e2d\u7684\u6240\u6709\u6570 $+1$ \u6216\u8005 $-1$\u3002 \u6700\u7ec8\u4f7f\u5f97\u6570\u7ec4 $t=p$\uff0c\u6c42\u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\u3002  **\u601d\u8def**  1. \u4e3a\u4e86\u4f7f\u5f97 $t=p$\uff0c\u5bf9\u4e8e\u7b2c $i$ \u4f4d\u800c\u8a00\uff0c$t_i$ \u53ea\u9700\u8981\u52a0\u4e0a $p_i-t_i$\u3002     $t_i+p_i-t_i=p_i$\u3002     \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5904\u7406\u51fa\u6765\u4e00\u4e2a\u6570\u7ec4 $c$\uff0c\u5176\u4e2d $c_i=p_i-t_i$\u3002  \u73b0\u5728\u7684\u95ee\u9898\uff1a\u5c06 $c$ \u6570\u7ec4\uff0c\u64cd\u4f5c\u6210\u4e00\u4e2a\u5168 $0$ \u7684\u6570\u7ec4\uff0c\u6c42\u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\u3002  2. \u6bcf\u6b21\u662f\u5bf9\u533a\u95f4\u8fdb\u884c\u64cd\u4f5c\uff0c\u56e0\u6b64\uff0c\u4e0d\u59a8\u5bf9\u6570\u7ec4\u505a\u4e00\u6b21\u5dee\u5206\uff0c\u7136\u540e\u518d\u8003\u8651\u3002    \u5206\u6790\u4e00\u4e0b\u6837\u4f8b\uff0c\u4e0b\u9762\u662f\u5df2\u7ecf\u6c42\u5b8c\u5dee\u5206\u540e\u7684\u6570\u7ec4 $c$\u3002    `2 0 -2 3 0` $-&gt;$ `0 0 0 3 0`\uff1a\u5c06\u7b2c $1$ \u4f4d $-2$\uff0c\u7b2c $3$ \u4f4d $+2$\uff0c\u64cd\u4f5c $2$ \u6b21\u3002    `0 0 0 3 0` $-&gt;$ `0 0 0 0 0`\uff1a\u5c06\u7b2c $4$ \u4f4d $-3$, \u7b2c $6$ \u4f4d $+3$\uff0c\u64cd\u4f5c $3$ \u6b21\u3002     \u53ef\u4ee5\u53d1\u73b0\uff0c\u5dee\u5206\u540e\u7684\u6570\u7ec4\uff0c\u52a0\u51cf\u662f\u5bf9\u5e94\u7684\uff1a\u5982\u679c\u6211\u67d0\u4e00\u4f4d\u52a0\u4e86 $6$\uff0c\u540e\u9762\u5fc5\u7136\u4f1a\u51cf\u53bb $6$\u3002  \u56e0\u6b64\uff0c\u6211\u4eec\u7edf\u8ba1\u6211\u4eec\u52a0\u7684\u6b21\u6570 $a$\uff0c\u548c\u51cf\u7684\u6b21\u6570 $b$\u3002 \u5982\u679c $a=b$      \u64cd\u4f5c\u6b21\u6570\u662f $a$ \u6216 $b$\u3002 \u5982\u679c $a \\neq b$ \u64cd\u4f5c\u6b21\u6570\u662f $max(a, b)$\u3002   C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=2e5+10;\n\nint n;\nint p[N], t[N], c[N];\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", p+i);\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", t+i);\n    for(int i=1; i&lt;=n; i++) c[i] = p[i] - t[i];\n    for(int i=n; i&gt;1; i--) c[i] = c[i] - c[i-1];\n\n    int a=0, b=0;\n    for(int i=1; i&lt;=n; i++)\n        if(c[i]&gt;0) a+=c[i];\n        else b+=abs(c[i]);\n\n    cout&lt;&lt;max(a, b);\n    return 0;\n}\n</code></pre> AcWing 4263. \u8d70\u8def\u56de\u5bb6 code   **\u5927\u610f**  \u7ed9\u5b9a\u4e00\u4e2a $n \\times n$ \u5927\u5c0f\u7684\u77e9\u9635 $g$\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $g[i][j]$\uff0c \u6709\u4e24\u79cd\u72b6\u6001\uff0c\u53ef\u4ee5\u5230\u8fbe\u548c\u4e0d\u53ef\u5230\u8fbe\u3002 \u6211\u4eec\u9700\u8981\u4ece $(1,1)$ \u70b9\u8d70\u5230 $(n,n)$ \u70b9\uff0c\u53ea\u80fd\u5411\u4e0b\u6216\u8005\u5411\u53f3\u8d70\uff0c\u4e14\u8f6c\u5411\u6b21\u6570 $\\leq k$\u3002 \u6c42\u5230\u8fbe $(n,n)$ \u70b9\u7684\u65b9\u6848\u6b21\u6570\u3002  **\u601d\u8def**  1.  \u6211\u4eec\u5148\u8003\u8651\uff0c\u5728\u8f6c\u5411\u6b21\u6570\u4e0d\u53d7\u9650\u7684\u60c5\u51b5\u4e0b\uff0c\u8d70\u5230 $(n,n)$ \u70b9\u7684\u65b9\u6848\u6570\u91cf\u3002     \u5b9a\u4e49\u4e00\u4e2a $dp[i][j]$\uff0c\u4ee3\u8868\u5230\u8fbe $(i,j)$ \u70b9\u7684\u65b9\u6848\u6570\u91cf\u3002\u56e0\u6b64\uff0c\u6709\uff1a  $$ dp[i][j] = dp[i-1][j] + dp[i][j-1] $$  2.  \u6211\u4eec\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u7edf\u8ba1\u4e00\u4e0b\uff0c\u5230\u8fbe $(i,j)$ \u7684\u8f6c\u5411\u6b21\u6570\u3002     \u663e\u7136\uff0c\u662f\u4e0d\u884c\u7684\u3002\u56e0\u4e3a\u4e0d\u540c\u65b9\u6848\u5230\u8fbe $(i,j)$ \u7684\u8f6c\u5411\u6b21\u6570\u53ef\u80fd\u4e0d\u540c\u3002     \u987a\u7740\u6b64\u601d\u8def\u7ee7\u7eed\u8003\u8651\uff0c\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u7edf\u8ba1\uff0c\u8f6c\u5411 $1,2,\\cdots,k$ \u6b21\uff0c\u5230\u8fbe $(i,j)$ \u7684\u65b9\u6848\u6570\u91cf\u3002     \u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u5b9a\u4e49\u4e00\u4e2a $dp[i][j][k]$\uff0c\u5373\u5230\u8fbe $(i,j)$ \u70b9\uff0c\u8f6c\u5411 $k$ \u6b21\u7684\u65b9\u6848\u6570\u91cf\u3002  \u53ea\u5269\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u4f55\u5224\u65ad\uff0c\u5f53\u524d\u662f\u5426\u8f6c\u5411\uff1f  3.  \u5728\u672c\u9898\u4e2d\uff0c\u8f6c\u5411\u88ab\u5b9a\u4e49\u4e3a\uff1a     * $(i,j-1) -&gt; (i,j)$\uff0c$(i,j) -&gt; (i+1,j)$     * $(i-1,j) -&gt; (i,j)$\uff0c$(i,j) -&gt; (i,j+1)$     \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u589e\u52a0\u4e00\u4e2a\u72b6\u6001\uff0c\u5eb7\u5eb7 $(i,j)$ \u662f\u4ece\u4e0a\u9762\u6765\u7684\uff0c\u8fd8\u662f\u4ece\u5de6\u8fb9\u6765\u7684\u3002     \u5b9a\u4e49\u4e00\u4e2a $dp[i][j][k][op]$  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nconst int N=55;\n\nint n, kk, ans;\nstring s;\nint g[N][N], dp[N][N][5][2];\n\nvoid solve(){\n    cin&gt;&gt;n&gt;&gt;kk;\n    ans=0;\n    memset(g, 0, sizeof g);\n    memset(dp, 0, sizeof dp);\n\n    for(int i=1; i&lt;=n; i++){\n        cin&gt;&gt;s;\n        for(int j=1; j&lt;=n; j++)\n            if(s[j-1]=='H') g[i][j]=1;\n    }\n\n    dp[1][1][0][0]=1; // \u5411\u53f3\n    dp[1][1][0][1]=1; // \u5411\u4e0b\n\n    for(int i=1; i&lt;=n; i++)             // \u679a\u4e3e\u6240\u6709\u7684\u70b9\n        for(int j=1; j&lt;=n; j++){\n            if(i==1 &amp;&amp; j==1) continue;  // \u5ffd\u7565 (1,1)\n            if(g[i][j]) continue;       // \u5982\u679c\u4e0d\u80fd\u5230\u8fbe\n\n            for(int k=0; k&lt;=kk; k++){   // \u679a\u4e3e\u6240\u6709\u7684\u8f6c\u5411\u6b21\u6570\n                if ((i == 1 || j == 1) &amp;&amp; k != 0) continue; // \u521d\u59cb\u5316\u7b2c\u4e00\u884c\u7b2c\u4e00\u5217\n                    dp[i][j][k][0] = dp[i][j-1][k][0];      // \u7ee7\u7eed\u5411\u53f3\n                    dp[i][j][k][1] = dp[i-1][j][k][1];      // \u7ee7\u7eed\u5411\u4e0b\n                    if (k &gt; 0)  // \u5141\u8bb8\u4e0a\u4e00\u6b65\u5230\u8fd9\u4e00\u6b65\u53d8\u5411\n                        dp[i][j][k][0] += dp[i][j-1][k - 1][1],   // \u672c\u6765\u662f\u5411\u4e0b\u7684\uff0c\u73b0\u5728\u5411\u53f3\u8d70\n                        dp[i][j][k][1] += dp[i-1][j][k - 1][0];   // \u672c\u6765\u662f\u5411\u53f3\u7684\uff0c\u73b0\u5728\u5411\u4e0b\u8d70\n            }\n        }\n\n    for (int k = 0; k &lt;= kk; k ++ ) \n        ans += dp[n][n][k][0] + dp[n][n][k][1];\n\n    printf(\"%d\\n\", ans);\n\n    return ;\n}\n\nint main(){\n    int T; cin&gt;&gt;T;\n    while(T--) solve();\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/#2020-2021-season","title":"2020-2021 Season","text":""},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/#2021-us-open","title":"2021 US Open","text":"AcWing 3745. \u725b\u7684\u5b66\u672f\u5708 I code   **\u5927\u610f**  \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4 $c$\uff0c$c_i$ \u662f\u6bcf\u7bc7\u6587\u7ae0\u88ab\u5f15\u7528\u7684\u6b21\u6570\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u5176\u4e2d\u4efb\u610f $\\leq L$ \u7bc7\u6587\u7ae0\u5f15\u7528\u6b21\u6570 $+1$\u3002 \u5b66\u672f\u6210\u5c31\u5b9a\u4e49\u4e3a $h$\uff1a\u5b58\u5728 $h$ \u7bc7\u8bba\u6587\uff0c\u5f15\u7528\u6b21\u6570 $\\geq h$\u3002 \u6c42\u6700\u5927\u7684 $h$\u3002  **\u601d\u8def**  1.  \u5728\u4e0d\u8003\u8651 $L$ \u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u5c06\u6587\u7ae0\u5f15\u7528\u6b21\u6570\u6309\u7167\u964d\u5e8f\u6392\u5e8f\uff0c     \u5982\u679c $c[i] \\geq i$\uff0c\u90a3\u4e48 $i$ \u5c31\u662f\u4e00\u4e2a\u5408\u6cd5\u7684 $H$\uff0c\u89c2\u5bdf\u6837\u4f8b `100 3 2 1`\uff1a     * $c[1]$\uff1a\u5b58\u5728 $1$ \u7bc7\u8bba\u6587\uff0c\u5f15\u7528\u6b21\u6570 $\\geq 1$\uff1a`100`\u3002     * $c[2]$\uff1a\u5b58\u5728 $2$ \u7bc7\u8bba\u6587\uff0c\u5f15\u7528\u6b21\u6570 $\\geq 2$\uff1a`100 3`\u3002     * $c[3]$\uff1a\u4e0d\u5b58\u5728 $3$ \u7bc7\u8bba\u6587\uff0c\u5f15\u7528\u6b21\u6570 $\\geq 3$\uff1a`100 3 2`\u3002  2.  \u8fd9\u4e2a\u6570\u7ec4\u53ef\u4ee5\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5de6\u8fb9\u90e8\u5206\u662f\u5408\u6cd5\uff0c\u53f3\u8fb9\u90e8\u5206\u662f\u4e0d\u5408\u6cd5\uff0c     \u663e\u7136\uff0c\u6211\u4eec\u5f15\u7528\u5408\u6cd5\u7684\u8bba\u6587\uff0c\u662f\u4e0d\u4f1a\u589e\u52a0\u6211\u4eec\u7684 $h$\uff0c     \u6211\u4eec\u9700\u8981\u5c06\u4e0d\u5408\u6cd5\u8bba\u6587\u4e2d\uff0c\u8f83\u5927\u7684\u8fdb\u884c\u5f15\u7528\u3002  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nconst int N=2e5+10;\n\nint a[N];\nint n, l;\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;l;\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", a+i);\n\n    sort(a+1, a+1+n, greater());    // \u4ece\u5927\u5230\u5c0f\u6392\n    int i=1;\n    while(a[i]&gt;=i &amp;&amp; i&lt;=n-l) i++;   // \u8d70\u8fc7\u5408\u6cd5\u90e8\u5206\uff0c\u540c\u65f6\u540e\u9762\u5fc5\u987b\u7559\u591f l \u4e2a\n    for(int j=0; j&lt;l; j++) a[i+j]++;// \u5f15\u7528\u9009\u5b9a\u7684 l \u4e2a\n\n    sort(a+1, a+1+n, greater());    \n    i=1;                            \n    while(a[i]&gt;=i &amp;&amp; i&lt;=n) i++;     // \u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u5408\u6cd5\u7684\u5730\u513f\n    cout&lt;&lt;i-1;\n    return 0;\n}\n</code></pre> AcWing 3746. \u725b\u7684\u5b66\u672f\u5708 II code   **\u5927\u610f**  \u7ed9\u5b9a $k$ \u884c\uff0c\u6bcf\u884c $n$ \u4e2a\u5b57\u7b26\u4e32\u3002 $n$ \u4e2a\u5b57\u7b26\u4e32\u6309\u7167\u8d21\u732e\u4ece\u5927\u5230\u5c0f\uff0c\u5b57\u5178\u5e8f\u4ece\u5c0f\u5230\u5927\u7ed9\u51fa\u3002 \u89c4\u5b9a\uff0c\u8d21\u732e\u8d8a\u5c0f\uff0c\u8d44\u5386\u8d8a\u5927\u3002 \u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u9700\u8981\u5224\u65ad\u8c01\u7684\u8d44\u5386\u66f4\u9ad8\uff0c\u6216\u8005\u8bf4\u65e0\u6cd5\u5224\u65ad\u3002  **\u601d\u8def**  1.  \u5bf9\u4e8e\u4e00\u884c\u5b57\u7b26\u4e32 $s[n]$\uff0c\u5982\u679c\u5b58\u5728 $s_i &gt; s_j (i s_j$\uff1a$[1,i]$ \u7684\u8d21\u732e\u90fd\u5927\u4e8e $j$\u3002  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;map&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nconst int N=110;\n\nint g[N][N];\nmap&lt;string, int&gt; tr;\nint k, n;\n\nint main(){\n    cin&gt;&gt;k&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++){\n        string t; cin&gt;&gt;t;\n        tr[t] = i;  // t \u662f\u7b2c i \u540d\u6210\u5458\n    }\n    for(int l=1; l&lt;=k; l++){\n        string s[N];\n        int flg=1;\n        for(int j=1; j&lt;=n; j++){\n            cin&gt;&gt;s[j];\n            if(s[j-1] &gt; s[j]) flg=j;            // \u5f53\u627e\u5230\u4e00\u4e2a\u5730\u65b9 s[i] &gt; s[j]\n            for(int i=1; i&lt;flg; i++)            // [1-i]\u7684\u8d21\u732e\u5747\u5927\u4e8e j\n                g[ tr[s[i]] ][ tr[s[j]] ] = 1,\n                g[ tr[s[j]] ][ tr[s[i]] ] = -1;   \n        }\n    }\n\n    for(int i=1; i&lt;=n; i++, cout&lt;&lt;\"\\n\")\n        for(int j=1; j&lt;=n; j++)\n            if(i==j) cout&lt;&lt;\"B\";\n            else{\n                if(g[i][j] == 1) cout&lt;&lt;\"0\";\n                if(g[i][j] == -1) cout&lt;&lt;\"1\";\n                if(g[i][j] == 0) cout&lt;&lt;\"?\";\n            }\n\n    return 0;\n}\n</code></pre> AcWing 3747. \u725b\u7684\u5b66\u672f\u5708 III code   **\u5927\u610f**  \u7ed9\u5b9a\u4e00\u4e2a $N$ \u884c\uff0c$M$ \u5217\u7684\u77e9\u9635 $g$\u3002 \u5bf9\u4e8e $g[i][j]$\uff0c\u6709\u4e09\u79cd\u72b6\u6001\uff1a`C` `G` `.`\u3002 \u5bf9\u4e8e `G` \u800c\u8a00\uff0c\u5176\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u4f4d\u7f6e\u7684 `C` \uff0c\u53ef\u4ee5\u5728 `G` \u5904\u5efa\u7acb\u5173\u7cfb\uff0c \u6bcf\u4e2a `G` \u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\uff0c\u6c42\u5efa\u7acb\u4e0d\u91cd\u590d\u5173\u7cfb\u7684\u6700\u5927\u6570\u91cf\u3002  **\u601d\u8def**  1. \u6bcf\u4e2a `G` \u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\uff0c\u90a3\u4e48\u6211\u4eec\u4ece `G` \u7684\u89d2\u5ea6\u53bb\u8003\u8651\uff0c\u679a\u4e3e `G`\uff0c    \u540c\u65f6\u7edf\u8ba1 `G` \u7684\u56db\u5468\u6709\u591a\u5c11 `C`\uff1a    `C` $&lt; 2$\uff1a\u4e0d\u4f1a\u5b58\u5728\u5173\u7cfb\uff1b    `C` $= 2$\uff1a\u5b58\u5728\u4e00\u5bf9\u5173\u7cfb\uff1b    `C` $&gt; 2$\uff1a\u5b58\u5728\u81f3\u5c11\u4e24\u5bf9\u5173\u7cfb\u3002  2. \u6b64\u65f6\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e0b\uff0c\u5173\u7cfb\u91cd\u590d\u5efa\u7acb\u7684\u60c5\u51b5\uff1a    `C1` `G1`    `G2` `C2`       \u663e\u7136\uff0c\u5f53\u51fa\u73b0\u7c7b\u4f3c\u4e0a\u9762\u7684\u6392\u5217\u65f6\uff0c`C1` \u548c `C2` \u53ef\u4ee5\u540c\u65f6\u5728 `G1`\uff0c`G2` \u5efa\u7acb\u5173\u7cfb\uff0c    \u56e0\u6b64\uff0c\u9700\u8981\u7ef4\u62a4\u4e00\u4e0b\u6bcf\u4e00\u5bf9\u5173\u7cfb\u3002  3. \u5bf9\u4e8e\u4e24\u4e2a `G`\uff0c\u4ed6\u4eec\u6700\u591a\u53ea\u4f1a\u91cd\u590d\u4e00\u5bf9\u513f\u5173\u7cfb\u3002  C++<pre><code>#define fst first\n#define sed second\n#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;set&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\ntypedef pair&lt;int, int&gt; PII;\n\nconst int N=1e3+10;\nconst int dxy[4][2]={ {-1,0},{1,0},{0,-1},{0,1} };\n\nint n, m, ans;\nstring g[N];\n\nset&lt;pair&lt;PII, PII&gt;&gt; only; // \u4e00\u5bf9\u552f\u4e00\u7684\u5976\u725b\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=n; i++){\n        cin&gt;&gt;g[i];\n        g[i] = \" \"+g[i];\n    }\n\n    for(int i=1; i&lt;=n; i++)\n        for(int j=1; j&lt;=m; j++)\n            if(g[i][j] == 'G'){ // \u5982\u679c\u6709\u8349\n\n                vector&lt;PII&gt; cnt;\n                for(int k=0; k&lt;4; k++){\n                    int nx = i + dxy[k][0];\n                    int ny = j + dxy[k][1];\n\n                    if( g[nx][ny] == 'C' ) cnt.push_back({nx, ny});\n                }\n\n                if(cnt.size() &gt; 2) ans++;\n                if(cnt.size() == 2){\n                    int x1 = cnt[0].fst, y1 = cnt[0].sed;\n                    int x2 = cnt[1].fst, y2 = cnt[1].sed;\n\n                    if( only.count( { {x1,y1}, {x2,y2} } ) ||\n                        only.count( { {x2,y2}, {x1,y1} } ) )\n                        continue;\n                    else{\n                        ans++;\n                        only.insert({ {x1,y1}, {x2,y2} });\n                        only.insert({ {x2,y2}, {x1,y1} });\n                    }\n                }\n            }\n\n    cout&lt;&lt;ans;\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/#2021-feb","title":"2021 Feb","text":"AcWing 3370. \u725b\u5e74 code  **\u5927\u610f**  \u7ed9\u5b9a $12$ \u4e2a\u751f\u8096\uff0c\u6bcf\u6b21\u7ed9\u51fa\u4e00\u6761\u4fe1\u606f\uff1a * $A$ \u662f $B$ \u5de6\u8fb9\uff08previous\uff09\u7684\u7b2c\u4e00\u4e2a $C$ \u5e74 * $A$ \u662f $B$ \u53f3\u8fb9\uff08next\uff09\u7684\u7b2c\u4e00\u4e2a $C$ \u5e74  \u901a\u8fc7\u82e5\u5e72\u6761\u4fe1\u606f\uff0c\u6c42\u51fa $Bessie$ \u4e0e $Elsie$ \u7684\u5e74\u4efd\u5dee\u3002  **\u601d\u8def**  1. \u6211\u4eec\u9700\u8981\u786e\u5b9a\u6bcf\u5934\u725b\u4e0e $Bessie$ \u7684\u5e74\u4efd\u5dee\u3002    \u663e\u7136\uff0c$Bessie$ \u4e0e $Bessie$ \u7684\u5e74\u4efd\u5dee\u4e3a $0$\uff0c$Bessie$ \u7684\u751f\u8096\u662f\u725b\u3002  2. \u5bf9\u4e8e\u6bcf\u6761\u4fe1\u606f\uff0c\u6211\u4eec\u5148\u8ba1\u7b97\u751f\u8096\u7684\u5dee\u503c\uff0c\u518d\u8ba1\u7b97\u5e74\u4efd\u7684\u5dee\u503c\u3002    \u4e3a\u4e86\u65b9\u4fbf\u8ba1\u7b97\u751f\u8096\u7684\u5dee\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u751f\u8096\u590d\u5236\u6210\u4e09\u4efd\uff0c    \u7136\u540e\u4ece\u4e2d\u95f4\u5f00\u59cb\u5411\u524d\u5411\u540e\u627e\u3002  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;map&gt;\nusing namespace std;\n\nmap&lt;string, int&gt; ans;\nmap&lt;string, string&gt; u;    // \u6bcf\u5934\u725b\u7684\u751f\u8096\n\nstring sx[]={\n    \"Ox\", \"Tiger\", \"Rabbit\", \"Dragon\", \"Snake\", \"Horse\", \"Goat\", \"Monkey\", \"Rooster\", \"Dog\", \"Pig\", \"Rat\",\n    \"Ox\", \"Tiger\", \"Rabbit\", \"Dragon\", \"Snake\", \"Horse\", \"Goat\", \"Monkey\", \"Rooster\", \"Dog\", \"Pig\", \"Rat\",\n    \"Ox\", \"Tiger\", \"Rabbit\", \"Dragon\", \"Snake\", \"Horse\", \"Goat\", \"Monkey\", \"Rooster\", \"Dog\", \"Pig\", \"Rat\"\n};\n\nint main(){\n    int Q; cin&gt;&gt;Q;\n\n    ans[\"Bessie\"]=0;\n    u[\"Bessie\"]=\"Ox\";\n\n    while(Q--){\n        string s[10];\n        for(int i=1; i&lt;=8; i++) cin&gt;&gt;s[i];\n        string A=s[1], B=s[8];\n        u[A] = s[5];    // \u53ef\u4ee5\u76f4\u63a5\u786e\u5b9a A \u7684\u751f\u8096\n\n        // \u5148\u627e\u5230 B \u7684\u4f4d\u7f6e\n        int idxA, idxB;\n        for(int i=12; i&lt;=23; i++) \n            if(sx[i]==u[B]){\n                idxB=i;\n                break;\n            }\n\n        if(s[4]==\"previous\"){\n            // \u518d\u627e\u5230 A \u7684\u4f4d\u7f6e\uff0cA &lt; B\n            idxA = idxB - 1;\n            while(sx[idxA] != u[A]) idxA--;\n            ans[A] = ans[B] - (idxB-idxA);\n        }else{\n            // \u540c\u4e0a\uff0c\u4e0d\u8fc7\u662f\u5411\u53f3\u627e\uff0cA &gt; B\n            idxA = idxB + 1;\n            while(sx[idxA] != u[A]) idxA++;\n            ans[A] = ans[B] + (idxA-idxB);\n        }\n    }\n\n    cout&lt;&lt;abs(ans[\"Elsie\"]);\n\n    return 0;\n}\n</code></pre> AcWing 3371. \u8212\u9002\u7684\u5976\u725b code  **\u5927\u610f**  \u7ed9\u5b9a\u4e00\u4e2a $n \\times n$ \u7684\u77e9\u9635\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u6709\u4e24\u79cd\u72b6\u6001\uff1a\u6709\u725b\uff0c\u6ca1\u725b\u3002 \u6bcf\u6b21\u52a0\u5165\u4e00\u5934\u725b\uff0c\u5982\u679c\u8fd9\u5934\u725b\u7684\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u4f4d\u7f6e\u6709 $3$ \u5934\u725b\uff0c\u90a3\u4e48\u8fd9\u5934\u725b\u8212\u670d\u3002 \u6c42\u6bcf\u6b21\u52a0\u5165\u4e00\u5934\u725b\u540e\uff0c\u8212\u670d\u7684\u725b\u7684\u6570\u91cf\u3002  **\u601d\u8def**  1.  \u6bcf\u6b21\u52a0\u5165\u4e00\u5934\u725b\uff0c\u53ea\u4f1a\u5f71\u54cd\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u4f4d\u7f6e\u7684\u8212\u670d\u60c5\u51b5\u3002     \u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u68c0\u67e5\u8fd9\u56db\u4e2a\u4f4d\u7f6e\u7684\u8212\u670d\u60c5\u51b5\u5373\u53ef\u3002  2.  \u68c0\u67e5\u8fd9\u5934\u725b\u7684\u8212\u670d\u60c5\u51b5\uff1a     * \u5982\u679c\u8fd9\u5934\u725b\u7684\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u4f4d\u7f6e\u6709 $3$ \u5934\u725b\uff0c\u90a3\u4e48\u8fd9\u5934\u725b\u8212\u670d\u3002     * \u5426\u5219\uff0c\u8fd9\u5934\u725b\u4e0d\u8212\u670d\u3002  3.  \u68c0\u67e5\u5468\u56f4\u56db\u5934\u725b\u7684\u8212\u670d\u60c5\u51b5\uff1a     * \u5982\u679c\u8fd9\u5934\u725b\u4e4b\u524d\u4e0d\u8212\u670d\uff0c\u4f46\u662f\u73b0\u5728\u8212\u670d\u4e86\uff0c\u90a3\u4e48\u7b54\u6848 $+1$\u3002     * \u5982\u679c\u8fd9\u5934\u725b\u4e4b\u524d\u662f\u8212\u670d\u7684\uff0c\u4f46\u662f\u73b0\u5728\u4e0d\u8212\u670d\u4e86\uff0c\u90a3\u4e48\u7b54\u6848 $-1$\u3002  C++<pre><code>#pragma GCC optimize(3, \"inline\", \"Ofast\")\n\n#include &lt;stdio.h&gt;\n\n//int N=1010;\n\nint g[1010][1010];\nint f[1010][1010]; // \u8bb0\u5f55\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u725b\u662f\u5426\u8212\u9002\n\nint dxy[4][2]={ {-1,0}, {1,0}, {0,-1}, {0,1} };\n\n// \u6bcf\u4e00\u6b21\u52a0\u5165\u540e\uff0c\u53ea\u4f1a\u5f71\u54cd\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\u7684\u5976\u725b\u8212\u4e0d\u8212\u670d\n// \u90a3\u4e48\u518dcheck\u4e00\u4e0b\n\n// \u68c0\u67e5(x,y)\u5976\u725b\u8212\u670d\nint check(int x, int y){\n    int res=0;\n\n    for(int i=0; i&lt;4; i++){\n        int nx=x+dxy[i][0];\n        int ny=y+dxy[i][1];\n\n        if( nx&lt;0 || ny &lt;0 ) continue;\n\n        if(g[nx][ny]==1)\n            res++;\n    }\n\n    if(res==3) return 1;\n    return 0;\n}\n\nint main(){\n    int n, ans=0;\n    scanf(\"%d\", &amp;n);\n\n    for(int i=1; i&lt;=n; i++){\n        int a, b;\n        scanf(\"%d%d\", &amp;a, &amp;b);\n        g[a][b]=1;\n\n        // \u68c0\u67e5\u8fd9\u5934\u725b\n        if( check(a, b) ) ans++, f[a][b]=1;\n\n        // \u68c0\u67e5\u5468\u56f4\u56db\u5934\u725b\n        for(int i=0; i&lt;4; i++){\n            int nx=a+dxy[i][0];\n            int ny=b+dxy[i][1];\n\n            // \u6709\u725b, \u8212\u670d, \u6ca1\u88ab\u8212\u670d\u8fc7\n            if(g[nx][ny] &amp;&amp; check(nx, ny) &amp;&amp; f[nx][ny]==0){\n                ans++;\n                f[nx][ny]=1;\n                continue;\n            }\n\n            // \u6709\u725b,\u4e0d\u8212\u670d\u4e86,\u66fe\u7ecf\u8212\u670d\u8fc7\n            if(g[nx][ny] &amp;&amp; check(nx, ny)==0 &amp;&amp; f[nx][ny]==1){\n                ans--;\n                f[nx][ny]=0;\n                continue;\n            }\n        }\n\n        printf(\"%d\\n\", ans);\n    }\n\n    return 0;\n}\n</code></pre> AcWing 3372. \u987a\u65f6\u9488\u56f4\u680f code  **\u5927\u610f**  \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4ec5\u5305\u542b `N` `E` `S` `W`\uff0c\u4ee3\u8868\u5411\u5317\u3001\u5411\u4e1c\u3001\u5411\u5357\u3001\u5411\u897f\u884c\u8fdb\u4e00\u683c\u3002  \u6c42\u884c\u8fdb\u5b8c\u6bd5\u540e\uff0c\u88ab\u56f4\u8d77\u6765\u7684\u8def\u5f84\u662f\u5426\u662f\u987a\u65f6\u9488\u7684\u3002  **\u601d\u8def**  1.  \u6211\u4eec\u4e0d\u80fd\u901a\u8fc7\u4e00\u6b21\u79fb\u52a8\u65b9\u5411\uff0c\u5224\u65ad\u662f\u5426\u987a\u65f6\u9488\u3002\u4e8e\u662f\u6709\u4e86\uff1a     `NE` `ES` `SW` `WN`     \u800c\u5176\u4ed6\u7ec4\u5408\uff0c\u90fd\u662f\u9006\u65f6\u9488\uff08\u4e24\u4e2a\u5b57\u7b26\u4e0d\u76f8\u7b49\uff09\u3002  2. \u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u904d\u5386\u4e00\u904d\u5b57\u7b26\u4e32\uff0c\u5224\u65ad\u987a\u65f6\u9488\u7ec4\u5408\u51fa\u73b0\u7684\u6570\u91cf\u5373\u53ef\u3002  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\nusing namespace std;\n\nconst int N=2e5+10;\n\nstring solve(){\n    int res=0;\n    string s; cin&gt;&gt;s;\n    for(int i=0; i&lt;s.size()-1; i++)\n        if(s[i] != s[i+1]){\n            string t = string(1, s[i]) + string(1, s[i+1]);\n            if(t==\"NE\" || t==\"ES\" || t==\"SW\" || t==\"WN\") res++;\n            else res--;\n        }\n\n    if(res&gt;0) return \"CW\";\n    return \"CCW\";\n}\n\nint main(){\n    int T; cin&gt;&gt;T;\n    while(T--) cout&lt;&lt;solve()&lt;&lt;\"\\n\";\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/#2021-jan","title":"2021 Jan","text":"<p>&lt;1details&gt;AcWing 3358. \u653e\u517b\u4f46\u6ca1\u6709\u5b8c\u5168\u653e\u517b code</p> <p>C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nstring str, sub;\n\nint main(){\n    cin&gt;&gt;str&gt;&gt;sub;\n\n    int i=0;\n    int ans=0;\n\n    while(i&lt;sub.size()){\n\n\n        for(int j=0; j&lt;str.size(); j++)\n            if(sub[i]==str[j]){\n                i++;\n            }\n\n        ans++;\n    }\n\n    cout&lt;&lt;ans;\n\n    return 0;\n}\n</code></pre> </p> AcWing 3359. \u66f4\u591a\u5947\u602a\u7684\u7167\u7247 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\n// \u5947\u6570\u3001\u5076\u6570\u7684\u6570\u91cf\nint odd, even;\n\nint main(){\n    int n;\n    cin&gt;&gt;n;\n    for(auto i=1; i&lt;=n; i++){\n        int t;\n        scanf(\"%d\", &amp;t);\n\n        if(t&amp;1) \n            odd++;\n        else\n            even++;\n    }\n    // \u6211\u6709\u5947\u6570\u7684\u4e2a\u6570\n    // \u6709\u5076\u6570\u7684\u4e2a\u6570\n    // \u90a3\u4e48\u4ed6\u4eec\u76f8\u540c\u7684\u90e8\u5206\uff0c\u4e00\u5b9a\u53ef\u4ee5\u914d min(odd, even)*2 \u7ec4\u6570\n    // \u5269\u4e0b a = abs(odd-even) \u6570\u91cf\u7684 \u5168\u5947 \u6216\u8005 \u5168\u5076\n    // \u82e5\u5168\u5947\n    //      \uff08\u5076\u6570\u4e2a\uff092\u4e2a\u5947\u6570\u7684\u548c\u662f\u5076\u6570\n    //      \u663e\u7136\uff0c\u6211\u4eec\u5fc5\u5b9a\u53ef\u4ee5\u914d\u51fa (a/3)*2 \u7ec4 \n    //      \u5bf9\u4e8e\u6ca1\u4f7f\u7528\u7684\u5947\u6570\uff0c\u4e00\u4e2a\u4f1a\u5f71\u54cd\u4fe9\uff0c\u76f4\u63a5ans--\n    //      \u5982\u679c a - int(a/3) * 2 &gt;=1 , ans -= ( a - int(a/3) * 2 )\n    // \u82e5\u5168\u5076\n    //      \u4e0d\u7ba1\u4e86\uff0c\u518d\u52a0\u4e00\u4e2a\n\n    int ans=min(odd, even)*2;\n\n    //cout&lt;&lt;odd&lt;&lt;\" \"&lt;&lt;even&lt;&lt;endl;\n\n    if(odd&gt;even){\n        int a=abs(odd-even);\n\n        //cout&lt;&lt;a&lt;&lt;endl;\n\n        ans += (int(a/3))*2;    // \u5168\u5947\u914d\u7684\n\n        //cout&lt;&lt;ans;\n\n        a -= ( int(a/3)*3 );    // \u5269\u4f59\u7684\n\n        if(a==2)\n            ans++;\n        else if(a==1)\n            ans--;\n    }\n    else if(even&gt;odd)\n        ans++;\n\n    cout&lt;&lt;ans;\n\n    return 0;\n}\n</code></pre> AcWing 3360. \u725b\u68da code  **\u5927\u610f**  \u7ed9\u5b9a\u4e24\u4e2a\u6570\u7ec4 $a, b$ \u5c06 $a$ \u6392\u5217\uff0c\u4f7f\u5f97 $a$ \u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u4e0d\u5927\u4e8e $b$ \u4e2d\u7684\u5bf9\u5e94\u5143\u7d20\u3002  **\u601d\u8def**  1. \u6211\u4eec\u53ef\u4ee5\u5c06 $a$ \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u7136\u540e\u770b\u4ed6\u80fd\u653e\u5165 $b$ \u7684\u90a3\u51e0\u4e2a\u4f4d\u7f6e\u3002  2. \u5bf9\u4e8e\u7b2c $i$ \u4f4d\uff0c\u524d\u9762\u7684 $i$ \u4e2a\u4f4d\u7f6e\u90fd\u5df2\u7ecf\u88ab\u653e\u7f6e\uff0c\u6240\u4ee5\u80fd\u653e\u7684\u4f4d\u7f6e $res - i + 1$\u3002  C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\ntypedef long long LL;\nconst int N = 30;\n\nLL a[N], b[N];\nLL ans=1;\nint n;\n\nint main(){\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) cin&gt;&gt;a[i];\n    for(int i=1; i&lt;=n; i++) cin&gt;&gt;b[i];\n\n    sort(a+1, a+1+n, greater());    // \u5c06 a \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n    for(int i=1; i&lt;=n; i++){        // \u770b\u6bcf\u4e00\u4f4d\u80fd\u653e\u5230\u591a\u5c11\u4e2a\u4f4d\u7f6e\u53bb\n        int res=0;\n        for(int j=1; j&lt;=n; j++)\n            if(a[i] &lt;= b[j]) res++; // \u53ef\u4ee5\u653e\u5230 res \u4e2a b \u91cc\u9762\u53bb\n        ans *= res - i + 1;\n    }\n\n    cout&lt;&lt;ans;\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/#2020-dec","title":"2020 Dec","text":"AcWing 3346. \u4f60\u77e5\u9053\u4f60\u7684ABC\u5417 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nint n[10];\nint used[10];\n\nint main(){\n    for(int i=1; i&lt;=7; i++)\n        cin&gt;&gt;n[i];\n    sort(n+1, n+8);\n\n    do{\n        sort(n+1, n+4);\n\n        // a+b\n        if( n[1]+n[2] != n[4] ) continue;\n        // b+c\n        if( n[2]+n[3] != n[5] ) continue;\n        // a+c\n        if( n[1]+n[3] != n[6] ) continue;\n        // a+b+c\n        if( n[1]+n[2]+n[3] != n[7] ) continue;\n\n        for(int i=1; i&lt;=3; i++)\n            cout&lt;&lt;n[i]&lt;&lt;\" \";\n        break;\n\n    }\n    while(next_permutation(n+1, n+7));\n\n    return 0;\n}\n</code></pre> AcWing 3347. \u83ca\u82b1\u94fe code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=1010;\n\nint hua[N];\n\nint main(){\n    int n=0;\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++){\n        scanf(\"%d\", &amp;hua[i]);\n        hua[i]+=hua[i-1];     // \u505a\u4e00\u4e2a\u524d\u7f00\u548c\n    }\n\n    int res=n; // \u63d0\u524d\u4e00\u6735\u82b1 \n\n    for(int j=1; j&lt;=n; j++){\n        for(int i=1; i&lt;j; i++){ // \u8fd9\u91cc\u53d6\u6d88\u7b49\u53f7 \u7b49\u4e8e\u7684\u65f6\u5019\u662f\u4e00\u6735\u82b1\n            // i-j\u7684\u7167\u7247\n            int all=hua[j]-hua[i-1]; // \u82b1\u74e3\u6570\u91cf\n            int duo=j-i+1;           // \u82b1\u6735\u6570\u91cf\n            double pp=(double)all/duo;\n            int p=all/duo;\n            //cout&lt;&lt;i&lt;&lt;\"-\"&lt;&lt;j&lt;&lt;\":\"&lt;&lt;pp&lt;&lt;endl;\n            if( pp-p&gt;1e-6 )continue;\n\n\n            // \u68c0\u67e5\u82b1k\u662f\u5426\u662f\u5e73\u5747\u7684\u82b1\n            for(int k=i; k&lt;=j; k++)\n                if( p==(hua[k]-hua[k-1]) ){\n                    res++;\n                    break;\n                }\n\n        }\n    }\n\n    cout&lt;&lt;res;\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/#2019-2020-season","title":"2019-2020 Season","text":""},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/#2020-us-open","title":"2020 US Open","text":""},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/#2020-feb","title":"2020 Feb","text":"AcWing 1671. \u4e09\u89d2\u5f62 code C++<pre><code>#pragma GCC optimize(2, 3, \"Ofast\", \"inline\")\n\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;cmath&gt;\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair&lt;LL, LL&gt; PII;\n\n#define x first\n#define y second\n\nPII a[110];\n\nint main(){\n    int n;\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) scanf(\"%lld%lld\", &amp;a[i].x, &amp;a[i].y);\n\n    LL ans=-1;\n\n    for(int i=1; i&lt;=n; i++)\n    for(int j=1; j&lt;=n; j++)\n    for(int k=1; k&lt;=n; k++)\n        if(a[i].x==a[j].x &amp;&amp; a[j].y==a[k].y)\n            ans=max(ans,  llabs(a[j].y-a[i].y)*llabs(a[k].x-a[j].x)  );\n\n    cout&lt;&lt;ans;\n\n    return 0;\n}\n</code></pre> AcWing 1672. \u75af\u72c2\u7684\u79d1\u5b66\u5bb6 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nint N=1e3+10;\n\nstring A, B;\n\nint main(){\n    int n;\n    cin&gt;&gt;n;\n    cin&gt;&gt;A&gt;&gt;B;\n\n    int res=0;\n    for(int i=0; i&lt;A.size(); i++){\n\n        if(A[i]!=B[i]){\n            i++;\n            while(A[i]!=B[i]) i++;\n            i--;\n            res++;\n        }\n\n    }\n\n    cout&lt;&lt;res;\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/#2020-jan","title":"2020 Jan","text":"AcWing 1442. \u5355\u8bcd\u5904\u7406\u5668 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nint main(){\n    int n, k;\n    cin&gt;&gt;n&gt;&gt;k;\n    string str;\n    int a=0;\n    for(int i=1; i&lt;=n; i++){\n        cin&gt;&gt;str;\n\n        if( str.size()+a &gt; k ){\n            cout&lt;&lt;endl;\n            a=0;\n        }\n\n        cout&lt;&lt;str&lt;&lt;\" \";\n        a+=str.size();\n    }\n\n\n    return 0;\n}\n</code></pre> AcWing 1443. \u62cd\u7167 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;unordered_map&gt;\nusing namespace std;\n\nconst int N=1e3+10;\n\nint a[N], b[N];\n\nint main(){\n    int n=0;\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;n; i++) scanf(\"%d\", &amp;b[i]);\n\n    for(int k=1; k&lt;=n; k++){          \n        unordered_map&lt;int, int&gt; hash; \n                // \u8bb0\u5f55\u67d0\u4e2a\u6570\u5b57\u662f\u5426\u51fa\u73b0\n        a[1]=k; // \u7b2c\u4e00\u4e2a\u6570\u5b57\u662fk\n        hash[k]++;\n\n        int i=2;\n        for( ; i&lt;=n; i++){\n            a[i]=b[i-1]-a[i-1];\n\n            if(hash[a[i]]) break;        // \u4f4d\u7f6e\u91cd\u590d\u7684\u725b\n            if(a[i]&lt;=0 || a[i]&gt;n) break; // \u4e0d\u8be5\u51fa\u73b0\u7684\u725b\n\n            hash[a[i]]++;\n        }\n\n        if(i&gt;n) break; // a\u6392\u5e8f\u5b8c\u6210\n    }\n\n    for(int i=1; i&lt;=n; i++) cout&lt;&lt;a[i]&lt;&lt;\" \";\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/#2019-dec","title":"2019 Dec","text":"AcWing 1459. \u5976\u725b\u4f53\u64cd code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N=30;\n\nint a[N][N];\n\nint main(){\n    int k, n;\n    cin&gt;&gt;k&gt;&gt;n;\n    // k\u6b21\u8bad\u7ec3\n    // n\u5934\u5976\u725b\n    for(int i=1; i&lt;=k; i++)\n        for(int j=1; j&lt;=n; j++)\n            scanf(\"%d\", &amp;a[i][j]);\n\n    int ans=0;\n\n    for(int i=1; i&lt;=n; i++)\n        for(int j=i+1; j&lt;=n; j++){\n\n            // x\u5fc5\u987b\u5148\u51fa\u73b0\n            int x=a[1][i], y=a[1][j];\n\n            bool flg = 1;\n            // \u904d\u5386\u5176\u4f59\u6b21\u8bad\u7ec3\u60c5\u51b5\n            for(int m=2; m&lt;=k &amp;&amp; flg; m++)\n                for(int t=1; t&lt;=n; t++)\n                    if( a[m][t] == y){\n                        flg=0;\n                        break;\n                    }\n                    else if( a[m][t] == x )\n                        break;\n\n            if(flg) ans++;\n        }\n\n    cout&lt;&lt;ans;\n\n    return 0;\n}\n</code></pre> AcWing 1460. \u6211\u5728\u54ea\uff1f code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\n#include &lt;set&gt;\nusing namespace std;\n\nint n, ans;\nstring s;\n\nbool ck(int res){\n    set&lt;string&gt; H;\n    for(int i=0; i+res&lt;=n; i++)\n        if(H.count(s.substr(i, res))) return 0;\n        else H.insert(s.substr(i, res));\n    return 1;\n}\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;s;\n    for(ans=1; ans&lt;n; ans++)\n        if( ck(ans) ) break;\n    cout&lt;&lt;ans;\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/#2018-2019-season","title":"2018-2019 Season","text":""},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/#2019-us-open","title":"2019 US Open","text":"AcWing 1470. \u6c34\u6876\u4f20\u9012\u961f\u5217 code C++<pre><code>#define fst first\n#define sed second\n\n#include &lt;iostream&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\ntypedef pair&lt;int, int&gt; PII;\n\nchar g[15][15];  // \u5730\u56fe\nint used[15][15];// \u662f\u5426\u5230\u8fbe\u8fc7\nint ans[15][15]; // \u5230\u8fbe\u8be5\u70b9\u7684\u6700\u77ed\u8def\u5f84\nint dxy[4][2]={ {-1, 0}, {1, 0}, {0, -1}, {0, 1} };\n\n// \u7ed3\u675f\u70b9\nint ex, ey;\n// \u5f00\u59cb\u70b9\nint sx, sy;\n\nvoid BFS(int x, int y){\n\n    queue&lt;PII&gt; q;\n    q.push( {x, y} );\n    used[x][y]=1;\n\n    while( q.size() ){\n\n        int nx = q.front().fst;\n        int ny = q.front().sed;\n\n        for(int i=0; i&lt;4; i++){\n            int nnx = nx+dxy[i][0];\n            int nny = ny+dxy[i][1];\n\n            if(nnx&gt;=1&amp;&amp;nnx&lt;=10 &amp;&amp; nny&gt;=1&amp;&amp;nny&lt;=10)\n            if(used[nnx][nny]==0)\n            if(g[nnx][nny]!='R')\n            {\n                ans[nnx][nny]=ans[nx][ny]+1;\n                used[nnx][nny]=1;\n                q.push( {nnx, nny} );\n                if(g[nnx][nny]=='B') return ;\n            }\n\n        }\n\n        q.pop();\n    }\n\n}\n\nint main(){\n\n    for(int i=1; i&lt;=10; i++){\n        for(int j=1; j&lt;=10; j++){\n            scanf(\"%c\", &amp;g[i][j]);\n            if(g[i][j]=='L')\n                sx=i, sy=j;\n            if(g[i][j]=='B')\n                ex=i, ey=j;\n        }\n        getchar();\n    }\n\n    BFS(sx, sy);\n\n    cout&lt;&lt;ans[ex][ey]-1;\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/#2019-feb","title":"2019 Feb","text":"AcWing 1683. \u56f0\u725b\u653e\u7267 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nint a[3];\n\nint main(){\n    cin&gt;&gt;a[0]&gt;&gt;a[1]&gt;&gt;a[2];\n    sort(a, a+3);\n\n    if(a[1]-a[0]==1 &amp;&amp; a[2]-a[1]==1){ // 6 7 8\n        cout&lt;&lt;0&lt;&lt;endl&lt;&lt;0;\n        return 0;\n    }\n\n    int mmin=0;\n    int mmax = max(a[2]-a[1]-1, a[1]-a[0]-1);\n\n    if(a[1]-a[0]==2 || a[2]-a[1]==2)\n        mmin=1;\n    else\n        mmin=2;\n\n    cout&lt;&lt;mmin&lt;&lt;endl&lt;&lt;mmax;\n    return 0;\n}\n</code></pre> AcWing 1684. \u5927\u578b\u690d\u88ab\u6062\u590d code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\n#define pb push_back\n\n#define x first\n#define y second\ntypedef pair&lt;int, int&gt; PII;\n\n// \u6bcf\u53ea\u5976\u725b\u559c\u6b22\u7684\u4e24\u5757\u8349\u5730\nPII a[160];\n// \u6bcf\u5757\u8349\u5730\u79cd\u7684\u8349\nint res[110];\n// \u8be5\u8349\u5730\u4e0d\u80fd\u548c\u90a3\u4e9b\u8349\u5730\u7684\u8349\u76f8\u540c\nvector&lt;int&gt; ad[110];\n\nint main(){\n    int n, m;\n    cin&gt;&gt;n&gt;&gt;m;\n\n    for(int i=1; i&lt;=m; i++){\n        scanf(\"%d%d\", &amp;a[i].x, &amp;a[i].y);\n        ad[a[i].x].pb(a[i].y);\n        ad[a[i].y].pb(a[i].x); // 1\u53f7\u8349\u573a\u7684\u4e0d\u80fd\u548c5\uff0c6\u51b2\u7a81\n    } \n\n    for(int i=1; i&lt;=n; i++){\n\n        // \u4ece\u56db\u5757\u8349\u5730\u91cc\u9009\n        for(int d=1; d&lt;=4; d++){\n\n            bool flag=1;\n            for(int j=0; j&lt;ad[i].size(); j++)\n                if(res[ ad[i][j] ]==d){ // \u51b2\u7a81\n                    flag=0;\n                    break;\n                }\n\n            if(flag){\n                res[i]=d;\n                break;\n            }            \n        }\n\n    }\n\n    for(int i=1; i&lt;=n; i++)\n        cout&lt;&lt;res[i];\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/#2019-jan","title":"2019 Jan","text":"AcWing 1695. \u679c\u58f3\u6e38\u620f code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\n// \u5c0f\u6a21\u62df\nint arr[110][4];\nint n;\n\n// \u5728\u7b2c u \u4e2a\u58f3\u4e0b\u9762\nint ke(int u){\n    int k[4]={0};\n    k[u]=1;\n    int res=0;\n\n    for(int i=1; i&lt;=n; i++){\n\n        swap(k[ arr[i][1] ], k[ arr[i][2] ]);\n        if(k[ arr[i][3] ]) res++;\n    }\n    //cout&lt;&lt;res&lt;&lt;endl;\n    return res;\n}\n\nint main(){\n\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++) scanf(\"%d%d%d\", &amp;arr[i][1], &amp;arr[i][2], &amp;arr[i][3]);\n\n    int ans=0;\n    for(int i=1; i&lt;=3; i++)\n        ans = max( ans, ke(i) );\n\n    cout&lt;&lt;ans;\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/#2018-dec","title":"2018 Dec","text":"AcWing 1714. \u6df7\u5408\u725b\u5976 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint C[5], M[5];\n\nint main(){\n    for(int i=1; i&lt;=3; i++)\n        scanf(\"%d%d\", &amp;C[i], &amp;M[i]);\n\n    for(int i=1; i&lt;=33; i++){\n        // \u68761 \u5230 \u68762\n        int t=M[1]+M[2];\n        if( t&gt;C[2] ){   // \u4e0d\u591f\u88c5\n            M[2]=C[2];  // \u88c5\u6ee1\n            M[1]=t-M[2];// \u68761\u7684\u5976\n        }\n        else{\n            M[1]=0;\n            M[2]=t;\n        }\n\n        // \u68762 \u5230 \u68763\n        t=M[2]+M[3];\n        if( t&gt;C[3] ){   // \u4e0d\u591f\u88c5\n            M[3]=C[3];  // \u88c5\u6ee1\n            M[2]=t-M[3];// \u68762\u7684\u5976\n        }\n        else{\n            M[2]=0;\n            M[3]=t;\n        }\n\n        // \u68763 \u5230 \u68761\n        t=M[3]+M[1];\n        if( t&gt;C[1] ){   // \u4e0d\u591f\u88c5\n            M[1]=C[1];  // \u88c5\u6ee1\n            M[3]=t-M[1];// \u68763\u7684\u5976\n        }\n        else{\n            M[3]=0;\n            M[1]=t;\n        }\n\n    }\n\n    // \u68761 \u5230 \u68762\n    int t=M[1]+M[2];\n    if( t&gt;C[2] ){   // \u4e0d\u591f\u88c5\n        M[2]=C[2];  // \u88c5\u6ee1\n        M[1]=t-M[2];// \u68761\u7684\u5976\n    }\n    else{\n        M[1]=0;\n        M[2]=t;\n    }\n\n    cout&lt;&lt;M[1]&lt;&lt;endl&lt;&lt;M[2]&lt;&lt;endl&lt;&lt;M[3];\n\n    return 0;\n}\n</code></pre> AcWing 1715. \u6876\u5217\u8868 code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint arr[1010];\n\nint main(){\n    int n;\n    cin&gt;&gt;n;\n    for(int i=1; i&lt;=n; i++){\n        int a, b, c;\n        scanf(\"%d%d%d\", &amp;a, &amp;b, &amp;c);\n\n        arr[a]+=c;\n        arr[b]-=c;\n    }\n\n    int ans=0;\n\n    for(int i=1; i&lt;=1000; i++){\n        arr[i]+=arr[i-1];\n        ans=max(ans, arr[i]);\n    }\n\n    cout&lt;&lt;ans;\n\n    return 0;\n}\n</code></pre>"},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/USACO_Bronze/#2017-2018-season","title":"2017-2018 Season","text":""},{"location":"src/more/old/algorithm/%E7%9C%9F%E9%A2%98/lanqiao/","title":"2022 \u56fd CB","text":"C \u5361\u724c code C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N=2e5+10;\n\nint a[N];   // \u7b2c i \u79cd\u5361\u724c\u6709 a[i] \u5f20\nint b[N];   // \u7b2c i \u79cd\u5361\u724c\u6700\u591a\u51d1 b[i] \u5f20\nLL n, m;\n\nbool ck(LL x){  // \u80fd\u4e0d\u80fd\u51d1 x \u5957\n    LL mm=m;\n    for(int i=1; i&lt;=n; i++){\n        if(a[i] &gt;= x)\n            continue;   // \u4e00\u5f20\u4e0d\u7528\u6362\n        else if(a[i] + b[i] &lt; x)\n            return 0;   // \u4e0d\u591f\u6362\n        else if(a[i] + b[i] &gt;= x)\n            mm-=x-a[i];   // \u7f6e\u6362\n        if(mm&lt;0) return 0;\n    }\n    return 1;\n}\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", a+i);\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", b+i);\n\n    LL l=1, r=1e11;\n    while(l&lt;r){\n        LL mid = l+r+1&gt;&gt;1;\n        if(ck(mid)) l=mid;\n        else r=mid-1;\n    }\n\n    cout&lt;&lt;l;\n\n    return 0;\n}\n</code></pre> D \u6700\u5927\u6570\u5b57 code C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;sstream&gt;\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N=1;\n\nstring s;\nint a, b;\nLL ans=-1;\n\nLL s2i(string s){\n    stringstream ss;\n    ss&lt;&lt;s;\n    LL res;\n    ss&gt;&gt;res;\n    return res;\n}\n\nvoid dfs(int u){    // \u5f53\u524d\u6539\u53d8\u7b2c\u51e0\u4f4d\n    ans = max(ans, s2i(s));\n    if(!a &amp;&amp; !b) return ;\n    if(u&gt;=s.size()) return ;\n\n    if(s[u]=='9'){\n        dfs(u+1);\n        return ;\n    }\n\n    if(a&gt;0){    // \u7528\u52a0\u6cd5\u7684\u65b9\u5f0f\n        int add = min(a, 9-(s[u]-'0')); // \u589e\u52a0\u591a\u5c11\n\n        s[u]+=add, a-=add;\n        dfs(u+1);\n        s[u]-=add, a+=add;  // \u6062\u590d\u73b0\u573a\n    }\n\n    if(b&gt;0){    // \u7528\u51cf\u6cd5\u7684\u65b9\u5f0f\n        int sub = min(b, (s[u]-'0')+1);\n\n        if(s[u]-sub != '0'-1){\n            dfs(u+1);   // \u4f60\u8fd8\u4e0d\u5982\u4e0d\u51cf\u5462\n            return ;\n        }\n\n        s[u]='9', b-=sub;\n        dfs(u+1);\n        s[u]='0'+sub-1, b+=sub;  // \u6062\u590d\u73b0\u573a\n    }\n\n}\n\nint main(){\n    cin&gt;&gt;s&gt;&gt;a&gt;&gt;b;\n\n    dfs(0); \n    cout&lt;&lt;ans;\n    return 0;\n}\n</code></pre> E \u51fa\u5dee code C++<pre><code>#pragma G++ optimzie(\"Ofast\")\n#define fst first\n#define sed second\n#define pb push_back\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;cstring&gt;\n#include &lt;vector&gt;\n#include &lt;cmath&gt;\n#include &lt;map&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair&lt;int, int&gt; PII;\n\nconst int dxy[][2]={ {-1,0},{1,0}, {0,-1}, {0,1} };\nconst double PI = acos(-1.0);\nconst int inf = 0x3f3f3f3f;\nconst int MOD = 1e9+7;\nconst int N = 1e3+10;\n\nint C[N];\n\nint n, m; // \u70b9\u3001\u8fb9\nvector&lt;PII&gt; edge[100010]; // edge[x]={y,z} x-&gt;y=z\nint dis[N]; // \u6700\u77ed\u8def\nbool st[N]; // \u662f\u5426\u5df2\u786e\u5b9a\u6700\u77ed\u8def\n// O(mlogm)\nint dijkstra(int s, int e){\n    // fst\u5b58dis[i] sed\u5b58i\n    priority_queue&lt;PII, vector&lt;PII&gt;, greater&lt;PII&gt;&gt; heap;\n    // \u521d\u59cb\u5316\n    memset(dis, 0x3f, sizeof dis);\n    dis[s]=0;\n    // \u8d77\u70b9\u5165\u961f\n    heap.push({dis[s], s});\n    while(heap.size()){\n        auto x=heap.top().sed; // \u53d6\u6700\u5c0f\u70b9\n        heap.pop();\n        // \u5728\u51fa\u5806\u7684\u65f6\u5019\u5224\u65ad\u3001\u786e\u5b9a\u662f\u5426\u786e\u5b9a\u6700\u77ed\u8def\n        if(st[x]) continue;\n        st[x]=1; // \u786e\u5b9a\u6700\u77ed\u8def\n        // \u5bf9\u8be5\u70b9\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\n        for(auto&amp; [y, z]: edge[x])\n        if( dis[y]&gt;dis[x]+z+C[y] ){\n            dis[y]=dis[x]+z+C[y];\n            heap.push({dis[y], y});\n        }\n    }\n    return dis[e];\n}\n\nvoid solve(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=n; i++) scanf(\"%d\", C+i);\n    for(int i=1; i&lt;=m; i++){\n        int x, y, z; scanf(\"%d%d%d\", &amp;x, &amp;y, &amp;z);\n        edge[x].pb({y, z});\n        edge[y].pb({x, z});\n    }\n\n    cout&lt;&lt;dijkstra(1, n)-C[n];\n\n    return ;\n}\n\nint main(){\n    //ios::sync_with_stdio(0); cin.tie(0), cout.tie(0);\n    //int T; cin&gt;&gt;T; while(T--)\n    solve();\n    return 0;\n}\n</code></pre> F \u8d39\u7528\u62a5\u9500 code C++<pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;tuple&gt;\nusing namespace std;\n\nconst int N=1e3+10;\n\nint v[N];   // \u6708\u4efd\u8f6c\u6362\u4e3a\u5929 \u7b2ci\u5929\u7684\u94b1\nint dp[N];  // \u524di\u5f20\u53ef\u4ee5\u5f97\u5230\u7684\u6700\u5927\u4ef7\u503c\n\nint n, m, k;\n\nint months[13]={0,31,28,31,30,31,30,31,31,30,31,30,31};\nint calc(int mon, int day){ \n    for(int i=1; i&lt;mon; i++)\n        day+=months[i];\n    return day;\n}\n\nint main(){\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;\n    for(int i=1; i&lt;=n; i++){\n        int x, y, z; scanf(\"%d%d%d\", &amp;x, &amp;y, &amp;z);\n        v[calc(x, y)]=max(v[calc(x, y)], z);\n    }\n\n    for(int i=1; i&lt;=365; i++){  \n        dp[i]=max(v[i], dp[i-1]);       // \u4e0d\u9009\u62e9\n        if(i-k&gt;=1 &amp;&amp; dp[i-k]+v[i]&lt;=m)   // \u9009\u62e9\n            dp[i] = max(dp[i], dp[i-k]+v[i]);\n    }\n\n    cout&lt;&lt;dp[365];\n\n    return 0;\n}\n</code></pre> G  code C++<pre><code>\n</code></pre> H  code C++<pre><code>\n</code></pre> I  code C++<pre><code>\n</code></pre> J  code C++<pre><code>\n</code></pre>"}]}